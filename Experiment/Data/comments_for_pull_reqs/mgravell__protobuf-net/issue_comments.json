[
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/46307019",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/1#issuecomment-46307019",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/1",
        "id": 46307019,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzA3MDE5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-17T13:35:06Z",
        "updated_at": "2014-06-17T13:35:06Z",
        "author_association": "OWNER",
        "body": "That's a new one on me; as a side note, though: high field numbers are more expensive. As a general rule, you should prefer low numbers. I'm not saying that this makes it ok to fail, note\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/46757498",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/2#issuecomment-46757498",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/2",
        "id": 46757498,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU3NDk4",
        "user": {
            "login": "grzsz",
            "id": 7062424,
            "node_id": "MDQ6VXNlcjcwNjI0MjQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7062424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grzsz",
            "html_url": "https://github.com/grzsz",
            "followers_url": "https://api.github.com/users/grzsz/followers",
            "following_url": "https://api.github.com/users/grzsz/following{/other_user}",
            "gists_url": "https://api.github.com/users/grzsz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grzsz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grzsz/subscriptions",
            "organizations_url": "https://api.github.com/users/grzsz/orgs",
            "repos_url": "https://api.github.com/users/grzsz/repos",
            "events_url": "https://api.github.com/users/grzsz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grzsz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-21T16:05:27Z",
        "updated_at": "2014-06-21T16:05:27Z",
        "author_association": "NONE",
        "body": "This returing default value also contains a bug: if we have enum inside message, like\n\nmessage MyMessage {\n   enum MyEnum {\n      MY_VAL1 = 1;\n      MY_VAL2 = 2;\n   }\n   optional MyEnum someVariable = 1;\n}\n\nand we use -p:fixCase option, then getter will be generated with returning MY_VAL1, but enum will have MYVAL1 (not sure if it's bug in fixCase option or in generating getter for optional field)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47041391",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/3#issuecomment-47041391",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/3",
        "id": 47041391,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQxMzkx",
        "user": {
            "login": "fnicollet",
            "id": 1240481,
            "node_id": "MDQ6VXNlcjEyNDA0ODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1240481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fnicollet",
            "html_url": "https://github.com/fnicollet",
            "followers_url": "https://api.github.com/users/fnicollet/followers",
            "following_url": "https://api.github.com/users/fnicollet/following{/other_user}",
            "gists_url": "https://api.github.com/users/fnicollet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fnicollet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fnicollet/subscriptions",
            "organizations_url": "https://api.github.com/users/fnicollet/orgs",
            "repos_url": "https://api.github.com/users/fnicollet/repos",
            "events_url": "https://api.github.com/users/fnicollet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fnicollet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-24T22:55:43Z",
        "updated_at": "2014-06-24T22:55:43Z",
        "author_association": "NONE",
        "body": "Found it, sorry. You need to pull from Nuget with all the deps, then delete the reference to protobuf-net from the Solution Explorer and add a reference to the DLL that is in the portable-sl4+net40+wp7+windows8 folder\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47933654",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47933654",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47933654,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTMzNjU0",
        "user": {
            "login": "ANTPro",
            "id": 273104,
            "node_id": "MDQ6VXNlcjI3MzEwNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/273104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ANTPro",
            "html_url": "https://github.com/ANTPro",
            "followers_url": "https://api.github.com/users/ANTPro/followers",
            "following_url": "https://api.github.com/users/ANTPro/following{/other_user}",
            "gists_url": "https://api.github.com/users/ANTPro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ANTPro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ANTPro/subscriptions",
            "organizations_url": "https://api.github.com/users/ANTPro/orgs",
            "repos_url": "https://api.github.com/users/ANTPro/repos",
            "events_url": "https://api.github.com/users/ANTPro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ANTPro/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T14:05:12Z",
        "updated_at": "2014-07-03T14:05:12Z",
        "author_association": "NONE",
        "body": "I not test:\n\n[ProtoMember(5,DynamicType = true)]\npublic dynamic Data { get; set; }\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47937622",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47937622",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47937622,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTM3NjIy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T14:36:30Z",
        "updated_at": "2014-07-03T14:36:30Z",
        "author_association": "OWNER",
        "body": "@ANTPro no, that doesn't achieve what is wanted here\n\nOn 3 July 2014 15:05, ANTPro notifications@github.com wrote:\n\n> I not test:\n> \n> [ProtoMember(5,DynamicType = true)]\n> public dynamic Data { get; set; }\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47933654.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47937884",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47937884",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47937884,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTM3ODg0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T14:38:43Z",
        "updated_at": "2014-07-03T14:38:43Z",
        "author_association": "OWNER",
        "body": "That is simply not a good idea, but you could probably get around it via:\n\n```\n[ProtoMember(4)]\npublic SomeType TheOriginalProperty {get;set;}\n```\n\nthen migrating to:\n\n```\n[ProtoMember(4)]\npublic SomeType TheOriginalProperty {...}\n\npublic bool ShouldSerializeTheOriginalProperty()\n{\n    return false;\n}\n\n[ProtoMember(12)]\npublic int TheNewProperty {...}\n```\n\nwith one of the two properties being the \"actual\" code, and one of them\nbeing a shim that has the code to translate between the two. This approach\nwill allow both old and new data to be read, but data will always be\nwritten using the new layout.\n\nOn 29 June 2014 16:57, slav notifications@github.com wrote:\n\n> Is it possible to change property type, for example from class to simple\n> int, and then on deserialization to customize deserialize if deserializing\n> as int fails, to try deserialize class which was used in place of int\n> before, filling out int property based on the values that used to be in\n> that class?\n> \n> So basically I want to convert stored value to a different type on\n> deserialize. How would I go around doing it?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/4.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47978924",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47978924",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47978924,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTc4OTI0",
        "user": {
            "login": "slav",
            "id": 350987,
            "node_id": "MDQ6VXNlcjM1MDk4Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/350987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slav",
            "html_url": "https://github.com/slav",
            "followers_url": "https://api.github.com/users/slav/followers",
            "following_url": "https://api.github.com/users/slav/following{/other_user}",
            "gists_url": "https://api.github.com/users/slav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slav/subscriptions",
            "organizations_url": "https://api.github.com/users/slav/orgs",
            "repos_url": "https://api.github.com/users/slav/repos",
            "events_url": "https://api.github.com/users/slav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slav/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T20:09:58Z",
        "updated_at": "2014-07-03T20:09:58Z",
        "author_association": "NONE",
        "body": "I realize it's not the best idea, but sometimes data migration is\nnecessary. I was hoping it would be possible not to keep the old property\naround.\nIs it possible to customize serialization/deserialization of specific\nproperty?\n\nlike\n[ProtoMember(4)]\npublic int TheNewProperty{...}\n\nint DeserializeTheNewProperty( data )\n{\n// try load as int\n// if fails, try load as SomeType and convert to int\n}\n\nOn Thu, Jul 3, 2014 at 10:38 AM, Marc Gravell notifications@github.com\nwrote:\n\n> That is simply not a good idea, but you could probably get around it via:\n> \n> [ProtoMember(4)]\n> public SomeType TheOriginalProperty {get;set;}\n> \n> then migrating to:\n> \n> [ProtoMember(4)]\n> public SomeType TheOriginalProperty {...}\n> \n> public bool ShouldSerializeTheOriginalProperty()\n> {\n> return false;\n> }\n> \n> [ProtoMember(12)]\n> public int TheNewProperty {...}\n> \n> with one of the two properties being the \"actual\" code, and one of them\n> being a shim that has the code to translate between the two. This approach\n> will allow both old and new data to be read, but data will always be\n> written using the new layout.\n> \n> On 29 June 2014 16:57, slav notifications@github.com wrote:\n> \n> > Is it possible to change property type, for example from class to simple\n> > int, and then on deserialization to customize deserialize if\n> > deserializing\n> > as int fails, to try deserialize class which was used in place of int\n> > before, filling out int property based on the values that used to be in\n> > that class?\n> > \n> > So basically I want to convert stored value to a different type on\n> > deserialize. How would I go around doing it?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/4.\n> \n> ## \n> \n> Regards,\n> \n> Marc\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47937884.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47979319",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47979319",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47979319,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTc5MzE5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T20:13:29Z",
        "updated_at": "2014-07-03T20:13:29Z",
        "author_association": "OWNER",
        "body": "No, basically. That is not possible. Not least: this is a read-once stream:\nmess it up, and the data is gone.\nOn 3 Jul 2014 21:09, \"slav\" notifications@github.com wrote:\n\n> I realize it's not the best idea, but sometimes data migration is\n> necessary. I was hoping it would be possible not to keep the old property\n> around.\n> Is it possible to customize serialization/deserialization of specific\n> property?\n> \n> like\n> [ProtoMember(4)]\n> public int TheNewProperty{...}\n> \n> int DeserializeTheNewProperty( data )\n> {\n> // try load as int\n> // if fails, try load as SomeType and convert to int\n> }\n> \n> On Thu, Jul 3, 2014 at 10:38 AM, Marc Gravell notifications@github.com\n> wrote:\n> \n> > That is simply not a good idea, but you could probably get around it\n> > via:\n> > \n> > [ProtoMember(4)]\n> > public SomeType TheOriginalProperty {get;set;}\n> > \n> > then migrating to:\n> > \n> > [ProtoMember(4)]\n> > public SomeType TheOriginalProperty {...}\n> > \n> > public bool ShouldSerializeTheOriginalProperty()\n> > {\n> > return false;\n> > }\n> > \n> > [ProtoMember(12)]\n> > public int TheNewProperty {...}\n> > \n> > with one of the two properties being the \"actual\" code, and one of them\n> > being a shim that has the code to translate between the two. This\n> > approach\n> > will allow both old and new data to be read, but data will always be\n> > written using the new layout.\n> > \n> > On 29 June 2014 16:57, slav notifications@github.com wrote:\n> > \n> > > Is it possible to change property type, for example from class to\n> > > simple\n> > > int, and then on deserialization to customize deserialize if\n> > > deserializing\n> > > as int fails, to try deserialize class which was used in place of int\n> > > before, filling out int property based on the values that used to be\n> > > in\n> > > that class?\n> > > \n> > > So basically I want to convert stored value to a different type on\n> > > deserialize. How would I go around doing it?\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/mgravell/protobuf-net/issues/4.\n> > \n> > ## \n> > \n> > Regards,\n> > \n> > Marc\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47937884.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47978924.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47979386",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47979386",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47979386,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTc5Mzg2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T20:14:09Z",
        "updated_at": "2014-07-03T20:14:09Z",
        "author_association": "OWNER",
        "body": "The migration scheme I proposed, however, should work.\nOn 3 Jul 2014 21:13, \"Marc Gravell\" marc.gravell@gmail.com wrote:\n\n> No, basically. That is not possible. Not least: this is a read-once\n> stream: mess it up, and the data is gone.\n> On 3 Jul 2014 21:09, \"slav\" notifications@github.com wrote:\n> \n> > I realize it's not the best idea, but sometimes data migration is\n> > necessary. I was hoping it would be possible not to keep the old property\n> > around.\n> > Is it possible to customize serialization/deserialization of specific\n> > property?\n> > \n> > like\n> > [ProtoMember(4)]\n> > public int TheNewProperty{...}\n> > \n> > int DeserializeTheNewProperty( data )\n> > {\n> > // try load as int\n> > // if fails, try load as SomeType and convert to int\n> > }\n> > \n> > On Thu, Jul 3, 2014 at 10:38 AM, Marc Gravell notifications@github.com\n> > wrote:\n> > \n> > > That is simply not a good idea, but you could probably get around it\n> > > via:\n> > > \n> > > [ProtoMember(4)]\n> > > public SomeType TheOriginalProperty {get;set;}\n> > > \n> > > then migrating to:\n> > > \n> > > [ProtoMember(4)]\n> > > public SomeType TheOriginalProperty {...}\n> > > \n> > > public bool ShouldSerializeTheOriginalProperty()\n> > > {\n> > > return false;\n> > > }\n> > > \n> > > [ProtoMember(12)]\n> > > public int TheNewProperty {...}\n> > > \n> > > with one of the two properties being the \"actual\" code, and one of them\n> > > being a shim that has the code to translate between the two. This\n> > > approach\n> > > will allow both old and new data to be read, but data will always be\n> > > written using the new layout.\n> > > \n> > > On 29 June 2014 16:57, slav notifications@github.com wrote:\n> > > \n> > > > Is it possible to change property type, for example from class to\n> > > > simple\n> > > > int, and then on deserialization to customize deserialize if\n> > > > deserializing\n> > > > as int fails, to try deserialize class which was used in place of int\n> > > > before, filling out int property based on the values that used to be\n> > > > in\n> > > > that class?\n> > > > \n> > > > So basically I want to convert stored value to a different type on\n> > > > deserialize. How would I go around doing it?\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/mgravell/protobuf-net/issues/4.\n> > > \n> > > ## \n> > > \n> > > Regards,\n> > > \n> > > Marc\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > <\n> > > https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47937884>.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47978924\n> > .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47996379",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47996379",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47996379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTk2Mzc5",
        "user": {
            "login": "slav",
            "id": 350987,
            "node_id": "MDQ6VXNlcjM1MDk4Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/350987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slav",
            "html_url": "https://github.com/slav",
            "followers_url": "https://api.github.com/users/slav/followers",
            "following_url": "https://api.github.com/users/slav/following{/other_user}",
            "gists_url": "https://api.github.com/users/slav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slav/subscriptions",
            "organizations_url": "https://api.github.com/users/slav/orgs",
            "repos_url": "https://api.github.com/users/slav/repos",
            "events_url": "https://api.github.com/users/slav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slav/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-03T23:48:23Z",
        "updated_at": "2014-07-03T23:48:23Z",
        "author_association": "NONE",
        "body": "Using it to efficiently store data, so not read-once stream. It's ok. thank you for ideas.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/47997238",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47997238",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 47997238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTk3MjM4",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-04T00:04:38Z",
        "updated_at": "2014-07-04T00:04:38Z",
        "author_association": "OWNER",
        "body": "The deserializer doesn't know that - it has to assume the worst.\nOn 4 Jul 2014 00:48, \"slav\" notifications@github.com wrote:\n\n> Using it to efficiently store data, so not read-once stream. It's ok.\n> thank you for ideas.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/4#issuecomment-47996379.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48032116",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/5#issuecomment-48032116",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/5",
        "id": 48032116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDMyMTE2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-04T11:13:30Z",
        "updated_at": "2014-07-04T11:13:30Z",
        "author_association": "OWNER",
        "body": "If it works, then by all means submit a pull request; it is unclear whether you are reporting an issue that you have not already resolved.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48050814",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/4#issuecomment-48050814",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/4",
        "id": 48050814,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDUwODE0",
        "user": {
            "login": "slav",
            "id": 350987,
            "node_id": "MDQ6VXNlcjM1MDk4Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/350987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slav",
            "html_url": "https://github.com/slav",
            "followers_url": "https://api.github.com/users/slav/followers",
            "following_url": "https://api.github.com/users/slav/following{/other_user}",
            "gists_url": "https://api.github.com/users/slav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slav/subscriptions",
            "organizations_url": "https://api.github.com/users/slav/orgs",
            "repos_url": "https://api.github.com/users/slav/repos",
            "events_url": "https://api.github.com/users/slav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slav/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-04T14:35:49Z",
        "updated_at": "2014-07-04T14:35:49Z",
        "author_association": "NONE",
        "body": "I understand, and it should be that way. Was just hoping it's possible to customize/inject serializer.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48113012",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-48113012",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 48113012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTEzMDEy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-06T14:21:44Z",
        "updated_at": "2014-07-06T14:21:44Z",
        "author_association": "OWNER",
        "body": "I wasn't aware that there was a supported alias for unity. If that works:\nsure, can do. I've never seen that alias mentioned in the nuget docs.\nOn 6 Jul 2014 13:03, \"Joao C Costa\" notifications@github.com wrote:\n\n> It would be much simpler to have the latest official DLLs compiled for\n> Unity3D in the NuGet package (under /lib/unity if possible).\n> We can do submit the changes if you prefer.\n> Thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/6.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48113045",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-48113045",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 48113045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTEzMDQ1",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-06T14:23:18Z",
        "updated_at": "2014-07-06T14:23:18Z",
        "author_association": "OWNER",
        "body": "Of course a slight nuisance there is that for unity _ideally_ one would use\nthe precompiler. I really should package that too, under tools\nOn 6 Jul 2014 15:21, \"Marc Gravell\" marc.gravell@gmail.com wrote:\n\n> I wasn't aware that there was a supported alias for unity. If that works:\n> sure, can do. I've never seen that alias mentioned in the nuget docs.\n> On 6 Jul 2014 13:03, \"Joao C Costa\" notifications@github.com wrote:\n> \n> > It would be much simpler to have the latest official DLLs compiled for\n> > Unity3D in the NuGet package (under /lib/unity if possible).\n> > We can do submit the changes if you prefer.\n> > Thanks\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/6.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48340845",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/5#issuecomment-48340845",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/5",
        "id": 48340845,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQwODQ1",
        "user": {
            "login": "xidius",
            "id": 4578497,
            "node_id": "MDQ6VXNlcjQ1Nzg0OTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4578497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xidius",
            "html_url": "https://github.com/xidius",
            "followers_url": "https://api.github.com/users/xidius/followers",
            "following_url": "https://api.github.com/users/xidius/following{/other_user}",
            "gists_url": "https://api.github.com/users/xidius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xidius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xidius/subscriptions",
            "organizations_url": "https://api.github.com/users/xidius/orgs",
            "repos_url": "https://api.github.com/users/xidius/repos",
            "events_url": "https://api.github.com/users/xidius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xidius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-08T14:10:42Z",
        "updated_at": "2014-07-08T14:10:42Z",
        "author_association": "NONE",
        "body": "It seems worked. But  ...  i'm  testing protobuf now on  client and server.  \nTell me please, Mark \n1 - where CompileInPlace() for server will store compiled temporary assembly by default - because after i changed class localtion to another assembly i still have message of unable to resolve it in old assembly-How clear that cache?May be it's better to use Compile() on server ?\n2 -And Also where CompileInPlace()  saving cache contracts(resolvings) in mobile versions? may be you even know where is cache for silverlight?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48447796",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/5#issuecomment-48447796",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/5",
        "id": 48447796,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDQ3Nzk2",
        "user": {
            "login": "xidius",
            "id": 4578497,
            "node_id": "MDQ6VXNlcjQ1Nzg0OTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4578497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xidius",
            "html_url": "https://github.com/xidius",
            "followers_url": "https://api.github.com/users/xidius/followers",
            "following_url": "https://api.github.com/users/xidius/following{/other_user}",
            "gists_url": "https://api.github.com/users/xidius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xidius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xidius/subscriptions",
            "organizations_url": "https://api.github.com/users/xidius/orgs",
            "repos_url": "https://api.github.com/users/xidius/repos",
            "events_url": "https://api.github.com/users/xidius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xidius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-09T09:23:59Z",
        "updated_at": "2014-07-09T09:23:59Z",
        "author_association": "NONE",
        "body": "OK I beleleave that  RuntimeTypeModel.CompileInPlace()  works in silverlight  so i'll  submit a pull request as you sad  Mark \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48527336",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48527336",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48527336,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTI3MzM2",
        "user": {
            "login": "abcpp",
            "id": 8117621,
            "node_id": "MDQ6VXNlcjgxMTc2MjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8117621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abcpp",
            "html_url": "https://github.com/abcpp",
            "followers_url": "https://api.github.com/users/abcpp/followers",
            "following_url": "https://api.github.com/users/abcpp/following{/other_user}",
            "gists_url": "https://api.github.com/users/abcpp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abcpp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abcpp/subscriptions",
            "organizations_url": "https://api.github.com/users/abcpp/orgs",
            "repos_url": "https://api.github.com/users/abcpp/repos",
            "events_url": "https://api.github.com/users/abcpp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abcpp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-09T20:07:46Z",
        "updated_at": "2014-07-09T20:07:46Z",
        "author_association": "NONE",
        "body": "hmmm... tried precompiler, results were even worse... clearly, I'm doing something wrong...\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48530129",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48530129",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48530129,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTMwMTI5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-09T20:31:56Z",
        "updated_at": "2014-07-09T20:31:56Z",
        "author_association": "OWNER",
        "body": "Can I perhaps see your performance test? Impossible to comment in a vacuum.\nOn 9 Jul 2014 21:07, \"abcpp\" notifications@github.com wrote:\n\n> hmmm... tried precompiler, results were even worse... clearly, I'm doing\n> something wrong...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48527336.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48533800",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48533800",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48533800,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTMzODAw",
        "user": {
            "login": "abcpp",
            "id": 8117621,
            "node_id": "MDQ6VXNlcjgxMTc2MjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8117621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abcpp",
            "html_url": "https://github.com/abcpp",
            "followers_url": "https://api.github.com/users/abcpp/followers",
            "following_url": "https://api.github.com/users/abcpp/following{/other_user}",
            "gists_url": "https://api.github.com/users/abcpp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abcpp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abcpp/subscriptions",
            "organizations_url": "https://api.github.com/users/abcpp/orgs",
            "repos_url": "https://api.github.com/users/abcpp/repos",
            "events_url": "https://api.github.com/users/abcpp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abcpp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-09T21:04:04Z",
        "updated_at": "2014-07-09T21:04:04Z",
        "author_association": "NONE",
        "body": "Thank you! I sent you a link to the solution file. Would appreciate any help on making it the speedier. It does feel like I'm missing an option or two...\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48534352",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48534352",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48534352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTM0MzUy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-09T21:08:40Z",
        "updated_at": "2014-07-09T21:08:40Z",
        "author_association": "OWNER",
        "body": "I have an email citing \"TestProto\" - if that is it, I will review it in the\nmorning (I'm on mobile right now; this needs a PC)\nOn 9 Jul 2014 22:04, \"abcpp\" notifications@github.com wrote:\n\n> Thank you! I sent you a link to the solution file. Would appreciate any\n> help on making it the speedier. It does feel like I'm missing an option or\n> two...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48533800.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48579403",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48579403",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48579403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTc5NDAz",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-10T08:47:44Z",
        "updated_at": "2014-07-10T08:47:44Z",
        "author_association": "OWNER",
        "body": "The test project didn't contain comparisons to protobuf-csharp-port, so it\nis hard for me to comment, but my initial thought is: the google\nimplementation does a lot of the serialization work _in the builder_, so if\nyou aren't measuring object construction time and object query time - that\nis probably a huge part of the difference. The MS impl is a more\nfeature-parity comparison. I've tidied up some glitches in the code (let me\nknow if you want the revised .cs back), and I get data like:\n\nTest1 (MS.LiveLabs) ser:1594 deser:1531 len:442\nTest2 (protobuf-net) ser:1172 deser:2156 len:432\nTest1 (MS.LiveLabs) ser:1625 deser:2047 len:442\nTest2 (protobuf-net) ser:1437 deser:3391 len:432\nTest1 (MS.LiveLabs) ser:1594 deser:1531 len:442\nTest2 (protobuf-net) ser:1156 deser:2250 len:432\nTest1 (MS.LiveLabs) ser:1610 deser:1531 len:442\nTest2 (protobuf-net) ser:1156 deser:2250 len:432\nTest1 (MS.LiveLabs) ser:1609 deser:1532 len:442\nTest2 (protobuf-net) ser:1156 deser:2172 len:432\n\nGeneral conclusions, then: at the moment, protobuf-net on the data is\nfaster at serialization, but slightly slower on deserialization.\nInvestigating the exact time is tricky, and I can't give an immediate\nanswer on that, but it is something I can look at to see if there's a\n\"trick\" I can do here. But overall, they are very comparable. I'm not sure\nit is worth getting excited over the difference between them....\n\nOn 9 July 2014 22:08, Marc Gravell marc.gravell@gmail.com wrote:\n\n> I have an email citing \"TestProto\" - if that is it, I will review it in\n> the morning (I'm on mobile right now; this needs a PC)\n>  On 9 Jul 2014 22:04, \"abcpp\" notifications@github.com wrote:\n> \n> > Thank you! I sent you a link to the solution file. Would appreciate any\n> > help on making it the speedier. It does feel like I'm missing an option or\n> > two...\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48533800\n> > .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/48639401",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/7#issuecomment-48639401",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/7",
        "id": 48639401,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjM5NDAx",
        "user": {
            "login": "abcpp",
            "id": 8117621,
            "node_id": "MDQ6VXNlcjgxMTc2MjE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8117621?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abcpp",
            "html_url": "https://github.com/abcpp",
            "followers_url": "https://api.github.com/users/abcpp/followers",
            "following_url": "https://api.github.com/users/abcpp/following{/other_user}",
            "gists_url": "https://api.github.com/users/abcpp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abcpp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abcpp/subscriptions",
            "organizations_url": "https://api.github.com/users/abcpp/orgs",
            "repos_url": "https://api.github.com/users/abcpp/repos",
            "events_url": "https://api.github.com/users/abcpp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abcpp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-10T17:49:29Z",
        "updated_at": "2014-07-10T17:49:29Z",
        "author_association": "NONE",
        "body": "Thank you-thank you-thank you!!! Yes, please send the revised cs to me at andrew.cher@gmail.com. I definitely was seriously stumbled at why it was that slow and even with serializer it looked like something wrong with my project. Could be a great idea for your blog to help our newbies )))\n\nI suspected that the builder was a big difference for proto-sharp-port as well as precompiled serializer.\n\nI really like your version more because it provides backward compatibility (LiveLabs breaks if you add a new field) and also can serialize properties (.NET and LL is only for fields). That's why I wanted to use your version. Really appreciate you taking a look at this and helping me out!!!\n\nThank you!\nAndrew\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/49993808",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-49993808",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 49993808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkzODA4",
        "user": {
            "login": "polkovnikov-ph",
            "id": 2983969,
            "node_id": "MDQ6VXNlcjI5ODM5Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2983969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/polkovnikov-ph",
            "html_url": "https://github.com/polkovnikov-ph",
            "followers_url": "https://api.github.com/users/polkovnikov-ph/followers",
            "following_url": "https://api.github.com/users/polkovnikov-ph/following{/other_user}",
            "gists_url": "https://api.github.com/users/polkovnikov-ph/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/polkovnikov-ph/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/polkovnikov-ph/subscriptions",
            "organizations_url": "https://api.github.com/users/polkovnikov-ph/orgs",
            "repos_url": "https://api.github.com/users/polkovnikov-ph/repos",
            "events_url": "https://api.github.com/users/polkovnikov-ph/events{/privacy}",
            "received_events_url": "https://api.github.com/users/polkovnikov-ph/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-24T10:56:48Z",
        "updated_at": "2014-07-24T14:15:54Z",
        "author_association": "NONE",
        "body": "@mgravell But is the precompiler required? There's some conditional compilation over the source code which seems to mess with `Reflection.Emit`, that is not supported when Unity compiles C# for iOS, as runtime codegen is forbidden by Apple for security reasons.\n\n```\n#if FEAT_COMPILER\nusing System.Reflection.Emit;\n#endif \n```\n\nI'm pretty unsure how to compile `protobuf-net` for Unity, as I don't know what that conditional means. So I second request of @joaocc to create a prebuilt version for Unity.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/52379103",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/8#issuecomment-52379103",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/8",
        "id": 52379103,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzc5MTAz",
        "user": {
            "login": "factormystic",
            "id": 43428,
            "node_id": "MDQ6VXNlcjQzNDI4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/43428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/factormystic",
            "html_url": "https://github.com/factormystic",
            "followers_url": "https://api.github.com/users/factormystic/followers",
            "following_url": "https://api.github.com/users/factormystic/following{/other_user}",
            "gists_url": "https://api.github.com/users/factormystic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/factormystic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/factormystic/subscriptions",
            "organizations_url": "https://api.github.com/users/factormystic/orgs",
            "repos_url": "https://api.github.com/users/factormystic/repos",
            "events_url": "https://api.github.com/users/factormystic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/factormystic/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-16T02:00:45Z",
        "updated_at": "2014-08-16T02:00:45Z",
        "author_association": "NONE",
        "body": ":+1: \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53164584",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/15#issuecomment-53164584",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/15",
        "id": 53164584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY0NTg0",
        "user": {
            "login": "jamesford42",
            "id": 155688,
            "node_id": "MDQ6VXNlcjE1NTY4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesford42",
            "html_url": "https://github.com/jamesford42",
            "followers_url": "https://api.github.com/users/jamesford42/followers",
            "following_url": "https://api.github.com/users/jamesford42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesford42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesford42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesford42/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesford42/orgs",
            "repos_url": "https://api.github.com/users/jamesford42/repos",
            "events_url": "https://api.github.com/users/jamesford42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesford42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T20:28:56Z",
        "updated_at": "2014-08-23T20:28:56Z",
        "author_association": "NONE",
        "body": "I was looking at the XXXMemberDecorator.Read/Write methods at the time I posted this issue. The EmitRead/EmitWrite methods look much better. I'll post back when I have actually run this through a memory profiler.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53166709",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/15#issuecomment-53166709",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/15",
        "id": 53166709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY2NzA5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T21:35:23Z",
        "updated_at": "2014-08-23T21:35:23Z",
        "author_association": "OWNER",
        "body": "Yes, I have a spike locally that fixes this (developed separately to this\nemail) - I'll see what the status of that is.\nOn 23 Aug 2014 11:21, \"James Ford\" notifications@github.com wrote:\n\n> It appears that at the lowest level this library is working with all\n> values as objects, and that this will generate garbage do to\n> boxing/unboxing at least once for each value written or read. This is a\n> major concern for games, or other fps dependent applications for which\n> unexpected GC passes are noticeable to the user.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/15.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53167103",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-53167103",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 53167103,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY3MTAz",
        "user": {
            "login": "jamesford42",
            "id": 155688,
            "node_id": "MDQ6VXNlcjE1NTY4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesford42",
            "html_url": "https://github.com/jamesford42",
            "followers_url": "https://api.github.com/users/jamesford42/followers",
            "following_url": "https://api.github.com/users/jamesford42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesford42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesford42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesford42/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesford42/orgs",
            "repos_url": "https://api.github.com/users/jamesford42/repos",
            "events_url": "https://api.github.com/users/jamesford42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesford42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T21:45:53Z",
        "updated_at": "2014-08-23T21:45:53Z",
        "author_association": "NONE",
        "body": "Note that protobuf-net_IKVM has build errors with this change, and I was unable on my own to figure out why.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53167657",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-53167657",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 53167657,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY3NjU3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T22:02:19Z",
        "updated_at": "2014-08-23T22:02:19Z",
        "author_association": "OWNER",
        "body": "I was pleasantly surprised to see emit code here; I was (from experience) only expecting to see the runtime fallback implementation. I can look at the IKVM - probably a Type vs Type mismatch (needs a call to MapType, IIRC). However, 2 things:\n- inheritance: since interfaces aren't per-level, this won't work with inheritance - that should probably be checked for\n- any chance of a test/example usage? (sorry if it was there and I missed it). Ideally should cover class, struct, inheritance (expect to fail), and using both runtime and compiled implementation.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53168090",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-53168090",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 53168090,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY4MDkw",
        "user": {
            "login": "jamesford42",
            "id": 155688,
            "node_id": "MDQ6VXNlcjE1NTY4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesford42",
            "html_url": "https://github.com/jamesford42",
            "followers_url": "https://api.github.com/users/jamesford42/followers",
            "following_url": "https://api.github.com/users/jamesford42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesford42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesford42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesford42/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesford42/orgs",
            "repos_url": "https://api.github.com/users/jamesford42/repos",
            "events_url": "https://api.github.com/users/jamesford42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesford42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T22:14:55Z",
        "updated_at": "2014-08-23T22:14:55Z",
        "author_association": "NONE",
        "body": "This is more of a \"heads up\" pull request it isn't actually tested (unit test or otherwise) yet. Are there any unit tests in place for the ShouldSerialize Get/Set pattern i can look at as a model? In addition i'll have some of my own project code attempting to make use of this by the end of the day, and thereby it will get some verification if working as intended or not. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53168166",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-53168166",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 53168166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTY4MTY2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-23T22:17:27Z",
        "updated_at": "2014-08-23T22:17:27Z",
        "author_association": "OWNER",
        "body": "Ah, fine - makes sense. I'll check on the ShouldSerialize - I am not at a\nPC to answer that.\nOn 23 Aug 2014 23:14, \"James Ford\" notifications@github.com wrote:\n\n> This is more of a \"heads up\" pull request it isn't actually tested (unit\n> test or otherwise) yet. Are there any unit tests in place for the\n> ShouldSerialize Get/Set pattern i can look at as a model? In addition i'll\n> have some of my own project code attempting to make use of this by the end\n> of the day, and thereby it will get some verification if working as\n> intended or not.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/16#issuecomment-53168090.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53271000",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/8#issuecomment-53271000",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/8",
        "id": 53271000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjcxMDAw",
        "user": {
            "login": "adama119",
            "id": 3455270,
            "node_id": "MDQ6VXNlcjM0NTUyNzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3455270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adama119",
            "html_url": "https://github.com/adama119",
            "followers_url": "https://api.github.com/users/adama119/followers",
            "following_url": "https://api.github.com/users/adama119/following{/other_user}",
            "gists_url": "https://api.github.com/users/adama119/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adama119/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adama119/subscriptions",
            "organizations_url": "https://api.github.com/users/adama119/orgs",
            "repos_url": "https://api.github.com/users/adama119/repos",
            "events_url": "https://api.github.com/users/adama119/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adama119/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-25T14:30:55Z",
        "updated_at": "2014-08-25T14:30:55Z",
        "author_association": "NONE",
        "body": "pls support wpa8.1  from nuget\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/53944310",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/17#issuecomment-53944310",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/17",
        "id": 53944310,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTQ0MzEw",
        "user": {
            "login": "deanis74",
            "id": 8595520,
            "node_id": "MDQ6VXNlcjg1OTU1MjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8595520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deanis74",
            "html_url": "https://github.com/deanis74",
            "followers_url": "https://api.github.com/users/deanis74/followers",
            "following_url": "https://api.github.com/users/deanis74/following{/other_user}",
            "gists_url": "https://api.github.com/users/deanis74/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deanis74/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deanis74/subscriptions",
            "organizations_url": "https://api.github.com/users/deanis74/orgs",
            "repos_url": "https://api.github.com/users/deanis74/repos",
            "events_url": "https://api.github.com/users/deanis74/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deanis74/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-30T01:00:59Z",
        "updated_at": "2014-08-30T01:00:59Z",
        "author_association": "NONE",
        "body": "I forgot to mention that I am using r668, which is the newest as far as I can tell.  The files were originally created using r640.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/54099677",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-54099677",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 54099677,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDk5Njc3",
        "user": {
            "login": "jamesford42",
            "id": 155688,
            "node_id": "MDQ6VXNlcjE1NTY4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesford42",
            "html_url": "https://github.com/jamesford42",
            "followers_url": "https://api.github.com/users/jamesford42/followers",
            "following_url": "https://api.github.com/users/jamesford42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesford42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesford42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesford42/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesford42/orgs",
            "repos_url": "https://api.github.com/users/jamesford42/repos",
            "events_url": "https://api.github.com/users/jamesford42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesford42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-02T00:51:37Z",
        "updated_at": "2014-09-02T00:51:37Z",
        "author_association": "NONE",
        "body": "I still do not know if I will actually need this feature, so that's why this is still in limbo as 'totally untested'.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/54690635",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-54690635",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 54690635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjkwNjM1",
        "user": {
            "login": "joaocc",
            "id": 2837860,
            "node_id": "MDQ6VXNlcjI4Mzc4NjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2837860?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joaocc",
            "html_url": "https://github.com/joaocc",
            "followers_url": "https://api.github.com/users/joaocc/followers",
            "following_url": "https://api.github.com/users/joaocc/following{/other_user}",
            "gists_url": "https://api.github.com/users/joaocc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joaocc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joaocc/subscriptions",
            "organizations_url": "https://api.github.com/users/joaocc/orgs",
            "repos_url": "https://api.github.com/users/joaocc/repos",
            "events_url": "https://api.github.com/users/joaocc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joaocc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-05T22:42:50Z",
        "updated_at": "2014-09-05T22:42:50Z",
        "author_association": "NONE",
        "body": "Sorry about the delay. At that time we ended up removing existing dependencies on protobuf. \nAlso, our experience was limited to Windows Store App (8.0 at the time).\nYou can get all the info on conditional compilation in Unity3D [here](http://docs.unity3d.com/Manual/PlatformDependentCompilation.html).\nI'll try to find if we have more info on this.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/55314653",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-55314653",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 55314653,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE0NjUz",
        "user": {
            "login": "jamesford42",
            "id": 155688,
            "node_id": "MDQ6VXNlcjE1NTY4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesford42",
            "html_url": "https://github.com/jamesford42",
            "followers_url": "https://api.github.com/users/jamesford42/followers",
            "following_url": "https://api.github.com/users/jamesford42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesford42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesford42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesford42/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesford42/orgs",
            "repos_url": "https://api.github.com/users/jamesford42/repos",
            "events_url": "https://api.github.com/users/jamesford42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesford42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-11T19:25:35Z",
        "updated_at": "2014-09-11T19:25:35Z",
        "author_association": "NONE",
        "body": "I suspect this feature actually works, or is at least very close to working; however, I am no longer using protobuf-net for the task I originally needed this feature for.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/55316447",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/16#issuecomment-55316447",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/16",
        "id": 55316447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzE2NDQ3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-11T19:39:13Z",
        "updated_at": "2014-09-11T19:39:13Z",
        "author_association": "OWNER",
        "body": "k; thanks for the update\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56386812",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-56386812",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 56386812,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mzg2ODEy",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-22T15:04:56Z",
        "updated_at": "2014-09-22T15:04:56Z",
        "author_association": "NONE",
        "body": "See [mdonoughe/protobuf-net-issue24](https://github.com/mdonoughe/protobuf-net-issue24).\n\n```\n> .\\BreakProtobufNet.Launcher.exe\n15 46 41 49 4C\n\u00a7FAIL\n> .\\BreakProtobufNet.Launcher.exe\n0A 05 15 46 41 49 4C\nPass\n> rm .\\BreakProtobufNet.Payload.dll\n> .\\BreakProtobufNet.Launcher.exe\n15 46 41 49 4C\n\u00a7FAIL\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56495711",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/26#issuecomment-56495711",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/26",
        "id": 56495711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDk1NzEx",
        "user": {
            "login": "MrGuardian",
            "id": 2404804,
            "node_id": "MDQ6VXNlcjI0MDQ4MDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2404804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrGuardian",
            "html_url": "https://github.com/MrGuardian",
            "followers_url": "https://api.github.com/users/MrGuardian/followers",
            "following_url": "https://api.github.com/users/MrGuardian/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrGuardian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrGuardian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrGuardian/subscriptions",
            "organizations_url": "https://api.github.com/users/MrGuardian/orgs",
            "repos_url": "https://api.github.com/users/MrGuardian/repos",
            "events_url": "https://api.github.com/users/MrGuardian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrGuardian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-23T09:38:55Z",
        "updated_at": "2014-09-23T09:38:55Z",
        "author_association": "NONE",
        "body": "I managed to access fields via MetaType.GetFields() and setting AsReference flag on each field individually, however I don't know if this is the right way to do what I want or maybe there is more straightforward way to do this (which should exist, imo).\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56498170",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/26#issuecomment-56498170",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/26",
        "id": 56498170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDk4MTcw",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-23T10:04:46Z",
        "updated_at": "2014-09-23T10:04:46Z",
        "author_association": "OWNER",
        "body": "Suggest we keep this in one place only: http://stackoverflow.com/questions/25989234/adding-attributes-to-the-fields-of-runtimetypemodel-types\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56589126",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-56589126",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 56589126,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTg5MTI2",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-23T21:01:26Z",
        "updated_at": "2014-09-23T21:01:26Z",
        "author_association": "NONE",
        "body": "I've been looking at this a bit more and what seemed to work before does not appear to work in all cases. The type referred to by a token seems to change when observed, making me suspect there is a CLR bug involved.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56589575",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-56589575",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 56589575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTg5NTc1",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-23T21:04:35Z",
        "updated_at": "2014-09-23T21:04:35Z",
        "author_association": "OWNER",
        "body": "This is an odd one. Thanks for putting a sample together to demonstrate it. I genuinely don't know how deep this rabbit hole will turn out to be.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56666806",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-56666806",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 56666806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjY2ODA2",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-24T13:09:45Z",
        "updated_at": "2014-09-24T13:35:16Z",
        "author_association": "NONE",
        "body": "So this looks like it works, but I don't like it.\n\nThere's some strange behavior seen in the tests and this feels more like a work around than a solution.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56785085",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/28#issuecomment-56785085",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/28",
        "id": 56785085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2Nzg1MDg1",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-25T07:45:44Z",
        "updated_at": "2014-09-25T07:45:44Z",
        "author_association": "NONE",
        "body": "I solved the issue! Another asset I was using had an older version of protobuf-net.dll already in it. I never knew the asset used protobufs as I hadn't use the asset much at all. Removing this dll solved the issue. Whew!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56793030",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-56793030",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 56793030,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzkzMDMw",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-25T09:12:18Z",
        "updated_at": "2014-09-25T09:12:18Z",
        "author_association": "OWNER",
        "body": "Like this:\n\n```\n    var lookup = new Dictionary<int,Type> { { 1, typeof(SHWrapperData)\n```\n\n}, { 2, typeof(ObjectPastStateData) } };\n        Serializer.TypeResolver resolver = i =>\n        {\n            Type t;\n            return lookup.TryGetValue(i, out t) ? t : null;\n        };\n\n```\n    object obj;\n    while(Serializer.NonGeneric.TryDeserializeWithLengthPrefix(bs,\n```\n\nPrefixStyle.Base128, resolver, out obj))\n        {\n            // process obj\n        }\n\nOr perhaps avoid the dictionary if the numbers are hard-coded:\n\n```\n    Serializer.TypeResolver resolver = i =>\n    {\n        switch(i)\n        {\n            case 1: return typeof(SHWrapperData);\n            case 2: return typeof(ObjectPastStateData);\n            default: return null;\n        }\n    };\n\n    object obj;\n    while(Serializer.NonGeneric.TryDeserializeWithLengthPrefix(bs,\n```\n\nPrefixStyle.Base128, resolver, out obj))\n        {\n            // process obj\n        }\n\nAny good?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56793209",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-56793209",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 56793209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzkzMjA5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-25T09:14:06Z",
        "updated_at": "2014-09-25T09:14:06Z",
        "author_association": "OWNER",
        "body": "Ah, just noticed you're probably using TypeModel, in which case what you have in the hastepin should work... ish. Can you clarify what currently goes wrong? what happens?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/56810367",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-56810367",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 56810367,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODEwMzY3",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-25T12:19:53Z",
        "updated_at": "2014-09-25T12:21:37Z",
        "author_association": "NONE",
        "body": "Wow you're quick! That example is what I've been finding, unfortunately because I am using a TypeModel I can't do it that way, or at least not that I've figured out (tried your example and still nada). What goes wrong is I can't deserialize both of the objects. I can either get one or the other, but not both.\n\nHere is my serialization:\n\nhttp://hastebin.com/xiridehone.avrasm\n\nMy deserialization is as above: http://hastebin.com/tiragefufe.coffee\n\nThe deserialization above doesn't work at all and it's the part I am confused about getting to work so I can pull both objects out and be able to distinguish between the two objects. If I do this:\n\nhttp://hastebin.com/zojenenona.coffee\n\nThis deserializes just fine, but I can only get 1 of the objects, not both (which ever expected field / type I ask for). What I don't understand is the 2 and 1 in the expected field argument. That is what I want to understand and know more about.\n\nThanks so much for the help, I really appreciate it.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/57896951",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-57896951",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 57896951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODk2OTUx",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-04T07:05:07Z",
        "updated_at": "2014-10-04T07:05:58Z",
        "author_association": "NONE",
        "body": "So I never solved the problem using some sort of way above, but I did manage to solve it using my own little thing. The key to getting it to work the way I posted as my current working way was so add a Seek(0, SeekOrigin.Begin) to the file stream after pulling the first series of objects, I assume you would do this for each different object you need to pull from file, and set the expected field to be a different integer for each type, so if you have 3 types, have ALL of type 1 be 1, all of type 2 be 2 and all of type 3 be 3. Then each time you need to deserialize them, do one type, then seek to the beginning, then do the other type and so on. Here is a stripped down version of my code (just the main bit) so you have an example to work from. That is assuming whoever is reading this is having a similar dilemma.\n\nhttp://hastebin.com/izicikusey.coffee\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/58359338",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/32#issuecomment-58359338",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/32",
        "id": 58359338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzU5MzM4",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-08T13:46:19Z",
        "updated_at": "2014-10-08T13:46:19Z",
        "author_association": "OWNER",
        "body": "The buffering is used also for functional reasons, specifically: lengths\nare not precomputed in all cases, so buffering allows mutation later.\n\nI'll check on the default length thing; but it should retain _minimum_\nlength\n\nWeak references: yes, should be fine\n\nResizeAndFlushLeft - I will have to check (not at a PC currently)\n\nGood thoughts, thanks\nOn 8 Oct 2014 11:05, \"tbella\" notifications@github.com wrote:\n\n> The BufferPool throws OutOfMemory exception when serializing large objects\n> on x86 platforms. In our case one of the fields is a byta array containing\n> 64 MB data. Possible improvements:\n> - Remove buffering from ProtoWriter: dirently write to the stream,\n>   buffering should be performed by the underlying stream.\n> - Do not only cache default-sized buffers. The real gain would be in\n>   caching big buffers allocated on the Large Object Heap. They are\n>   responsible for memory fragmentation and also more expensive to re-allocate.\n> - Use weak references for cached buffers. They could be automatically\n>   collected in low-memory situations.\n> - Re-use cached buffers in ResizeAndFlushLeft method.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/32.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/58369240",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/33#issuecomment-58369240",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/33",
        "id": 58369240,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzY5MjQw",
        "user": {
            "login": "tbella",
            "id": 6641973,
            "node_id": "MDQ6VXNlcjY2NDE5NzM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6641973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tbella",
            "html_url": "https://github.com/tbella",
            "followers_url": "https://api.github.com/users/tbella/followers",
            "following_url": "https://api.github.com/users/tbella/following{/other_user}",
            "gists_url": "https://api.github.com/users/tbella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tbella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tbella/subscriptions",
            "organizations_url": "https://api.github.com/users/tbella/orgs",
            "repos_url": "https://api.github.com/users/tbella/repos",
            "events_url": "https://api.github.com/users/tbella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tbella/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-08T14:47:42Z",
        "updated_at": "2014-10-08T14:47:42Z",
        "author_association": "NONE",
        "body": "I had no chance to test (or compile) it on WinRT and WinPhone platforms, proceed with caution.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/58369364",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/32#issuecomment-58369364",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/32",
        "id": 58369364,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzY5MzY0",
        "user": {
            "login": "tbella",
            "id": 6641973,
            "node_id": "MDQ6VXNlcjY2NDE5NzM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6641973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tbella",
            "html_url": "https://github.com/tbella",
            "followers_url": "https://api.github.com/users/tbella/followers",
            "following_url": "https://api.github.com/users/tbella/following{/other_user}",
            "gists_url": "https://api.github.com/users/tbella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tbella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tbella/subscriptions",
            "organizations_url": "https://api.github.com/users/tbella/orgs",
            "repos_url": "https://api.github.com/users/tbella/repos",
            "events_url": "https://api.github.com/users/tbella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tbella/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-08T14:48:16Z",
        "updated_at": "2014-10-08T14:48:16Z",
        "author_association": "NONE",
        "body": "Thank you for the quick response. I have just posted Pull Request #33 addressing weak references, first-chance OutOfMemoryExceptions and caching large buffers. The BufferPool.GetBuffer can also receive a minSize argument when the size of the required buffer is known (possibly ProtoReader?)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/58369871",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/32#issuecomment-58369871",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/32",
        "id": 58369871,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzY5ODcx",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-08T14:51:06Z",
        "updated_at": "2014-10-08T14:51:06Z",
        "author_association": "OWNER",
        "body": "Cool; I will review later - not at a PC right now\nOn 8 Oct 2014 15:48, \"tbella\" notifications@github.com wrote:\n\n> Thank you for the quick response. I have just posted Pull Request #33\n> https://github.com/mgravell/protobuf-net/pull/33 addressing weak\n> references, first-chance OutOfMemoryExceptions and caching large buffers.\n> The BufferPool.GetBuffer can also receive a minSize argument when the size\n> of the required buffer is known (possibly ProtoReader?)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/32#issuecomment-58369364\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/58762643",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/34#issuecomment-58762643",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/34",
        "id": 58762643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzYyNjQz",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-11T20:03:59Z",
        "updated_at": "2014-10-11T20:03:59Z",
        "author_association": "OWNER",
        "body": "That scenario is not supported.\nOn 11 Oct 2014 20:42, \"Michael\" notifications@github.com wrote:\n\n> Hello. I have been trying to find a way to preserve object references\n> between multiple serializations to streams. I tried serializing a list of\n> objects to a file stream (with the reference features enabled) and it\n> worked for that single list of objects in the stream. But, I need to keep\n> object references across multiple streams or serializations. Is it\n> possible?\n> \n> Forgive me if I've overlooked some documentation on how to do this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/34.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59171942",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59171942",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59171942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTcxOTQy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:15:59Z",
        "updated_at": "2014-10-15T08:15:59Z",
        "author_association": "OWNER",
        "body": "Will reply to the group, but the tl;dr; version is \"cannot repro; please provide an example\" - my working-fine example is below:\n\n```\nusing ProtoBuf;\nusing System;\nusing System.IO;\n\nstatic class Program\n{\n    static void Main()\n    {\n        var a = new A {\n            location = new Location {\n                city = \"someCity\",\n                coordinate = null\n            }\n        };\n        var ms = new MemoryStream();\n        Serializer.Serialize(ms, a);\n        var hex = BitConverter.ToString(\n            ms.GetBuffer(), 0, (int)ms.Length);\n        Console.WriteLine(hex);\n        // outputs: 22-0A-12-08-73-6F-6D-65-43-69-74-79\n    }\n}\n[ProtoContract]\nclass A\n{\n    [ProtoMember(2)]\n    public string someField { get; set; }\n\n    [ProtoMember(4)]\n    public Location location { get; set; }\n}\n[ProtoContract]\nclass Location\n{\n    [ProtoMember(1)]\n    public Coordinate coordinate { get; set; }\n    [ProtoMember(2)]\n    public string city { get; set; }\n}\n[ProtoContract]\nclass Coordinate\n{\n    //...\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59172372",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59172372",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59172372,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTcyMzcy",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:20:12Z",
        "updated_at": "2014-10-15T08:20:12Z",
        "author_association": "NONE",
        "body": "Ok, I will test this and deserialize it in ProtoStuff.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59172614",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59172614",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59172614,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTcyNjE0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:22:31Z",
        "updated_at": "2014-10-15T08:22:31Z",
        "author_association": "OWNER",
        "body": "The key point, though, is that the above does not emit an 0x0\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59173096",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59173096",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59173096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTczMDk2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:27:08Z",
        "updated_at": "2014-10-15T08:27:08Z",
        "author_association": "OWNER",
        "body": "Please also note my mention of `GetBuffer()` and over-sized backing buffers (on the group reply); not sure if this is what is causing the confusion, but: I see people make that mistake _a lot_ (but I must note: that is nothing to do with protobuf-net, and is simply a feature of how the framework's `MemoryStream` class works)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59173658",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59173658",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59173658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTczNjU4",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:32:43Z",
        "updated_at": "2014-10-15T08:32:43Z",
        "author_association": "NONE",
        "body": "Right. Thanks for your quick reply. Maybe I was too quick posting this without understanding what actually happened. Will dig further\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59173972",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59173972",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59173972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTczOTcy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:35:50Z",
        "updated_at": "2014-10-15T08:37:24Z",
        "author_association": "OWNER",
        "body": "Another random thought; is it possible that your string has a trailing nul? That would result in:\n\n```\n(blah...)-12-09-73-6F-6D-65-43-69-74-79-00\n```\n\n(in partcular, note the 12-09-...-00) - note that this is still perfectly valid protobuf, and if _this_ is what the scenario is, I would say that protostuff has a string-reading bug - sounds unlikely, though.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59175759",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59175759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59175759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc1NzU5",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T08:51:36Z",
        "updated_at": "2014-10-15T08:51:36Z",
        "author_association": "NONE",
        "body": "The code: \n\n```\nMemoryStream ms = null;\ntry\n{\n    ms = ProtobufUtils.Serialize (payload);\n//  var hex = BitConverter.ToString(ms.GetBuffer(), 0, (int)ms.Length);\n//  Console.WriteLine(hex);\n    request.AddParameter(\"application/x-protobuf\", ms.ToArray (), ParameterType.RequestBody);\n```\n\nand the Serialize method:\n\n```\npublic static MemoryStream Serialize (object obj)\n{\n    var ms = new MemoryStream ();\n    lock (serLock) {\n        Serializer.Serialize (ms, obj);\n    }\n\n    ms.Position = 0;\n    return ms;\n}\n```\n\nActually outputs: 0A-...-62-00-68-...-32-36\nI'm sorry I had to remove a lot here as I cannot give away our actual data and/or the real Contract. Will try to debug more. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59184959",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59184959",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59184959,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTg0OTU5",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T10:15:51Z",
        "updated_at": "2014-10-15T10:15:51Z",
        "author_association": "NONE",
        "body": "Okay sorry, that zero in the sequence above wasn't related to my problem.\n\nThis is from the Java side, I'm stepping through the ProtoStuff code. This array is the input buffer. And remember that java and c# byte representation are different (java -127 to 128 and c# 0 to 255, right?).\n\n```\n...\n[201] = 90\n[202] = 7\n[203] = 26\n[204] = 5\n[205] = 83\n[206] = 79\n[207] = 76\n[208] = 78\n[209] = 65\n...\n```\n\nThis is where the Location object is stored. `90` is read:\n\n```\nfinal int tag = readRawVarint32();\nfinal int fieldNumber = tag >>> TAG_TYPE_BITS; // TAG_TYPE_BITS = 3\n```\n\nSo this makes fieldNumber equal 11, which is the Location message nested inside class A (doesn't really coincide with the example in my initial post).\nThis makes ProtoStuff look into the Schema and find that field 11 is of type Location and it starts handling the nested message. The first thing it reads, inside this nested message, is buffer position 202: `7`. It uses the two lines above making `tag=7` and therefore `fieldNumber=0`.\n\nThe continuation of the two lines above:\n\n```\n        final int tag = readRawVarint32();\n        final int fieldNumber = tag >>> TAG_TYPE_BITS;\n        if (fieldNumber == 0)\n        {\n            if (decodeNestedMessageAsGroup && WIRETYPE_TAIL_DELIMITER == (tag & TAG_TYPE_MASK)) // WIRETYPE_TAIL_DELIMITER = 7\n            {\n                // protostuff's tail delimiter for streaming\n                // 2 options: length-delimited or tail-delimited.\n                lastTag = 0;\n                return 0;\n            }\n            ...\n```\n\nProtoStuff is going through all the incoming fieldNumbers and aborts looping when fieldNumber is 0. Therefore the nested message `Location` is never populated since the looping is aborted immediately. It moves out to the outer message (class `A`). Here the next byte it finds is `26` (pos 203 above). This should actually belong to the nested message `Location` but is populating the wrong field in the outer message.\n\nAs I described in the GoogleGroup thread I'm very new to Protocol Buffers so I'm not sure what this all means. But the byte at position 202 `7` is interpreted as `Location` population is over.\n\nCan you make anything of this very long description? Is it something that you want from me in order to clarify?\n\nThanks for your help.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59185216",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59185216",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59185216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTg1MjE2",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T10:18:17Z",
        "updated_at": "2014-10-15T10:18:17Z",
        "author_association": "NONE",
        "body": "I maybe should add that we are using protobuf-net (clients) to ProtoStuff (back-end) for our app. We have 200k users so I don't think that it is an issue with how _we_ serialize / deserialize using protobuf-net and ProtoStuff as you suggested (with ms.GetBuffer() vs ms.ToArray()). Everything else works but this intricate case. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59190997",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59190997",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59190997,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkwOTk3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:18:46Z",
        "updated_at": "2014-10-15T11:18:46Z",
        "author_association": "OWNER",
        "body": "I'm assuming this is \"SOLNA\" ?\n\nAgreed: tag 90 is field-number 11. Just to check: _is there_ a field 11 in\nyour message? If not, it sounds like a nasty bug in the output generation.\nI would love to see a complete runnable sample that generates the wrong\noutput.\n\nOn 15 October 2014 11:15, Johannes Elgh notifications@github.com wrote:\n\n> Okay sorry, that zero in the sequence above wasn't related to my problem.\n> \n> This is from the Java side, I'm stepping through the ProtoStuff code. This\n> array is the input buffer. And remember that java and c# byte\n> representation are different (java -127 to 128 and c# 0 to 255, right?).\n> \n> ...\n> [201] = 90\n> [202] = 7\n> [203] = 26\n> [204] = 5\n> [205] = 83\n> [206] = 79\n> [207] = 76\n> [208] = 78\n> [209] = 65\n> ...\n> \n> This is where the Location object is stored. 90 is read:\n> \n> final int tag = readRawVarint32();\n> final int fieldNumber = tag >>> TAG_TYPE_BITS; // TAG_TYPE_BITS = 3\n> \n> So this makes fieldNumber equal 11, which is the Location message nested\n> inside class A (doesn't really coincide with the example in my initial\n> post).\n> This makes ProtoStuff look into the Schema and find that field 11 is of\n> type Location and it starts handling the nested message. The first thing it\n> reads, inside this nested message, is buffer position 202: 7. It uses the\n> two lines above making tag=7 and therefore fieldNumber=0.\n> \n> The continuation of the two lines above:\n> \n> ```\n>     final int tag = readRawVarint32();\n>     final int fieldNumber = tag >>> TAG_TYPE_BITS;\n>     if (fieldNumber == 0)\n>     {\n>         if (decodeNestedMessageAsGroup && WIRETYPE_TAIL_DELIMITER == (tag & TAG_TYPE_MASK)) // WIRETYPE_TAIL_DELIMITER = 7\n>         {\n>             // protostuff's tail delimiter for streaming\n>             // 2 options: length-delimited or tail-delimited.\n>             lastTag = 0;\n>             return 0;\n>         }\n>         ...\n> ```\n> \n> ProtoStuff is going through all the incoming fieldNumbers and aborts\n> looping when fieldNumber is 0. Therefore the nested message Location is\n> never populated since the looping is aborted immediately. It moves out to\n> the outer message (class A). Here the next byte it finds is 26 (pos 203\n> above). This should actually belong to the nested message Location but is\n> populating the wrong field in the outer message.\n> \n> As I described in the GoogleGroup thread I'm very new to Protocol Buffers\n> so I'm not sure what this all means. But the byte at position 202 7 is\n> interpreted as Location population is over.\n> \n> Can you make anything of this very long description? Is it something that\n> you want from me in order to clarify?\n> \n> Thanks for your help.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59184959\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59191079",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59191079",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59191079,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkxMDc5",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:19:37Z",
        "updated_at": "2014-10-15T11:20:41Z",
        "author_association": "NONE",
        "body": "The city is SOLNA correct. \nAnd yes, there is a field 11 in the message. Its an `Location` object with a string field City populated with \"SOLNA\"\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59191450",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59191450",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59191450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkxNDUw",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:23:37Z",
        "updated_at": "2014-10-15T11:24:21Z",
        "author_association": "NONE",
        "body": "```\n    [DataContract]\n    [ProtoContract]\n    public class Location\n    {\n        [DataMember (Name = \"coordinate\")]\n        [ProtoMember(1)]\n        public Coordinate Coordinate { get; set; }\n\n        [DataMember (Name = \"accuracy\")]\n        [ProtoMember(2)]\n        public Double Accuracy { get; set; }\n\n        [DataMember (Name = \"city\")]\n        [ProtoMember(3)]\n        public string City { get; set; }\n    }\n```\n\nIn the above example, Coordinate and Accuracy are null and 0 respectively. \n\nI'll see if I can post a full example. Or maybe if I can remove some parts that are business dependant.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59192619",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59192619",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59192619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkyNjE5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:36:55Z",
        "updated_at": "2014-10-15T11:49:14Z",
        "author_association": "OWNER",
        "body": "So to be clear, then; what makes you think there is a problem? The 9 bytes in the binary you posted most recently says:\n\n```\n\"field 11, string, length 7\" (2 bytes)\n    \"field 3, string, length 5\" (2 bytes)\n        \"SOLNA\" (5 bytes)\n```\n\nIf field 11 is a location with Coordinate = null, Accuracy = 0 and City = \"SOLNA\", then that is entirely reasonable. So: what makes you think there is an issue? What is the symptom? \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59193203",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59193203",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59193203,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkzMjAz",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:43:04Z",
        "updated_at": "2014-10-15T11:44:36Z",
        "author_association": "OWNER",
        "body": "From your comment here:\n\n> The first thing it reads, inside this nested message, is buffer position 202: 7. It uses the two lines above making tag=7 and therefore fieldNumber=0.\n\nwhat you are describing here is a bug in protostuff; a tag with value 90 indicates a length-prefixed type (aka \"string\"). The correct thing to do next is to read a varint, which indicates the length of the content - in this case, 7 bytes. The _content_ starts _after_ the 7. If protostuff isn't reading the varint that denotes the length: then it is doing it wrong. You can refer to the \"Strings\" and \"Embedded Messages\" sections of [the encoding spec](https://developers.google.com/protocol-buffers/docs/encoding) for more information.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59193566",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/35#issuecomment-59193566",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/35",
        "id": 59193566,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTkzNTY2",
        "user": {
            "login": "jelgh",
            "id": 279016,
            "node_id": "MDQ6VXNlcjI3OTAxNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/279016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jelgh",
            "html_url": "https://github.com/jelgh",
            "followers_url": "https://api.github.com/users/jelgh/followers",
            "following_url": "https://api.github.com/users/jelgh/following{/other_user}",
            "gists_url": "https://api.github.com/users/jelgh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jelgh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jelgh/subscriptions",
            "organizations_url": "https://api.github.com/users/jelgh/orgs",
            "repos_url": "https://api.github.com/users/jelgh/repos",
            "events_url": "https://api.github.com/users/jelgh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jelgh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T11:46:51Z",
        "updated_at": "2014-10-15T11:46:51Z",
        "author_association": "NONE",
        "body": "Ah I see. Thanks for describing this for me and sorry for taking your time. I will take this to ProtoStuff.\n\nThanks again!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59279889",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/36#issuecomment-59279889",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/36",
        "id": 59279889,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjc5ODg5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-15T21:31:41Z",
        "updated_at": "2014-10-15T21:31:41Z",
        "author_association": "OWNER",
        "body": "Step back; what are these 3 different DLLs? What is the difference between\nthem? Are they targeting different platforms? Or...?\nOn 15 Oct 2014 21:51, \"Snow-Okami\" notifications@github.com wrote:\n\n> So I have two other assets in my unity3d project that also now use\n> protobuf-net. I see that when you create a type model and a serializer, you\n> use your own built version of the library. At first I thought it would be\n> easy as swapping out the protobuf-net.dll file, but it isn't. It causes\n> things from whichever asset that had that dll file to have things missing.\n> Seeing how I have now 3 different protobuf-net.dll files (my own, and 2\n> others), how can I centralize into just depending off of one so that they\n> all can work in unison? I hope my question makes sense\n> \n> In other words how can I get them to all play nicely?\n> \n> Thank you!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/36.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59309687",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/36#issuecomment-59309687",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/36",
        "id": 59309687,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzA5Njg3",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-16T03:32:50Z",
        "updated_at": "2014-10-16T03:32:50Z",
        "author_association": "NONE",
        "body": "Ah, I meant 3 protobuf dlls.\n\nBefore I was getting confusion of different assets looking at different protobuf-net dll files like so:\n\nhttp://gyazo.com/a12b77cdbf534052c3af06966021ea28\n\nSome of the assets would break (they wouldn't work correctly) when I swapped dlls with my own (the newer version of protobuf) I seem to have messed around and restructured things a bit.\n\nhttp://gyazo.com/3e06cc8f6eb5e5670b8c1ca6d87a58fd\n\nNow everything works properly and seems to find the proper dll. Sorry I was just checking to see if you knew anything about this before going to the asset providers who are also using protobuf-net. Seems to have solved itself for now though!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59327556",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/37#issuecomment-59327556",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/37",
        "id": 59327556,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzI3NTU2",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-16T08:08:15Z",
        "updated_at": "2014-10-16T08:24:23Z",
        "author_association": "NONE",
        "body": "So after some refactoring and recoding, I was able to solve how to serialize the list. The List<ObjectType> is held now as it's own class that is used with the circular buffer.\n\nNow however when serializing, it is fine like before, but deserializing gives me a:\n\nInvalidOperationException: Operation is not valid due to the current state of the object\nProtoBuf.ProtoReader.ReadLengthPrefix (System.IO.Stream source, Boolean expectHeader, PrefixStyle style, System.Int32& fieldNumber, System.Int32& bytesRead)\n\nThis is with DeserializeWithLengthPrefix. Using Deserialize yields:\n\nProtoException: Invalid field in source data: 0\nProtoBuf.ProtoReader.ReadFieldHeader ()\n\nReading on the net reveals other people that also had this issue were using GetBuffer() in which this needed to be changed to ToArray(), unfortunately I am not using this at all. I can't seem to pinpoint the issue.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/59580447",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/37#issuecomment-59580447",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/37",
        "id": 59580447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTgwNDQ3",
        "user": {
            "login": "Snow-Okami",
            "id": 1075953,
            "node_id": "MDQ6VXNlcjEwNzU5NTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1075953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snow-Okami",
            "html_url": "https://github.com/Snow-Okami",
            "followers_url": "https://api.github.com/users/Snow-Okami/followers",
            "following_url": "https://api.github.com/users/Snow-Okami/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snow-Okami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snow-Okami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snow-Okami/subscriptions",
            "organizations_url": "https://api.github.com/users/Snow-Okami/orgs",
            "repos_url": "https://api.github.com/users/Snow-Okami/repos",
            "events_url": "https://api.github.com/users/Snow-Okami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snow-Okami/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T21:42:40Z",
        "updated_at": "2014-10-17T21:42:40Z",
        "author_association": "NONE",
        "body": "I have solved this issue after much frustration. Turns out this was caused by an incompatibility with using SharpBZip library. Removing the:\n\nusing (BZip2OutputStream osBZip2 = new BZip2OutputStream(bs))\n\nfrom above as any other implementations of it solved the issue. Strange seeing how even though this was implemented, I wasn't actually using it (was using buffered stream still) I am now using the 7zip SDK and have put these tasks on a background thread with GREAT results.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/60275306",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/38#issuecomment-60275306",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/38",
        "id": 60275306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjc1MzA2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-23T17:25:39Z",
        "updated_at": "2014-10-23T17:25:39Z",
        "author_association": "OWNER",
        "body": "Did you ask the same on stackoverflow? I answered this earlier today:\nhttp://stackoverflow.com/questions/26528610/c-sharp-protobuf-with-tcpclient-how-can-i-separate-packets\nOn 23 Oct 2014 06:48, \"Lee\" notifications@github.com wrote:\n\n> Hello,\n> \n> If i send packet like this, http://codepad.org/cYB0AyyN\n> And receive packet like this, http://codepad.org/5IR4zfRr\n> \n> How can i separate two persons if in one time received all...\n> \n> Thanks in advance.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/38.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/60550883",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/38#issuecomment-60550883",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/38",
        "id": 60550883,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTUwODgz",
        "user": {
            "login": "JoyLeeSoft",
            "id": 7950393,
            "node_id": "MDQ6VXNlcjc5NTAzOTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7950393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoyLeeSoft",
            "html_url": "https://github.com/JoyLeeSoft",
            "followers_url": "https://api.github.com/users/JoyLeeSoft/followers",
            "following_url": "https://api.github.com/users/JoyLeeSoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoyLeeSoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoyLeeSoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoyLeeSoft/subscriptions",
            "organizations_url": "https://api.github.com/users/JoyLeeSoft/orgs",
            "repos_url": "https://api.github.com/users/JoyLeeSoft/repos",
            "events_url": "https://api.github.com/users/JoyLeeSoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoyLeeSoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-27T05:09:03Z",
        "updated_at": "2014-10-27T05:09:03Z",
        "author_association": "NONE",
        "body": "@mgravell Wow! yeah. thanks a lot\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/60709597",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/40#issuecomment-60709597",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/40",
        "id": 60709597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzA5NTk3",
        "user": {
            "login": "mpb27",
            "id": 6098645,
            "node_id": "MDQ6VXNlcjYwOTg2NDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6098645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpb27",
            "html_url": "https://github.com/mpb27",
            "followers_url": "https://api.github.com/users/mpb27/followers",
            "following_url": "https://api.github.com/users/mpb27/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpb27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpb27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpb27/subscriptions",
            "organizations_url": "https://api.github.com/users/mpb27/orgs",
            "repos_url": "https://api.github.com/users/mpb27/repos",
            "events_url": "https://api.github.com/users/mpb27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpb27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-28T04:48:06Z",
        "updated_at": "2014-10-28T04:48:06Z",
        "author_association": "NONE",
        "body": "A merge will also cause a stack overflow regardless of SkipConstructor.\n\n``` C#\n            // ... create a non-default Foo (with BarB) ...\n            var fooWithBarB = new Foo() { SomeBar = new BarB() { Value = 321.0 } };\n\n            // ... serialize it into memory ...\n            var ms = new MemoryStream();\n            Serializer.Serialize<Foo>(ms, fooWithBarB);\n\n            // ... create an instance of Foo to merge with ...\n            var mergeFoo = new Foo(); \n\n            // ... merge which will cause a buffer overflow ...\n            ms.Position = 0;\n            Serializer.Merge<Foo>(ms, mergeFoo);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/61033055",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/39#issuecomment-61033055",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/39",
        "id": 61033055,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDMzMDU1",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-30T01:30:17Z",
        "updated_at": "2014-10-30T01:30:17Z",
        "author_association": "NONE",
        "body": "Just select the iOS Configuration and build the main protobuf-net project.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/61205471",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/39#issuecomment-61205471",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/39",
        "id": 61205471,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjA1NDcx",
        "user": {
            "login": "w359405949",
            "id": 2908940,
            "node_id": "MDQ6VXNlcjI5MDg5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2908940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w359405949",
            "html_url": "https://github.com/w359405949",
            "followers_url": "https://api.github.com/users/w359405949/followers",
            "following_url": "https://api.github.com/users/w359405949/following{/other_user}",
            "gists_url": "https://api.github.com/users/w359405949/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/w359405949/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/w359405949/subscriptions",
            "organizations_url": "https://api.github.com/users/w359405949/orgs",
            "repos_url": "https://api.github.com/users/w359405949/repos",
            "events_url": "https://api.github.com/users/w359405949/events{/privacy}",
            "received_events_url": "https://api.github.com/users/w359405949/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-31T02:18:35Z",
        "updated_at": "2014-10-31T02:18:35Z",
        "author_association": "NONE",
        "body": "thx, \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62688152",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-62688152",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 62688152,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjg4MTUy",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:01:53Z",
        "updated_at": "2014-11-12T09:03:16Z",
        "author_association": "NONE",
        "body": "IgnoreListHandling would work only for complex types (because it forces protobuf to serialize fields/properties inside). Arrays don't have fields/properties which can be serialized so they require special handling like a primitive type so you can't make it work. I advice you to <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/wiki/Comparsion-with-protobuf-net\">look at the fork which goal is to support all .NET stuff</a>. Nested/jagged arrays are not supported there too but you can code your implementation and it will be accepted even if it breaks proto spec.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62688909",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-62688909",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 62688909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjg4OTA5",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:09:25Z",
        "updated_at": "2014-11-12T09:09:25Z",
        "author_association": "NONE",
        "body": "Hey, breaking specs is ok for <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/wiki/Comparsion-with-protobuf-net\">my fork</a>, you are welcome to make your changes there.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62689365",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/41#issuecomment-62689365",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/41",
        "id": 62689365,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjg5MzY1",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:13:30Z",
        "updated_at": "2014-11-12T09:13:30Z",
        "author_association": "NONE",
        "body": "I think with compiled (pregenerated) dll it should work fine.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62690025",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/30#issuecomment-62690025",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/30",
        "id": 62690025,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjkwMDI1",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:19:08Z",
        "updated_at": "2014-11-12T09:19:08Z",
        "author_association": "NONE",
        "body": "Could you check your example with <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/wiki/Comparsion-with-protobuf-net\">this fork</a>? It has improvements in reference tracking so there is a great chance that it will work fine. Just add dll reference and replace the usage of Protobuf.TypeModel with AqlaSerializer.TypeModel.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62692014",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/25#issuecomment-62692014",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/25",
        "id": 62692014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjkyMDE0",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:36:41Z",
        "updated_at": "2014-11-12T09:36:53Z",
        "author_association": "NONE",
        "body": "Yes, it's a feature. The same for \"bool ShouldSerializeSomeProperty()\". For now it can't be disabled.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62692177",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/21#issuecomment-62692177",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/21",
        "id": 62692177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjkyMTc3",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:38:00Z",
        "updated_at": "2014-11-12T09:38:00Z",
        "author_association": "NONE",
        "body": "See also #11\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62692764",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-62692764",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 62692764,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjkyNzY0",
        "user": {
            "login": "NeoLegends",
            "id": 1683034,
            "node_id": "MDQ6VXNlcjE2ODMwMzQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1683034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NeoLegends",
            "html_url": "https://github.com/NeoLegends",
            "followers_url": "https://api.github.com/users/NeoLegends/followers",
            "following_url": "https://api.github.com/users/NeoLegends/following{/other_user}",
            "gists_url": "https://api.github.com/users/NeoLegends/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NeoLegends/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NeoLegends/subscriptions",
            "organizations_url": "https://api.github.com/users/NeoLegends/orgs",
            "repos_url": "https://api.github.com/users/NeoLegends/repos",
            "events_url": "https://api.github.com/users/NeoLegends/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NeoLegends/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:43:01Z",
        "updated_at": "2014-11-12T09:43:01Z",
        "author_association": "NONE",
        "body": "No, thats not true. If I leave the IEnumerable out of the class the whole thing serializes just fine. It seems like there is an error while handling the flag. \n\nAlso, I'm using complex types, as you can see. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62693440",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/27#issuecomment-62693440",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/27",
        "id": 62693440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjkzNDQw",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:48:26Z",
        "updated_at": "2014-11-12T09:48:26Z",
        "author_association": "NONE",
        "body": "Unfortunately it would be really hard to change the current code to be agnostic to the order to the inheritance fields. The type should be constructed before you can set its fields. Otherwise it can't be used \"AsReference\" inside these fields.\n\nAlso there is no support for inheritance in the official protobuf spec.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62694051",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-62694051",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 62694051,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjk0MDUx",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:53:24Z",
        "updated_at": "2014-11-12T09:53:34Z",
        "author_association": "NONE",
        "body": "@joaocc protobuf-net comes as a compiled dll. conditional compilation does not apply here. you don't want to include protobuf-net sources in your project, don't you?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62694674",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-62694674",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 62694674,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjk0Njc0",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T09:58:42Z",
        "updated_at": "2014-11-12T09:59:32Z",
        "author_association": "NONE",
        "body": "Oops, you are right. I should have read it more attentively. There is no support for int[,] but in your case it should work.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/62698528",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-62698528",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 62698528,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjk4NTI4",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-12T10:31:11Z",
        "updated_at": "2014-11-12T10:31:11Z",
        "author_association": "NONE",
        "body": "Fixed in my fork, see <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/commit/a2feeb82dd0c306b7bb62a71a46e33c57854b480\">commit</a>. \n\nI'm not going to issue the pull request for the whole fork. If you need it for protobuf-net - apply it yourself.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/63238342",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63238342",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/46",
        "id": 63238342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM4MzQy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-16T20:50:20Z",
        "updated_at": "2014-11-16T20:50:20Z",
        "author_association": "OWNER",
        "body": "Interesting. Does it do that if the number is 1, not 0? 0 is not a valid protobuf field number\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/63239835",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63239835",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/46",
        "id": 63239835,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM5ODM1",
        "user": {
            "login": "kieranbenton",
            "id": 39090,
            "node_id": "MDQ6VXNlcjM5MDkw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kieranbenton",
            "html_url": "https://github.com/kieranbenton",
            "followers_url": "https://api.github.com/users/kieranbenton/followers",
            "following_url": "https://api.github.com/users/kieranbenton/following{/other_user}",
            "gists_url": "https://api.github.com/users/kieranbenton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kieranbenton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kieranbenton/subscriptions",
            "organizations_url": "https://api.github.com/users/kieranbenton/orgs",
            "repos_url": "https://api.github.com/users/kieranbenton/repos",
            "events_url": "https://api.github.com/users/kieranbenton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kieranbenton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-16T21:17:35Z",
        "updated_at": "2014-11-16T21:17:35Z",
        "author_association": "NONE",
        "body": "Ah apologies - I knew I was going to get something wrong with the contrived\nsample I gave! Yes in reality I'm seeing this as part of a much more\ncomplex example I can't share directly with a member number of \"3\".\n\nOn 16 November 2014 20:50, Marc Gravell notifications@github.com wrote:\n\n> Interesting. Does it do that if the number is 1, not 0? 0 is not a valid\n> protobuf field number\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63238342\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/63247207",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63247207",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/46",
        "id": 63247207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ3MjA3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-17T00:22:27Z",
        "updated_at": "2014-11-17T00:22:27Z",
        "author_association": "OWNER",
        "body": "Ah, this is probably the annoying \"implicit defaults\" - an early design choice that is much regretted. Try adding:\n\n[DefaultValue(true)]\n\nTo the property. That should hopefully fit it.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/63247457",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63247457",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/46",
        "id": 63247457,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ3NDU3",
        "user": {
            "login": "kieranbenton",
            "id": 39090,
            "node_id": "MDQ6VXNlcjM5MDkw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kieranbenton",
            "html_url": "https://github.com/kieranbenton",
            "followers_url": "https://api.github.com/users/kieranbenton/followers",
            "following_url": "https://api.github.com/users/kieranbenton/following{/other_user}",
            "gists_url": "https://api.github.com/users/kieranbenton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kieranbenton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kieranbenton/subscriptions",
            "organizations_url": "https://api.github.com/users/kieranbenton/orgs",
            "repos_url": "https://api.github.com/users/kieranbenton/repos",
            "events_url": "https://api.github.com/users/kieranbenton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kieranbenton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-17T00:28:57Z",
        "updated_at": "2014-11-17T00:28:57Z",
        "author_association": "NONE",
        "body": "Ah - so there is no way to directly initialize properties if you're\nexpecting on them being pulled in by deserialization at a later point\nunless you use [DefaultValue(..)]? Is there something I can read to\nunderstand that behaviour somewhere?\n\nCheers!\n\nOn 17 November 2014 00:22, Marc Gravell notifications@github.com wrote:\n\n> Ah, this is probably the annoying \"implicit defaults\" - an early design\n> choice that is much regretted. Try adding:\n> \n> [DefaultValue(true)]\n> \n> To the property. That should hopefully fit it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63247207\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/63247834",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/46#issuecomment-63247834",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/46",
        "id": 63247834,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ3ODM0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-17T00:38:17Z",
        "updated_at": "2014-11-17T00:38:17Z",
        "author_association": "OWNER",
        "body": "This is simply a poor design choice that happened many many years ago in v1 of protobuf-net. What I should have done is only use explicit default values. How the code was implemented - and remains the default, for compatibility - is that it assumes \"zero\" as the default, unless told otherwise (or unless some kind of conditional serialization is in play, for example Nullable-of-T, ShouldSerialize*, or *Specified). There is actually an option to disable this if you create your own RuntimeTypeModel instance rather than using .Default - something like \".UseImplicitZeroDefaults\".\n\nThe [DefaultValue(true)] in this case simply gives the library more clue as to what is an actual value vs a default.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/64419602",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-64419602",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 64419602,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDE5NjAy",
        "user": {
            "login": "ltrzesniewski",
            "id": 7913492,
            "node_id": "MDQ6VXNlcjc5MTM0OTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7913492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltrzesniewski",
            "html_url": "https://github.com/ltrzesniewski",
            "followers_url": "https://api.github.com/users/ltrzesniewski/followers",
            "following_url": "https://api.github.com/users/ltrzesniewski/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltrzesniewski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltrzesniewski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltrzesniewski/subscriptions",
            "organizations_url": "https://api.github.com/users/ltrzesniewski/orgs",
            "repos_url": "https://api.github.com/users/ltrzesniewski/repos",
            "events_url": "https://api.github.com/users/ltrzesniewski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltrzesniewski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-25T15:45:42Z",
        "updated_at": "2014-11-25T15:45:42Z",
        "author_association": "NONE",
        "body": "@AqlaSolutions it would be really helpful if you could provide a separate pull request for that fix so that everyone could benefit.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/64424065",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-64424065",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 64424065,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDI0MDY1",
        "user": {
            "login": "NeoLegends",
            "id": 1683034,
            "node_id": "MDQ6VXNlcjE2ODMwMzQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1683034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NeoLegends",
            "html_url": "https://github.com/NeoLegends",
            "followers_url": "https://api.github.com/users/NeoLegends/followers",
            "following_url": "https://api.github.com/users/NeoLegends/following{/other_user}",
            "gists_url": "https://api.github.com/users/NeoLegends/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NeoLegends/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NeoLegends/subscriptions",
            "organizations_url": "https://api.github.com/users/NeoLegends/orgs",
            "repos_url": "https://api.github.com/users/NeoLegends/repos",
            "events_url": "https://api.github.com/users/NeoLegends/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NeoLegends/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-25T16:09:34Z",
        "updated_at": "2014-11-25T16:09:34Z",
        "author_association": "NONE",
        "body": "@ltrzesniewski It seems like this project is dead anyway.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/64483080",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-64483080",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 64483080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDgzMDgw",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-25T22:30:12Z",
        "updated_at": "2014-11-25T22:30:12Z",
        "author_association": "NONE",
        "body": "yep, no one would accept it\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/64650920",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-64650920",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 64650920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjUwOTIw",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-26T14:15:33Z",
        "updated_at": "2014-11-26T14:15:33Z",
        "author_association": "NONE",
        "body": "We're treating this as a CLR bug and have changed the application such that we can no longer encounter this issue.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/64809168",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/2#issuecomment-64809168",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/2",
        "id": 64809168,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODA5MTY4",
        "user": {
            "login": "sunib",
            "id": 1828380,
            "node_id": "MDQ6VXNlcjE4MjgzODA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1828380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunib",
            "html_url": "https://github.com/sunib",
            "followers_url": "https://api.github.com/users/sunib/followers",
            "following_url": "https://api.github.com/users/sunib/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunib/subscriptions",
            "organizations_url": "https://api.github.com/users/sunib/orgs",
            "repos_url": "https://api.github.com/users/sunib/repos",
            "events_url": "https://api.github.com/users/sunib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunib/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-27T16:21:05Z",
        "updated_at": "2014-11-27T16:21:05Z",
        "author_association": "NONE",
        "body": "@mgravell : I noticed this problem with the ProtoGen, and now I see that there's already a pull request. Would be really great if this could be pulled into the main branch. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/65202266",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-65202266",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 65202266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjAyMjY2",
        "user": {
            "login": "eggsterino",
            "id": 10044875,
            "node_id": "MDQ6VXNlcjEwMDQ0ODc1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10044875?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eggsterino",
            "html_url": "https://github.com/eggsterino",
            "followers_url": "https://api.github.com/users/eggsterino/followers",
            "following_url": "https://api.github.com/users/eggsterino/following{/other_user}",
            "gists_url": "https://api.github.com/users/eggsterino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eggsterino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eggsterino/subscriptions",
            "organizations_url": "https://api.github.com/users/eggsterino/orgs",
            "repos_url": "https://api.github.com/users/eggsterino/repos",
            "events_url": "https://api.github.com/users/eggsterino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eggsterino/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-02T09:19:39Z",
        "updated_at": "2014-12-02T09:19:39Z",
        "author_association": "NONE",
        "body": "+1\noneof is an awesome feature and I really hope to use it!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/66274120",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/49#issuecomment-66274120",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/49",
        "id": 66274120,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc0MTIw",
        "user": {
            "login": "Hijdra",
            "id": 7012180,
            "node_id": "MDQ6VXNlcjcwMTIxODA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7012180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hijdra",
            "html_url": "https://github.com/Hijdra",
            "followers_url": "https://api.github.com/users/Hijdra/followers",
            "following_url": "https://api.github.com/users/Hijdra/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hijdra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hijdra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hijdra/subscriptions",
            "organizations_url": "https://api.github.com/users/Hijdra/orgs",
            "repos_url": "https://api.github.com/users/Hijdra/repos",
            "events_url": "https://api.github.com/users/Hijdra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hijdra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-09T12:16:39Z",
        "updated_at": "2014-12-09T12:18:03Z",
        "author_association": "NONE",
        "body": "For the time being I solved this by doing the next steps:\n1. Add a Universal Portable Library next to the WinRT library.\n2. Copy every file from the WinRT to the Universal project.\n3. Remove the AssemblyInfo.cs from the Properties folder.\n4. Copy the build Conditional compilation symbols from the WinRT to the Universal library.\n5. Have fun :smiley: \n\nWould be awesome if this is included in Nuget\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/66873346",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/3#issuecomment-66873346",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/3",
        "id": 66873346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODczMzQ2",
        "user": {
            "login": "QuantumDeveloper",
            "id": 6085009,
            "node_id": "MDQ6VXNlcjYwODUwMDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6085009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuantumDeveloper",
            "html_url": "https://github.com/QuantumDeveloper",
            "followers_url": "https://api.github.com/users/QuantumDeveloper/followers",
            "following_url": "https://api.github.com/users/QuantumDeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuantumDeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuantumDeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuantumDeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/QuantumDeveloper/orgs",
            "repos_url": "https://api.github.com/users/QuantumDeveloper/repos",
            "events_url": "https://api.github.com/users/QuantumDeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuantumDeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-13T11:23:43Z",
        "updated_at": "2014-12-13T11:24:04Z",
        "author_association": "NONE",
        "body": "@fnicollet  I will just add a tip to your previous post:\nthis folder is inside packages folder of your solution.\nJust to be sure everyone will understand this correctly, but anyway, this issue must be fixed, I think, because lib must work out of box without spinning around and thinking why it is not working.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/67397267",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-67397267",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 67397267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mzk3MjY3",
        "user": {
            "login": "ejball",
            "id": 197797,
            "node_id": "MDQ6VXNlcjE5Nzc5Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/197797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejball",
            "html_url": "https://github.com/ejball",
            "followers_url": "https://api.github.com/users/ejball/followers",
            "following_url": "https://api.github.com/users/ejball/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejball/subscriptions",
            "organizations_url": "https://api.github.com/users/ejball/orgs",
            "repos_url": "https://api.github.com/users/ejball/repos",
            "events_url": "https://api.github.com/users/ejball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-17T21:26:13Z",
        "updated_at": "2014-12-17T21:26:13Z",
        "author_association": "NONE",
        "body": ":+1: \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68148015",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/45#issuecomment-68148015",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/45",
        "id": 68148015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTQ4MDE1",
        "user": {
            "login": "mreu",
            "id": 9655045,
            "node_id": "MDQ6VXNlcjk2NTUwNDU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9655045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreu",
            "html_url": "https://github.com/mreu",
            "followers_url": "https://api.github.com/users/mreu/followers",
            "following_url": "https://api.github.com/users/mreu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreu/subscriptions",
            "organizations_url": "https://api.github.com/users/mreu/orgs",
            "repos_url": "https://api.github.com/users/mreu/repos",
            "events_url": "https://api.github.com/users/mreu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-26T16:46:39Z",
        "updated_at": "2014-12-26T17:06:48Z",
        "author_association": "NONE",
        "body": "What I found is the required fields cannot have default values. If the fields are optional the default values are set. Is that correct, that required fields cannot have deafult values?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68148211",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/45#issuecomment-68148211",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/45",
        "id": 68148211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTQ4MjEx",
        "user": {
            "login": "mreu",
            "id": 9655045,
            "node_id": "MDQ6VXNlcjk2NTUwNDU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9655045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreu",
            "html_url": "https://github.com/mreu",
            "followers_url": "https://api.github.com/users/mreu/followers",
            "following_url": "https://api.github.com/users/mreu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreu/subscriptions",
            "organizations_url": "https://api.github.com/users/mreu/orgs",
            "repos_url": "https://api.github.com/users/mreu/repos",
            "events_url": "https://api.github.com/users/mreu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-26T16:50:53Z",
        "updated_at": "2014-12-26T17:05:08Z",
        "author_association": "NONE",
        "body": "Sorry, took the wrong button and close it accidential. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68184278",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/45#issuecomment-68184278",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/45",
        "id": 68184278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTg0Mjc4",
        "user": {
            "login": "mreu",
            "id": 9655045,
            "node_id": "MDQ6VXNlcjk2NTUwNDU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9655045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreu",
            "html_url": "https://github.com/mreu",
            "followers_url": "https://api.github.com/users/mreu/followers",
            "following_url": "https://api.github.com/users/mreu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreu/subscriptions",
            "organizations_url": "https://api.github.com/users/mreu/orgs",
            "repos_url": "https://api.github.com/users/mreu/repos",
            "events_url": "https://api.github.com/users/mreu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-27T17:16:02Z",
        "updated_at": "2014-12-27T17:16:02Z",
        "author_association": "NONE",
        "body": "I fixed it for C# and made a pullrequest\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68200685",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/5#issuecomment-68200685",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/5",
        "id": 68200685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjAwNjg1",
        "user": {
            "login": "xidius",
            "id": 4578497,
            "node_id": "MDQ6VXNlcjQ1Nzg0OTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4578497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xidius",
            "html_url": "https://github.com/xidius",
            "followers_url": "https://api.github.com/users/xidius/followers",
            "following_url": "https://api.github.com/users/xidius/following{/other_user}",
            "gists_url": "https://api.github.com/users/xidius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xidius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xidius/subscriptions",
            "organizations_url": "https://api.github.com/users/xidius/orgs",
            "repos_url": "https://api.github.com/users/xidius/repos",
            "events_url": "https://api.github.com/users/xidius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xidius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-28T07:46:28Z",
        "updated_at": "2014-12-28T07:46:28Z",
        "author_association": "NONE",
        "body": "Hello Mark.  Im sorry that i too long doesn't say any thing.    Current state  -    I stopped to use protobuf because of error in deserialization in server-silverlight app. But i still beleave that  issue- Sliverlight RuntimeTypeModel  - can be.  Now i use other serializer - it supports inheritance( that's what i need) from BaseType, and even from object. if you interesting in my Test class  and Model class i can send them to you. if you interesting in more details i also can answer for you of course. thank's Mark for your great job for open source    \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68430359",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/48#issuecomment-68430359",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/48",
        "id": 68430359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDMwMzU5",
        "user": {
            "login": "tonysneed",
            "id": 2836367,
            "node_id": "MDQ6VXNlcjI4MzYzNjc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2836367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonysneed",
            "html_url": "https://github.com/tonysneed",
            "followers_url": "https://api.github.com/users/tonysneed/followers",
            "following_url": "https://api.github.com/users/tonysneed/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonysneed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonysneed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonysneed/subscriptions",
            "organizations_url": "https://api.github.com/users/tonysneed/orgs",
            "repos_url": "https://api.github.com/users/tonysneed/repos",
            "events_url": "https://api.github.com/users/tonysneed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonysneed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-31T08:47:08Z",
        "updated_at": "2014-12-31T08:47:45Z",
        "author_association": "NONE",
        "body": "You may have a serialization problem due to cycles.  You should try configuring Protobuf to handle cycles. This can be done with attributes, or in code.  I have a solution which does this in code, which I prefer to littering my entities with serialization attributes. Feel free to check it out. I also plan to publish some NuGet packages for it. https://gist.github.com/tonysneed/d7f6533e12e5f7e1c0fc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68432133",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/56#issuecomment-68432133",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/56",
        "id": 68432133,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDMyMTMz",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-31T09:34:09Z",
        "updated_at": "2014-12-31T09:34:09Z",
        "author_association": "OWNER",
        "body": "Yes, it is certainly a scenario I would like the library to support, but no\nI haven't had chance to investigate.\n\nOn 31 December 2014 at 08:53, Anthony Sneed notifications@github.com\nwrote:\n\n> Are there plans to support CLR Core for compatibility with ASP.NET 5.0?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/56.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68446913",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/56#issuecomment-68446913",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/56",
        "id": 68446913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDQ2OTEz",
        "user": {
            "login": "tonysneed",
            "id": 2836367,
            "node_id": "MDQ6VXNlcjI4MzYzNjc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2836367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonysneed",
            "html_url": "https://github.com/tonysneed",
            "followers_url": "https://api.github.com/users/tonysneed/followers",
            "following_url": "https://api.github.com/users/tonysneed/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonysneed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonysneed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonysneed/subscriptions",
            "organizations_url": "https://api.github.com/users/tonysneed/orgs",
            "repos_url": "https://api.github.com/users/tonysneed/repos",
            "events_url": "https://api.github.com/users/tonysneed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonysneed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-31T15:08:17Z",
        "updated_at": "2014-12-31T15:08:17Z",
        "author_association": "NONE",
        "body": "What about deploying Protobuf-net as a Portable Class Library?  Currently it targets .NET 4 and higher.  Is there something that might be incompatible with PCL's?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68558334",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-68558334",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 68558334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTU4MzM0",
        "user": {
            "login": "matthewsommer",
            "id": 6166747,
            "node_id": "MDQ6VXNlcjYxNjY3NDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6166747?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthewsommer",
            "html_url": "https://github.com/matthewsommer",
            "followers_url": "https://api.github.com/users/matthewsommer/followers",
            "following_url": "https://api.github.com/users/matthewsommer/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthewsommer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthewsommer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthewsommer/subscriptions",
            "organizations_url": "https://api.github.com/users/matthewsommer/orgs",
            "repos_url": "https://api.github.com/users/matthewsommer/repos",
            "events_url": "https://api.github.com/users/matthewsommer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthewsommer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-02T20:15:57Z",
        "updated_at": "2015-01-02T20:15:57Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/68619865",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-68619865",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 68619865,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjE5ODY1",
        "user": {
            "login": "bbarritt",
            "id": 7884102,
            "node_id": "MDQ6VXNlcjc4ODQxMDI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7884102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bbarritt",
            "html_url": "https://github.com/bbarritt",
            "followers_url": "https://api.github.com/users/bbarritt/followers",
            "following_url": "https://api.github.com/users/bbarritt/following{/other_user}",
            "gists_url": "https://api.github.com/users/bbarritt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bbarritt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bbarritt/subscriptions",
            "organizations_url": "https://api.github.com/users/bbarritt/orgs",
            "repos_url": "https://api.github.com/users/bbarritt/repos",
            "events_url": "https://api.github.com/users/bbarritt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bbarritt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-04T03:47:13Z",
        "updated_at": "2015-01-04T03:47:13Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71437618",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/65#issuecomment-71437618",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/65",
        "id": 71437618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDM3NjE4",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-26T10:02:14Z",
        "updated_at": "2015-01-26T10:02:14Z",
        "author_association": "OWNER",
        "body": "You can use `ProtoReader` to parse things manually looking at wire-type and\nfield numbers - so essentially you could _create_ that tool; something\nquite that complete is not included though.\n\nOn 26 January 2015 at 07:53, lofrank notifications@github.com wrote:\n\n> As we known, protoc.exe has a '--decode_raw' option, which can decode\n> protobuf binary without proto description file.\n> Is there any method to do this using protobuf-net?\n> \n> Thanks.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/65.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71510762",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/17#issuecomment-71510762",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/17",
        "id": 71510762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTEwNzYy",
        "user": {
            "login": "deanis74",
            "id": 8595520,
            "node_id": "MDQ6VXNlcjg1OTU1MjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8595520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deanis74",
            "html_url": "https://github.com/deanis74",
            "followers_url": "https://api.github.com/users/deanis74/followers",
            "following_url": "https://api.github.com/users/deanis74/following{/other_user}",
            "gists_url": "https://api.github.com/users/deanis74/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deanis74/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deanis74/subscriptions",
            "organizations_url": "https://api.github.com/users/deanis74/orgs",
            "repos_url": "https://api.github.com/users/deanis74/repos",
            "events_url": "https://api.github.com/users/deanis74/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deanis74/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-26T18:27:53Z",
        "updated_at": "2015-01-26T18:27:53Z",
        "author_association": "NONE",
        "body": "Mark and I discussed this issue over on StackOverflow...\n    http://stackoverflow.com/questions/25578013/protobuf-net-outofmemoryexception\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71648579",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/65#issuecomment-71648579",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/65",
        "id": 71648579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjQ4NTc5",
        "user": {
            "login": "lofrank",
            "id": 3665054,
            "node_id": "MDQ6VXNlcjM2NjUwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3665054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lofrank",
            "html_url": "https://github.com/lofrank",
            "followers_url": "https://api.github.com/users/lofrank/followers",
            "following_url": "https://api.github.com/users/lofrank/following{/other_user}",
            "gists_url": "https://api.github.com/users/lofrank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lofrank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lofrank/subscriptions",
            "organizations_url": "https://api.github.com/users/lofrank/orgs",
            "repos_url": "https://api.github.com/users/lofrank/repos",
            "events_url": "https://api.github.com/users/lofrank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lofrank/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T13:39:32Z",
        "updated_at": "2015-01-27T13:39:32Z",
        "author_association": "NONE",
        "body": "Thanks for your quick response, `ProtoReader` is enough for me.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71701807",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/50#issuecomment-71701807",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/50",
        "id": 71701807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzAxODA3",
        "user": {
            "login": "StingrayFE",
            "id": 5709054,
            "node_id": "MDQ6VXNlcjU3MDkwNTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5709054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StingrayFE",
            "html_url": "https://github.com/StingrayFE",
            "followers_url": "https://api.github.com/users/StingrayFE/followers",
            "following_url": "https://api.github.com/users/StingrayFE/following{/other_user}",
            "gists_url": "https://api.github.com/users/StingrayFE/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StingrayFE/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StingrayFE/subscriptions",
            "organizations_url": "https://api.github.com/users/StingrayFE/orgs",
            "repos_url": "https://api.github.com/users/StingrayFE/repos",
            "events_url": "https://api.github.com/users/StingrayFE/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StingrayFE/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T18:36:14Z",
        "updated_at": "2015-01-27T18:36:14Z",
        "author_association": "NONE",
        "body": "Hi, I'm trying to compile protobuf-net with your modification. But I can't find a .sln that compiles without error. I was wondering if you had a binary of your fixes or some explanation on what i need to do to be able to compile the protobuf.net master branch.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71812438",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/63#issuecomment-71812438",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/63",
        "id": 71812438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxODEyNDM4",
        "user": {
            "login": "joeyciechanowicz",
            "id": 1148637,
            "node_id": "MDQ6VXNlcjExNDg2Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joeyciechanowicz",
            "html_url": "https://github.com/joeyciechanowicz",
            "followers_url": "https://api.github.com/users/joeyciechanowicz/followers",
            "following_url": "https://api.github.com/users/joeyciechanowicz/following{/other_user}",
            "gists_url": "https://api.github.com/users/joeyciechanowicz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joeyciechanowicz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joeyciechanowicz/subscriptions",
            "organizations_url": "https://api.github.com/users/joeyciechanowicz/orgs",
            "repos_url": "https://api.github.com/users/joeyciechanowicz/repos",
            "events_url": "https://api.github.com/users/joeyciechanowicz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joeyciechanowicz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-28T10:30:47Z",
        "updated_at": "2015-01-28T10:30:47Z",
        "author_association": "NONE",
        "body": "This is also the case when downloading the zip from code.google.com and referenceing the dll in sl4.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/71929086",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/49#issuecomment-71929086",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/49",
        "id": 71929086,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTI5MDg2",
        "user": {
            "login": "BrannonKing",
            "id": 1509322,
            "node_id": "MDQ6VXNlcjE1MDkzMjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1509322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrannonKing",
            "html_url": "https://github.com/BrannonKing",
            "followers_url": "https://api.github.com/users/BrannonKing/followers",
            "following_url": "https://api.github.com/users/BrannonKing/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrannonKing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrannonKing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrannonKing/subscriptions",
            "organizations_url": "https://api.github.com/users/BrannonKing/orgs",
            "repos_url": "https://api.github.com/users/BrannonKing/repos",
            "events_url": "https://api.github.com/users/BrannonKing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrannonKing/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-28T22:21:08Z",
        "updated_at": "2015-01-28T22:21:08Z",
        "author_association": "NONE",
        "body": "I would like support for profile 259: [portable-win8+net45+wp8+wpa81]. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/72136013",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/12#issuecomment-72136013",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/12",
        "id": 72136013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTM2MDEz",
        "user": {
            "login": "mikeyoon",
            "id": 985431,
            "node_id": "MDQ6VXNlcjk4NTQzMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/985431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeyoon",
            "html_url": "https://github.com/mikeyoon",
            "followers_url": "https://api.github.com/users/mikeyoon/followers",
            "following_url": "https://api.github.com/users/mikeyoon/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeyoon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeyoon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeyoon/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeyoon/orgs",
            "repos_url": "https://api.github.com/users/mikeyoon/repos",
            "events_url": "https://api.github.com/users/mikeyoon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeyoon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-30T01:01:12Z",
        "updated_at": "2015-01-30T01:01:12Z",
        "author_association": "NONE",
        "body": "There's a static class in Serializer called NonGeneric that has this exact method.\n\nProtoBuf.Serializer.NonGeneric.Deserialize()\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/73305102",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-73305102",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 73305102,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMzA1MTAy",
        "user": {
            "login": "huwpascoe",
            "id": 1812087,
            "node_id": "MDQ6VXNlcjE4MTIwODc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1812087?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huwpascoe",
            "html_url": "https://github.com/huwpascoe",
            "followers_url": "https://api.github.com/users/huwpascoe/followers",
            "following_url": "https://api.github.com/users/huwpascoe/following{/other_user}",
            "gists_url": "https://api.github.com/users/huwpascoe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huwpascoe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huwpascoe/subscriptions",
            "organizations_url": "https://api.github.com/users/huwpascoe/orgs",
            "repos_url": "https://api.github.com/users/huwpascoe/repos",
            "events_url": "https://api.github.com/users/huwpascoe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huwpascoe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-06T20:17:04Z",
        "updated_at": "2015-02-06T20:17:04Z",
        "author_association": "NONE",
        "body": "If you're getting a message like this\n\n```\nAn unhandled exception of type 'System.InvalidOperationException' occurred in protobuf-net.dll\n\nAdditional information: Operation is not valid due to the current state of the object.\n```\n\nThen you've hit the gotcha: An index of 0 is invalid. An easy fix is to add a dummy value at [0].\n\n`new Type[] { null, typeof(A), typeof(B), ... };`\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74244988",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/63#issuecomment-74244988",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/63",
        "id": 74244988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQ0OTg4",
        "user": {
            "login": "joeyciechanowicz",
            "id": 1148637,
            "node_id": "MDQ6VXNlcjExNDg2Mzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joeyciechanowicz",
            "html_url": "https://github.com/joeyciechanowicz",
            "followers_url": "https://api.github.com/users/joeyciechanowicz/followers",
            "following_url": "https://api.github.com/users/joeyciechanowicz/following{/other_user}",
            "gists_url": "https://api.github.com/users/joeyciechanowicz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joeyciechanowicz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joeyciechanowicz/subscriptions",
            "organizations_url": "https://api.github.com/users/joeyciechanowicz/orgs",
            "repos_url": "https://api.github.com/users/joeyciechanowicz/repos",
            "events_url": "https://api.github.com/users/joeyciechanowicz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joeyciechanowicz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-13T12:13:10Z",
        "updated_at": "2015-02-13T12:13:10Z",
        "author_association": "NONE",
        "body": "You can fix this locally by grabbing the source and changing the Silverlight4 project to target Silverlight4 then build it. If you are running your own NuGet feed then you can update the .nupkg with the sl4 version (bump the version) and push it to your own feed.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74398720",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/61#issuecomment-74398720",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/61",
        "id": 74398720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mzk4NzIw",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T00:41:34Z",
        "updated_at": "2015-02-15T00:41:34Z",
        "author_association": "NONE",
        "body": "Did you set BoolProperty to true? Unless you are writing your object with a header or setting one of the properties to a non-default value, no data will be written to the stream. If you deserialize your empty stream you should get back an instance of SimpleCustomType with BoolProperty set to false.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74408205",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/61#issuecomment-74408205",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/61",
        "id": 74408205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDA4MjA1",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T08:04:21Z",
        "updated_at": "2015-02-15T08:04:21Z",
        "author_association": "OWNER",
        "body": "Zero is a valid length for protobuf data. This comes down to \"implicit zero\ndefaults\", something I which I had never put into v1; there are multiple\nways to force it to write the false (including disabling implicit zero\ndefaults), but ultimately: zero is a valid length!\nOn 8 Jan 2015 12:28, \"justkao\" notifications@github.com wrote:\n\n> I have following object type that I want to serialize using protobuf\n> v2.0.0.668:\n> \n> ```\n> [DataContract]\n> public class SimpleCustomType\n> {\n>     [DataMember(Order = 1)]\n>     public bool BoolProperty { get; set; }\n> }\n> ```\n> \n> Calling following code will not write any data to stream.\n> \n>  ProtoBuf.Serializer.Serialize(stream, new SimpleCustomType());\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/61.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74410102",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/61#issuecomment-74410102",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/61",
        "id": 74410102,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDEwMTAy",
        "user": {
            "login": "justkao",
            "id": 9829755,
            "node_id": "MDQ6VXNlcjk4Mjk3NTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9829755?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justkao",
            "html_url": "https://github.com/justkao",
            "followers_url": "https://api.github.com/users/justkao/followers",
            "following_url": "https://api.github.com/users/justkao/following{/other_user}",
            "gists_url": "https://api.github.com/users/justkao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justkao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justkao/subscriptions",
            "organizations_url": "https://api.github.com/users/justkao/orgs",
            "repos_url": "https://api.github.com/users/justkao/repos",
            "events_url": "https://api.github.com/users/justkao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justkao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T09:19:16Z",
        "updated_at": "2015-02-15T09:19:16Z",
        "author_association": "NONE",
        "body": "Thanks for help. I will handle the serialization using custom TypeModel and handle empty streams myself.\n\n``` c#\nRuntimeTypeModel model = TypeModel.Create();\nRuntimeTypeModel model.UseImplicitZeroDefaults = false;\n```\n\nDoes this mean the protobuf will never return the null value upon deserialization ?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74434643",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/24#issuecomment-74434643",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/24",
        "id": 74434643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDM0NjQz",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T20:17:12Z",
        "updated_at": "2015-02-15T20:23:02Z",
        "author_association": "NONE",
        "body": "I've created a pull request #68.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74435553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/52#issuecomment-74435553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/52",
        "id": 74435553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDM1NTUz",
        "user": {
            "login": "mdonoughe",
            "id": 17961,
            "node_id": "MDQ6VXNlcjE3OTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdonoughe",
            "html_url": "https://github.com/mdonoughe",
            "followers_url": "https://api.github.com/users/mdonoughe/followers",
            "following_url": "https://api.github.com/users/mdonoughe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdonoughe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdonoughe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdonoughe/subscriptions",
            "organizations_url": "https://api.github.com/users/mdonoughe/orgs",
            "repos_url": "https://api.github.com/users/mdonoughe/repos",
            "events_url": "https://api.github.com/users/mdonoughe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdonoughe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T20:36:51Z",
        "updated_at": "2015-02-15T20:36:51Z",
        "author_association": "NONE",
        "body": "protobuf-net thinks the default value is false, so it does not write it to the stream, so it does not have a value to set when it deserializes the stream later. You can solve this by declaring the default value: `[DefaultValue(true)]`.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74435957",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/52#issuecomment-74435957",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/52",
        "id": 74435957,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDM1OTU3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-15T20:45:19Z",
        "updated_at": "2015-02-15T20:45:19Z",
        "author_association": "OWNER",
        "body": "Just as I was reading the example, mdonoughe replies perfectly correctly. Basically: give it a clue that the default is `true`.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74485117",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/20#issuecomment-74485117",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/20",
        "id": 74485117,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDg1MTE3",
        "user": {
            "login": "sulbon",
            "id": 8775500,
            "node_id": "MDQ6VXNlcjg3NzU1MDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8775500?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sulbon",
            "html_url": "https://github.com/sulbon",
            "followers_url": "https://api.github.com/users/sulbon/followers",
            "following_url": "https://api.github.com/users/sulbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/sulbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sulbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sulbon/subscriptions",
            "organizations_url": "https://api.github.com/users/sulbon/orgs",
            "repos_url": "https://api.github.com/users/sulbon/repos",
            "events_url": "https://api.github.com/users/sulbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sulbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-16T10:08:25Z",
        "updated_at": "2015-02-28T02:28:54Z",
        "author_association": "NONE",
        "body": "[edit]I was wrong. Content removed so as not to mislead.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/74491076",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/20#issuecomment-74491076",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/20",
        "id": 74491076,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDkxMDc2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-16T10:57:20Z",
        "updated_at": "2015-02-16T10:57:20Z",
        "author_association": "OWNER",
        "body": "This is actually the correct application of reading an individual value; in\nthe protobuf wire format, streams can be directly appended. If a field is\nduplicated, it is the **last occurrence** that wins (except for sub-items,\nwhere they are merged). To do anything different would be to parse the data\nincorrectly. To read lists, you should use the separate \"items\" based\nmethod - apologies, I am on mobile and don't have the name to hand.\n\nOn 8 September 2014 at 19:46, arobincaron notifications@github.com wrote:\n\n> I am using Extensible to implement a serialized type that can handle\n> arbitrary data members. One of those members is a list of items. To set the\n> values of this members I use AppendValue and to get it's values I use\n> GetValues. Unfortunately I find that GetValues only returns the last value\n> added. By inspecting the byte stream I see that the data is there.\n> \n> Below you'll find a small sample reproducing the behavior. I would expect\n> the output of this program to be:\n> foo\n> bar\n> \n> Instead you get:\n> bar\n> \n> I believe is caused the loop in ProtoBuf.ExtensibleUtil.GetExtendedValues\n> (around line 76):\n> \n> ```\n>         while (model.TryDeserializeAuxiliaryType(reader, format, tag, type, ref value, true, false, false, false) && value != null)\n> ```\n> \n> Passing false as the \"asListItem\" parameter causes\n> TryDeserializeAuxiliaryType to return only the last value.\n> \n> class Program\n> {\n> static void Main(string[] args)\n> {\n> var x = new SampleExt();\n> x.AddData(\"foo\");\n> x.AddData(\"bar\");\n> foreach (var value in x.GetData())\n> {\n> Console.WriteLine(value);\n> }\n> }\n> \n> class SampleExt : Extensible\n> {\n>     public string[] GetData()\n>     {\n>         return GetValues<string>(this, 1).ToArray();\n>     }\n> \n> ```\n> public void AddData(string value)\n> {\n>     AppendValue(this, 1, value);\n> }\n> ```\n> \n> }\n> \n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/20.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/75509115",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-75509115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 75509115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTA5MTE1",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-23T09:08:23Z",
        "updated_at": "2015-02-23T09:08:23Z",
        "author_association": "OWNER",
        "body": "No, it hasn't been discontinued; I simply haven't had a pressing need to\nre-release it. There are, as always, some remaining bugs and feature\nrequests, but I have to balance time between multiple projects, family, and\nother commitments. I am currently actiuvely researching options for\nprotobuf-net in the vNext world, which introduces an entirely different\nruntime and BCL, which is where I expect the bulk of any protobuf-net\nefforts in the near future to be focused.\n\nMarc\n\nOn 23 February 2015 at 06:01, Scratch notifications@github.com wrote:\n\n> Hi there.\n> There's been no updates since 2013. Should we look for alternatives like\n> capnproto-net?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/72.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/78202154",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-78202154",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 78202154,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjAyMTU0",
        "user": {
            "login": "tengyifei",
            "id": 2877531,
            "node_id": "MDQ6VXNlcjI4Nzc1MzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2877531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tengyifei",
            "html_url": "https://github.com/tengyifei",
            "followers_url": "https://api.github.com/users/tengyifei/followers",
            "following_url": "https://api.github.com/users/tengyifei/following{/other_user}",
            "gists_url": "https://api.github.com/users/tengyifei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tengyifei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tengyifei/subscriptions",
            "organizations_url": "https://api.github.com/users/tengyifei/orgs",
            "repos_url": "https://api.github.com/users/tengyifei/repos",
            "events_url": "https://api.github.com/users/tengyifei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tengyifei/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-11T04:09:28Z",
        "updated_at": "2015-03-11T04:09:28Z",
        "author_association": "NONE",
        "body": ":+1: \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/78462501",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/74#issuecomment-78462501",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/74",
        "id": 78462501,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDYyNTAx",
        "user": {
            "login": "Kulgann",
            "id": 4999276,
            "node_id": "MDQ6VXNlcjQ5OTkyNzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4999276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kulgann",
            "html_url": "https://github.com/Kulgann",
            "followers_url": "https://api.github.com/users/Kulgann/followers",
            "following_url": "https://api.github.com/users/Kulgann/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kulgann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kulgann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kulgann/subscriptions",
            "organizations_url": "https://api.github.com/users/Kulgann/orgs",
            "repos_url": "https://api.github.com/users/Kulgann/repos",
            "events_url": "https://api.github.com/users/Kulgann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kulgann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-12T11:22:08Z",
        "updated_at": "2015-03-12T11:22:08Z",
        "author_association": "NONE",
        "body": "Please Note: I have already added SkipConstructor and OverWriteList to the wrapper class for the dictionary. Nothing changed.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/78696972",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/8#issuecomment-78696972",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/8",
        "id": 78696972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njk2OTcy",
        "user": {
            "login": "sflanders",
            "id": 1069601,
            "node_id": "MDQ6VXNlcjEwNjk2MDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1069601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sflanders",
            "html_url": "https://github.com/sflanders",
            "followers_url": "https://api.github.com/users/sflanders/followers",
            "following_url": "https://api.github.com/users/sflanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/sflanders/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sflanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sflanders/subscriptions",
            "organizations_url": "https://api.github.com/users/sflanders/orgs",
            "repos_url": "https://api.github.com/users/sflanders/repos",
            "events_url": "https://api.github.com/users/sflanders/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sflanders/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-12T23:41:34Z",
        "updated_at": "2015-03-12T23:41:34Z",
        "author_association": "NONE",
        "body": "That would be awesome\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/83498414",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/75#issuecomment-83498414",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/75",
        "id": 83498414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDk4NDE0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-19T10:41:47Z",
        "updated_at": "2015-03-19T10:41:47Z",
        "author_association": "OWNER",
        "body": "I can't disagree - yup, makes sense\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/86649101",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/76#issuecomment-86649101",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/76",
        "id": 86649101,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjQ5MTAx",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-26T18:04:01Z",
        "updated_at": "2015-03-26T18:04:01Z",
        "author_association": "OWNER",
        "body": "I wouldn't way no, for sure\nOn 26 Mar 2015 17:59, \"Sandor\" notifications@github.com wrote:\n\n> That would help new users a lot if there was a readme.md.\n> And that would be awesome to migrate the soon to be discontinued google\n> code wiki.\n> \n> Do you want a pull request with a readme.md proposal?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/76.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/87574498",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/50#issuecomment-87574498",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/50",
        "id": 87574498,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTc0NDk4",
        "user": {
            "login": "annakata",
            "id": 3718176,
            "node_id": "MDQ6VXNlcjM3MTgxNzY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3718176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/annakata",
            "html_url": "https://github.com/annakata",
            "followers_url": "https://api.github.com/users/annakata/followers",
            "following_url": "https://api.github.com/users/annakata/following{/other_user}",
            "gists_url": "https://api.github.com/users/annakata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/annakata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/annakata/subscriptions",
            "organizations_url": "https://api.github.com/users/annakata/orgs",
            "repos_url": "https://api.github.com/users/annakata/repos",
            "events_url": "https://api.github.com/users/annakata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/annakata/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-30T07:08:38Z",
        "updated_at": "2015-03-30T07:08:38Z",
        "author_association": "NONE",
        "body": "This seems like a critical fix for VTS which has been pending for far too long - but it's also missing tests.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/88384922",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/59#issuecomment-88384922",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/59",
        "id": 88384922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg4Mzg0OTIy",
        "user": {
            "login": "maximpashuk",
            "id": 5028850,
            "node_id": "MDQ6VXNlcjUwMjg4NTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5028850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maximpashuk",
            "html_url": "https://github.com/maximpashuk",
            "followers_url": "https://api.github.com/users/maximpashuk/followers",
            "following_url": "https://api.github.com/users/maximpashuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/maximpashuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maximpashuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maximpashuk/subscriptions",
            "organizations_url": "https://api.github.com/users/maximpashuk/orgs",
            "repos_url": "https://api.github.com/users/maximpashuk/repos",
            "events_url": "https://api.github.com/users/maximpashuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maximpashuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-01T07:57:03Z",
        "updated_at": "2015-04-01T07:57:26Z",
        "author_association": "NONE",
        "body": "Same thing for System.Type.\n\"No .proto map found for: System.Type\" exception thrown then you try to get schema.\n\nHowever, serializing\\deserializing works well, so this is not very big problem fo me.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/90417346",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-90417346",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 90417346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkwNDE3MzQ2",
        "user": {
            "login": "unalone",
            "id": 148678,
            "node_id": "MDQ6VXNlcjE0ODY3OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/148678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unalone",
            "html_url": "https://github.com/unalone",
            "followers_url": "https://api.github.com/users/unalone/followers",
            "following_url": "https://api.github.com/users/unalone/following{/other_user}",
            "gists_url": "https://api.github.com/users/unalone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unalone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unalone/subscriptions",
            "organizations_url": "https://api.github.com/users/unalone/orgs",
            "repos_url": "https://api.github.com/users/unalone/repos",
            "events_url": "https://api.github.com/users/unalone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unalone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-07T07:27:55Z",
        "updated_at": "2015-04-07T07:27:55Z",
        "author_association": "NONE",
        "body": "![](https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/94511594",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/80#issuecomment-94511594",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/80",
        "id": 94511594,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTExNTk0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T17:10:42Z",
        "updated_at": "2015-04-20T17:10:42Z",
        "author_association": "OWNER",
        "body": "Do you mean System.Runtime.Serialization.EnumMemberAttribute? If so: indeed - it is a `string`. I believe there is a `ProtoEnumAttribute` in the protobuf namespace that should do what you want.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/94587834",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/80#issuecomment-94587834",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/80",
        "id": 94587834,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTg3ODM0",
        "user": {
            "login": "mrent",
            "id": 10236735,
            "node_id": "MDQ6VXNlcjEwMjM2NzM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10236735?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrent",
            "html_url": "https://github.com/mrent",
            "followers_url": "https://api.github.com/users/mrent/followers",
            "following_url": "https://api.github.com/users/mrent/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrent/subscriptions",
            "organizations_url": "https://api.github.com/users/mrent/orgs",
            "repos_url": "https://api.github.com/users/mrent/repos",
            "events_url": "https://api.github.com/users/mrent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrent/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-20T23:00:13Z",
        "updated_at": "2015-04-20T23:00:13Z",
        "author_association": "NONE",
        "body": "Yes, the serialization EnumMember. We are trying to stick as close as possible to built-in serialization attributes, since we are supporting different serializers (ProtoBuf and JSON). So we have been using DataContract/ordered DataMembers instead of serializer specific attributes. When it comes to enum values it seems however difficult to accomplish this.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/94597506",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/80#issuecomment-94597506",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/80",
        "id": 94597506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTk3NTA2",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T00:10:39Z",
        "updated_at": "2015-04-21T00:10:39Z",
        "author_association": "OWNER",
        "body": "The current build makes no attempt to `TryParse` etc the enum values,\nbecause _in the general case_, it is not expected that they will have\nnumeric values in `EnumMemberAttribute` attributes. Dapper treats enums as\ninteger types. However, can I ask: do you actually need to do _anything_\nhere? normally, enums serialize just fine without any extra work. And there\nare ways such as `[Flags]` to get it to treat it as a raw number without\nenum handling at all. Finally, there is always runtime model configuration.\nAre any of those options useful to you?\n\nOn 21 April 2015 at 00:00, mrent notifications@github.com wrote:\n\n> Yes, the serialization EnumMember. We are trying to stick as close as\n> possible to built-in serialization attributes, since we are supporting\n> different serializers (ProtoBuf and JSON). So we have been using\n> DataContract/ordered DataMembers instead of serializer specific attributes.\n> When it comes to enum values it seems however difficult to accomplish this.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/80#issuecomment-94587834\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/96951604",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/83#issuecomment-96951604",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/83",
        "id": 96951604,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2OTUxNjA0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-28T07:03:39Z",
        "updated_at": "2015-04-28T07:03:39Z",
        "author_association": "OWNER",
        "body": "Actually, there is something you can do here **if and only if** the additional data is a direct child of the original root object. For example: if the original is:\n\n```\nFoo {\n    a = 1;\n    b = 2;\n    repeated c = 3;\n}\n```\n\nThe protobuf format is both:\n- appendable (append===merge)\n- not required to be in order\n\nThis means that you can actually drop the \"b\" part (for example) onto the wire separately from the rest, simply by appending it correctly. To append with the right headers, the easiest thing to do is to create a dummy object with just the b:\n\n```\nFooBOnly {\n    b = 2;\n}\n```\n\nNow you can:\n- serialize a Foo that doesn't include a \"b\"\n- serialize a FooBOnly with a \"b\"\n\nWhen the receiver seaerializes as Foo, it will merge both parts automatically.\n\nAny use?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/97911043",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/83#issuecomment-97911043",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/83",
        "id": 97911043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTExMDQz",
        "user": {
            "login": "brent-williams",
            "id": 1694687,
            "node_id": "MDQ6VXNlcjE2OTQ2ODc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1694687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brent-williams",
            "html_url": "https://github.com/brent-williams",
            "followers_url": "https://api.github.com/users/brent-williams/followers",
            "following_url": "https://api.github.com/users/brent-williams/following{/other_user}",
            "gists_url": "https://api.github.com/users/brent-williams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brent-williams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brent-williams/subscriptions",
            "organizations_url": "https://api.github.com/users/brent-williams/orgs",
            "repos_url": "https://api.github.com/users/brent-williams/repos",
            "events_url": "https://api.github.com/users/brent-williams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brent-williams/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T18:33:15Z",
        "updated_at": "2015-04-30T18:33:15Z",
        "author_association": "NONE",
        "body": "Holy cow that works.  I guess the sequence\n- serialize a Foo that doesn't include a \"b\"\n- serialize a FooBOnly with a \"b\"\n\nis not ambiguous (a complete Foo vs. an incomplete Foo and a FooBOnly) in that the receiver breaks the ambiguity based on how they deserialize.  Nice, I would not have discovered that one easily by myself, many thanks Marc.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/97917823",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/83#issuecomment-97917823",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/83",
        "id": 97917823,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTE3ODIz",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T18:45:33Z",
        "updated_at": "2015-04-30T18:45:33Z",
        "author_association": "OWNER",
        "body": "I see you closed and reopened this; did you still need input? If so: can\nyou clarify?\nOn 30 Apr 2015 7:33 pm, \"brentww\" notifications@github.com wrote:\n\n> Reopened #83 https://github.com/mgravell/protobuf-net/issues/83.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/83#event-294357781.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/97933630",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/83#issuecomment-97933630",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/83",
        "id": 97933630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTMzNjMw",
        "user": {
            "login": "brent-williams",
            "id": 1694687,
            "node_id": "MDQ6VXNlcjE2OTQ2ODc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1694687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brent-williams",
            "html_url": "https://github.com/brent-williams",
            "followers_url": "https://api.github.com/users/brent-williams/followers",
            "following_url": "https://api.github.com/users/brent-williams/following{/other_user}",
            "gists_url": "https://api.github.com/users/brent-williams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brent-williams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brent-williams/subscriptions",
            "organizations_url": "https://api.github.com/users/brent-williams/orgs",
            "repos_url": "https://api.github.com/users/brent-williams/repos",
            "events_url": "https://api.github.com/users/brent-williams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brent-williams/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T19:15:45Z",
        "updated_at": "2015-04-30T19:15:45Z",
        "author_association": "NONE",
        "body": "Ha no thanks I didn't know what open/close did.  Case closed!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98408218",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98408218",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98408218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDA4MjE4",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-02T22:10:33Z",
        "updated_at": "2015-05-02T22:10:33Z",
        "author_association": "OWNER",
        "body": "I don't think it is a good idea to leak the actual `ioBuffer`, because that is leased from the `BufferPool` -  basically:\n- the contents might have been changed completely by another caller by the time the recpient sees it\n- it would allow the recipient to screw up someone else's `ioBuffer`\n\nI'd be fine with adding context about the position, length, etc... but the `ioBuffer`: probably not a good idea\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98408252",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98408252",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98408252,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDA4MjUy",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-02T22:11:39Z",
        "updated_at": "2015-05-02T22:11:39Z",
        "author_association": "OWNER",
        "body": "I would also question the usefulness; it isn't like xml and json - most people won't have a clue how to interpret the data.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98409567",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98409567",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98409567,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDA5NTY3",
        "user": {
            "login": "ubikuity",
            "id": 405211,
            "node_id": "MDQ6VXNlcjQwNTIxMQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/405211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ubikuity",
            "html_url": "https://github.com/ubikuity",
            "followers_url": "https://api.github.com/users/ubikuity/followers",
            "following_url": "https://api.github.com/users/ubikuity/following{/other_user}",
            "gists_url": "https://api.github.com/users/ubikuity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ubikuity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ubikuity/subscriptions",
            "organizations_url": "https://api.github.com/users/ubikuity/orgs",
            "repos_url": "https://api.github.com/users/ubikuity/repos",
            "events_url": "https://api.github.com/users/ubikuity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ubikuity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-02T22:29:34Z",
        "updated_at": "2015-05-02T22:29:34Z",
        "author_association": "NONE",
        "body": "Ok, thanks for your feedback.\nMy idea was to have a more descriptive information about the reason of the error message \"Invalid wire-type, this usually means you have over-written a file...\".\n\nFor example, I had few times a deserializing error because the content of the proto message was: \"\\b\\0\u0012'\\n0\u0012 server.error.internalServerError\". The problem was obviously not on my side, it was an error on the remote server but it forced me to open Visual Studio to debug/analyze the source of the error.\nThat's why I wanted to add to the deserialization exception a fragment of the raw proto message which I can save into my logs.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98417799",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98417799",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98417799,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDE3Nzk5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-02T23:30:18Z",
        "updated_at": "2015-05-02T23:30:18Z",
        "author_association": "OWNER",
        "body": "the only way to safely do that would be to grab the data from the `ioBuffer` _before_ adding it to the exception, so the only thing you're adding is isolated; however, protobuf is a binary format, and _in the general case_ we should not expect it to be likely to contain text\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98460744",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98460744",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98460744,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDYwNzQ0",
        "user": {
            "login": "ubikuity",
            "id": 405211,
            "node_id": "MDQ6VXNlcjQwNTIxMQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/405211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ubikuity",
            "html_url": "https://github.com/ubikuity",
            "followers_url": "https://api.github.com/users/ubikuity/followers",
            "following_url": "https://api.github.com/users/ubikuity/following{/other_user}",
            "gists_url": "https://api.github.com/users/ubikuity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ubikuity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ubikuity/subscriptions",
            "organizations_url": "https://api.github.com/users/ubikuity/orgs",
            "repos_url": "https://api.github.com/users/ubikuity/repos",
            "events_url": "https://api.github.com/users/ubikuity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ubikuity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-03T09:41:49Z",
        "updated_at": "2015-05-03T09:41:49Z",
        "author_association": "NONE",
        "body": "Ok I changed the code to copy `ioBuffer` into a new variable and then add it to the exception. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98484480",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98484480",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98484480,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NDg0NDgw",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-03T14:02:27Z",
        "updated_at": "2015-05-03T14:02:27Z",
        "author_association": "OWNER",
        "body": "`ioBuffer` can be pretty huge, though - I would advise only copying (say) a max of 100 bytes either side of where it exploded (would need some min/max checks, etc); additionally, note that you should only look at most at the _known available_ bytes - anything past that point is potentially garbage and unrelated to the current problem: it would be unnecessarily confusing to report that as though it were part of the problem, when it isn't.\n\nFinally, in terms of allocation and large blocks, this isn't ideal - it kinda feels like this should be opt-in (although it is fine if the message says \"enable ShowBufferContentsInExceptions to view the data at the time of the error\", or something like that)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98755099",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98755099",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98755099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzU1MDk5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T15:35:42Z",
        "updated_at": "2015-05-04T15:35:42Z",
        "author_association": "OWNER",
        "body": " I don't think we can _just_ enable this - it is a breaking change, especially for people who expect the data output to be reproducible. To merge this, I would want to make this \"opt-in\", perhaps via a global setting, so that it doesn't adversely impact other users. If it was in from day zero, that would be different.\n\nThoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98755477",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98755477",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98755477,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzU1NDc3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T15:36:23Z",
        "updated_at": "2015-05-04T15:36:23Z",
        "author_association": "OWNER",
        "body": "Note: it is fine to always process during deserialization as long as the old default is preserved: it is only during serialization that we need to check a flag \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98768146",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98768146",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98768146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzY4MTQ2",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T16:09:20Z",
        "updated_at": "2015-05-04T16:09:20Z",
        "author_association": "NONE",
        "body": "Thanks for taking a look. There were two changes i made:\n\n1) Empty arrays should be deserialized as an empty array and not as null. This seems like a low risk bug fix, did you have an issue with this?\n\n2) DateTimeKind is serialized with the DateTime as a field. From your email it seemed like this was the change that most concerned you, is that correct? I'm fairly new to protobuf but on https://developers.google.com/protocol-buffers/docs/encoding it mentions that \"When the message is being decoded, the parser needs to be able to skip fields that it doesn't recognize.\". In the event where someone was using a library that wasn't the protobuf-net library (or if they were using a version of protobuf-net without this fix) wouldn't the parser just skip the DateTimeKind field and the behaviour would be as it currently is with the DateTimeKind not being serialized? \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98770027",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98770027",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98770027,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzcwMDI3",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T16:15:31Z",
        "updated_at": "2015-05-04T16:15:31Z",
        "author_association": "OWNER",
        "body": "I need to look more at the arrays - yes my main concern was the date times\n. I'm fully aware of the aim that parsers should ignore unknown fields; but\nI'm also aware that many people expect the output to remain consistent -\nand I know of a few implementations that this change would actively break\n(for example, when using the output as \"set\" values in things like redis).\nIt would also break a lot of peoples' tests that assert \"the output of this\ninput is this binary\". Hence why I feel it should be made opt-in. Does that\nmake sense?\nOn 4 May 2015 5:09 pm, \"Rob Taylor\" notifications@github.com wrote:\n\n> Thanks for taking a look. There were two changes i made:\n> \n> 1) Empty arrays should be deserialized as an empty array and not as null.\n> This seems like a low risk bug fix, did you have an issue with this?\n> \n> 2) DateTimeKind is serialized with the DateTime as a field. From your\n> email it seemed like this was the change that most concerned you, is that\n> correct? I'm fairly new to protobuf but on\n> https://developers.google.com/protocol-buffers/docs/encoding it mentions\n> that \"When the message is being decoded, the parser needs to be able to\n> skip fields that it doesn't recognize.\". In the event where someone was\n> using a library that wasn't the protobuf-net library (or if they were using\n> a version of protobuf-net without this fix) wouldn't the parser just skip\n> the DateTimeKind field and the behaviour would be as it currently is with\n> the DateTimeKind not being serialized?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98768146.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98771900",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98771900",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98771900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4NzcxOTAw",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T16:25:59Z",
        "updated_at": "2015-05-04T16:25:59Z",
        "author_association": "NONE",
        "body": "Sure that makes sense. Do you know how we'd go about implementing the opt-in option flag?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98775759",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98775759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98775759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4Nzc1NzU5",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T16:44:42Z",
        "updated_at": "2015-05-04T16:44:42Z",
        "author_association": "OWNER",
        "body": "good question; my initial thought is possibly via an instance property on\nRuntimeTypeModel, like how `AllowParseableTypes` works; however, what we'd\nprobably need to do is:\n- add a **new overload** to BclHelpers.WriteDateTime that accepts a boolean\n  to indicate whether to include the kind\n- forward the old WriteDateTime to WriteDateTime(value,dest,false);\n- optional: mark the old overload as `[Obsolete]`\n- change the DateTimeSerializer code in both Write and EmitWrite to include\n  the extra parameter (and in the case of EmitWrite: to select the correct\n  method, which could perhaps be done by making EmitWrite ignore methods\n  where `[Obsolete]` is defined)\n\nThe point of this lot is due to the ability of protobuf-net to generate\nserialization assemblies; we don't want old serialization assemblies to\nbreak with `MissingMethodException`, and we want newly generated\nserialization assemblies to respect the options that were set on their\n`RuntimeTypeModel`.\n\nThat lot probably isn't trivial, though - and depends on reflection/IL\nknowledge. I might be able to jump in and help on some of that if it is\nproblematic. I'm open to alternative implementation ideas too!\n\nOn 4 May 2015 at 17:26, Rob Taylor notifications@github.com wrote:\n\n> Sure that makes sense. Do you know how we'd go about implementing the\n> opt-in option flag?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98771900.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98811909",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98811909",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98811909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODExOTA5",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T18:52:49Z",
        "updated_at": "2015-05-04T18:52:49Z",
        "author_association": "NONE",
        "body": "OK, I've had a go. I've committed the following.\n- add a **new overload** to BclHelpers.WriteDateTime that accepts a boolean\n  to indicate whether to include the kind\n- forward the old WriteDateTime to WriteDateTime(value,dest,false);\n- optional: mark the old overload as `[Obsolete]`\n\nThe last point involving modifying the EmitWrite method in CompilerContext to ignore Obsolete methods - I can do this when using System.Reflection but I haven't come across IKVM before. I tried using Attribute.GetCustomAttribute but I couldn't see an Attribute class when I decompiled IKVM.Reflection dll...any chance you know how to get custom attributes using IKVM off the top of your head :-) ?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98827624",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98827624",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98827624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODI3NjI0",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T19:40:09Z",
        "updated_at": "2015-05-04T19:40:09Z",
        "author_association": "OWNER",
        "body": "The IKVM API is _basically_ the same - which is why it can switch a lot\njust based on \"using\" directives. I can fix that up, though - I wouldn't\nstress about it. Will review changes tomorrow.\nOn 4 May 2015 7:52 pm, \"Rob Taylor\" notifications@github.com wrote:\n\n> OK, I've had a go. I've committed the following.\n> - add a _new overload_ to BclHelpers.WriteDateTime that accepts a\n>   boolean to indicate whether to include the kind\n> - forward the old WriteDateTime to WriteDateTime(value,dest,false);\n> - optional: mark the old overload as [Obsolete]\n> \n> The last point involving modifying the EmitWrite method in CompilerContext\n> to ignore Obsolete methods - I can do this when using System.Reflection but\n> I haven't come across IKVM before. I tried using\n> Attribute.GetCustomAttribute but I couldn't see an Attribute class when I\n> decompiled IKVM.Reflection dll...any chance you know how to get custom\n> attributes using IKVM off the top of your head :-) ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98811909.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98834910",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-98834910",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 98834910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODM0OTEw",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-04T20:07:05Z",
        "updated_at": "2015-05-04T20:07:05Z",
        "author_association": "NONE",
        "body": "Ah thanks for that, I've had a go at implementing the required changes in EmitWrite. I think I'm close but have left a TODO in the \"#if FEAT_IKVM\" section. Feel free to revert and implement properly if it doesn't look close.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/98988381",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/84#issuecomment-98988381",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/84",
        "id": 98988381,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4OTg4Mzgx",
        "user": {
            "login": "ubikuity",
            "id": 405211,
            "node_id": "MDQ6VXNlcjQwNTIxMQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/405211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ubikuity",
            "html_url": "https://github.com/ubikuity",
            "followers_url": "https://api.github.com/users/ubikuity/followers",
            "following_url": "https://api.github.com/users/ubikuity/following{/other_user}",
            "gists_url": "https://api.github.com/users/ubikuity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ubikuity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ubikuity/subscriptions",
            "organizations_url": "https://api.github.com/users/ubikuity/orgs",
            "repos_url": "https://api.github.com/users/ubikuity/repos",
            "events_url": "https://api.github.com/users/ubikuity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ubikuity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-05T08:05:18Z",
        "updated_at": "2015-05-05T08:05:18Z",
        "author_association": "NONE",
        "body": "I will try to prepare an implementation following your advice.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/99537906",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-99537906",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 99537906,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTM3OTA2",
        "user": {
            "login": "polteennick",
            "id": 12278340,
            "node_id": "MDQ6VXNlcjEyMjc4MzQw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12278340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/polteennick",
            "html_url": "https://github.com/polteennick",
            "followers_url": "https://api.github.com/users/polteennick/followers",
            "following_url": "https://api.github.com/users/polteennick/following{/other_user}",
            "gists_url": "https://api.github.com/users/polteennick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/polteennick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/polteennick/subscriptions",
            "organizations_url": "https://api.github.com/users/polteennick/orgs",
            "repos_url": "https://api.github.com/users/polteennick/repos",
            "events_url": "https://api.github.com/users/polteennick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/polteennick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-06T17:00:09Z",
        "updated_at": "2015-05-06T17:00:09Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100449508",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-100449508",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 100449508,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ0OTUwOA==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T08:47:36Z",
        "updated_at": "2015-05-09T08:47:36Z",
        "author_association": "NONE",
        "body": "Marc you said this earlier.\n\n\"I don't think we can just enable this - it is a breaking change, especially for people who expect the data output to be reproducible. To merge this, I would want to make this \"opt-in\", perhaps via a global setting, so that it doesn't adversely impact other users. If it was in from day zero, that would be different.\n\nThoughts?\"\n\nThis led me to try to implement the changes in a way that would not change the serialization string (unless opt'ed in) but after thinking about it further I think the original changes are actually ok and any attempt to make the changes opt-in are unnecessary and would just add code complexity. \n\nThe whole point of protobuf if that you have the flexibility to add/remove headers without breaking things. There should be a requirement for the protobuf-net library to be able to deserialize protobuf strings serialized by older versions so I think that any change that violates this rule is a breaking change. \n\nI don't think there needs to be a requirement on the library to ensure that serialized objects via different versions produce the same protobuf string. Anyone relying on the protobuf serialization string is asking for trouble and hasn't really understood what protobuf is really about....in my opinion.\n\nI've reverted my changes back to what they were originally. If you disagree can you please create an issue and whoever picks it up can implement it in anyway they choose but I don't think I want to spend any more time than I already have.\n\nThanks,\nRob \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100451678",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-100451678",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 100451678,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ1MTY3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T08:56:17Z",
        "updated_at": "2015-05-09T08:56:17Z",
        "author_association": "OWNER",
        "body": "> There should be a requirement for the protobuf-net library to be able to deserialize protobuf strings serialized by older versions so I think that any change that violates this rule is a breaking change.\n\nYes, there is, and there absolutely must be. But that is largely unrelated to the issue. As I tried to explain, the problem is not about deserialization (indeed, I mentioned that deserialization wouldn't even need to check any config option)  but: serialization, and the effects of suddenly changing the output of the serialization process between versions. I also tried to outline several of the scenarios _that I actively know about_ that would be impacted by this. People reasonably expect the binary data to change if they add fields etc, but not **unexpectedly** from this; the path of least failure is thus to make it an opt-in configuration option.\n\nI'm sorry if this has caused you frustration, but I need to consider _all_ users.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100456895",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-100456895",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 100456895,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ1Njg5NQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T09:49:24Z",
        "updated_at": "2015-05-09T09:49:24Z",
        "author_association": "NONE",
        "body": "I think that one of the scenarios you mentioned was a redis \"set\" so basically anywhere where someone is using the serialization string as a key would consider this change as a breaking change. I'm just wondering if using the serialization string as a key is a requirement that the protobuf-net library should support. \n\nFrom my point of view the only requirement the library should support is (which I know isn't related to this issue):\n\n\"The protobuf-net library must be able to deserialize protobuf strings serialized by older versions.\" \n\nAs you mentioned the safest approach would be to have users opt-in but as a user it would be frustrating having to set various obscure options in order to have the library work correctly. I'm not a protobuf user at the moment so clearly my bias is towards the frustration of setting obscure config over having the serialization string change out from under you.\n\nAnyway hopefully this will be resolved sometime in the future, until these I'll stick with NewtonSoft.Json and my unnecessarily large messages..\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100461636",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-100461636",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 100461636,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ2MTYzNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T10:23:30Z",
        "updated_at": "2015-05-09T10:25:21Z",
        "author_association": "OWNER",
        "body": "The redis scenario was simply one of many that immediately leapt to mind re people not expecting the same data to serialise to different bytes today vs tomorrow. And technically, that would most likely be a value not a key.\n\n> From my point of view the only requirement the library should support is... \"The protobuf-net library must be able to deserialize protobuf strings serialized by older versions.\"\n\n\"don't unexpectedly change the output\" is _also_ a key requirement. And one that can be accommodated at the same time by making it a configurable option.\n\n> but as a user it would be frustrating having to set various obscure options in order to have the library work correctly\n\nI understand your point - and sure, if this were day zero, it would be great to include this from the start, but: it wasn't, and _because_ I need to support existing users, I can't just change this blindly. I think it is a posititive change, but it needs to be done with appropriate consideration for known scenarios.\n\nI'm still trying to stabilise the CoreCLR branch, but once that is in, I'll see if I can bring these things together. But if I do: there _will_ be a configuration setting.\n\nIt makes me wonder if there's some kind of \"compatibility profile\" that could be devised - heck, I'd nuke implicit zero defaults at the same time... but I wonder if rather than setting lots of individual properties, setting some kind of `CompatilibilityOption = {version}`. That is mainly rhetorical and probably isn't very thoroughly thought through yet.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100515051",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/86#issuecomment-100515051",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/86",
        "id": 100515051,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDUxNTA1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T16:40:26Z",
        "updated_at": "2015-05-09T16:40:26Z",
        "author_association": "OWNER",
        "body": "I'm confused - you've opened and closed within an hour; was this mistaken?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/100517945",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/86#issuecomment-100517945",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/86",
        "id": 100517945,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDUxNzk0NQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-09T17:04:31Z",
        "updated_at": "2015-05-09T17:04:31Z",
        "author_association": "NONE",
        "body": "It's my first pull request and i have identified some more bugs, will try\nagain tomorrow. Thanks for asking\nAm 09.05.2015 18:40 schrieb \"Marc Gravell\" notifications@github.com:\n\n> I'm confused - you've opened and closed within an hour; was this mistaken?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/101738658",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-101738658",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 101738658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTczODY1OA==",
        "user": {
            "login": "dhirschfeld",
            "id": 881019,
            "node_id": "MDQ6VXNlcjg4MTAxOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/881019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhirschfeld",
            "html_url": "https://github.com/dhirschfeld",
            "followers_url": "https://api.github.com/users/dhirschfeld/followers",
            "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
            "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
            "repos_url": "https://api.github.com/users/dhirschfeld/repos",
            "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-13T16:32:10Z",
        "updated_at": "2015-05-13T16:32:10Z",
        "author_association": "NONE",
        "body": ":+1:\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102396902",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-102396902",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 102396902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjM5NjkwMg==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-15T13:25:01Z",
        "updated_at": "2015-05-15T13:25:01Z",
        "author_association": "NONE",
        "body": "Hi,\n\nWould another option be to bump the major version up and just accept the changes as they are? I'm happy to wait and have it as an opt-in configuration setting but wondered about just using the major version instead.\n\nThanks,\nRob\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102402646",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/87#issuecomment-102402646",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/87",
        "id": 102402646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQwMjY0Ng==",
        "user": {
            "login": "hhblaze",
            "id": 486781,
            "node_id": "MDQ6VXNlcjQ4Njc4MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/486781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hhblaze",
            "html_url": "https://github.com/hhblaze",
            "followers_url": "https://api.github.com/users/hhblaze/followers",
            "following_url": "https://api.github.com/users/hhblaze/following{/other_user}",
            "gists_url": "https://api.github.com/users/hhblaze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hhblaze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hhblaze/subscriptions",
            "organizations_url": "https://api.github.com/users/hhblaze/orgs",
            "repos_url": "https://api.github.com/users/hhblaze/repos",
            "events_url": "https://api.github.com/users/hhblaze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hhblaze/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-15T13:48:54Z",
        "updated_at": "2015-05-15T13:48:54Z",
        "author_association": "NONE",
        "body": "Transaltion of an error is  \"Collection was modified the enumeration operation may not be executed\"\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102646618",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/88#issuecomment-102646618",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/88",
        "id": 102646618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0NjYxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-16T16:17:04Z",
        "updated_at": "2015-05-16T16:17:04Z",
        "author_association": "OWNER",
        "body": "Iirc this is a restriction of the universal runtime: limited reflection,\nincluding both access to non-public members. Not sure there's much I can\ndo...\nOn 16 May 2015 16:58, \"plynkus\" notifications@github.com wrote:\n\n> (Spooling up a clone here to diagnose the root cause, but filing the issue\n> before I forget to.)\n> \n> Found: Failed calls to [ProtoAfterDeserialization]-tagged methods under\n> VS2015 RC with Windows 8.1 and Windows Universal targets when tagged\n> methods are private.\n> \n> Console applications under the same toolchain still exhibit the previous\n> behavior---method invocation no matter the protection level. Migrating\n> existing code from VS2013 to the new toolchain/SDKs exposed the change here.\n> \n> A workaround for now is to change the associated methods to public.\n> Consistent behavior is of course desirable.\n> Support for private methods, as before, is better for encapsulation.\n> \n> As always, many thanks!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/88.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102646762",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/88#issuecomment-102646762",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/88",
        "id": 102646762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0Njc2Mg==",
        "user": {
            "login": "plynkus",
            "id": 8405322,
            "node_id": "MDQ6VXNlcjg0MDUzMjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8405322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plynkus",
            "html_url": "https://github.com/plynkus",
            "followers_url": "https://api.github.com/users/plynkus/followers",
            "following_url": "https://api.github.com/users/plynkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/plynkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plynkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plynkus/subscriptions",
            "organizations_url": "https://api.github.com/users/plynkus/orgs",
            "repos_url": "https://api.github.com/users/plynkus/repos",
            "events_url": "https://api.github.com/users/plynkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plynkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-16T16:20:09Z",
        "updated_at": "2015-05-16T16:20:09Z",
        "author_association": "NONE",
        "body": "That's good info, Marc...I appreciate it.  I'll go take a peek at the reflection API docs as well.  Cheers.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102650701",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/88#issuecomment-102650701",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/88",
        "id": 102650701,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY1MDcwMQ==",
        "user": {
            "login": "plynkus",
            "id": 8405322,
            "node_id": "MDQ6VXNlcjg0MDUzMjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8405322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plynkus",
            "html_url": "https://github.com/plynkus",
            "followers_url": "https://api.github.com/users/plynkus/followers",
            "following_url": "https://api.github.com/users/plynkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/plynkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plynkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plynkus/subscriptions",
            "organizations_url": "https://api.github.com/users/plynkus/orgs",
            "repos_url": "https://api.github.com/users/plynkus/repos",
            "events_url": "https://api.github.com/users/plynkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plynkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-16T16:52:21Z",
        "updated_at": "2015-05-16T16:52:21Z",
        "author_association": "NONE",
        "body": "Just augmented a little test case here to see what reflection differences there might be, found I could observe MethodInfo metadata as expected.  Doing a quick search for the same APIs in the protobuf-net code, I noticed in:\n\nhttps://github.com/mgravell/protobuf-net/blob/master/protobuf-net/Meta/MetaType.cs\n\n...in the internal ApplyDefaultBehavior() method, the development of a MemberInfo \"foundList\" naturally has different implementations for WINRT vs. not.  Of interest is that the WINRT case (which I assume must be what I am executing as Type.GetMembers() is unavailable with the 8.1 and Universal targets) differs between the non-WINRT case w.r.t. public/private---the former adds public methods only, whereas the latter includes private ones (BindingFlags.NonPublic is evident for non-enum cases).\n\nGiven that this foundList is then used below for CheckForCallback() calls, including those for the before/after serialization attributes, might this be the issue?  (and a simple remedy to change the checks in the WINRT block?)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102659570",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/88#issuecomment-102659570",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/88",
        "id": 102659570,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY1OTU3MA==",
        "user": {
            "login": "plynkus",
            "id": 8405322,
            "node_id": "MDQ6VXNlcjg0MDUzMjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8405322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plynkus",
            "html_url": "https://github.com/plynkus",
            "followers_url": "https://api.github.com/users/plynkus/followers",
            "following_url": "https://api.github.com/users/plynkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/plynkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plynkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plynkus/subscriptions",
            "organizations_url": "https://api.github.com/users/plynkus/orgs",
            "repos_url": "https://api.github.com/users/plynkus/repos",
            "events_url": "https://api.github.com/users/plynkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plynkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-16T17:53:28Z",
        "updated_at": "2015-05-16T17:53:28Z",
        "author_association": "NONE",
        "body": "Note, too, that private data members marked with the `ProtoMember` attribute also fail to deserialize on these targets---so this is probably a more generic problem than the before/after events.  A temporary change to public restores proper operation.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102699378",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/87#issuecomment-102699378",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/87",
        "id": 102699378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY5OTM3OA==",
        "user": {
            "login": "hhblaze",
            "id": 486781,
            "node_id": "MDQ6VXNlcjQ4Njc4MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/486781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hhblaze",
            "html_url": "https://github.com/hhblaze",
            "followers_url": "https://api.github.com/users/hhblaze/followers",
            "following_url": "https://api.github.com/users/hhblaze/following{/other_user}",
            "gists_url": "https://api.github.com/users/hhblaze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hhblaze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hhblaze/subscriptions",
            "organizations_url": "https://api.github.com/users/hhblaze/orgs",
            "repos_url": "https://api.github.com/users/hhblaze/repos",
            "events_url": "https://api.github.com/users/hhblaze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hhblaze/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-16T21:21:12Z",
        "updated_at": "2015-05-17T09:47:01Z",
        "author_association": "NONE",
        "body": "Hi Marc, is there a chance that you can handle this issue, may be we can discuss commercial support?\n\nParallel threads try to serialize Entity with List of obj1 where obj1 has inside serializable List of obj2. \n\nWe work with protobuf-net more then 1 year, current version 2.0.0.668 and never had problems like that before (or we didn't notice that).\n\nWe got serialization wrapper:\n\n``` C#\n        public static byte[] SerializeProtobuf(this object data)\n        {\n            byte[] bt = null;\n            using (System.IO.MemoryStream ms = new System.IO.MemoryStream())\n            {\n                ProtoBuf.Serializer.NonGeneric.Serialize(ms, data);\n                bt = ms.ToArray();\n                ms.Close();\n            }\n\n            return bt;\n        }\n```\n\nAlso, in the procedure, who is called by parallel threads, we use and deserialization and serialization of the same entity type.\n\nAll technical nuances can be supplied to you in case of your interest.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102783751",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/87#issuecomment-102783751",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/87",
        "id": 102783751,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjc4Mzc1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-17T11:09:13Z",
        "updated_at": "2015-05-17T11:09:13Z",
        "author_association": "OWNER",
        "body": "Is it possible that any thread is _changing_ the list contents at this\ntime? I suspect the problem is most likely 2 (or more) threads talking to\nthe same _instance_ - some reading (presumably serialising), and one\nwriting - perhaps doing something completely unrelated to serialization,\nlike obj.Items.Add(newItem);\n\nI can try to help, but threading issues need a lot of context, typically.\nOn 16 May 2015 10:21 pm, \"Alexey Solovyov\" notifications@github.com wrote:\n\n> Hi Marc, is there a chance that you can handle this issue, may be we can\n> discuss commercial support?\n> \n> Parallel threads try to serialize Entity with List where obj1 has inside\n> serializable List.\n> \n> We work with protobuf-net more then 1 year, current version 2.0.0.668 and\n> never had problems like that before (or we didn't notice that).\n> \n> We got serialization wrapper:\n> public static byte[] SerializeProtobuf(this object data)\n> {\n> byte[] bt = null;\n> using (System.IO.MemoryStream ms = new System.IO.MemoryStream())\n> {\n> ProtoBuf.Serializer.NonGeneric.Serialize(ms, data);\n> bt = ms.ToArray();\n> ms.Close();\n> }\n> \n> ```\n>     return bt;\n> }\n> ```\n> \n> Also, in the procedure, who is called by parallel threads, we use and\n> deserialization and serialization of the same entity type.\n> \n> All technical nuances can be supplied to you in case of your interest.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/87#issuecomment-102699378\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102826885",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/88#issuecomment-102826885",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/88",
        "id": 102826885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjgyNjg4NQ==",
        "user": {
            "login": "plynkus",
            "id": 8405322,
            "node_id": "MDQ6VXNlcjg0MDUzMjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8405322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plynkus",
            "html_url": "https://github.com/plynkus",
            "followers_url": "https://api.github.com/users/plynkus/followers",
            "following_url": "https://api.github.com/users/plynkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/plynkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plynkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plynkus/subscriptions",
            "organizations_url": "https://api.github.com/users/plynkus/orgs",
            "repos_url": "https://api.github.com/users/plynkus/repos",
            "events_url": "https://api.github.com/users/plynkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plynkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-17T17:49:20Z",
        "updated_at": "2015-05-17T17:49:20Z",
        "author_association": "NONE",
        "body": "FWIW, the local changes that resolved both these issues can be found at https://github.com/plynkus/protobuf-net/commit/e01b978defdd19d42433b7595c34532be7004ea2.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/102972476",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/87#issuecomment-102972476",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/87",
        "id": 102972476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk3MjQ3Ng==",
        "user": {
            "login": "hhblaze",
            "id": 486781,
            "node_id": "MDQ6VXNlcjQ4Njc4MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/486781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hhblaze",
            "html_url": "https://github.com/hhblaze",
            "followers_url": "https://api.github.com/users/hhblaze/followers",
            "following_url": "https://api.github.com/users/hhblaze/following{/other_user}",
            "gists_url": "https://api.github.com/users/hhblaze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hhblaze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hhblaze/subscriptions",
            "organizations_url": "https://api.github.com/users/hhblaze/orgs",
            "repos_url": "https://api.github.com/users/hhblaze/repos",
            "events_url": "https://api.github.com/users/hhblaze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hhblaze/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-18T08:30:12Z",
        "updated_at": "2015-05-18T08:30:12Z",
        "author_association": "NONE",
        "body": "Thank you Marc, looks like it was a bug in our code, where variable by ref was changed without write lock.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105305092",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-105305092",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 105305092,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTMwNTA5Mg==",
        "user": {
            "login": "mynkow",
            "id": 183151,
            "node_id": "MDQ6VXNlcjE4MzE1MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/183151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mynkow",
            "html_url": "https://github.com/mynkow",
            "followers_url": "https://api.github.com/users/mynkow/followers",
            "following_url": "https://api.github.com/users/mynkow/following{/other_user}",
            "gists_url": "https://api.github.com/users/mynkow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mynkow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mynkow/subscriptions",
            "organizations_url": "https://api.github.com/users/mynkow/orgs",
            "repos_url": "https://api.github.com/users/mynkow/repos",
            "events_url": "https://api.github.com/users/mynkow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mynkow/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-25T20:12:32Z",
        "updated_at": "2015-05-25T20:12:32Z",
        "author_association": "NONE",
        "body": "Hello @mgravell ,\nWould you share a short list of things which you want to improve and the reasons?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105305791",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-105305791",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 105305791,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTMwNTc5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-25T20:20:50Z",
        "updated_at": "2015-05-25T20:20:50Z",
        "author_association": "OWNER",
        "body": "It would be good to improve the tooling around .proto schema parsing and\ncode generation, ideally in a 100% managed way that was platform\nindependent, and with proto3 language support. CoreCLR support is\nin-progress. I'm open to feature requests beyond that.\nOn 25 May 2015 9:12 pm, \"Nikolai Mynkow\" notifications@github.com wrote:\n\n> Hello @mgravell https://github.com/mgravell ,\n> Would you share a short list of things which you want to improve and the\n> reasons?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/72#issuecomment-105305092\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105396392",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-105396392",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 105396392,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTM5NjM5Mg==",
        "user": {
            "login": "Ginurx",
            "id": 586349,
            "node_id": "MDQ6VXNlcjU4NjM0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/586349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ginurx",
            "html_url": "https://github.com/Ginurx",
            "followers_url": "https://api.github.com/users/Ginurx/followers",
            "following_url": "https://api.github.com/users/Ginurx/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ginurx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ginurx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ginurx/subscriptions",
            "organizations_url": "https://api.github.com/users/Ginurx/orgs",
            "repos_url": "https://api.github.com/users/Ginurx/repos",
            "events_url": "https://api.github.com/users/Ginurx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ginurx/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T05:14:37Z",
        "updated_at": "2015-05-26T05:14:37Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105433396",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105433396",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 105433396,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTQzMzM5Ng==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T07:57:42Z",
        "updated_at": "2015-05-26T07:57:42Z",
        "author_association": "NONE",
        "body": "This is a very important issue with no real solution (other than special-treating every single `DateTime` member).\n\nWhen your product only works with times in UTC (which is quite common) or you use libraries that do (like the MongoDB C# Driver) this can get ugly really fast.\n\nI see 3 possible solutions/workarounds:\n1. Adding the `DateTimeKind` to the message.\n2. Enabling surrogates for `DateTime`.\n3. Setting the [`EpochOrigin`](https://github.com/mgravell/protobuf-net/blob/15174a09ee3223c8805b3ef81c1288879c746dfa/protobuf-net/BclHelpers.cs#L48) (and so every `DateTime` resulting from it) to be `DateTimeKind.Utc` instead of `DateTimeKind.Unspecified` and using `ToUniversalTime` in the serialization:\n\n<b>\n\n```\ninternal static readonly DateTime EpochOrigin = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);\n```\n\nI think the `DateTimeKind.Utc` option is preferable as it's a simple change, it's the suggested way to treat epoch times ([How do you convert epoch time in C#?](http://stackoverflow.com/a/2883645/885318)), it's more predictable than `DateTimeKind.Unspecified` that changes by calling both `ToUniversalTime` **and** `ToLocalTime` and doesn't increase the message size.\n\n@mgravell, I'm willing to implement and PR any of these options, but it would be a waste if you disagree. So, do you like any of these options and are willing to accept one?\n\n---\n\nCurrently, we use reflection to switch the `EpochOrigin` value with one that has `DateTimeKind.Utc`. This works, but it's brittle and ugly.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105445268",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105445268",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 105445268,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTQ0NTI2OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T08:34:38Z",
        "updated_at": "2015-05-26T08:34:38Z",
        "author_association": "OWNER",
        "body": "I've had quite a lot of discussion on this one lately. Short recap:\n- yes, I'm basically in favor of adding the UTC kind, and wish it had been added at the origin\n- but: there is a genuine and real problem with enabling this by default, as it will change the output when people expect it to be consistent\n- but I'm all in favor of making it opt-in, disabled by default\n\nGiven that it will involve IL-emit changes, I'm tempted just to do it, to avoid the ongoing debate ;p\n\nI have _some ideas_ towards some kind of \"backlevel compatibility\" flag to avoid having to set lots of flags manually, although I'm also tempted to do some kind of assembly-level configuration, i.e.\n\n```\n [assembly:ProtoConfiguration(DateTimeKind = true, GuidsShouldNotBeBatshitCrazy = true)]\n```\n\nBut that is probably a discussion for another thread.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105476713",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105476713",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 105476713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTQ3NjcxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T10:10:55Z",
        "updated_at": "2015-05-26T10:10:55Z",
        "author_association": "OWNER",
        "body": "This is fixed next deploy: https://github.com/mgravell/protobuf-net/commit/e601b359c6ae56afc159754d29f5e7d0f05a01f5\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105476966",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105476966",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 105476966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTQ3Njk2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T10:12:31Z",
        "updated_at": "2015-05-26T10:12:31Z",
        "author_association": "OWNER",
        "body": "Bumping the major version doesn't solve the underlying problem; I have now addressed this as an **opt-in** behaviour re related issue #44 - opt-in flag available from next build\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105541238",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105541238",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 105541238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTU0MTIzOA==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T14:22:01Z",
        "updated_at": "2015-05-26T14:22:31Z",
        "author_association": "NONE",
        "body": "Thanks @mgravell. this is very good news :).\n\nDo you have any plans of pushing a new nuget version with this commit?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105547216",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105547216",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 105547216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTU0NzIxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T14:38:41Z",
        "updated_at": "2015-05-26T14:38:41Z",
        "author_association": "OWNER",
        "body": "Yes I do, but fair question.\n\nOn 26 May 2015 at 15:22, Bar Arnon notifications@github.com wrote:\n\n> Thank you. this is very good news :).\n> \n> Do you have any plans of pushing a new nuget version with this commit?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/44#issuecomment-105541238\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105572190",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105572190",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 105572190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTU3MjE5MA==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T15:45:24Z",
        "updated_at": "2015-05-26T15:45:24Z",
        "author_association": "NONE",
        "body": "Ah thanks very much that is exciting! Did that include the empty array\nserialization bug fix also - where empty arrays were being deserialized to\nnull instead of an empty array? I kind of lumped that in together with the\nDateTime issue in my original pull request.\n\nIt would be good to know when you intend to publish a version to nuget,\nI'll subscribe to the issue.\n\nThanks for resolving this :-)\n\nOn Tue, May 26, 2015 at 11:12 AM, Marc Gravell notifications@github.com\nwrote:\n\n> Bumping the major version doesn't solve the underlying problem; I have now\n> addressed this as an _opt-in_ behaviour re related issue #44\n> https://github.com/mgravell/protobuf-net/issues/44 - opt-in flag\n> available from next build\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105476966.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105599639",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105599639",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 105599639,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTU5OTYzOQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T16:48:35Z",
        "updated_at": "2015-05-26T16:48:35Z",
        "author_association": "NONE",
        "body": "FYI,\n\nIt looks like nested empty arrays are still be deserialized as null.\n\n[Test]\n        public void InnerEmptyArrayShouldNotBeDeserializedAsNull()\n        {\n            using (MemoryStream ms = new MemoryStream())\n            {\n                var instance = new[]\n                {\n                    new Test\n                    {\n                        tests = new int[0]\n                    },\n                };\n\n```\n            Serializer.Serialize(ms, instance);\n\n            ms.Flush();\n            ms.Position = 0;\n            var obj = Serializer.Deserialize<Test[]>(ms);\n\n            Assert.That(obj[0].tests, Is.Not.Null);\n        }\n    }\n```\n\nOn Tue, May 26, 2015 at 4:45 PM, Rob Taylor rob.taylor.21@gmail.com wrote:\n\n> Ah thanks very much that is exciting! Did that include the empty array\n> serialization bug fix also - where empty arrays were being deserialized to\n> null instead of an empty array? I kind of lumped that in together with the\n> DateTime issue in my original pull request.\n> \n> It would be good to know when you intend to publish a version to nuget,\n> I'll subscribe to the issue.\n> \n> Thanks for resolving this :-)\n> \n> On Tue, May 26, 2015 at 11:12 AM, Marc Gravell notifications@github.com\n> wrote:\n> \n> > Bumping the major version doesn't solve the underlying problem; I have\n> > now addressed this as an _opt-in_ behaviour re related issue #44\n> > https://github.com/mgravell/protobuf-net/issues/44 - opt-in flag\n> > available from next build\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105476966\n> > .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/105613694",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105613694",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/82",
        "id": 105613694,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTYxMzY5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T17:35:33Z",
        "updated_at": "2015-05-26T17:35:33Z",
        "author_association": "OWNER",
        "body": "Yep, I still need to look at that part - and a few other things (unrelated)\nbefore I package and deploy.\nOn 26 May 2015 17:48, \"Rob Taylor\" notifications@github.com wrote:\n\n> FYI,\n> \n> It looks like nested empty arrays are still be deserialized as null.\n> \n> [Test]\n> public void InnerEmptyArrayShouldNotBeDeserializedAsNull()\n> {\n> using (MemoryStream ms = new MemoryStream())\n> {\n> var instance = new[]\n> {\n> new Test\n> {\n> tests = new int[0]\n> },\n> };\n> \n> Serializer.Serialize(ms, instance);\n> \n> ms.Flush();\n> ms.Position = 0;\n> var obj = Serializer.Deserialize<Test[]>(ms);\n> \n> Assert.That(obj[0].tests, Is.Not.Null);\n> }\n> }\n> \n> On Tue, May 26, 2015 at 4:45 PM, Rob Taylor rob.taylor.21@gmail.com\n> wrote:\n> \n> > Ah thanks very much that is exciting! Did that include the empty array\n> > serialization bug fix also - where empty arrays were being deserialized\n> > to\n> > null instead of an empty array? I kind of lumped that in together with\n> > the\n> > DateTime issue in my original pull request.\n> > \n> > It would be good to know when you intend to publish a version to nuget,\n> > I'll subscribe to the issue.\n> > \n> > Thanks for resolving this :-)\n> > \n> > On Tue, May 26, 2015 at 11:12 AM, Marc Gravell <notifications@github.com\n> > \n> > wrote:\n> > \n> > > Bumping the major version doesn't solve the underlying problem; I have\n> > > now addressed this as an _opt-in_ behaviour re related issue #44\n> > > https://github.com/mgravell/protobuf-net/issues/44 - opt-in flag\n> > > available from next build\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > <\n> > > https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105476966>\n> > > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/pull/82#issuecomment-105599639.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107239300",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/89#issuecomment-107239300",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/89",
        "id": 107239300,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzIzOTMwMA==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-31T19:37:01Z",
        "updated_at": "2015-05-31T19:37:01Z",
        "author_association": "NONE",
        "body": "@russcam The package is definitely not up to date with master as the last nuget update was in 2013 and there have been some commits since then.\n\nHowever in issue #44 marc said he plans on releasing an update soon.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107382923",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/89#issuecomment-107382923",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/89",
        "id": 107382923,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzM4MjkyMw==",
        "user": {
            "login": "russcam",
            "id": 208231,
            "node_id": "MDQ6VXNlcjIwODIzMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/208231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russcam",
            "html_url": "https://github.com/russcam",
            "followers_url": "https://api.github.com/users/russcam/followers",
            "following_url": "https://api.github.com/users/russcam/following{/other_user}",
            "gists_url": "https://api.github.com/users/russcam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/russcam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/russcam/subscriptions",
            "organizations_url": "https://api.github.com/users/russcam/orgs",
            "repos_url": "https://api.github.com/users/russcam/repos",
            "events_url": "https://api.github.com/users/russcam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/russcam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-01T09:44:20Z",
        "updated_at": "2015-06-01T09:44:20Z",
        "author_association": "NONE",
        "body": "@i3arnon ok, if Marc has a release in the pipeline, I'll hold tight for the moment.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107771706",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107771706",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107771706,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzc3MTcwNg==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T01:55:55Z",
        "updated_at": "2015-06-02T10:38:23Z",
        "author_association": "NONE",
        "body": "Dear R2D221, if you wish your library to be as inclusive as possible i.e. be as available as possible you should target:\n1. .NET 4.0\n2. Windows 8\n3. Windows Phone Silverlight 8\n4. Silverlight 5\n5. All xamarins\n(do no include Windows Phone 8.1)\nIf you do that your library will successfully accept a reference to protobuf-net (portable) directly or via NuGet. The main problem here is the support for Windows Phone 8.1 which is too different from all other platforms.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107910218",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107910218",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107910218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzkxMDIxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T10:23:34Z",
        "updated_at": "2015-06-02T10:23:34Z",
        "author_association": "OWNER",
        "body": "That's fine, but:\n- I'm not a Windows Phone developer\n- I'm not a Silverlight developer\n- I'm not a Windows Metro / RT developer\n- I'm not a xamarin developer\n- and why the prejudice against Phone 8.1?\n\nPut simply: I lack the tools and time to configure builds for, and support,\na wide range of frameworks that _I otherwise wouldn't touch_.\n\nI'd be more than happy if someone else wanted to put build packages\ntogether for those frameworks, test those packages, etc - but it isn't\nsomething that just happens magically, and despite all the rumours it isn't\na case of clicking 3 buttons in the IDE...\n\nOn 2 June 2015 at 02:55, ezverev notifications@github.com wrote:\n\n> If you wish your library to be as inclusive as possible i.e. be as\n> available as possible you should target:\n> 1. .NET 4.0\n> 2. Windows 8\n> 3. Windows Phone Silverlight (last version)\n> 4. Silverlight 5\n> 5. All xamarins\n> (do no include Windows Phone 8.1)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107771706\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107910966",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107910966",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107910966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzkxMDk2Ng==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T10:28:37Z",
        "updated_at": "2015-06-02T10:33:37Z",
        "author_association": "NONE",
        "body": "Oh my, Marc.\nMy reply was not for you but for R2D221. I was telling HIM how to make HIS PCL more including. Yours is pretty fine/all right/super-puper/mega-fun. Pay no attention please :)\nI will edit my previous comment to make it more clear.\nI am sorry to bother you.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107911819",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107911819",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107911819,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzkxMTgxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T10:34:33Z",
        "updated_at": "2015-06-02T10:37:05Z",
        "author_association": "OWNER",
        "body": "Ah, sorry; my bad; I misunderstood; this just pushes the issue up one\nlevel; it is **really, really hard** to support that range of platforms (\nportable-net45+win+wpa81+wp80+MonoAndroid10+xamarinios10+MonoTouch10)\nconcurrently\nand efficiently - they have massively different reflection and\nmeta-programming APIs, and the PCL subset / intersection is next to\nuseless. It can be _done_, but that doesn't mean it is a _good idea_.\n\nAlso: add to my list of \"frameworks that I don't use\": ios, mono-android and mono-touch.\n\nIf I was full time supporting this library as a commercial project: sure, I'd pick those up in a heartbeat.\n\nOn 2 June 2015 at 11:28, ezverev notifications@github.com wrote:\n\n> Oh my, Marc.\n> My reply was not for you but for R2D221. I was telling HIM how to make HIS\n> PCL more including. Yours is pretty fine/all right/super-puper/mega-fun.\n> Pay no attention please :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107910966\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107914967",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107914967",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107914967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzkxNDk2Nw==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T10:52:43Z",
        "updated_at": "2015-06-02T10:53:25Z",
        "author_association": "NONE",
        "body": "Offtopic.\n\nMarc,\n\nMay I let you know that MonoAndroid10+xamarinios10+MonoTouch10 are very close to wp80 and are supported by your library. As a matter of fact I was pushed to use your library when I started developing for Xamarin.Android. The problem is the DataContractSerializer (that is meant to be a cross-platform WCF/WebServices serializer) failed i.e. it serializes Dictionaries differently on Microsoft platforms and on Xamarin (Android/iOS). May be this is a Xamarin failure, I don't know. Fact is: for those who adopt Xamarin, protobuf-net is the cure. You may not use that framework but you do help it a great deal.\n\nBig thanks!\nP.S. I would not think a second to subscribe for material support of what you do. Actually I spent some time searching for a way but did not find any. If there is one please give me a hint.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107916332",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107916332",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107916332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzkxNjMzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T11:02:35Z",
        "updated_at": "2015-06-02T11:02:35Z",
        "author_association": "OWNER",
        "body": "That sounds like it may be only a small amount of work, but it isn't\nsomething I currently have setup locally to be able to target; I will need\nto investigate what exact target frameworks, nuget targets, etc I need to\nadd. It _might_ get better with DNX for multi-target builds (I have a\nbranch exploring that), but: the current beta DNX tools cannot successfully\nbuild the existing libs (even for core .NET) due to strong naming. I'll\nhave to see what I can do with (yet another) csproj...\n\nOn 2 June 2015 at 11:52, ezverev notifications@github.com wrote:\n\n> Offtopic.\n> \n> Marc,\n> \n> May I let you know that MonoAndroid10+xamarinios10+MonoTouch10 are very\n> close to wp80 and are supported by your library. As a matter of fact I was\n> pushed to use your library when I started developing for Xamarin.Android.\n> The problem is the DataContractSerializer (that is meant to be a\n> cross-platform WCF/WebServices serializer) failed i.e. it serializes\n> Dictionaries differently on Microsoft platforms and on Xamarin\n> (Android/iOS). May be this is a Xamarin failure, I don't know. Fact is: for\n> those who adopt Xamarin protobuf-net is the cure. You may not use that\n> framework but you do help it a great deal.\n> \n> Big thanks!\n> P.S. I would not think a second to subscribe for material support of what\n> you do. Actually I spent some time searching for a way but did not find\n> any. If there is one please give me a hint.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107914967\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/107956654",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-107956654",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 107956654,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzk1NjY1NA==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T13:42:25Z",
        "updated_at": "2015-06-02T13:44:28Z",
        "author_association": "NONE",
        "body": "I fear I did not make myself clear...again.\nProtobuf-net already targets `MonoAndroid10+xamarinios10+MonoTouch10`, may be unwillingly but it does. NuGet successfully applies to PCL projects targeting `Xamarin Forms`. It looks like `MonoAndroid10+xamarinios10+MonoTouch10` metadata states that these frameworks are equivalent to `win+wp80` (Windows Store 8, tablet/desktop + phone). Mind you, `NOT win81+wp81`, as you mentioned, these are targeting WinRT and its native compilation which is too much different.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/111818076",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-111818076",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 111818076,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgxODA3Ng==",
        "user": {
            "login": "michaeldolinsky",
            "id": 3001559,
            "node_id": "MDQ6VXNlcjMwMDE1NTk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3001559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaeldolinsky",
            "html_url": "https://github.com/michaeldolinsky",
            "followers_url": "https://api.github.com/users/michaeldolinsky/followers",
            "following_url": "https://api.github.com/users/michaeldolinsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaeldolinsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaeldolinsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaeldolinsky/subscriptions",
            "organizations_url": "https://api.github.com/users/michaeldolinsky/orgs",
            "repos_url": "https://api.github.com/users/michaeldolinsky/repos",
            "events_url": "https://api.github.com/users/michaeldolinsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaeldolinsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-14T12:08:58Z",
        "updated_at": "2015-06-14T12:08:58Z",
        "author_association": "NONE",
        "body": "Hey @mgravell,\nAre there any updates about the nuget update?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/111840595",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/93#issuecomment-111840595",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/93",
        "id": 111840595,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg0MDU5NQ==",
        "user": {
            "login": "scottparkes",
            "id": 9567083,
            "node_id": "MDQ6VXNlcjk1NjcwODM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9567083?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottparkes",
            "html_url": "https://github.com/scottparkes",
            "followers_url": "https://api.github.com/users/scottparkes/followers",
            "following_url": "https://api.github.com/users/scottparkes/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottparkes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottparkes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottparkes/subscriptions",
            "organizations_url": "https://api.github.com/users/scottparkes/orgs",
            "repos_url": "https://api.github.com/users/scottparkes/repos",
            "events_url": "https://api.github.com/users/scottparkes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottparkes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-14T15:12:44Z",
        "updated_at": "2015-06-14T15:12:44Z",
        "author_association": "NONE",
        "body": "I'm going to close this - noticed some cases in the Behavior that need more tests.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/111892281",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-111892281",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 111892281,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg5MjI4MQ==",
        "user": {
            "login": "BlueRaja",
            "id": 650323,
            "node_id": "MDQ6VXNlcjY1MDMyMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/650323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BlueRaja",
            "html_url": "https://github.com/BlueRaja",
            "followers_url": "https://api.github.com/users/BlueRaja/followers",
            "following_url": "https://api.github.com/users/BlueRaja/following{/other_user}",
            "gists_url": "https://api.github.com/users/BlueRaja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BlueRaja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BlueRaja/subscriptions",
            "organizations_url": "https://api.github.com/users/BlueRaja/orgs",
            "repos_url": "https://api.github.com/users/BlueRaja/repos",
            "events_url": "https://api.github.com/users/BlueRaja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BlueRaja/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-15T00:39:03Z",
        "updated_at": "2015-06-15T00:39:03Z",
        "author_association": "NONE",
        "body": "[The project homepage](https://code.google.com/p/protobuf-net/) seems to imply that v2 is supported on all those platforms.  Is this not the case?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/113436435",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-113436435",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 113436435,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMzQzNjQzNQ==",
        "user": {
            "login": "frarees",
            "id": 220249,
            "node_id": "MDQ6VXNlcjIyMDI0OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/220249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frarees",
            "html_url": "https://github.com/frarees",
            "followers_url": "https://api.github.com/users/frarees/followers",
            "following_url": "https://api.github.com/users/frarees/following{/other_user}",
            "gists_url": "https://api.github.com/users/frarees/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frarees/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frarees/subscriptions",
            "organizations_url": "https://api.github.com/users/frarees/orgs",
            "repos_url": "https://api.github.com/users/frarees/repos",
            "events_url": "https://api.github.com/users/frarees/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frarees/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-19T08:49:18Z",
        "updated_at": "2015-06-19T08:49:18Z",
        "author_association": "NONE",
        "body": "@mgravell +1 for NuGet update with those changes. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/113592516",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/96#issuecomment-113592516",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/96",
        "id": 113592516,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMzU5MjUxNg==",
        "user": {
            "login": "rushfrisby",
            "id": 574729,
            "node_id": "MDQ6VXNlcjU3NDcyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rushfrisby",
            "html_url": "https://github.com/rushfrisby",
            "followers_url": "https://api.github.com/users/rushfrisby/followers",
            "following_url": "https://api.github.com/users/rushfrisby/following{/other_user}",
            "gists_url": "https://api.github.com/users/rushfrisby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rushfrisby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rushfrisby/subscriptions",
            "organizations_url": "https://api.github.com/users/rushfrisby/orgs",
            "repos_url": "https://api.github.com/users/rushfrisby/repos",
            "events_url": "https://api.github.com/users/rushfrisby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rushfrisby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-19T18:04:07Z",
        "updated_at": "2015-06-19T18:07:21Z",
        "author_association": "NONE",
        "body": "I also tried adding [ProtoIgnore] on top of the [DataMember] attribute which didn't work either. I thought this might just skip over updating the typemodel info and still serialize the property but that's not the case. Maybe there could be a new attribute added that does this?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/116616958",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/56#issuecomment-116616958",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/56",
        "id": 116616958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYxNjk1OA==",
        "user": {
            "login": "Flavien",
            "id": 296540,
            "node_id": "MDQ6VXNlcjI5NjU0MA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/296540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Flavien",
            "html_url": "https://github.com/Flavien",
            "followers_url": "https://api.github.com/users/Flavien/followers",
            "following_url": "https://api.github.com/users/Flavien/following{/other_user}",
            "gists_url": "https://api.github.com/users/Flavien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Flavien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Flavien/subscriptions",
            "organizations_url": "https://api.github.com/users/Flavien/orgs",
            "repos_url": "https://api.github.com/users/Flavien/repos",
            "events_url": "https://api.github.com/users/Flavien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Flavien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-29T11:19:52Z",
        "updated_at": "2015-06-29T11:19:52Z",
        "author_association": "NONE",
        "body": "I would also love the NuGet package to be compatible with .NET Core. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/120759655",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/100#issuecomment-120759655",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/100",
        "id": 120759655,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDc1OTY1NQ==",
        "user": {
            "login": "Arakade",
            "id": 1194266,
            "node_id": "MDQ6VXNlcjExOTQyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1194266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arakade",
            "html_url": "https://github.com/Arakade",
            "followers_url": "https://api.github.com/users/Arakade/followers",
            "following_url": "https://api.github.com/users/Arakade/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arakade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arakade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arakade/subscriptions",
            "organizations_url": "https://api.github.com/users/Arakade/orgs",
            "repos_url": "https://api.github.com/users/Arakade/repos",
            "events_url": "https://api.github.com/users/Arakade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arakade/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-12T20:30:02Z",
        "updated_at": "2015-07-12T20:30:02Z",
        "author_association": "NONE",
        "body": "Is this specific to contract-first?  Would using references solve? (I'd expect)\nCan't one specify AsReference or AsReferenceDefault when using contract?\nHTH\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/120777872",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/100#issuecomment-120777872",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/100",
        "id": 120777872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDc3Nzg3Mg==",
        "user": {
            "login": "Zhouxing-Su",
            "id": 5787025,
            "node_id": "MDQ6VXNlcjU3ODcwMjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5787025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zhouxing-Su",
            "html_url": "https://github.com/Zhouxing-Su",
            "followers_url": "https://api.github.com/users/Zhouxing-Su/followers",
            "following_url": "https://api.github.com/users/Zhouxing-Su/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zhouxing-Su/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zhouxing-Su/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zhouxing-Su/subscriptions",
            "organizations_url": "https://api.github.com/users/Zhouxing-Su/orgs",
            "repos_url": "https://api.github.com/users/Zhouxing-Su/repos",
            "events_url": "https://api.github.com/users/Zhouxing-Su/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zhouxing-Su/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-13T00:59:37Z",
        "updated_at": "2015-07-13T00:59:37Z",
        "author_association": "NONE",
        "body": "sorry for that...\nI skipped the \"Attribute\" wiki page...  \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/121484157",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/98#issuecomment-121484157",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/98",
        "id": 121484157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTQ4NDE1Nw==",
        "user": {
            "login": "langboost",
            "id": 11765949,
            "node_id": "MDQ6VXNlcjExNzY1OTQ5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11765949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/langboost",
            "html_url": "https://github.com/langboost",
            "followers_url": "https://api.github.com/users/langboost/followers",
            "following_url": "https://api.github.com/users/langboost/following{/other_user}",
            "gists_url": "https://api.github.com/users/langboost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/langboost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/langboost/subscriptions",
            "organizations_url": "https://api.github.com/users/langboost/orgs",
            "repos_url": "https://api.github.com/users/langboost/repos",
            "events_url": "https://api.github.com/users/langboost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/langboost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-15T04:21:43Z",
        "updated_at": "2015-07-15T04:21:43Z",
        "author_association": "NONE",
        "body": "How did you use this from a Universal Windows Project? Does NuGet work on Windows 10, VS 2015 Tech Preview, or did you work around this somehow?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/121645352",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/98#issuecomment-121645352",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/98",
        "id": 121645352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTY0NTM1Mg==",
        "user": {
            "login": "SimonPStevens",
            "id": 411131,
            "node_id": "MDQ6VXNlcjQxMTEzMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/411131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimonPStevens",
            "html_url": "https://github.com/SimonPStevens",
            "followers_url": "https://api.github.com/users/SimonPStevens/followers",
            "following_url": "https://api.github.com/users/SimonPStevens/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimonPStevens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimonPStevens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimonPStevens/subscriptions",
            "organizations_url": "https://api.github.com/users/SimonPStevens/orgs",
            "repos_url": "https://api.github.com/users/SimonPStevens/repos",
            "events_url": "https://api.github.com/users/SimonPStevens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimonPStevens/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-15T15:05:02Z",
        "updated_at": "2015-07-15T15:05:02Z",
        "author_association": "NONE",
        "body": "@langboost I didn't use NuGet. I just built the PCL project and referenced it from my UWP manually.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/121771529",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/92#issuecomment-121771529",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/92",
        "id": 121771529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTc3MTUyOQ==",
        "user": {
            "login": "itadapter",
            "id": 2273574,
            "node_id": "MDQ6VXNlcjIyNzM1NzQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2273574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itadapter",
            "html_url": "https://github.com/itadapter",
            "followers_url": "https://api.github.com/users/itadapter/followers",
            "following_url": "https://api.github.com/users/itadapter/following{/other_user}",
            "gists_url": "https://api.github.com/users/itadapter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itadapter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itadapter/subscriptions",
            "organizations_url": "https://api.github.com/users/itadapter/orgs",
            "repos_url": "https://api.github.com/users/itadapter/repos",
            "events_url": "https://api.github.com/users/itadapter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itadapter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-15T22:55:46Z",
        "updated_at": "2015-07-15T22:55:46Z",
        "author_association": "NONE",
        "body": "This has been superseded by this:\n https://github.com/aumcode/serbench,\nnamely ProtoBuff is here:\n https://github.com/aumcode/serbench/blob/master/Source/Serbench.Specimens/Serializers/ProtoBufSerializer.cs\n\nBenchmarks (including Protobuf):\n\nhttp://aumcode.github.io/serbench/\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/126018125",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-126018125",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 126018125,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjAxODEyNQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-29T16:59:28Z",
        "updated_at": "2015-07-29T16:59:28Z",
        "author_association": "NONE",
        "body": "hey, was a nuget update ever made that included this fix?\n\nThanks,\nRob\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/126018766",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-126018766",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 126018766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjAxODc2Ng==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-29T17:01:16Z",
        "updated_at": "2015-07-29T17:01:16Z",
        "author_association": "NONE",
        "body": "@roberttaylor26 not yet.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/131120805",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/106#issuecomment-131120805",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/106",
        "id": 131120805,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTEyMDgwNQ==",
        "user": {
            "login": "belm0",
            "id": 1708631,
            "node_id": "MDQ6VXNlcjE3MDg2MzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1708631?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/belm0",
            "html_url": "https://github.com/belm0",
            "followers_url": "https://api.github.com/users/belm0/followers",
            "following_url": "https://api.github.com/users/belm0/following{/other_user}",
            "gists_url": "https://api.github.com/users/belm0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/belm0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/belm0/subscriptions",
            "organizations_url": "https://api.github.com/users/belm0/orgs",
            "repos_url": "https://api.github.com/users/belm0/repos",
            "events_url": "https://api.github.com/users/belm0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/belm0/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-14T14:24:10Z",
        "updated_at": "2015-08-14T14:24:10Z",
        "author_association": "NONE",
        "body": "I take back what I said about the deserialization side not being a problem.  ProtoReader.ReadSingle etc. use BitConverter.GetBytes, yielding a temporary array on the heap.\n\nhttps://github.com/mgravell/protobuf-net/blob/e601b359c6ae56afc159754d29f5e7d0f05a01f5/protobuf-net/ProtoReader.cs#L845\n\nUnity users should really, really not be using FEAT_SAFE.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/134107621",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/109#issuecomment-134107621",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/109",
        "id": 134107621,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDEwNzYyMQ==",
        "user": {
            "login": "vk37",
            "id": 10302177,
            "node_id": "MDQ6VXNlcjEwMzAyMTc3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10302177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vk37",
            "html_url": "https://github.com/vk37",
            "followers_url": "https://api.github.com/users/vk37/followers",
            "following_url": "https://api.github.com/users/vk37/following{/other_user}",
            "gists_url": "https://api.github.com/users/vk37/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vk37/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vk37/subscriptions",
            "organizations_url": "https://api.github.com/users/vk37/orgs",
            "repos_url": "https://api.github.com/users/vk37/repos",
            "events_url": "https://api.github.com/users/vk37/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vk37/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-24T09:23:19Z",
        "updated_at": "2015-08-24T09:23:19Z",
        "author_association": "NONE",
        "body": "And here:\n![image](https://cloud.githubusercontent.com/assets/10302177/9436850/e4f908a6-4a5a-11e5-92da-5eb241bd7258.png)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/135121515",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/77#issuecomment-135121515",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/77",
        "id": 135121515,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTEyMTUxNQ==",
        "user": {
            "login": "ikopylov",
            "id": 10262823,
            "node_id": "MDQ6VXNlcjEwMjYyODIz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10262823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ikopylov",
            "html_url": "https://github.com/ikopylov",
            "followers_url": "https://api.github.com/users/ikopylov/followers",
            "following_url": "https://api.github.com/users/ikopylov/following{/other_user}",
            "gists_url": "https://api.github.com/users/ikopylov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ikopylov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ikopylov/subscriptions",
            "organizations_url": "https://api.github.com/users/ikopylov/orgs",
            "repos_url": "https://api.github.com/users/ikopylov/repos",
            "events_url": "https://api.github.com/users/ikopylov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ikopylov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-26T17:48:19Z",
        "updated_at": "2015-08-26T17:48:19Z",
        "author_association": "NONE",
        "body": ":+1: \n\nWith large objects ProtoWriter reallocate inner _ioBuffer_ many times. This leads to a high memory traffic. \n\nSo it would be great to reuse ProtoWriter with same _ioBuffer_ inside or give a possibility to pass an external buffer through the constructor.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/135141334",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/77#issuecomment-135141334",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/77",
        "id": 135141334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTE0MTMzNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-26T19:03:48Z",
        "updated_at": "2015-08-26T19:03:48Z",
        "author_association": "OWNER",
        "body": "IIRC that is already pooled and reused quite aggressively... passing one in\nis awkward because you don't know the sizes in advance. I'm open to ideas,\nbut it isn't trivial.\n\nMarc\n\nOn 26 August 2015 at 18:48, ikopylov notifications@github.com wrote:\n\n> [image: :+1:]\n> \n> With large objects ProtoWriter reallocate inner _ioBuffer_ many times.\n> This leads to a high memory traffic.\n> \n> So it would be great to reuse ProtoWriter with same _ioBuffer_ inside or\n> give a possibility to pass an external buffer through the constructor.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/77#issuecomment-135121515\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/135398949",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/77#issuecomment-135398949",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/77",
        "id": 135398949,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTM5ODk0OQ==",
        "user": {
            "login": "ikopylov",
            "id": 10262823,
            "node_id": "MDQ6VXNlcjEwMjYyODIz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10262823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ikopylov",
            "html_url": "https://github.com/ikopylov",
            "followers_url": "https://api.github.com/users/ikopylov/followers",
            "following_url": "https://api.github.com/users/ikopylov/following{/other_user}",
            "gists_url": "https://api.github.com/users/ikopylov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ikopylov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ikopylov/subscriptions",
            "organizations_url": "https://api.github.com/users/ikopylov/orgs",
            "repos_url": "https://api.github.com/users/ikopylov/repos",
            "events_url": "https://api.github.com/users/ikopylov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ikopylov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-27T11:54:08Z",
        "updated_at": "2015-08-27T11:54:08Z",
        "author_association": "NONE",
        "body": "> IIRC that is already pooled and reused quite aggressively...\n\nYes, it is pooled. But the size of _ioBuffer_ in pool is restricted to 1024. It is good for small objects, but not work for large.\n\n> passing one in is awkward because you don't know the sizes in advance.\n\nActually, in many cases the upper limit of the _ioBuffer_ size can be easily estimated.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/136397013",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-136397013",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 136397013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjM5NzAxMw==",
        "user": {
            "login": "sawdiggy",
            "id": 10037746,
            "node_id": "MDQ6VXNlcjEwMDM3NzQ2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10037746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sawdiggy",
            "html_url": "https://github.com/sawdiggy",
            "followers_url": "https://api.github.com/users/sawdiggy/followers",
            "following_url": "https://api.github.com/users/sawdiggy/following{/other_user}",
            "gists_url": "https://api.github.com/users/sawdiggy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sawdiggy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sawdiggy/subscriptions",
            "organizations_url": "https://api.github.com/users/sawdiggy/orgs",
            "repos_url": "https://api.github.com/users/sawdiggy/repos",
            "events_url": "https://api.github.com/users/sawdiggy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sawdiggy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-31T14:55:02Z",
        "updated_at": "2015-08-31T14:55:02Z",
        "author_association": "NONE",
        "body": "This issue is pretty old, is it scheduled to be added?  \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/136399730",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-136399730",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 136399730,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjM5OTczMA==",
        "user": {
            "login": "jtcalhoun",
            "id": 9420,
            "node_id": "MDQ6VXNlcjk0MjA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/9420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jtcalhoun",
            "html_url": "https://github.com/jtcalhoun",
            "followers_url": "https://api.github.com/users/jtcalhoun/followers",
            "following_url": "https://api.github.com/users/jtcalhoun/following{/other_user}",
            "gists_url": "https://api.github.com/users/jtcalhoun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jtcalhoun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jtcalhoun/subscriptions",
            "organizations_url": "https://api.github.com/users/jtcalhoun/orgs",
            "repos_url": "https://api.github.com/users/jtcalhoun/repos",
            "events_url": "https://api.github.com/users/jtcalhoun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jtcalhoun/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-31T15:03:39Z",
        "updated_at": "2015-08-31T15:03:39Z",
        "author_association": "NONE",
        "body": "+1\n\nIssue since 2011:\n- https://code.google.com/p/protobuf-net/issues/detail?id=254\n- http://stackoverflow.com/questions/8250734/protobuf-net-failing-to-deserialize-readonlycollection\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/136405854",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-136405854",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 136405854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjQwNTg1NA==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-31T15:27:31Z",
        "updated_at": "2015-08-31T15:27:31Z",
        "author_association": "NONE",
        "body": "@jtcalhoun I'm not sure this is exactly the same as the old issue.\nI'm talking about the usual types in an `IReadOnly` container while that issue is about specific read only types.\nI think my issue is much simpler to implement (as it's just an interface) and is more common, but I could be wrong on this.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/136768808",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/110#issuecomment-136768808",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/110",
        "id": 136768808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjc2ODgwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-01T15:57:17Z",
        "updated_at": "2015-09-01T15:57:17Z",
        "author_association": "OWNER",
        "body": "That is a C++ compiler issue; I am unable to advise on what may cause that\n- presumably something in some generated wrapper C++ code files? None of\n  protobuf-net is in C++ and thus none is being compiled here.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/141247228",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/76#issuecomment-141247228",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/76",
        "id": 141247228,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTI0NzIyOA==",
        "user": {
            "login": "sandorfr",
            "id": 2660262,
            "node_id": "MDQ6VXNlcjI2NjAyNjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2660262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sandorfr",
            "html_url": "https://github.com/sandorfr",
            "followers_url": "https://api.github.com/users/sandorfr/followers",
            "following_url": "https://api.github.com/users/sandorfr/following{/other_user}",
            "gists_url": "https://api.github.com/users/sandorfr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sandorfr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sandorfr/subscriptions",
            "organizations_url": "https://api.github.com/users/sandorfr/orgs",
            "repos_url": "https://api.github.com/users/sandorfr/repos",
            "events_url": "https://api.github.com/users/sandorfr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sandorfr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-17T22:06:56Z",
        "updated_at": "2015-09-17T22:06:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "It's been a long time but here is a first version.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/145644721",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/114#issuecomment-145644721",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/114",
        "id": 145644721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTY0NDcyMQ==",
        "user": {
            "login": "nathanielcook",
            "id": 903784,
            "node_id": "MDQ6VXNlcjkwMzc4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/903784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathanielcook",
            "html_url": "https://github.com/nathanielcook",
            "followers_url": "https://api.github.com/users/nathanielcook/followers",
            "following_url": "https://api.github.com/users/nathanielcook/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathanielcook/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathanielcook/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathanielcook/subscriptions",
            "organizations_url": "https://api.github.com/users/nathanielcook/orgs",
            "repos_url": "https://api.github.com/users/nathanielcook/repos",
            "events_url": "https://api.github.com/users/nathanielcook/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathanielcook/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-05T19:35:04Z",
        "updated_at": "2015-10-05T19:35:04Z",
        "author_association": "NONE",
        "body": "@mgravell this fix seems to work. Can we get this merged in?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/147193329",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/19#issuecomment-147193329",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/19",
        "id": 147193329,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzE5MzMyOQ==",
        "user": {
            "login": "aukaost",
            "id": 1196773,
            "node_id": "MDQ6VXNlcjExOTY3NzM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1196773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aukaost",
            "html_url": "https://github.com/aukaost",
            "followers_url": "https://api.github.com/users/aukaost/followers",
            "following_url": "https://api.github.com/users/aukaost/following{/other_user}",
            "gists_url": "https://api.github.com/users/aukaost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aukaost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aukaost/subscriptions",
            "organizations_url": "https://api.github.com/users/aukaost/orgs",
            "repos_url": "https://api.github.com/users/aukaost/repos",
            "events_url": "https://api.github.com/users/aukaost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aukaost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-11T13:49:08Z",
        "updated_at": "2015-10-11T13:49:08Z",
        "author_association": "NONE",
        "body": "You can specify -p:lightFramework to generate compatible classes.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/147291463",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/9#issuecomment-147291463",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/9",
        "id": 147291463,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzI5MTQ2Mw==",
        "user": {
            "login": "Bringer128",
            "id": 1164344,
            "node_id": "MDQ6VXNlcjExNjQzNDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1164344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bringer128",
            "html_url": "https://github.com/Bringer128",
            "followers_url": "https://api.github.com/users/Bringer128/followers",
            "following_url": "https://api.github.com/users/Bringer128/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bringer128/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bringer128/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bringer128/subscriptions",
            "organizations_url": "https://api.github.com/users/Bringer128/orgs",
            "repos_url": "https://api.github.com/users/Bringer128/repos",
            "events_url": "https://api.github.com/users/Bringer128/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bringer128/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-12T04:51:33Z",
        "updated_at": "2015-10-12T04:51:33Z",
        "author_association": "NONE",
        "body": "@mgravell Is active on Github on other projects, so there may be hope for us yet.\n\nI've created a pull request to fix this issue.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/147352146",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/101#issuecomment-147352146",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/101",
        "id": 147352146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzM1MjE0Ng==",
        "user": {
            "login": "bb",
            "id": 4932,
            "node_id": "MDQ6VXNlcjQ5MzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bb",
            "html_url": "https://github.com/bb",
            "followers_url": "https://api.github.com/users/bb/followers",
            "following_url": "https://api.github.com/users/bb/following{/other_user}",
            "gists_url": "https://api.github.com/users/bb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bb/subscriptions",
            "organizations_url": "https://api.github.com/users/bb/orgs",
            "repos_url": "https://api.github.com/users/bb/repos",
            "events_url": "https://api.github.com/users/bb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-12T09:43:48Z",
        "updated_at": "2015-10-12T09:43:48Z",
        "author_association": "NONE",
        "body": "In my opionion it should not add the List_Int32 message type but instead resolve to\n\n```\nmessage KeyValuePair_String_List_Int32 {\n  optional string Key = 1;\n  repeated int32 Value = 2;\n}\n```\n\nI just found something similar where\n\n```\n[ProtoMember(6)]\npublic Dictionary<byte, int[]> Something { get; set; }\n```\n\nbecame \n\n```\nmessage Int32[] {\n}\nmessage KeyValuePair_Byte_Int32[] {\n  optional uint32 Key = 1;\n  optional Int32[] Value = 2;\n}\nrepeated KeyValuePair_Byte_Int32[] Something = 6;\n```\n\nbut I expected something like\n\n```\nmessage KeyValuePair_Byte_repeatedInt32 {\n  optional uint32 Key = 1;\n  repeated int32 Value = 2;\n}\noptional KeyValuePair_Byte_repeatedInt32 Something = 6;\n```\n\nI'm seeing 3 issues here:\n- `int` was exported as message type `Int32` instead of `int32` (even though it got the `32`)\n- the array of `int32` in the value of the dictionary is not resolved to `repeated` but marked as `[]`\n- the dictionary itself became `repeated`, even though it should be just `optional`\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/148946710",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-148946710",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 148946710,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODk0NjcxMA==",
        "user": {
            "login": "SapientGuardian",
            "id": 14796343,
            "node_id": "MDQ6VXNlcjE0Nzk2MzQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14796343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SapientGuardian",
            "html_url": "https://github.com/SapientGuardian",
            "followers_url": "https://api.github.com/users/SapientGuardian/followers",
            "following_url": "https://api.github.com/users/SapientGuardian/following{/other_user}",
            "gists_url": "https://api.github.com/users/SapientGuardian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SapientGuardian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SapientGuardian/subscriptions",
            "organizations_url": "https://api.github.com/users/SapientGuardian/orgs",
            "repos_url": "https://api.github.com/users/SapientGuardian/repos",
            "events_url": "https://api.github.com/users/SapientGuardian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SapientGuardian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-17T19:37:39Z",
        "updated_at": "2015-10-17T19:37:39Z",
        "author_association": "NONE",
        "body": ":+1: I've managed to get a build going for DNXCORE50/DNX46 based on the CoreCLR branch, which I've pushed to https://github.com/SapientGuardian/protobuf-net. I haven't run any of the official unit tests, but a minimal set of unit tests in my own projects that use the library are passing with this build.\n\nLooking forward to an official release with DNXCore50 support.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149320457",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/42#issuecomment-149320457",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/42",
        "id": 149320457,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMyMDQ1Nw==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T19:29:31Z",
        "updated_at": "2015-10-19T19:29:31Z",
        "author_association": "NONE",
        "body": "A new version is released. It contains all updates from here and have separate treating for null and empty lists. AqlaSerializer is now also available on <a href=\"https://www.nuget.org/packages/aqlaserializer/\">nuget</a>. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149331526",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/116#issuecomment-149331526",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/116",
        "id": 149331526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMzMTUyNg==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T20:07:38Z",
        "updated_at": "2015-10-19T20:10:29Z",
        "author_association": "NONE",
        "body": "Hi. I made a <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/commit/3ddba96844b593e4a50139eb89879990a26d8794\">unit test</a> for my fork called <a href=\"https://github.com/AqlaSolutions/AqlaSerializer\">AqlaSerializer</a> and it works perfectly with your code. So feel free to use it instead. The only change was replacing attribute names.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149335107",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/103#issuecomment-149335107",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/103",
        "id": 149335107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMzNTEwNw==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T20:22:23Z",
        "updated_at": "2015-10-19T20:22:23Z",
        "author_association": "NONE",
        "body": "This problem is not present in my <a href=\"https://github.com/AqlaSolutions/AqlaSerializer\">fork</a>. I added a <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/commit/a5b2c8c7a8cac9e2353609461f175e60b80bc9ed\">unit test</a> to check your case so feel free to use my fork instead. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149336921",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/102#issuecomment-149336921",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/102",
        "id": 149336921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMzNjkyMQ==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T20:28:06Z",
        "updated_at": "2015-10-19T20:28:06Z",
        "author_association": "NONE",
        "body": "Yes, there are issues with using \"SupportNull\" in some cases. Sorry for ads but you may be interested in using my <a href=\"https://github.com/AqlaSolutions/AqlaSerializer\">fork</a> which is aimed to support all common .net features. It considers \"SupportNull\" to be default behavior where possible just like BinaryFormatter does.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149338620",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/94#issuecomment-149338620",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/94",
        "id": 149338620,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMzODYyMA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T20:33:36Z",
        "updated_at": "2015-10-19T20:33:36Z",
        "author_association": "NONE",
        "body": "As I understand protobuf-net is designed to be used for transferring compact data over network in fast lightweight applications with strict performance requirements. You would never want to send 2gb in such apps therefore I don't think protobuf-net will ever support that.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149352031",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/91#issuecomment-149352031",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/91",
        "id": 149352031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1MjAzMQ==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T21:26:08Z",
        "updated_at": "2015-10-19T21:26:08Z",
        "author_association": "NONE",
        "body": "Hi, I've just <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/commit/ae40a74d450fbb8331e14f98aaa0d1bec75f14ea\">fixed this bug in my fork</a>. I'm not sure whether it can be applied to the original but you are free to use <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/\">AqlaSerializer</a> instead.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149352811",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-149352811",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 149352811,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1MjgxMQ==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T21:29:33Z",
        "updated_at": "2015-10-19T21:29:33Z",
        "author_association": "NONE",
        "body": "@i3arnon can you provide the full code to test it so I can implement this thing in my fork?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149353880",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/89#issuecomment-149353880",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/89",
        "id": 149353880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1Mzg4MA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T21:33:02Z",
        "updated_at": "2015-10-19T21:34:33Z",
        "author_association": "NONE",
        "body": "Looks like there are still no releases. My fork have an equivalent -  <a href=\"https://github.com/AqlaSolutions/AqlaSerializer/wiki/Comparsion-with-protobuf-net#attributes\">SurrogateConverterAttribute</a> and it's published both in releases and on <a href=\"https://www.nuget.org/packages/aqlaserializer/\">nuget</a>. Feel free to use it instead.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149353900",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-149353900",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 149353900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1MzkwMA==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T21:33:07Z",
        "updated_at": "2015-10-19T21:33:07Z",
        "author_association": "NONE",
        "body": "@AqlaSolutions not really sure what you mean. The above code is the entire test.\nA `Sheep` class with `IReadOnlyCollection<string>` property that throws when calling `DeepClone`.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149354399",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-149354399",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 149354399,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1NDM5OQ==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T21:35:29Z",
        "updated_at": "2015-10-19T21:35:29Z",
        "author_association": "NONE",
        "body": "@i3arnon ok, I'll check it\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149362252",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/94#issuecomment-149362252",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/94",
        "id": 149362252,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2MjI1Mg==",
        "user": {
            "login": "yoniiny",
            "id": 33657,
            "node_id": "MDQ6VXNlcjMzNjU3",
            "avatar_url": "https://avatars1.githubusercontent.com/u/33657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoniiny",
            "html_url": "https://github.com/yoniiny",
            "followers_url": "https://api.github.com/users/yoniiny/followers",
            "following_url": "https://api.github.com/users/yoniiny/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoniiny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoniiny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoniiny/subscriptions",
            "organizations_url": "https://api.github.com/users/yoniiny/orgs",
            "repos_url": "https://api.github.com/users/yoniiny/repos",
            "events_url": "https://api.github.com/users/yoniiny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoniiny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:10:15Z",
        "updated_at": "2015-10-19T22:10:15Z",
        "author_association": "NONE",
        "body": "Most applications won't want to use several serialization frameworks. As a result, it makes sense to support large input streams in order to be a \"one stop shop\", or accept that people will discard this framework because of unsupported corner cases.\n\nIn addition, this can \"legitimately\" happen in streaming situations, where many small objects in a stream add up to more than 2gb. Re-creating a ProtoReader object isn't practical, since it reads buffers from the stream, so it might have consumed more than it should have.\n\nAdditionally, the fix is entirely changing the \"position\" field to a long, so it seems quite painless.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149362337",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-149362337",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 149362337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2MjMzNw==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:10:41Z",
        "updated_at": "2015-10-19T22:10:41Z",
        "author_association": "NONE",
        "body": "Ok, so I managed to fix it pretty easy: https://github.com/AqlaSolutions/AqlaSerializer/commit/c2c8b6a74410cbc0491b04e8b3eb89548b3e569a\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149364606",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/74#issuecomment-149364606",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/74",
        "id": 149364606,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NDYwNg==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:23:20Z",
        "updated_at": "2015-10-19T22:23:20Z",
        "author_association": "NONE",
        "body": "It was long time ago but can you please provide a code example for this so I can check if it's present in my fork?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149364690",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/73#issuecomment-149364690",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/73",
        "id": 149364690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NDY5MA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:23:53Z",
        "updated_at": "2015-10-19T22:25:12Z",
        "author_association": "NONE",
        "body": "Yes, it's supported. You can use dlls from any previous frameworks (3.0, 3.5, etc).\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149365418",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-149365418",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 149365418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NTQxOA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:28:13Z",
        "updated_at": "2015-10-19T22:28:13Z",
        "author_association": "NONE",
        "body": "Hi! I had the same feelings so I made a fork of protobuf-net which now contains multiple improvements and fixes especially for better reference tracking. You can find it <a href=\"https://github.com/AqlaSolutions/AqlaSerializer\">here</a>.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149365832",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/66#issuecomment-149365832",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/66",
        "id": 149365832,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NTgzMg==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:30:30Z",
        "updated_at": "2015-10-19T22:30:30Z",
        "author_association": "NONE",
        "body": "You can use Serialize/DeserializeWithLengthPrefix methods.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149366446",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/62#issuecomment-149366446",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/62",
        "id": 149366446,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NjQ0Ng==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:33:31Z",
        "updated_at": "2015-10-19T22:33:31Z",
        "author_association": "NONE",
        "body": "The problem here looks like it doesn't serialize default values. Try setting IsRequired = true for your member.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149366754",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/62#issuecomment-149366754",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/62",
        "id": 149366754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2Njc1NA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:34:49Z",
        "updated_at": "2015-10-19T22:34:49Z",
        "author_association": "NONE",
        "body": "Also try RuntimeTypeModel model.UseImplicitZeroDefaults = false;\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/149367468",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-149367468",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 149367468,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM2NzQ2OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-19T22:38:52Z",
        "updated_at": "2015-10-19T22:38:52Z",
        "author_association": "OWNER",
        "body": "It isn't discontinued - just..  I haven't had massive need for changes for\na while, and other projects have consumed my time. I expect coreclr will\nget some love soon (have done dapper, working on se.redis, etc)\nOn 19 Oct 2015 11:28 pm, \"Vladyslav Taranov\" notifications@github.com\nwrote:\n\n> Hi! I had the same feelings so I made a fork of protobuf-net which now\n> contains multiple improvements and fixes especially for better reference\n> tracking. You can find it here\n> https://github.com/AqlaSolutions/AqlaSerializer.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/72#issuecomment-149365418\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150273012",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-150273012",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 150273012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDI3MzAxMg==",
        "user": {
            "login": "galpin",
            "id": 485240,
            "node_id": "MDQ6VXNlcjQ4NTI0MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/485240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galpin",
            "html_url": "https://github.com/galpin",
            "followers_url": "https://api.github.com/users/galpin/followers",
            "following_url": "https://api.github.com/users/galpin/following{/other_user}",
            "gists_url": "https://api.github.com/users/galpin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galpin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galpin/subscriptions",
            "organizations_url": "https://api.github.com/users/galpin/orgs",
            "repos_url": "https://api.github.com/users/galpin/repos",
            "events_url": "https://api.github.com/users/galpin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galpin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-22T16:06:40Z",
        "updated_at": "2015-10-22T16:06:40Z",
        "author_association": "NONE",
        "body": "@i3arnon Send a PR?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150301722",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-150301722",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 150301722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMwMTcyMg==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-22T17:42:07Z",
        "updated_at": "2015-10-22T17:42:07Z",
        "author_association": "NONE",
        "body": "@galpin Me? I would if there weren't 17 pending PRs already or if there was a plan to drop support for older version that don't have these interfaces...\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150332228",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-150332228",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 150332228,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMzMjIyOA==",
        "user": {
            "login": "galpin",
            "id": 485240,
            "node_id": "MDQ6VXNlcjQ4NTI0MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/485240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galpin",
            "html_url": "https://github.com/galpin",
            "followers_url": "https://api.github.com/users/galpin/followers",
            "following_url": "https://api.github.com/users/galpin/following{/other_user}",
            "gists_url": "https://api.github.com/users/galpin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galpin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galpin/subscriptions",
            "organizations_url": "https://api.github.com/users/galpin/orgs",
            "repos_url": "https://api.github.com/users/galpin/repos",
            "events_url": "https://api.github.com/users/galpin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galpin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-22T19:35:03Z",
        "updated_at": "2015-10-22T19:35:03Z",
        "author_association": "NONE",
        "body": "Sorry, I meant @AqlaSolutions but point taken!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150335698",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/90#issuecomment-150335698",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/90",
        "id": 150335698,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMzNTY5OA==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-22T19:46:06Z",
        "updated_at": "2015-10-22T19:46:06Z",
        "author_association": "NONE",
        "body": "@galpin yep, I don't see that protobuf-net is really updating and also doing everything inside my fork I don't need to care too much about behavior and protocol compatibility. This way I fixed a lot reference tracking and null's issues.\n\nSo I don't bother with PRs. But my fork is under the same license so anyone may copy-paste and PR.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150516123",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/30#issuecomment-150516123",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/30",
        "id": 150516123,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDUxNjEyMw==",
        "user": {
            "login": "gyurisc",
            "id": 790821,
            "node_id": "MDQ6VXNlcjc5MDgyMQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/790821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gyurisc",
            "html_url": "https://github.com/gyurisc",
            "followers_url": "https://api.github.com/users/gyurisc/followers",
            "following_url": "https://api.github.com/users/gyurisc/following{/other_user}",
            "gists_url": "https://api.github.com/users/gyurisc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gyurisc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gyurisc/subscriptions",
            "organizations_url": "https://api.github.com/users/gyurisc/orgs",
            "repos_url": "https://api.github.com/users/gyurisc/repos",
            "events_url": "https://api.github.com/users/gyurisc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gyurisc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-23T08:47:47Z",
        "updated_at": "2015-10-23T08:47:47Z",
        "author_association": "NONE",
        "body": "I am having the same issue. I am getting the exception when using a surrogate\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/150657282",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/30#issuecomment-150657282",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/30",
        "id": 150657282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDY1NzI4Mg==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-23T18:31:48Z",
        "updated_at": "2015-10-23T19:05:22Z",
        "author_association": "NONE",
        "body": "@MrGuardian @gyurisc I added the demo as a unit test for my fork, it's green. https://github.com/AqlaSolutions/AqlaSerializer/commit/2bab26164dee27dc6594cc38ad5c5d253a8beb6c \n\nSorry for spaming you in case you are not going to migrate.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/152761971",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/116#issuecomment-152761971",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/116",
        "id": 152761971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc2MTk3MQ==",
        "user": {
            "login": "ab-tools",
            "id": 1347603,
            "node_id": "MDQ6VXNlcjEzNDc2MDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1347603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ab-tools",
            "html_url": "https://github.com/ab-tools",
            "followers_url": "https://api.github.com/users/ab-tools/followers",
            "following_url": "https://api.github.com/users/ab-tools/following{/other_user}",
            "gists_url": "https://api.github.com/users/ab-tools/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ab-tools/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ab-tools/subscriptions",
            "organizations_url": "https://api.github.com/users/ab-tools/orgs",
            "repos_url": "https://api.github.com/users/ab-tools/repos",
            "events_url": "https://api.github.com/users/ab-tools/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ab-tools/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-31T18:40:55Z",
        "updated_at": "2015-11-01T09:33:15Z",
        "author_association": "NONE",
        "body": "Hello,\n\nfirst I'm sorry to not respond earlier, but I did not receive an e-mail notification about your reply.\n\nIt was great to see that you forked protobuf-net as this seems to be quite dead obviously.\n\nTherefore I directly tested it with my project:\nunfortunately AqlaSerializer still seems to have similar bugs as protobuf-net. It might work fine for small data structure, but with my about 50 MB big database I get an exception if I try to serialize it with AqlaSerializer.\n\nI have created an issue in your project and provide you with an example to reproduce:\nhttps://github.com/AqlaSolutions/AqlaSerializer/issues/1\n\nAndreas\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153490445",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/112#issuecomment-153490445",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/112",
        "id": 153490445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MDQ0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:12:39Z",
        "updated_at": "2015-11-03T21:12:39Z",
        "author_association": "OWNER",
        "body": "Thanks, appreciated\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153490622",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/119#issuecomment-153490622",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/119",
        "id": 153490622,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MDYyMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:13:25Z",
        "updated_at": "2015-11-03T21:13:25Z",
        "author_association": "OWNER",
        "body": "Appreciated, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153490690",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/114#issuecomment-153490690",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/114",
        "id": 153490690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MDY5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:13:44Z",
        "updated_at": "2015-11-03T21:13:44Z",
        "author_association": "OWNER",
        "body": "Appreciated, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153491049",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/98#issuecomment-153491049",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/98",
        "id": 153491049,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MTA0OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:14:44Z",
        "updated_at": "2015-11-03T21:14:44Z",
        "author_association": "OWNER",
        "body": "Looks good, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153491284",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/99#issuecomment-153491284",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/99",
        "id": 153491284,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MTI4NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:15:18Z",
        "updated_at": "2015-11-03T21:15:18Z",
        "author_association": "OWNER",
        "body": "Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153491434",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/2#issuecomment-153491434",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/2",
        "id": 153491434,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MTQzNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:15:48Z",
        "updated_at": "2015-11-03T21:15:48Z",
        "author_association": "OWNER",
        "body": "Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153492090",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/104#issuecomment-153492090",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/104",
        "id": 153492090,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MjA5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:17:15Z",
        "updated_at": "2015-11-03T21:17:15Z",
        "author_association": "OWNER",
        "body": "Thanks - appreciated\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153492498",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/111#issuecomment-153492498",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/111",
        "id": 153492498,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MjQ5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:18:27Z",
        "updated_at": "2015-11-03T21:18:27Z",
        "author_association": "OWNER",
        "body": "Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153492859",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/12#issuecomment-153492859",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/12",
        "id": 153492859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5Mjg1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:19:55Z",
        "updated_at": "2015-11-03T21:19:55Z",
        "author_association": "OWNER",
        "body": "Seems fine, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/153493218",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/115#issuecomment-153493218",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/115",
        "id": 153493218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MzIxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T21:21:33Z",
        "updated_at": "2015-11-03T21:21:33Z",
        "author_association": "OWNER",
        "body": "Can you provide a concrete example of when this makes something work that didn't before? (ideally a test, but text would be fine)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/154316308",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/115#issuecomment-154316308",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/115",
        "id": 154316308,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDMxNjMwOA==",
        "user": {
            "login": "Bringer128",
            "id": 1164344,
            "node_id": "MDQ6VXNlcjExNjQzNDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1164344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bringer128",
            "html_url": "https://github.com/Bringer128",
            "followers_url": "https://api.github.com/users/Bringer128/followers",
            "following_url": "https://api.github.com/users/Bringer128/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bringer128/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bringer128/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bringer128/subscriptions",
            "organizations_url": "https://api.github.com/users/Bringer128/orgs",
            "repos_url": "https://api.github.com/users/Bringer128/repos",
            "events_url": "https://api.github.com/users/Bringer128/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bringer128/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-06T06:15:23Z",
        "updated_at": "2015-11-06T06:15:23Z",
        "author_association": "NONE",
        "body": "If I get time soon I'll submit a test.\n\nThe scenario that failed was as described in issue #9. The code in that issue is the same format as the problem I ran into.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/154434099",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/117#issuecomment-154434099",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/117",
        "id": 154434099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDQzNDA5OQ==",
        "user": {
            "login": "cmdel",
            "id": 222043,
            "node_id": "MDQ6VXNlcjIyMjA0Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/222043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cmdel",
            "html_url": "https://github.com/cmdel",
            "followers_url": "https://api.github.com/users/cmdel/followers",
            "following_url": "https://api.github.com/users/cmdel/following{/other_user}",
            "gists_url": "https://api.github.com/users/cmdel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cmdel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cmdel/subscriptions",
            "organizations_url": "https://api.github.com/users/cmdel/orgs",
            "repos_url": "https://api.github.com/users/cmdel/repos",
            "events_url": "https://api.github.com/users/cmdel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cmdel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-06T15:13:05Z",
        "updated_at": "2015-11-06T15:13:05Z",
        "author_association": "NONE",
        "body": "Take a look at this article on SO. It's probably exactly what you need.\nhttp://stackoverflow.com/a/7046868/1595994\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155398088",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/122#issuecomment-155398088",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/122",
        "id": 155398088,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTM5ODA4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-10T11:45:11Z",
        "updated_at": "2015-11-10T11:45:11Z",
        "author_association": "OWNER",
        "body": "Hmmm, yes; that looks problematic and an omission.  Will re-review the PR\nand rectify.\n\nOn Tue, 10 Nov 2015 11:11 Shingo INADA notifications@github.com wrote:\n\n> A default value ( [ default = xxx] ) is ignored from this comit\n> d55cec9\n> https://github.com/mgravell/protobuf-net/commit/d55cec946b6ad5a0e8571f00cf71f28e0da6ed31\n> \n> This behavior violates specifications of protobuf\n> https://developers.google.com/protocol-buffers/docs/proto?hl=en#optional\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/122.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155398256",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/121#issuecomment-155398256",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/121",
        "id": 155398256,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTM5ODI1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-10T11:46:15Z",
        "updated_at": "2015-11-10T11:46:15Z",
        "author_association": "OWNER",
        "body": "Any chance of a translation? I can run it through Google translate, but it\noften does a less than perfect job compared to a native speaker...\n\nOn Tue, 10 Nov 2015 10:51 Shingo INADA notifications@github.com wrote:\n\n> The following compilation error came to occur from the commit 45a6f6e\n> https://github.com/mgravell/protobuf-net/commit/45a6f6e5c3183d24e27c0bcba56aa47c4d0ff2bb\n> .\n> \n> c:\\work\\protobuf-net\\Serializer.cs(87,11): error CS1502: 'ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream, object, System.Type)' \u306b\u6700\u3082\u9069\u3057\u3066\u3044\u308b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u7121\u52b9\u306a\u5f15\u6570\u304c\u3044\u304f\u3064\u304b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 [C:\\work\\protobuf-net_IKVM\\protobuf-net_IKVM.csproj]\n> c:\\work\\protobuf-net\\Serializer.cs(87,62): error CS1503: \u5f15\u6570 3: 'IKVM.Reflection.Type' \u304b\u3089 'System.Type' \u306b\u5909\u63db\u3067\u304d\u307e\u305b\u3093 [C:\\work\\protobuf-net_IKVM\\protobuf-net_IKVM.csproj]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/121.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155403992",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/121#issuecomment-155403992",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/121",
        "id": 155403992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQwMzk5Mg==",
        "user": {
            "login": "inada-s",
            "id": 1726079,
            "node_id": "MDQ6VXNlcjE3MjYwNzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1726079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inada-s",
            "html_url": "https://github.com/inada-s",
            "followers_url": "https://api.github.com/users/inada-s/followers",
            "following_url": "https://api.github.com/users/inada-s/following{/other_user}",
            "gists_url": "https://api.github.com/users/inada-s/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inada-s/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inada-s/subscriptions",
            "organizations_url": "https://api.github.com/users/inada-s/orgs",
            "repos_url": "https://api.github.com/users/inada-s/repos",
            "events_url": "https://api.github.com/users/inada-s/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inada-s/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-10T12:08:36Z",
        "updated_at": "2015-11-10T12:34:06Z",
        "author_association": "NONE",
        "body": "sorry, I translated it\n\n```\nc:\\work\\protobuf-net\\Serializer.cs(87,11): error CS1502: The best overloaded method match for ' ProtoBuf.Meta.TypeModel.Deserialize(System.IO.Stream, object, System.Type)'  has some invalid arguments  [C:\\work\\protobuf-net_IKVM\\protobuf-net_IKVM.csproj]\nc:\\work\\protobuf-net\\Serializer.cs(87,62): error CS1503: Argument 3: cannot convert from 'IKVM.Reflection.Type' to 'System.Type'  [C:\\work\\protobuf-net_IKVM\\protobuf-net_IKVM.csproj]\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155407509",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/121#issuecomment-155407509",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/121",
        "id": 155407509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQwNzUwOQ==",
        "user": {
            "login": "inada-s",
            "id": 1726079,
            "node_id": "MDQ6VXNlcjE3MjYwNzk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1726079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/inada-s",
            "html_url": "https://github.com/inada-s",
            "followers_url": "https://api.github.com/users/inada-s/followers",
            "following_url": "https://api.github.com/users/inada-s/following{/other_user}",
            "gists_url": "https://api.github.com/users/inada-s/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/inada-s/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/inada-s/subscriptions",
            "organizations_url": "https://api.github.com/users/inada-s/orgs",
            "repos_url": "https://api.github.com/users/inada-s/repos",
            "events_url": "https://api.github.com/users/inada-s/events{/privacy}",
            "received_events_url": "https://api.github.com/users/inada-s/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-10T12:26:11Z",
        "updated_at": "2015-11-10T12:32:40Z",
        "author_association": "NONE",
        "body": "- In protobuf-net/Meta/TypeModel.cs:L575, `type : System.Type`\n\n```\npublic object Deserialize(Stream source, object value, System.Type type)\n```\n- In protobuf-net/Serializer.cs:L85, `type : IKVM.Reflection.Type`\n\n```\nusing Type = IKVM.Reflection.Type;\n...\npublic static object Deserialize(Type type, Stream source)\n```\n\nThe compiler error that `cannot convert from 'IKVM.Reflection.Type' to 'System.Type'` is occurred.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155409542",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/121#issuecomment-155409542",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/121",
        "id": 155409542,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQwOTU0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-10T12:37:57Z",
        "updated_at": "2015-11-10T12:37:57Z",
        "author_association": "OWNER",
        "body": "Yeah, that should be explicitly `System.Type` - a simple fix, and a problem\nthat would only show up in the IKVM build. I will fix when I have the\ncore-clr code in a stable state. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155876166",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/107#issuecomment-155876166",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/107",
        "id": 155876166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTg3NjE2Ng==",
        "user": {
            "login": "jogibear9988",
            "id": 364896,
            "node_id": "MDQ6VXNlcjM2NDg5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/364896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jogibear9988",
            "html_url": "https://github.com/jogibear9988",
            "followers_url": "https://api.github.com/users/jogibear9988/followers",
            "following_url": "https://api.github.com/users/jogibear9988/following{/other_user}",
            "gists_url": "https://api.github.com/users/jogibear9988/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jogibear9988/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jogibear9988/subscriptions",
            "organizations_url": "https://api.github.com/users/jogibear9988/orgs",
            "repos_url": "https://api.github.com/users/jogibear9988/repos",
            "events_url": "https://api.github.com/users/jogibear9988/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jogibear9988/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-11T18:54:31Z",
        "updated_at": "2015-11-11T18:54:58Z",
        "author_association": "NONE",
        "body": "Is that feature planed to be implemented? Is anyone working on this? Is this possible with current protobufer protocol format?\n\nI also have a class wich inhertits from multiple\n\n```\n class Bbb : AbstractAaa, IHhhh \n { }\n```\n\nand one:\n\n```\n class Ddd\n {  \n public IHhhh BlaBla {get;set;}  \n }\n```\n\nWhere I try to serialize/deserialize class Dddd\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/155891533",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/107#issuecomment-155891533",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/107",
        "id": 155891533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTg5MTUzMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-11T19:49:22Z",
        "updated_at": "2015-11-11T19:49:22Z",
        "author_association": "OWNER",
        "body": "Protocol buffers _at the protocol level_ doesn't define inheritance _at\nall_. Protobuf-net adds limited inheritance support, but things like\nmultiple inheritance is complex; to do that properly would require\nconsiderable design, implementation and testing, for what is an edge\nscenario - and arguably one better served by mapping to a simpler DTO model\nthat (as is the nature of DTOs) reflects the reality of the serialisation\nparadigm.\n\nThis isn't on my planned list of things to do. If someone can absorb the\ntime to properly specify, proove (i.e. that it is unambiguous, etc),\ndesign, implement, test, document and support it - I would consider a PR\nfor it.\n\nOn Wed, 11 Nov 2015 18:54 Jochen K\u00fchner notifications@github.com wrote:\n\n> Is that feature planed to be implemented? Is anyone working on this? Is\n> this possible with current protobufer protocol format?\n> \n> I also have a class wich inhertits from multiple\n> class Bbb : AbstractAaa, IHhhh\n> { }\n> and one:\n> class Ddd\n> { public IHhhh BlaBla {get;set;} }\n> \n> Where I try to serialize/deserialize class Dddd\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/107#issuecomment-155876166\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/156004809",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/107#issuecomment-156004809",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/107",
        "id": 156004809,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjAwNDgwOQ==",
        "user": {
            "login": "jogibear9988",
            "id": 364896,
            "node_id": "MDQ6VXNlcjM2NDg5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/364896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jogibear9988",
            "html_url": "https://github.com/jogibear9988",
            "followers_url": "https://api.github.com/users/jogibear9988/followers",
            "following_url": "https://api.github.com/users/jogibear9988/following{/other_user}",
            "gists_url": "https://api.github.com/users/jogibear9988/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jogibear9988/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jogibear9988/subscriptions",
            "organizations_url": "https://api.github.com/users/jogibear9988/orgs",
            "repos_url": "https://api.github.com/users/jogibear9988/repos",
            "events_url": "https://api.github.com/users/jogibear9988/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jogibear9988/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-12T05:28:07Z",
        "updated_at": "2015-11-12T05:28:07Z",
        "author_association": "NONE",
        "body": "Is inharitance at the protocol Level really needed for such a scenario? Doesnt protoculbuffers use a Id for every class type, so it's irelevant for protobuf how the hierachical structure is?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/157398195",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/123#issuecomment-157398195",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/123",
        "id": 157398195,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzM5ODE5NQ==",
        "user": {
            "login": "MeirionHughes",
            "id": 3584509,
            "node_id": "MDQ6VXNlcjM1ODQ1MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3584509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MeirionHughes",
            "html_url": "https://github.com/MeirionHughes",
            "followers_url": "https://api.github.com/users/MeirionHughes/followers",
            "following_url": "https://api.github.com/users/MeirionHughes/following{/other_user}",
            "gists_url": "https://api.github.com/users/MeirionHughes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MeirionHughes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MeirionHughes/subscriptions",
            "organizations_url": "https://api.github.com/users/MeirionHughes/orgs",
            "repos_url": "https://api.github.com/users/MeirionHughes/repos",
            "events_url": "https://api.github.com/users/MeirionHughes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MeirionHughes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T15:11:33Z",
        "updated_at": "2015-11-17T15:11:47Z",
        "author_association": "NONE",
        "body": "try this: \n\n```\n[ProtoMember(1, DataFormat = DataFormat.FixedSize)]\npublic uint FixedInteger { get; set; }\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/157847236",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-157847236",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 157847236,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzg0NzIzNg==",
        "user": {
            "login": "forestjohnsonilm",
            "id": 10946037,
            "node_id": "MDQ6VXNlcjEwOTQ2MDM3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/10946037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/forestjohnsonilm",
            "html_url": "https://github.com/forestjohnsonilm",
            "followers_url": "https://api.github.com/users/forestjohnsonilm/followers",
            "following_url": "https://api.github.com/users/forestjohnsonilm/following{/other_user}",
            "gists_url": "https://api.github.com/users/forestjohnsonilm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/forestjohnsonilm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/forestjohnsonilm/subscriptions",
            "organizations_url": "https://api.github.com/users/forestjohnsonilm/orgs",
            "repos_url": "https://api.github.com/users/forestjohnsonilm/repos",
            "events_url": "https://api.github.com/users/forestjohnsonilm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/forestjohnsonilm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-18T20:09:40Z",
        "updated_at": "2015-11-18T20:09:40Z",
        "author_association": "NONE",
        "body": "Looks like @mgravell is currently working on dnx core support? Any idea when it will be available? Is there anything that people unfamiliar with protobuf-net like myself can do to help? \n\n@SapientGuardian are you planning on continuing to develop or maintain your fork?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/157851052",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-157851052",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 157851052,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzg1MTA1Mg==",
        "user": {
            "login": "SapientGuardian",
            "id": 14796343,
            "node_id": "MDQ6VXNlcjE0Nzk2MzQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14796343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SapientGuardian",
            "html_url": "https://github.com/SapientGuardian",
            "followers_url": "https://api.github.com/users/SapientGuardian/followers",
            "following_url": "https://api.github.com/users/SapientGuardian/following{/other_user}",
            "gists_url": "https://api.github.com/users/SapientGuardian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SapientGuardian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SapientGuardian/subscriptions",
            "organizations_url": "https://api.github.com/users/SapientGuardian/orgs",
            "repos_url": "https://api.github.com/users/SapientGuardian/repos",
            "events_url": "https://api.github.com/users/SapientGuardian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SapientGuardian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-18T20:19:55Z",
        "updated_at": "2015-11-18T20:19:55Z",
        "author_association": "NONE",
        "body": "I'll be needing protobuf support in dnxcore for the foreseeable future, so until there's an official release I'll be maintaining my fork, at least from a bugfix perspective. I think it would be a mistake to use my fork in any production capacity, though I'll end up doing that myself soon. c249dd1 would suggest that @mgravell is working on a proper release.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/157877692",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-157877692",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 157877692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Nzg3NzY5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-18T21:57:25Z",
        "updated_at": "2015-11-18T21:57:25Z",
        "author_association": "OWNER",
        "body": "It is in progress. Have done Dapper, have done Jil + Sigil this week,\nSE.Redis has a _huge_ PR from MS I'm working through. For protobuf-net, am\nworking through a local spike trying to get it happy. A very busy time if\nyou're a library author / contributor!\nOn 18 Nov 2015 8:19 pm, \"SapientGuardian\" notifications@github.com wrote:\n\n> I'll be needing protobuf support in dnxcore for the foreseeable future, so\n> until there's an official release I'll be maintaining my fork, at least\n> from a bugfix perspective. I think it would be a mistake to use my fork in\n> any production capacity, though I'll end up doing that myself soon.\n> c249dd1\n> https://github.com/mgravell/protobuf-net/commit/c249dd12dda506e9e9d04c7cef3159490353cfb2\n> would suggest that @mgravell https://github.com/mgravell is working on\n> a proper release.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/108#issuecomment-157851052\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/158333600",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/123#issuecomment-158333600",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/123",
        "id": 158333600,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODMzMzYwMA==",
        "user": {
            "login": "skrysmanski",
            "id": 914747,
            "node_id": "MDQ6VXNlcjkxNDc0Nw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/914747?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skrysmanski",
            "html_url": "https://github.com/skrysmanski",
            "followers_url": "https://api.github.com/users/skrysmanski/followers",
            "following_url": "https://api.github.com/users/skrysmanski/following{/other_user}",
            "gists_url": "https://api.github.com/users/skrysmanski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skrysmanski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skrysmanski/subscriptions",
            "organizations_url": "https://api.github.com/users/skrysmanski/orgs",
            "repos_url": "https://api.github.com/users/skrysmanski/repos",
            "events_url": "https://api.github.com/users/skrysmanski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skrysmanski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-20T09:19:28Z",
        "updated_at": "2015-11-20T09:19:28Z",
        "author_association": "NONE",
        "body": "That's right. I didn't see this. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162820277",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162820277",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162820277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjgyMDI3Nw==",
        "user": {
            "login": "xivk",
            "id": 1128068,
            "node_id": "MDQ6VXNlcjExMjgwNjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1128068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xivk",
            "html_url": "https://github.com/xivk",
            "followers_url": "https://api.github.com/users/xivk/followers",
            "following_url": "https://api.github.com/users/xivk/following{/other_user}",
            "gists_url": "https://api.github.com/users/xivk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xivk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xivk/subscriptions",
            "organizations_url": "https://api.github.com/users/xivk/orgs",
            "repos_url": "https://api.github.com/users/xivk/repos",
            "events_url": "https://api.github.com/users/xivk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xivk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T08:57:00Z",
        "updated_at": "2015-12-08T08:57:00Z",
        "author_association": "NONE",
        "body": "Yep, a change in the nuget should do it but it's a bit difficult for me to test using OsmSharp because I have a protobuf-net dependency. Also impossible to install in a fresh android project targetting 'MonoAndroid,Version=v6.0'...\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162931541",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162931541",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162931541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjkzMTU0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T16:11:36Z",
        "updated_at": "2015-12-08T16:11:36Z",
        "author_association": "OWNER",
        "body": "If anyone cares to suggest what the nuspec should be here, let me know.\nNote that I'm trying to transition to a project.json-based build - this\n_might_ be a lost hope, but I'm at least going to try ;p\n\nOn 8 December 2015 at 08:57, Ben Abelshausen notifications@github.com\nwrote:\n\n> Yep, a change in the nuget should do it but it's a bit difficult for me to\n> test using OsmSharp because I have a protobuf-net dependency. Also\n> impossible to install in a fresh android project targetting\n> 'MonoAndroid,Version=v6.0'...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162820277\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162935552",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162935552",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162935552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjkzNTU1Mg==",
        "user": {
            "login": "pauldendulk",
            "id": 963462,
            "node_id": "MDQ6VXNlcjk2MzQ2Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/963462?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauldendulk",
            "html_url": "https://github.com/pauldendulk",
            "followers_url": "https://api.github.com/users/pauldendulk/followers",
            "following_url": "https://api.github.com/users/pauldendulk/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauldendulk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauldendulk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauldendulk/subscriptions",
            "organizations_url": "https://api.github.com/users/pauldendulk/orgs",
            "repos_url": "https://api.github.com/users/pauldendulk/repos",
            "events_url": "https://api.github.com/users/pauldendulk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauldendulk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T16:26:18Z",
        "updated_at": "2015-12-08T16:28:44Z",
        "author_association": "NONE",
        "body": "protobuf-net_Portable.csproj has Profile136. For use in Xamarin the target should be:\n`portable-net40+sl50+win+wp80+Xamarin.iOS10+MonoAndroid10+MonoTouch10`\n\nThe .nuspec is empty. Are you generating the nuget package from the .csproj like this `nuget pack <project.csproj>`? If so, the resulting package's targets will depend on what you have installed on your machine. See [this answer](http://stackoverflow.com/a/20385259/85325) from Matt Ward.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162935785",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162935785",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162935785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjkzNTc4NQ==",
        "user": {
            "login": "xivk",
            "id": 1128068,
            "node_id": "MDQ6VXNlcjExMjgwNjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1128068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xivk",
            "html_url": "https://github.com/xivk",
            "followers_url": "https://api.github.com/users/xivk/followers",
            "following_url": "https://api.github.com/users/xivk/following{/other_user}",
            "gists_url": "https://api.github.com/users/xivk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xivk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xivk/subscriptions",
            "organizations_url": "https://api.github.com/users/xivk/orgs",
            "repos_url": "https://api.github.com/users/xivk/repos",
            "events_url": "https://api.github.com/users/xivk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xivk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T16:27:08Z",
        "updated_at": "2015-12-08T16:27:08Z",
        "author_association": "NONE",
        "body": "Thanks @pauldendulk, I was just replying myself... :+1: \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162947352",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162947352",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162947352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjk0NzM1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T17:07:58Z",
        "updated_at": "2015-12-08T17:07:58Z",
        "author_association": "OWNER",
        "body": "That's a very specific build ;p I _so_ hope that there is a netstandard in\nthe future that works ;p\n\nOn 8 December 2015 at 16:27, Ben Abelshausen notifications@github.com\nwrote:\n\n> Thanks @pauldendulk https://github.com/pauldendulk, I was just replying\n> myself... [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162935785\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/162992913",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-162992913",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 162992913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjk5MjkxMw==",
        "user": {
            "login": "pauldendulk",
            "id": 963462,
            "node_id": "MDQ6VXNlcjk2MzQ2Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/963462?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauldendulk",
            "html_url": "https://github.com/pauldendulk",
            "followers_url": "https://api.github.com/users/pauldendulk/followers",
            "following_url": "https://api.github.com/users/pauldendulk/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauldendulk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauldendulk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauldendulk/subscriptions",
            "organizations_url": "https://api.github.com/users/pauldendulk/orgs",
            "repos_url": "https://api.github.com/users/pauldendulk/repos",
            "events_url": "https://api.github.com/users/pauldendulk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauldendulk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T19:41:28Z",
        "updated_at": "2015-12-08T19:41:28Z",
        "author_association": "NONE",
        "body": "I think the idea is that a PCL build could be that standard. Profile136 makes many other builds irrelevant (like WinRT, Phone8, Silverlight, MonoDroid, regular .net) and with the proper .nuspec target string would allow use in Xamarin.iOS. The other builds are older technologies that are rarely used nowadays. You could also choose to support just one or two PCL profiles.\n\nI must add that I have not looked into the json based build yet. I understand this changes a lot again.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/163004210",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-163004210",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 163004210,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzAwNDIxMA==",
        "user": {
            "login": "pauldendulk",
            "id": 963462,
            "node_id": "MDQ6VXNlcjk2MzQ2Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/963462?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauldendulk",
            "html_url": "https://github.com/pauldendulk",
            "followers_url": "https://api.github.com/users/pauldendulk/followers",
            "following_url": "https://api.github.com/users/pauldendulk/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauldendulk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauldendulk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauldendulk/subscriptions",
            "organizations_url": "https://api.github.com/users/pauldendulk/orgs",
            "repos_url": "https://api.github.com/users/pauldendulk/repos",
            "events_url": "https://api.github.com/users/pauldendulk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauldendulk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-08T20:17:47Z",
        "updated_at": "2015-12-08T20:18:26Z",
        "author_association": "NONE",
        "body": "How are the PCLs generated right now? Perhaps I could lend a hand.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/164320754",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/125#issuecomment-164320754",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/125",
        "id": 164320754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDMyMDc1NA==",
        "user": {
            "login": "hvanbakel",
            "id": 4130108,
            "node_id": "MDQ6VXNlcjQxMzAxMDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4130108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hvanbakel",
            "html_url": "https://github.com/hvanbakel",
            "followers_url": "https://api.github.com/users/hvanbakel/followers",
            "following_url": "https://api.github.com/users/hvanbakel/following{/other_user}",
            "gists_url": "https://api.github.com/users/hvanbakel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hvanbakel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hvanbakel/subscriptions",
            "organizations_url": "https://api.github.com/users/hvanbakel/orgs",
            "repos_url": "https://api.github.com/users/hvanbakel/repos",
            "events_url": "https://api.github.com/users/hvanbakel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hvanbakel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-14T01:45:26Z",
        "updated_at": "2015-12-14T01:45:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "Fix for #126 \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/165106084",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/129#issuecomment-165106084",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/129",
        "id": 165106084,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTEwNjA4NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-16T13:30:20Z",
        "updated_at": "2015-12-16T13:30:20Z",
        "author_association": "OWNER",
        "body": "Have updated master; try now\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/165110951",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/129#issuecomment-165110951",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/129",
        "id": 165110951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTExMDk1MQ==",
        "user": {
            "login": "MasterIV",
            "id": 1334077,
            "node_id": "MDQ6VXNlcjEzMzQwNzc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1334077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MasterIV",
            "html_url": "https://github.com/MasterIV",
            "followers_url": "https://api.github.com/users/MasterIV/followers",
            "following_url": "https://api.github.com/users/MasterIV/following{/other_user}",
            "gists_url": "https://api.github.com/users/MasterIV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MasterIV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MasterIV/subscriptions",
            "organizations_url": "https://api.github.com/users/MasterIV/orgs",
            "repos_url": "https://api.github.com/users/MasterIV/repos",
            "events_url": "https://api.github.com/users/MasterIV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MasterIV/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-16T13:49:37Z",
        "updated_at": "2015-12-16T13:49:37Z",
        "author_association": "NONE",
        "body": "ok it worked:\n\n```\nBuild succeeded.\n\nWarnings:\n\n/home/vagrant/protobuf-net/precompile/precompile.csproj (default targets) ->\n/usr/lib/mono/4.0/Microsoft.Common.targets (ResolveProjectReferences target) ->\n/home/vagrant/protobuf-net/protobuf-net_IKVM/protobuf-net_IKVM.csproj (default targets) ->\n/usr/lib/mono/4.0/Microsoft.CSharp.targets (CoreCompile target) ->\n\n        /home/vagrant/protobuf-net/protobuf-net/Meta/RuntimeTypeModel.cs(1189,18): warning CS0219: The variable `finalType' is assigned but its value is never used\n        /home/vagrant/protobuf-net/protobuf-net/Meta/TypeModel.cs(1556,35): warning CS0414: The private field `ProtoBuf.Meta.TypeModel.Formatter.type' is assigned but its value is never used\n        /home/vagrant/protobuf-net/protobuf-net/Serializers/PropertyDecorator.cs(24,31): warning CS0414: The private field `ProtoBuf.Serializers.PropertyDecorator.readOptionsWriteValue' is assigned but its value is never used\n\n         3 Warning(s)\n         0 Error(s)\n\nTime Elapsed 00:00:01.5698600\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166408448",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166408448",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166408448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjQwODQ0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-21T20:24:50Z",
        "updated_at": "2015-12-21T20:24:50Z",
        "author_association": "OWNER",
        "body": "Works fine here (see example based on yours, below); can you provide a more complete repro of the problem?\n\n```\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Text;\nusing System.Text.RegularExpressions;\n\nusing Newtonsoft.Json;\nusing ProtoBuf;\nusing System.Collections.Generic;\nusing System;\n\n[Serializable]\n[DataContract] // [JsonObject(MemberSerialization.OptIn)]\n[ProtoContract]\npublic class AttributableItem\n{\n    [DataMember, ProtoMember(1)]\n    public Dictionary<string, string> Attributes = new Dictionary<string, string>();\n\n}\nstatic class Program\n{\n    static void Main()\n    {\n        var obj = new AttributableItem\n        {\n            Attributes =\n            {\n                {\"abc\", \"def\" },\n                {\"ghi\", \"jkl\" },\n            }\n        };\n        var clone = Serializer.DeepClone(obj);\n        Console.WriteLine(\"Same AttributableItem: {0}\", ReferenceEquals(clone, obj));\n        Console.WriteLine(\"Same Dictionary`2: {0}\", ReferenceEquals(clone.Attributes, obj.Attributes));\n        foreach(var pair in clone.Attributes)\n        {\n            Console.WriteLine(\"{0}={1}\", pair.Key, pair.Value);\n        }\n    }\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166551536",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166551536",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166551536,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjU1MTUzNg==",
        "user": {
            "login": "QuAzI",
            "id": 1897605,
            "node_id": "MDQ6VXNlcjE4OTc2MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1897605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuAzI",
            "html_url": "https://github.com/QuAzI",
            "followers_url": "https://api.github.com/users/QuAzI/followers",
            "following_url": "https://api.github.com/users/QuAzI/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuAzI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuAzI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuAzI/subscriptions",
            "organizations_url": "https://api.github.com/users/QuAzI/orgs",
            "repos_url": "https://api.github.com/users/QuAzI/repos",
            "events_url": "https://api.github.com/users/QuAzI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuAzI/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T08:23:10Z",
        "updated_at": "2015-12-22T08:23:10Z",
        "author_association": "NONE",
        "body": "Looks like my mistake\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.IO;\n\nusing ProtoBuf;\n\n[ProtoContract]\npublic class AttributableItem\n{\n    [ProtoMember(1)]\n    public Dictionary<string, string> Attributes = new Dictionary<string, string>();\n}\n\n[ProtoContract]\npublic class ExtendedItem : AttributableItem\n{\n    [ProtoMember(1)]\n    public string description;\n}\n\nstatic class Program\n{\n    static void Main()\n    {\n        var obj = new ExtendedItem\n        {\n            Attributes =\n            {\n                {\"abc\", \"def\" },\n                {\"ghi\", \"jkl\" },\n            }\n        };\n        obj.description = \"test\";\n\n        string testFile = \"test.proto\";\n        SerializeAsProtobuf(testFile, obj);\n        var objCopy = DeserializeProtobuf(testFile);\n\n        Debug.Assert(objCopy.Attributes.Count == obj.Attributes.Count);\n        foreach (var pair in objCopy.Attributes)\n        {\n            Console.WriteLine(\"{0}={1}\", pair.Key, pair.Value);\n            Debug.Assert(pair.Value == obj.Attributes[pair.Key]);\n        }\n    }\n\n    static public void SerializeAsProtobuf(string filePath, object obj)\n    {\n        using (FileStream fileStream = new FileStream(filePath, FileMode.OpenOrCreate))\n        {\n            SerializeAsProtobuf(fileStream, obj);\n            fileStream.Close();\n        }\n    }\n\n    static public void SerializeAsProtobuf(Stream stream, object obj)\n    {\n        Serializer.Serialize(stream, obj);\n    }\n\n    static public ExtendedItem DeserializeProtobuf(string filePath)\n    {\n        using (FileStream fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n        {\n            ExtendedItem product = DeserializeProtobuf(fileStream);\n            fileStream.Close();\n            return product;\n        }\n    }\n\n    static public ExtendedItem DeserializeProtobuf(Stream stream)\n    {\n        return ProtoBuf.Serializer.Deserialize<ExtendedItem>(stream);\n    }\n}\n```\n\nIt isn't clear how to trace an order of fields at multiple inheritance\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166555561",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166555561",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166555561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjU1NTU2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T08:45:01Z",
        "updated_at": "2015-12-22T08:45:01Z",
        "author_association": "OWNER",
        "body": "Protobuf-net doesn't know about inheritance automatically. You need to\neducate it by marking the base type.\n\nAdd `[ProtoInclude(Type, n)]` for some n not already used in the base type,\nfor example:\n\n[ProtoContract]\n[ProtoInclude(typeof(ExtendedItem), 2)]\npublic class AttributableItem {...}\nOn 22 Dec 2015 8:23 am, \"QuAzI\" notifications@github.com wrote:\n\n> Looks like my mistake\n> \n> using System;\n> using System.Collections.Generic;\n> using System.Diagnostics;\n> using System.IO;\n> \n> using ProtoBuf;\n> \n> [ProtoContract]\n> public class AttributableItem\n> {\n>     [ProtoMember(1)]\n>     public Dictionary<string, string> Attributes = new Dictionary<string, string>();\n> }\n> \n> [ProtoContract]\n> public class ExtendedItem : AttributableItem\n> {\n>     [ProtoMember(1)]\n>     public string description;\n> }\n> \n> static class Program\n> {\n>     static void Main()\n>     {\n>         var obj = new ExtendedItem\n>         {\n>             Attributes =\n>             {\n>                 {\"abc\", \"def\" },\n>                 {\"ghi\", \"jkl\" },\n>             }\n>         };\n>         obj.description = \"test\";\n> \n> ```\n>     string testFile = \"test.proto\";\n>     SerializeAsProtobuf(testFile, obj);\n>     var objCopy = DeserializeProtobuf(testFile);\n> \n>     Debug.Assert(objCopy.Attributes.Count == obj.Attributes.Count);\n>     foreach (var pair in objCopy.Attributes)\n>     {\n>         Console.WriteLine(\"{0}={1}\", pair.Key, pair.Value);\n>         Debug.Assert(pair.Value == obj.Attributes[pair.Key]);\n>     }\n> }\n> \n> static public void SerializeAsProtobuf(string filePath, object obj)\n> {\n>     using (FileStream fileStream = new FileStream(filePath, FileMode.OpenOrCreate))\n>     {\n>         SerializeAsProtobuf(fileStream, obj);\n>         fileStream.Close();\n>     }\n> }\n> \n> static public void SerializeAsProtobuf(Stream stream, object obj)\n> {\n>     Serializer.Serialize(stream, obj);\n> }\n> \n> static public ExtendedItem DeserializeProtobuf(string filePath)\n> {\n>     using (FileStream fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n>     {\n>         ExtendedItem product = DeserializeProtobuf(fileStream);\n>         fileStream.Close();\n>         return product;\n>     }\n> }\n> \n> static public ExtendedItem DeserializeProtobuf(Stream stream)\n> {\n>     return ProtoBuf.Serializer.Deserialize<ExtendedItem>(stream);\n> }\n> ```\n> \n> }\n> \n> It isn't clear how to trace an order of fields at multiple inheritance\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166551536\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166565602",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166565602",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166565602,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjU2NTYwMg==",
        "user": {
            "login": "QuAzI",
            "id": 1897605,
            "node_id": "MDQ6VXNlcjE4OTc2MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1897605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuAzI",
            "html_url": "https://github.com/QuAzI",
            "followers_url": "https://api.github.com/users/QuAzI/followers",
            "following_url": "https://api.github.com/users/QuAzI/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuAzI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuAzI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuAzI/subscriptions",
            "organizations_url": "https://api.github.com/users/QuAzI/orgs",
            "repos_url": "https://api.github.com/users/QuAzI/repos",
            "events_url": "https://api.github.com/users/QuAzI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuAzI/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T09:29:11Z",
        "updated_at": "2015-12-22T09:29:11Z",
        "author_association": "NONE",
        "body": "Thanks\nWhat if I have several classes inherited from base class? \n\nI must wite something like this? \n\n```\n[ProtoContract] \n[ProtoInclude(typeof(ExtendedItem1), 2)] \n[ProtoInclude(typeof(ExtendedItem2), 3)] \n[ProtoInclude(typeof(ExtendedItem3), 4)] \npublic class AttributableItem {...}\n```\n\nWhat numeric tag means in this case?\nAs a rule parents don't know about the inherited and shouldn't care of it. But in this case it is a great problem.\nThere are too small examples to explain this case. Should be in documentation I think\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166669722",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166669722",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166669722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjY2OTcyMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T16:44:12Z",
        "updated_at": "2015-12-22T16:44:12Z",
        "author_association": "OWNER",
        "body": "1: yes\n2: in terms of the protobuf specification, each sub-type is implemented as\nan optional sub-message using that numeric identifier\n3: this is not uncommon in serialisation; compare/contrast [XmlInclude];\nthe problem is that during deserialization the only thing you usually know\nis the parent, hence it becomes necessary for the parent to know about the\nderived types\n\nOn Tue, 22 Dec 2015 09:29 QuAzI notifications@github.com wrote:\n\n> Thanks\n> What if I have several classes inherited from base class?\n> \n> I must wite something like this?\n> \n> [ProtoContract]\n> [ProtoInclude(typeof(ExtendedItem1), 2)]\n> [ProtoInclude(typeof(ExtendedItem2), 3)]\n> [ProtoInclude(typeof(ExtendedItem3), 4)]\n> public class AttributableItem {...}\n> \n> What numeric tag means in this case?\n> As a rule parents don't know about the inherited and shouldn't care of it.\n> But in this case it is a great problem.\n> There are too small examples to explain this case. Should be in\n> documentation I think\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166565602\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166670499",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166670499",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166670499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjY3MDQ5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-22T16:46:23Z",
        "updated_at": "2015-12-22T16:46:23Z",
        "author_association": "OWNER",
        "body": "Also: [KnownType(..)] For DCS\n\nOn Tue, 22 Dec 2015 16:43 Marc Gravell marc.gravell@gmail.com wrote:\n\n> 1: yes\n> 2: in terms of the protobuf specification, each sub-type is implemented as\n> an optional sub-message using that numeric identifier\n> 3: this is not uncommon in serialisation; compare/contrast [XmlInclude];\n> the problem is that during deserialization the only thing you usually know\n> is the parent, hence it becomes necessary for the parent to know about the\n> derived types\n> \n> On Tue, 22 Dec 2015 09:29 QuAzI notifications@github.com wrote:\n> \n> > Thanks\n> > What if I have several classes inherited from base class?\n> > \n> > I must wite something like this?\n> > \n> > [ProtoContract]\n> > [ProtoInclude(typeof(ExtendedItem1), 2)]\n> > [ProtoInclude(typeof(ExtendedItem2), 3)]\n> > [ProtoInclude(typeof(ExtendedItem3), 4)]\n> > public class AttributableItem {...}\n> > \n> > What numeric tag means in this case?\n> > As a rule parents don't know about the inherited and shouldn't care of\n> > it. But in this case it is a great problem.\n> > There are too small examples to explain this case. Should be in\n> > documentation I think\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166565602\n> > .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166830005",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166830005",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166830005,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjgzMDAwNQ==",
        "user": {
            "login": "QuAzI",
            "id": 1897605,
            "node_id": "MDQ6VXNlcjE4OTc2MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1897605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuAzI",
            "html_url": "https://github.com/QuAzI",
            "followers_url": "https://api.github.com/users/QuAzI/followers",
            "following_url": "https://api.github.com/users/QuAzI/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuAzI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuAzI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuAzI/subscriptions",
            "organizations_url": "https://api.github.com/users/QuAzI/orgs",
            "repos_url": "https://api.github.com/users/QuAzI/repos",
            "events_url": "https://api.github.com/users/QuAzI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuAzI/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-23T07:59:21Z",
        "updated_at": "2015-12-23T07:59:21Z",
        "author_association": "NONE",
        "body": "Here man told that RuntimeTypeModel.Default.Add(typeof(type), true).AddSubType(tag, subType) \nis equivalent to what the attribute-processing code does\nhttps://stackoverflow.com/questions/11869467/protobuf-net-how-to-handle-inheritance-without-protoinclude\n\nI try to write static constructor for register child \n\n```\n    static ExtendedItem1()\n    {\n        ProtoBuf.Meta.RuntimeTypeModel\n            .Default\n            .Add(typeof(AttributableItem), true)\n            .AddSubType(typeof(ExtendedItem1).FullName.GetHashCode(), typeof(ExtendedItem1));\n    }\n```\n\nAnd it serialized OK. I see all fields in file with small differences. \n\n![2015-12-23_10-54-21_jn2ybe0u](https://cloud.githubusercontent.com/assets/1897605/11972904/de030ff2-a963-11e5-8d1a-e5dc1436690f.png)\n\nBut on deserialisation fired \"Unable to cast object of type 'AttributableItem' to type 'ExtendedItem1'\". Why?\n\nFull example\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.IO;\n\nusing ProtoBuf;\n\n[ProtoContract]\npublic class AttributableItem\n{\n    [ProtoMember(1)]\n    public Dictionary<string, string> Attributes = new Dictionary<string, string>();\n}\n\n[ProtoContract]\npublic class ExtendedItem1 : AttributableItem\n{\n    static ExtendedItem1()\n    {\n        ProtoBuf.Meta.RuntimeTypeModel\n            .Default\n            .Add(typeof(AttributableItem), true)\n            .AddSubType(typeof(ExtendedItem1).FullName.GetHashCode(), typeof(ExtendedItem1));\n    }\n\n    [ProtoMember(1)]\n    public string description;\n}\n\nstatic class Program\n{\n    static void Main()\n    {\n        var obj = new ExtendedItem1\n        {\n            Attributes =\n            {\n                {\"abc\", \"def\" },\n                {\"ghi\", \"jkl\" },\n            }\n        };\n        obj.description = \"test\";\n\n        string testFile = \"test.proto\";\n        SerializeAsProtobuf(testFile, obj);\n        var objCopy = DeserializeProtobuf(testFile);\n\n        Debug.Assert(objCopy.Attributes.Count == obj.Attributes.Count);\n        foreach (var pair in objCopy.Attributes)\n        {\n            Console.WriteLine(\"{0}={1}\", pair.Key, pair.Value);\n            Debug.Assert(pair.Value == obj.Attributes[pair.Key]);\n        }\n    }\n\n    static public void SerializeAsProtobuf(string filePath, object obj)\n    {\n        using (FileStream fileStream = new FileStream(filePath, FileMode.OpenOrCreate))\n        {\n            SerializeAsProtobuf(fileStream, obj);\n            fileStream.Close();\n        }\n    }\n\n    static public void SerializeAsProtobuf(Stream stream, object obj)\n    {\n        Serializer.Serialize(stream, obj);\n    }\n\n    static public ExtendedItem1 DeserializeProtobuf(string filePath)\n    {\n        using (FileStream fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n        {\n            ExtendedItem1 product = DeserializeProtobuf(fileStream);\n            fileStream.Close();\n            return product;\n        }\n    }\n\n    static public ExtendedItem1 DeserializeProtobuf(Stream stream)\n    {\n        return ProtoBuf.Serializer.Deserialize<ExtendedItem1>(stream);\n    }\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/166830245",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166830245",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 166830245,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjgzMDI0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-23T08:01:13Z",
        "updated_at": "2015-12-23T08:01:13Z",
        "author_association": "OWNER",
        "body": "Thank you - I will look at your full example when I get a moment.\nOn 23 Dec 2015 7:59 a.m., \"QuAzI\" notifications@github.com wrote:\n\n> Here man told that RuntimeTypeModel.Default.Add(typeof(type),\n> true).AddSubType(tag, subType)\n> is equivalent to what the attribute-processing code does\n> \n> https://stackoverflow.com/questions/11869467/protobuf-net-how-to-handle-inheritance-without-protoinclude\n> \n> I try to write static constructor for register child\n> \n> ```\n> static ExtendedItem1()\n> {\n>     ProtoBuf.Meta.RuntimeTypeModel\n>         .Default\n>         .Add(typeof(AttributableItem), true)\n>         .AddSubType(typeof(ExtendedItem1).FullName.GetHashCode(), typeof(ExtendedItem1));\n> }\n> ```\n> \n> And it serialized OK. I see all fields in file with small differences.\n> \n> [image: 2015-12-23_10-54-21_jn2ybe0u]\n> https://cloud.githubusercontent.com/assets/1897605/11972904/de030ff2-a963-11e5-8d1a-e5dc1436690f.png\n> \n> But on deserialisation fired \"Unable to cast object of type\n> 'AttributableItem' to type 'ExtendedItem1'\". Why?\n> \n> Full example\n> \n> using System;\n> using System.Collections.Generic;\n> using System.Diagnostics;\n> using System.IO;\n> \n> using ProtoBuf;\n> \n> [ProtoContract]\n> public class AttributableItem\n> {\n>     [ProtoMember(1)]\n>     public Dictionary<string, string> Attributes = new Dictionary<string, string>();\n> }\n> \n> [ProtoContract]\n> public class ExtendedItem1 : AttributableItem\n> {\n>     static ExtendedItem1()\n>     {\n>         ProtoBuf.Meta.RuntimeTypeModel\n>             .Default\n>             .Add(typeof(AttributableItem), true)\n>             .AddSubType(typeof(ExtendedItem1).FullName.GetHashCode(), typeof(ExtendedItem1));\n>     }\n> \n> ```\n> [ProtoMember(1)]\n> public string description;\n> ```\n> \n> }\n> \n> static class Program\n> {\n>     static void Main()\n>     {\n>         var obj = new ExtendedItem1\n>         {\n>             Attributes =\n>             {\n>                 {\"abc\", \"def\" },\n>                 {\"ghi\", \"jkl\" },\n>             }\n>         };\n>         obj.description = \"test\";\n> \n> ```\n>     string testFile = \"test.proto\";\n>     SerializeAsProtobuf(testFile, obj);\n>     var objCopy = DeserializeProtobuf(testFile);\n> \n>     Debug.Assert(objCopy.Attributes.Count == obj.Attributes.Count);\n>     foreach (var pair in objCopy.Attributes)\n>     {\n>         Console.WriteLine(\"{0}={1}\", pair.Key, pair.Value);\n>         Debug.Assert(pair.Value == obj.Attributes[pair.Key]);\n>     }\n> }\n> \n> static public void SerializeAsProtobuf(string filePath, object obj)\n> {\n>     using (FileStream fileStream = new FileStream(filePath, FileMode.OpenOrCreate))\n>     {\n>         SerializeAsProtobuf(fileStream, obj);\n>         fileStream.Close();\n>     }\n> }\n> \n> static public void SerializeAsProtobuf(Stream stream, object obj)\n> {\n>     Serializer.Serialize(stream, obj);\n> }\n> \n> static public ExtendedItem1 DeserializeProtobuf(string filePath)\n> {\n>     using (FileStream fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n>     {\n>         ExtendedItem1 product = DeserializeProtobuf(fileStream);\n>         fileStream.Close();\n>         return product;\n>     }\n> }\n> \n> static public ExtendedItem1 DeserializeProtobuf(Stream stream)\n> {\n>     return ProtoBuf.Serializer.Deserialize<ExtendedItem1>(stream);\n> }\n> ```\n> \n> }\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/130#issuecomment-166830005\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/167509850",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/130#issuecomment-167509850",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/130",
        "id": 167509850,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzUwOTg1MA==",
        "user": {
            "login": "QuAzI",
            "id": 1897605,
            "node_id": "MDQ6VXNlcjE4OTc2MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1897605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QuAzI",
            "html_url": "https://github.com/QuAzI",
            "followers_url": "https://api.github.com/users/QuAzI/followers",
            "following_url": "https://api.github.com/users/QuAzI/following{/other_user}",
            "gists_url": "https://api.github.com/users/QuAzI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QuAzI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QuAzI/subscriptions",
            "organizations_url": "https://api.github.com/users/QuAzI/orgs",
            "repos_url": "https://api.github.com/users/QuAzI/repos",
            "events_url": "https://api.github.com/users/QuAzI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QuAzI/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-28T08:28:48Z",
        "updated_at": "2015-12-28T08:28:48Z",
        "author_association": "NONE",
        "body": "Well, I will wait\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/168674207",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-168674207",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 168674207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY3NDIwNw==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-04T13:14:42Z",
        "updated_at": "2016-01-04T13:14:42Z",
        "author_association": "NONE",
        "body": "Hey, I was just wondering if the DateTimeKind had been added into the serialization of a DateTime yet and if a nuget package would be made available?\n\nThanks,\nRob\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/169319217",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-169319217",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 169319217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTMxOTIxNw==",
        "user": {
            "login": "i3arnon",
            "id": 6595156,
            "node_id": "MDQ6VXNlcjY1OTUxNTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6595156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/i3arnon",
            "html_url": "https://github.com/i3arnon",
            "followers_url": "https://api.github.com/users/i3arnon/followers",
            "following_url": "https://api.github.com/users/i3arnon/following{/other_user}",
            "gists_url": "https://api.github.com/users/i3arnon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/i3arnon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/i3arnon/subscriptions",
            "organizations_url": "https://api.github.com/users/i3arnon/orgs",
            "repos_url": "https://api.github.com/users/i3arnon/repos",
            "events_url": "https://api.github.com/users/i3arnon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/i3arnon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-06T13:05:32Z",
        "updated_at": "2016-01-06T13:05:32Z",
        "author_association": "NONE",
        "body": "@roberttaylor26 while you wait... if you can handle **all** `DateTime`s being **either** `DateTimeKind.Utc` **or** `DateTimeKind.Local` you can set it with reflection. There are explanations and examples [on my blog](http://blog.i3arnon.com/2015/10/03/protobuf-net-datetime-bug/).\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/169335992",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-169335992",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 169335992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTMzNTk5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-06T14:27:40Z",
        "updated_at": "2016-01-06T14:27:40Z",
        "author_association": "OWNER",
        "body": "You could actually try the alpha build here:\nhttps://www.nuget.org/packages/protobuf-net/2.1.0-alpha-1\n\nThis includes the DateTimeKind code, I believe.\n\nOn 6 January 2016 at 13:05, Bar Arnon notifications@github.com wrote:\n\n> @roberttaylor26 https://github.com/roberttaylor26 while you wait... if\n> you can handle _all_ DateTimes being _either_ DateTimeKind.Utc _or_\n> DateTimeKind.Local you can set it with reflection. There are explanations\n> and examples on my blog\n> http://blog.i3arnon.com/2015/10/03/protobuf-net-datetime-bug/.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/44#issuecomment-169319217\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/169843150",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/132#issuecomment-169843150",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/132",
        "id": 169843150,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTg0MzE1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-07T23:49:23Z",
        "updated_at": "2016-01-07T23:49:23Z",
        "author_association": "OWNER",
        "body": "I think we could do this; it would need to be a different package,\nobviously. The really awkward thing to sip is the tools that go _along_\nwith that. I'm struggling for good ways of deploying those.\n\nOn 7 January 2016 at 23:18, Stephan Dilly notifications@github.com wrote:\n\n> Would it be possible to provide the precompile binaries with the nuget\n> package too ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/132.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/170053973",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/133#issuecomment-170053973",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/133",
        "id": 170053973,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDA1Mzk3Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-08T16:54:18Z",
        "updated_at": "2016-01-08T16:55:51Z",
        "author_association": "OWNER",
        "body": "The `false` in `Add(Type, bool)` says \"don't process anything yourself; I'm going to tell you what to do, explicitly\". Hence, you need to tell it about the default value yourself in this case. In code:\n\n```\n    var typeMeta = RuntimeTypeModel.Default.Add(typeof(Foo), false);\n    typeMeta.AddField(1, \"Bar\").DefaultValue = 0;\n```\n\n(I only introduced `typeMeta` in this example because you probably want to add multiple fields)\n\nNote: if you are using C# 6:\n\n```\n    typeMeta.AddField(1, nameof(Foo.Bar)).DefaultValue = 0;\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/170451282",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/135#issuecomment-170451282",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/135",
        "id": 170451282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ1MTI4Mg==",
        "user": {
            "login": "MeirionHughes",
            "id": 3584509,
            "node_id": "MDQ6VXNlcjM1ODQ1MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3584509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MeirionHughes",
            "html_url": "https://github.com/MeirionHughes",
            "followers_url": "https://api.github.com/users/MeirionHughes/followers",
            "following_url": "https://api.github.com/users/MeirionHughes/following{/other_user}",
            "gists_url": "https://api.github.com/users/MeirionHughes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MeirionHughes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MeirionHughes/subscriptions",
            "organizations_url": "https://api.github.com/users/MeirionHughes/orgs",
            "repos_url": "https://api.github.com/users/MeirionHughes/repos",
            "events_url": "https://api.github.com/users/MeirionHughes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MeirionHughes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T07:11:32Z",
        "updated_at": "2016-01-11T07:11:32Z",
        "author_association": "NONE",
        "body": "You'll have to use NonGeneric if you feed the serializer with an `object`\n\n```\nvar stream = new MemoryStream();\nobject input = new Person\n{\n    Name = \"Bob\",\n    Age = 20\n};\n\nSerializer.NonGeneric.SerializeWithLengthPrefix(stream, input, PrefixStyle.Base128, 1);\nstream.Seek(0, SeekOrigin.Begin);\n\nobject output;\n\nSerializer.NonGeneric.TryDeserializeWithLengthPrefix(stream, PrefixStyle.Base128,\n    (_) => typeof (Person), out output);\n\nvar outputPerson = (Person)output;\n\nConsole.WriteLine(\"Deserialized: \" + outputPerson.Name + \" \" + outputPerson.Age);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/170451982",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/135#issuecomment-170451982",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/135",
        "id": 170451982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ1MTk4Mg==",
        "user": {
            "login": "Razenpok",
            "id": 8434406,
            "node_id": "MDQ6VXNlcjg0MzQ0MDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8434406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Razenpok",
            "html_url": "https://github.com/Razenpok",
            "followers_url": "https://api.github.com/users/Razenpok/followers",
            "following_url": "https://api.github.com/users/Razenpok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Razenpok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Razenpok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Razenpok/subscriptions",
            "organizations_url": "https://api.github.com/users/Razenpok/orgs",
            "repos_url": "https://api.github.com/users/Razenpok/repos",
            "events_url": "https://api.github.com/users/Razenpok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Razenpok/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T07:19:40Z",
        "updated_at": "2016-01-11T07:20:01Z",
        "author_association": "NONE",
        "body": "Thanks, it worked!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/170453658",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/135#issuecomment-170453658",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/135",
        "id": 170453658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ1MzY1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T07:38:17Z",
        "updated_at": "2016-01-11T07:38:17Z",
        "author_association": "OWNER",
        "body": "Woohoo! Sorted before I even wake up; cheers. Very minor point, but that\nisn't actually \"boxing\", but... either way: sorted.\n\nOn 11 January 2016 at 07:19, Andrey notifications@github.com wrote:\n\n> Closed #135 https://github.com/mgravell/protobuf-net/issues/135.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/135#event-510783841.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/170494062",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/133#issuecomment-170494062",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/133",
        "id": 170494062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDQ5NDA2Mg==",
        "user": {
            "login": "chrisxue815",
            "id": 1477939,
            "node_id": "MDQ6VXNlcjE0Nzc5Mzk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1477939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisxue815",
            "html_url": "https://github.com/chrisxue815",
            "followers_url": "https://api.github.com/users/chrisxue815/followers",
            "following_url": "https://api.github.com/users/chrisxue815/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisxue815/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisxue815/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisxue815/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisxue815/orgs",
            "repos_url": "https://api.github.com/users/chrisxue815/repos",
            "events_url": "https://api.github.com/users/chrisxue815/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisxue815/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-11T09:59:49Z",
        "updated_at": "2016-01-11T09:59:49Z",
        "author_association": "NONE",
        "body": "Thanks for your help @mgravell !\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/171448646",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/136#issuecomment-171448646",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/136",
        "id": 171448646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTQ0ODY0Ng==",
        "user": {
            "login": "MeirionHughes",
            "id": 3584509,
            "node_id": "MDQ6VXNlcjM1ODQ1MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3584509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MeirionHughes",
            "html_url": "https://github.com/MeirionHughes",
            "followers_url": "https://api.github.com/users/MeirionHughes/followers",
            "following_url": "https://api.github.com/users/MeirionHughes/following{/other_user}",
            "gists_url": "https://api.github.com/users/MeirionHughes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MeirionHughes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MeirionHughes/subscriptions",
            "organizations_url": "https://api.github.com/users/MeirionHughes/orgs",
            "repos_url": "https://api.github.com/users/MeirionHughes/repos",
            "events_url": "https://api.github.com/users/MeirionHughes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MeirionHughes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-13T21:52:31Z",
        "updated_at": "2016-01-13T21:52:31Z",
        "author_association": "NONE",
        "body": "Try [Costura](https://github.com/Fody/Costura). I've bundled protobuf  with it. I've not tried the very latest though. \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/171585619",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/136#issuecomment-171585619",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/136",
        "id": 171585619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTU4NTYxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T09:34:22Z",
        "updated_at": "2016-01-14T09:34:22Z",
        "author_association": "OWNER",
        "body": "protobuf-net is very heavy on the meta-programming. I haven't explicitly\ntested it with ILMerge, but it wouldn't amaze me if there were problems.\nThe core-only build should work fine, but then you'd have to use\npre-generation, which is complex.\n\nIf we want it to work cleanly (supported etc) with ILMerge, then it would\nneed someone to take the time to explicitly test, identify and resolve and\nissues. I'm \"up\" for that, but I can't give any specific guarantees on when\nI can find the required time; for all I know, the changes required could be\ntrivial, or could be extensive...\n\nOn 13 January 2016 at 21:52, Meirion Hughes notifications@github.com\nwrote:\n\n> Try Costura https://github.com/Fody/Costura. I've bundled protobuf with\n> it. I've not tried the very latest though.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/136#issuecomment-171448646\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/171666711",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/136#issuecomment-171666711",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/136",
        "id": 171666711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY2NjcxMQ==",
        "user": {
            "login": "JonSargent",
            "id": 15347685,
            "node_id": "MDQ6VXNlcjE1MzQ3Njg1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/15347685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JonSargent",
            "html_url": "https://github.com/JonSargent",
            "followers_url": "https://api.github.com/users/JonSargent/followers",
            "following_url": "https://api.github.com/users/JonSargent/following{/other_user}",
            "gists_url": "https://api.github.com/users/JonSargent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JonSargent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JonSargent/subscriptions",
            "organizations_url": "https://api.github.com/users/JonSargent/orgs",
            "repos_url": "https://api.github.com/users/JonSargent/repos",
            "events_url": "https://api.github.com/users/JonSargent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JonSargent/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T15:06:19Z",
        "updated_at": "2016-01-14T15:06:19Z",
        "author_association": "NONE",
        "body": "Meirion -- thanks for the tip, I'll give it a try.\n\nMarc -- thanks for weighing in.  Would be great to get this working.  Let me do some further messing around, including with other merge tools, before I burden you with too much troubleshooting.  After all, this probably falls in the \"nice to have\" category...\n\nThanks,\n\nJon\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/180536290",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/140#issuecomment-180536290",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/140",
        "id": 180536290,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDUzNjI5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-05T20:05:32Z",
        "updated_at": "2016-02-05T20:05:32Z",
        "author_association": "OWNER",
        "body": "If I was doing it all over again, I would have done it much simpler - I\nmight still add an option to make it simpler! but:\n\nhttps://github.com/mgravell/protobuf-net/blob/master/Tools/bcl.proto\n\nbasically, it chooses the correct scale to guarantee the value.\n\nOn 5 February 2016 at 19:46, efficks notifications@github.com wrote:\n\n> Hi,\n> This is not a real issue but I don't know where to post my question\n> I'm reading protobuf encoded messages generated in Net I'm reading it with\n> a Python program How the DataTime is encoded I can't change the message\n> emitter to send an EPOCH or string representation How do I decode the\n> datetime representation?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/140.\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/180721605",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/141#issuecomment-180721605",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/141",
        "id": 180721605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDcyMTYwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-06T09:00:43Z",
        "updated_at": "2016-02-06T09:00:43Z",
        "author_association": "OWNER",
        "body": "Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/182175091",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/138#issuecomment-182175091",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/138",
        "id": 182175091,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MjE3NTA5MQ==",
        "user": {
            "login": "yufeih",
            "id": 511355,
            "node_id": "MDQ6VXNlcjUxMTM1NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/511355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufeih",
            "html_url": "https://github.com/yufeih",
            "followers_url": "https://api.github.com/users/yufeih/followers",
            "following_url": "https://api.github.com/users/yufeih/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufeih/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufeih/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufeih/subscriptions",
            "organizations_url": "https://api.github.com/users/yufeih/orgs",
            "repos_url": "https://api.github.com/users/yufeih/repos",
            "events_url": "https://api.github.com/users/yufeih/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufeih/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-10T02:48:03Z",
        "updated_at": "2016-02-10T02:48:03Z",
        "author_association": "NONE",
        "body": "Same here. I created a private build [here](https://github.com/yufeih/protobuf-net/commit/f6afb6848fda9511b6876f89600d06b8640a7910) to make it work on UWP.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/185854033",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/91#issuecomment-185854033",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/91",
        "id": 185854033,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTg1NDAzMw==",
        "user": {
            "login": "aienabled",
            "id": 865384,
            "node_id": "MDQ6VXNlcjg2NTM4NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/865384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aienabled",
            "html_url": "https://github.com/aienabled",
            "followers_url": "https://api.github.com/users/aienabled/followers",
            "following_url": "https://api.github.com/users/aienabled/following{/other_user}",
            "gists_url": "https://api.github.com/users/aienabled/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aienabled/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aienabled/subscriptions",
            "organizations_url": "https://api.github.com/users/aienabled/orgs",
            "repos_url": "https://api.github.com/users/aienabled/repos",
            "events_url": "https://api.github.com/users/aienabled/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aienabled/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-18T18:43:14Z",
        "updated_at": "2016-02-18T18:43:41Z",
        "author_association": "NONE",
        "body": "I also have this issue.\nAqlaSerializer is simply amazing, thanks for mentioning it! I've switched on it in just a few minutes (there is a simple migration guide) and now the issue resolved, together with other issues (like empty/null collections and references problems) I've had.\nRegards!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/191817550",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-191817550",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 191817550,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTgxNzU1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-03T15:37:21Z",
        "updated_at": "2016-03-03T15:37:21Z",
        "author_association": "OWNER",
        "body": "Protobuf-net needs to know _numbers_ for each field you want to serialize. There are ways to make this semi-automated, but the easiest way would be to explicitly mark them:\n\n```\n[DataMember(Order=1)]\npublic string ABC {get;set;}\n\n[DataMember(Order=2)]\npublic int QWE {get;set;}\n```\n\nThat should fix it.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/192082654",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-192082654",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 192082654,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjA4MjY1NA==",
        "user": {
            "login": "rebulanyum",
            "id": 1245382,
            "node_id": "MDQ6VXNlcjEyNDUzODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1245382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rebulanyum",
            "html_url": "https://github.com/rebulanyum",
            "followers_url": "https://api.github.com/users/rebulanyum/followers",
            "following_url": "https://api.github.com/users/rebulanyum/following{/other_user}",
            "gists_url": "https://api.github.com/users/rebulanyum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rebulanyum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rebulanyum/subscriptions",
            "organizations_url": "https://api.github.com/users/rebulanyum/orgs",
            "repos_url": "https://api.github.com/users/rebulanyum/repos",
            "events_url": "https://api.github.com/users/rebulanyum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rebulanyum/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-04T03:42:00Z",
        "updated_at": "2016-03-04T03:42:00Z",
        "author_association": "NONE",
        "body": "Well @mgravell , I'm afraid that won't work in my case. I was using a base class `Microsoft.Xrm.Sdk.Entity` . So for the DataContract and DataMember attributes I'm not able to change the Order parameter value. Then, what should I do? (Please consider the following example)\n\n``` csharp\n[System.Runtime.Serialization.DataContract]\n        class XQW : Microsoft.Xrm.Sdk.Entity\n        {\n            public string ABC { get; set; }\n            public int QWE { get; set; }\n        }\n        static void Main()\n        {\n            XQW a = new XQW()\n            {\n                ABC = \"asdsadasdsadasd\",\n                QWE = 3\n            };\n            XQW newA;\n\n            byte[] buffer;\n            using (MemoryStream serializationStream = new MemoryStream())\n            {\n                Serializer.Serialize(serializationStream, a);\n                buffer = serializationStream.ToArray();\n            }\n            using (MemoryStream deserializationStream = new MemoryStream(buffer))\n            {\n                newA = Serializer.Deserialize<XQW>(deserializationStream);\n                buffer = null;\n            }\n\n            if (a.QWE != newA.QWE)\n                throw new Exception(\"Serialization for datacontract is not working\");\n        }\n```\n\nAnd there are some properties on `Microsoft.Crm.Sdk.Entity` class that ae marked with DataMember attribute without Order parameter setted and the class itself is marked with DataContract attribute. \n\n``` csharp\nnamespace Microsoft.Xrm.Sdk\n{\n    [DataContract(Name = \"Entity\", Namespace = \"http://schemas.microsoft.com/xrm/2011/Contracts\")]\n...\npublic class Entity : IExtensibleDataObject\n    {\n    ....\n[DataMember]\n        public AttributeCollection Attributes { get; set; }\n        [DataMember]\n        public EntityState? EntityState { get; set; }\n        public ExtensionDataObject ExtensionData { get; set; }\n        [DataMember]\n        public FormattedValueCollection FormattedValues { get; }\n        [DataMember]\n        public virtual Guid Id { get; set; }\n        [DataMember]\n        public KeyAttributeCollection KeyAttributes { get; set; }\n        [DataMember]\n        public string LogicalName { get; set; }\n        [DataMember]\n        [SuppressMessage(\"Microsoft.Naming\", \"CA1721:PropertyNamesShouldNotMatchGetMethods\", Justification = \"Member and conflicting method differences are obvious.\")]\n        public RelatedEntityCollection RelatedEntities { get; }\n        [DataMember]\n        public string RowVersion { get; set; }\n...\n```\n\nSo, it has to be fixed I guess; I mean there is no other way, right?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/192218997",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-192218997",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 192218997,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjIxODk5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-04T10:12:09Z",
        "updated_at": "2016-03-04T10:12:09Z",
        "author_association": "OWNER",
        "body": "Well, in this scenario the first thing I'd note is that using implementation details (such as `Microsoft.Crm.Sdk.Entity`) in serialization layers is not a great idea - it creates a huge number of traps. Frankly, if serialization of an existing object model becomes non-trivial, the best approach is not \"fight the serializer\" but rather \"create a simple DTO that fits the serializer perfectly\"\n\nAs it happens, protobuf-net does have things like `ImplicitFields` that _can_ help in some of these scenarios, but it only looks at the _declaring_ type, not base-types - so it wouldn't pull from `Entity`. protobuf-net also has the ability to configure types _manually_, but that would require you adding code to your app-init. But to give an example broadly similar to yours:\n\n```\nusing ProtoBuf;\nusing ProtoBuf.Meta;\nusing System;\nusing System.Runtime.Serialization;\n\nclass Program {\n    static void Main() {\n        RuntimeTypeModel.Default.Add(typeof(MyObj), false).Add(\"Foo\", \"Bar\", \"Name\");\n        var obj = new MyObj { Name = \"abc\", Foo = 123, Bar = \"def\" };\n        var clone = Serializer.DeepClone(obj);\n        Console.WriteLine(obj);\n        Console.WriteLine(clone);\n    }\n}\n[DataContract] public class MyObj : Entity {\n    [DataMember] public string Name { get; set; }\n    public override string ToString() => $\"{Name}, {Foo}, {Bar}\";\n}\n[DataContract] public class Entity {\n    [DataMember] public int Foo { get; set; }\n    [DataMember] public string Bar { get; set; }\n}\n```\n\nNote here that the order of the members in `Add` defines their wire identity - so `Foo` is 1, `Bar` is 2, etc. Depending on your C# version, you may also wish to look at `nameof` rather than hard-coded strings:\n\n```\n        RuntimeTypeModel.Default.Add(typeof(MyObj), false).Add(\n            nameof(Entity.Foo), nameof(Entity.Bar), nameof(MyObj.Name));\n```\n\nIs any of that useful?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193132107",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193132107",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193132107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzEzMjEwNw==",
        "user": {
            "login": "rebulanyum",
            "id": 1245382,
            "node_id": "MDQ6VXNlcjEyNDUzODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1245382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rebulanyum",
            "html_url": "https://github.com/rebulanyum",
            "followers_url": "https://api.github.com/users/rebulanyum/followers",
            "following_url": "https://api.github.com/users/rebulanyum/following{/other_user}",
            "gists_url": "https://api.github.com/users/rebulanyum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rebulanyum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rebulanyum/subscriptions",
            "organizations_url": "https://api.github.com/users/rebulanyum/orgs",
            "repos_url": "https://api.github.com/users/rebulanyum/repos",
            "events_url": "https://api.github.com/users/rebulanyum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rebulanyum/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T07:00:53Z",
        "updated_at": "2016-03-07T07:00:53Z",
        "author_association": "NONE",
        "body": "Actually, `RuntimeTypeModel.Default.Add` solution worked for me for most of the situations. But I couldn't solve 1 problem with this way: It doesn't serialize `Attributes` property: It's type is `Microsoft.Xrm.Sdk.AttributeCollection`. What can be the problem with collection types when using this trick. (Please consider the following example.)\n\n``` csharp\n[System.Runtime.Serialization.DataContract]\n        class XQW : Microsoft.Xrm.Sdk.Entity\n        {\n            [System.Runtime.Serialization.DataMember]\n            public string ABC { get; set; }\n            [System.Runtime.Serialization.DataMember]\n            public int QWE { get; set; }\n        }\n        static Program()\n        {\n            XQW entity = new XQW();\n            RuntimeTypeModel.Default.Add(typeof(Entity), false).Add(nameof(entity.Id), nameof(entity.LogicalName), nameof(entity.Attributes), nameof(entity.EntityState), nameof(entity.FormattedValues), nameof(entity.RelatedEntities));\n            RuntimeTypeModel.Default.Add(typeof(XQW), false).Add(nameof(entity.ABC), nameof(entity.QWE));\n\n            EntityReference refe = new EntityReference();\n            RuntimeTypeModel.Default.Add(typeof(EntityReference), false).Add(nameof(refe.Id), nameof(refe.LogicalName), nameof(refe.KeyAttributes), nameof(refe.Name), nameof(refe.RowVersion));\n        }\n        static void Main()\n        {\n            XQW a = new XQW()\n            {\n                ABC = \"asdsadasdsadasd\",\n                QWE = 3,\n                Id = Guid.Parse(\"a108168e-ac83-e511-80dd-005056a305e7\"),\n                Attributes = new Microsoft.Xrm.Sdk.AttributeCollection() {\n                    new KVP(\"somerefid\", new EntityReference() {\n                        LogicalName = \"someref\",\n                        Id = Guid.Parse(\"6f2de500-39d1-e411-8125-b8ca3a62a025\"),\n                        Name = \"Dev\"\n                    })\n                }\n            };\n            XQW newA;\n\n            byte[] buffer;\n            using (MemoryStream serializationStream = new MemoryStream())\n            {\n                Serializer.Serialize(serializationStream, a);\n                buffer = serializationStream.ToArray();\n            }\n            using (MemoryStream deserializationStream = new MemoryStream(buffer))\n            {\n                newA = Serializer.Deserialize<XQW>(deserializationStream);\n                buffer = null;\n            }\n\n            if (a.QWE != newA.QWE)\n                throw new Exception(\"Serialization for datacontract is not working\");\n\n            if (newA.Attributes.Count == 0)\n                /* At this point it fails even Attributes property is serialized. Because whatever I added to the collection is not serialized. */\n                throw new Exception(\"Serialization for datacontract is not working\");\n        }\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193159354",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193159354",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193159354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzE1OTM1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T08:42:32Z",
        "updated_at": "2016-03-07T08:42:32Z",
        "author_association": "OWNER",
        "body": "Microsoft.Xrm.Sdk.AttributeCollection is basically a\nDictionary<string,object>, which protobuf-net is going to _hate_. The\nprotobuf format is designed to serialize models with a well-known shape /\nformat - which \"object\" _isn't_. There is no good way to handle a\nstring-object map in protobuf; there are some bad ways, but that depends a\nlot on what the actual values are in your scenario.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193172891",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193172891",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193172891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzE3Mjg5MQ==",
        "user": {
            "login": "rebulanyum",
            "id": 1245382,
            "node_id": "MDQ6VXNlcjEyNDUzODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1245382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rebulanyum",
            "html_url": "https://github.com/rebulanyum",
            "followers_url": "https://api.github.com/users/rebulanyum/followers",
            "following_url": "https://api.github.com/users/rebulanyum/following{/other_user}",
            "gists_url": "https://api.github.com/users/rebulanyum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rebulanyum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rebulanyum/subscriptions",
            "organizations_url": "https://api.github.com/users/rebulanyum/orgs",
            "repos_url": "https://api.github.com/users/rebulanyum/repos",
            "events_url": "https://api.github.com/users/rebulanyum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rebulanyum/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T09:14:41Z",
        "updated_at": "2016-03-07T09:14:41Z",
        "author_association": "NONE",
        "body": "Well it's just a collection with items of type `KeyValuePair<string, object>`. Right? And KeyValuePair is just a struct with 2 properties: Key and Value. So what should I do about it? \n\nAnd I think, on the contrary, Google.ProtocolBuffers supports map fields with [version 3](https://developers.google.com/protocol-buffers/docs/reference/proto3-spec#map_field) and even with [version 2](https://developers.google.com/protocol-buffers/docs/reference/proto2-spec#map_field).\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193185590",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193185590",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193185590,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzE4NTU5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T09:53:00Z",
        "updated_at": "2016-03-07T09:53:00Z",
        "author_association": "OWNER",
        "body": "The problem isn't the map - protobuf-net would happily support\n`Dictionary<string,Project>`, to use the example from your links; it is the\n\"object\". Protobuf wants to know _what it is deserializing_. So again: what\nare the actual values?\n\nOn 7 March 2016 at 09:14, rebulanyum notifications@github.com wrote:\n\n> Well it's just a collection with items of type KeyValuePair<string,\n> object>. Right? And KeyValuePair is just a struct with 2 properties: Key\n> and Value. So what should I do about it?\n> \n> And I think, on the contrary, Google.ProtocolBuffers supports map fields\n> with version 3\n> https://developers.google.com/protocol-buffers/docs/reference/proto3-spec#map_field\n> and even with version 2\n> https://developers.google.com/protocol-buffers/docs/reference/proto2-spec#map_field\n> .\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193172891\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193272526",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193272526",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193272526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI3MjUyNg==",
        "user": {
            "login": "rebulanyum",
            "id": 1245382,
            "node_id": "MDQ6VXNlcjEyNDUzODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1245382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rebulanyum",
            "html_url": "https://github.com/rebulanyum",
            "followers_url": "https://api.github.com/users/rebulanyum/followers",
            "following_url": "https://api.github.com/users/rebulanyum/following{/other_user}",
            "gists_url": "https://api.github.com/users/rebulanyum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rebulanyum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rebulanyum/subscriptions",
            "organizations_url": "https://api.github.com/users/rebulanyum/orgs",
            "repos_url": "https://api.github.com/users/rebulanyum/repos",
            "events_url": "https://api.github.com/users/rebulanyum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rebulanyum/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T14:32:45Z",
        "updated_at": "2016-03-07T14:32:45Z",
        "author_association": "NONE",
        "body": "Oh, I'm sorry for my bad understanding...\n\nThe \"object\" is sometimes `string`, sometimes `Microsoft.Xrm.Sdk.EntityReference`. It's not a single fixed type. But even strings are not serializing... \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/193294652",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193294652",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/146",
        "id": 193294652,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzI5NDY1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-07T15:18:18Z",
        "updated_at": "2016-03-07T15:18:18Z",
        "author_association": "OWNER",
        "body": "> But even strings are not serializing...\n\nThat is expected. It knows that in the general case it doesn't know how to\nwork with \"object\", so it isn't happy to start trying, unless it has been\nspecifically configured to treat it as a string-string map. But\nfundamentally, I would again simply suggest that anything based on this\nmuch implementation details rather than data details _isn't a good choice\nfor serialization_. The preference here (IMO) would be to create a DTO\nmodel specifically intended for serialization, that represents the _data_\nyou want to serialize, rather than the active object model you happen to be\nusing at the timel\n\nOn 7 March 2016 at 14:32, rebulanyum notifications@github.com wrote:\n\n> Oh, I'm sorry for my bad understanding...\n> \n> The \"object\" is sometimes string, sometimes\n> Microsoft.Xrm.Sdk.EntityReference. It's not a single fixed type. But even\n> strings are not serializing...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/146#issuecomment-193272526\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/199889028",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-199889028",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 199889028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTg4OTAyOA==",
        "user": {
            "login": "monsdar",
            "id": 4217216,
            "node_id": "MDQ6VXNlcjQyMTcyMTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4217216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monsdar",
            "html_url": "https://github.com/monsdar",
            "followers_url": "https://api.github.com/users/monsdar/followers",
            "following_url": "https://api.github.com/users/monsdar/following{/other_user}",
            "gists_url": "https://api.github.com/users/monsdar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monsdar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monsdar/subscriptions",
            "organizations_url": "https://api.github.com/users/monsdar/orgs",
            "repos_url": "https://api.github.com/users/monsdar/repos",
            "events_url": "https://api.github.com/users/monsdar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monsdar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T16:22:58Z",
        "updated_at": "2016-03-22T16:22:58Z",
        "author_association": "NONE",
        "body": "Any updates on this topic? Is this issue not updated because there are better ways of integrating Protobuf into Unity, or is there simply no interest?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/199924143",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-199924143",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 199924143,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTkyNDE0Mw==",
        "user": {
            "login": "AqlaSolutions",
            "id": 3465565,
            "node_id": "MDQ6VXNlcjM0NjU1NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3465565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AqlaSolutions",
            "html_url": "https://github.com/AqlaSolutions",
            "followers_url": "https://api.github.com/users/AqlaSolutions/followers",
            "following_url": "https://api.github.com/users/AqlaSolutions/following{/other_user}",
            "gists_url": "https://api.github.com/users/AqlaSolutions/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AqlaSolutions/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AqlaSolutions/subscriptions",
            "organizations_url": "https://api.github.com/users/AqlaSolutions/orgs",
            "repos_url": "https://api.github.com/users/AqlaSolutions/repos",
            "events_url": "https://api.github.com/users/AqlaSolutions/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AqlaSolutions/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T17:33:46Z",
        "updated_at": "2016-03-22T17:33:46Z",
        "author_association": "NONE",
        "body": "@monsdar you can simple use dlls from zip download on github, in releases section.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/199952897",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/6#issuecomment-199952897",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/6",
        "id": 199952897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk1Mjg5Nw==",
        "user": {
            "login": "monsdar",
            "id": 4217216,
            "node_id": "MDQ6VXNlcjQyMTcyMTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4217216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monsdar",
            "html_url": "https://github.com/monsdar",
            "followers_url": "https://api.github.com/users/monsdar/followers",
            "following_url": "https://api.github.com/users/monsdar/following{/other_user}",
            "gists_url": "https://api.github.com/users/monsdar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monsdar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monsdar/subscriptions",
            "organizations_url": "https://api.github.com/users/monsdar/orgs",
            "repos_url": "https://api.github.com/users/monsdar/repos",
            "events_url": "https://api.github.com/users/monsdar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monsdar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-22T18:31:17Z",
        "updated_at": "2016-03-22T18:31:17Z",
        "author_association": "NONE",
        "body": "Figured that out a minute ago, thanks a lot for the fast answer :)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/202470420",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-202470420",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 202470420,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjQ3MDQyMA==",
        "user": {
            "login": "akatz0813",
            "id": 7572738,
            "node_id": "MDQ6VXNlcjc1NzI3Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7572738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akatz0813",
            "html_url": "https://github.com/akatz0813",
            "followers_url": "https://api.github.com/users/akatz0813/followers",
            "following_url": "https://api.github.com/users/akatz0813/following{/other_user}",
            "gists_url": "https://api.github.com/users/akatz0813/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akatz0813/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akatz0813/subscriptions",
            "organizations_url": "https://api.github.com/users/akatz0813/orgs",
            "repos_url": "https://api.github.com/users/akatz0813/repos",
            "events_url": "https://api.github.com/users/akatz0813/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akatz0813/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-28T16:23:32Z",
        "updated_at": "2016-03-28T16:23:32Z",
        "author_association": "NONE",
        "body": "@mgravell Are you waiting on RC2 to ship (understandably so) before starting on this?  \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/203397032",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-203397032",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 203397032,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzM5NzAzMg==",
        "user": {
            "login": "omtslug",
            "id": 17267706,
            "node_id": "MDQ6VXNlcjE3MjY3NzA2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17267706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omtslug",
            "html_url": "https://github.com/omtslug",
            "followers_url": "https://api.github.com/users/omtslug/followers",
            "following_url": "https://api.github.com/users/omtslug/following{/other_user}",
            "gists_url": "https://api.github.com/users/omtslug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omtslug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omtslug/subscriptions",
            "organizations_url": "https://api.github.com/users/omtslug/orgs",
            "repos_url": "https://api.github.com/users/omtslug/repos",
            "events_url": "https://api.github.com/users/omtslug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omtslug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-30T12:00:59Z",
        "updated_at": "2016-03-30T12:00:59Z",
        "author_association": "NONE",
        "body": "fwiw I just want to comment that dropping field presence logic is the main reason I'm looking into this implementation. C# is on its way officially from g with proto3 but without any possibility to check if a \nfield is included or not. Please don't include that 'feature' here.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/207443472",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/152#issuecomment-207443472",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/152",
        "id": 207443472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzQ0MzQ3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-08T14:00:49Z",
        "updated_at": "2016-04-08T14:00:49Z",
        "author_association": "OWNER",
        "body": "Fair point. The changes to support this are fairly trivial - we've already\ndone the same with \"dapper\". But yes: definitely needs a code change.\nOn 8 Apr 2016 8:12 am, \"HellBrick\" notifications@github.com wrote:\n\n> It seems protobuf-net doesn't support C#6 read-only properties. Here's a\n> test to illustrate the problem:\n> \n> ```\n> [TestFixture]\n> public class ReadOnlyPropertyBugTest\n> {\n>     [Test]\n>     public void StructIsRoundTripped()\n>     {\n>         CustomStruct value = new CustomStruct( \"I'm a description ^_^\", DateTime.UtcNow );\n> \n>         using ( MemoryStream memory = new MemoryStream() )\n>         {\n>             Serializer.Serialize( memory, value );\n>             memory.Position = 0;\n>             CustomStruct deserialized = Serializer.Deserialize<CustomStruct>( memory );\n>             deserialized.Should().Be( value );\n>         }\n>     }\n> \n>     [ProtoContract]\n>     private struct CustomStruct : IEquatable<CustomStruct>\n>     {\n>         public CustomStruct( string description, DateTime importantDate )\n>         {\n>             Description = description;\n>             ImportantDate = importantDate;\n>         }\n> \n>         [ProtoMember( 1 )]\n>         public string Description { get; }\n> \n>         [ProtoMember( 2 )]\n>         public DateTime ImportantDate { get; }\n> \n>         public override string ToString() => $\"[{ImportantDate}] {Description}\";            public bool Equals( CustomStruct other ) => Description == other.Description && ImportantDate == other.ImportantDate;            public override bool Equals( object obj ) => obj is CustomStruct && Equals( (CustomStruct) obj );        }    }\n> ```\n> \n> It fails with the following exception:\n> \n> System.InvalidOperationException : Cannot apply changes to property Utils.Test.Events.ReadOnlyPropertyBugTest+CustomStruct.Description\n>    at ProtoBuf.Serializers.PropertyDecorator.SanityCheck(TypeModel model, PropertyInfo property, IProtoSerializer tail, Boolean& writeValue, Boolean nonPublic, Boolean allowInternal) in c:\\Dev\\protobuf-net\\protobuf-net\\Serializers\\PropertyDecorator.cs:line 46\n>    at ProtoBuf.Serializers.PropertyDecorator..ctor(TypeModel model, Type forType, PropertyInfo property, IProtoSerializer tail) in c:\\Dev\\protobuf-net\\protobuf-net\\Serializers\\PropertyDecorator.cs:line 32\n>    at ProtoBuf.Meta.ValueMember.BuildSerializer() in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\ValueMember.cs:line 375\n>    at ProtoBuf.Meta.MetaType.BuildSerializer() in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\MetaType.cs:line 408\n>    at ProtoBuf.Meta.MetaType.get_Serializer() in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\MetaType.cs:line 384\n>    at ProtoBuf.Meta.RuntimeTypeModel.Serialize(Int32 key, Object value, ProtoWriter dest) in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\RuntimeTypeModel.cs:line 752\n>    at ProtoBuf.Meta.TypeModel.SerializeCore(ProtoWriter writer, Object value) in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\TypeModel.cs:line 192\n>    at ProtoBuf.Meta.TypeModel.Serialize(Stream dest, Object value, SerializationContext context) in c:\\Dev\\protobuf-net\\protobuf-net\\Meta\\TypeModel.cs:line 218\n>    at ProtoBuf.Serializer.Serialize[T](Stream destination, T instance) in c:\\Dev\\protobuf-net\\protobuf-net\\Serializer.cs:line 89\n> \n> It should be quite possible to fix this, because there's already support\n> for read-only fields. If I change the property declarations like this, the\n> test is going to pass:\n> \n> ```\n>         [ProtoMember( 1 )]\n>         private readonly string _description;\n>         public string Description => _description;\n> \n>         [ProtoMember( 2 )]\n>         private readonly DateTime _importantDate;\n>         public DateTime ImportantDate => _importantDate;\n> ```\n> \n> It seems what's missing is a way to leverage this mechanism by recognizing\n> the generated backing fields and pulling the [ProtoXXX] attributes from\n> the corresponding properties. I wouldn't mind doing it myself and sending\n> you a PR, but I'd like to hear your thoughts on this matter first. (And if\n> you can give any tips on what parts of the code base are responsible for\n> this, this would be very helpful as well.)\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/152\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/219515951",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-219515951",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 219515951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTUxNTk1MQ==",
        "user": {
            "login": "akatz0813",
            "id": 7572738,
            "node_id": "MDQ6VXNlcjc1NzI3Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7572738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akatz0813",
            "html_url": "https://github.com/akatz0813",
            "followers_url": "https://api.github.com/users/akatz0813/followers",
            "following_url": "https://api.github.com/users/akatz0813/following{/other_user}",
            "gists_url": "https://api.github.com/users/akatz0813/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akatz0813/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akatz0813/subscriptions",
            "organizations_url": "https://api.github.com/users/akatz0813/orgs",
            "repos_url": "https://api.github.com/users/akatz0813/repos",
            "events_url": "https://api.github.com/users/akatz0813/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akatz0813/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-16T19:04:53Z",
        "updated_at": "2016-05-16T19:04:53Z",
        "author_association": "NONE",
        "body": "@mgravell any word on support now that RC2 is released?  \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/219566060",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-219566060",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 219566060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTU2NjA2MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-16T22:20:54Z",
        "updated_at": "2016-05-16T22:20:54Z",
        "author_association": "OWNER",
        "body": "There has been an experimental rc1 build on nuget for quite some time. Now\nthat rc2 is released, I have a lot of libs to re-deploy; yes, this is on\nthe list.\n\nOn Mon, 16 May 2016 20:05 akatz0813, notifications@github.com wrote:\n\n> @mgravell https://github.com/mgravell any word on support now that RC2\n> is released?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/108#issuecomment-219515951\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/221730486",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-221730486",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 221730486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTczMDQ4Ng==",
        "user": {
            "login": "akatz0813",
            "id": 7572738,
            "node_id": "MDQ6VXNlcjc1NzI3Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7572738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akatz0813",
            "html_url": "https://github.com/akatz0813",
            "followers_url": "https://api.github.com/users/akatz0813/followers",
            "following_url": "https://api.github.com/users/akatz0813/following{/other_user}",
            "gists_url": "https://api.github.com/users/akatz0813/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akatz0813/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akatz0813/subscriptions",
            "organizations_url": "https://api.github.com/users/akatz0813/orgs",
            "repos_url": "https://api.github.com/users/akatz0813/repos",
            "events_url": "https://api.github.com/users/akatz0813/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akatz0813/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-25T22:47:02Z",
        "updated_at": "2016-05-25T22:47:02Z",
        "author_association": "NONE",
        "body": "I'd gladly make some kind of financial contribution to bump this higher in the priority.  I can't adopt a lick of .net core without this.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/222205619",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/156#issuecomment-222205619",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/156",
        "id": 222205619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjIwNTYxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-27T17:26:48Z",
        "updated_at": "2016-05-27T17:26:48Z",
        "author_association": "OWNER",
        "body": "The protobuf specification simply has no mechanism in the format to express\na null. I don't think this can be fixed as such. It is a protocol\nlimitation.\nOn 27 May 2016 3:38 pm, \"gabriele-ricci-kyklos\" notifications@github.com\nwrote:\n\n> We use your library to increase performance in tcp communication between\n> our softwares, and it's working wvery well. But today I encountered a very\n> strange situation.\n> I tried to serialize a container class I had modified adding a new\n> collection. I got this exception:\n> \n> System.NullReferenceException: Object reference not set to an instance of an object.\n>    in ProtoBuf.Serializers.ArrayDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.PropertyDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TypeSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Meta.RuntimeTypeModel.Serialize(Int32 key, Object value, ProtoWriter dest)\n>    in ProtoBuf.ProtoWriter.WriteObject(Object value, Int32 key, ProtoWriter writer)\n>    in ProtoBuf.Serializers.SubItemSerializer.ProtoBuf.Serializers.IProtoSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TagDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.PropertyDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TypeSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Meta.RuntimeTypeModel.Serialize(Int32 key, Object value, ProtoWriter dest)\n>    in ProtoBuf.ProtoWriter.WriteRecursionSafeObject(Object value, Int32 key, ProtoWriter writer)\n>    in ProtoBuf.Serializers.SubItemSerializer.ProtoBuf.Serializers.IProtoSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TagDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TypeSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Meta.RuntimeTypeModel.Serialize(Int32 key, Object value, ProtoWriter dest)\n>    in ProtoBuf.ProtoWriter.WriteRecursionSafeObject(Object value, Int32 key, ProtoWriter writer)\n>    in ProtoBuf.Serializers.SubItemSerializer.ProtoBuf.Serializers.IProtoSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TagDecorator.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Serializers.TypeSerializer.Write(Object value, ProtoWriter dest)\n>    in ProtoBuf.Meta.RuntimeTypeModel.Serialize(Int32 key, Object value, ProtoWriter dest)\n>    in ProtoBuf.Meta.TypeModel.SerializeCore(ProtoWriter writer, Object value)\n>    in ProtoBuf.Meta.TypeModel.Serialize(Stream dest, Object value, SerializationContext context)\n>    in ProtoBuf.Meta.TypeModel.Serialize(Stream dest, Object value)\n> \n> I checked the definitions ten times and even if all seemed right I still\n> kept getting the exception. So I downloaded the source code and I manually\n> debugged the method ProtoBuf.Serializers.ArrayDecorator.Write(Object\n> value, ProtoWriter dest)\n> finding that there actually is a NullReferenceException throwing at line\n> 157:\n> \n> if (checkForNull && obj == null) { throw new NullReferenceException(); }\n> \n> The exception is thrown because obj is the actual item of the array. Is\n> there a fix that you can do to prevent this behaviour?\n> \n> Please also notice: google/protobuf#827\n> https://github.com/google/protobuf/issues/827\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/156, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsNQhHvGevsKPtz2sNQGwzEJeW2e1ks5qFwHwgaJpZM4IokDn\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/222431093",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/156#issuecomment-222431093",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/156",
        "id": 222431093,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQzMTA5Mw==",
        "user": {
            "login": "gabriele-ricci-kyklos",
            "id": 14179578,
            "node_id": "MDQ6VXNlcjE0MTc5NTc4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14179578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gabriele-ricci-kyklos",
            "html_url": "https://github.com/gabriele-ricci-kyklos",
            "followers_url": "https://api.github.com/users/gabriele-ricci-kyklos/followers",
            "following_url": "https://api.github.com/users/gabriele-ricci-kyklos/following{/other_user}",
            "gists_url": "https://api.github.com/users/gabriele-ricci-kyklos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gabriele-ricci-kyklos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gabriele-ricci-kyklos/subscriptions",
            "organizations_url": "https://api.github.com/users/gabriele-ricci-kyklos/orgs",
            "repos_url": "https://api.github.com/users/gabriele-ricci-kyklos/repos",
            "events_url": "https://api.github.com/users/gabriele-ricci-kyklos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gabriele-ricci-kyklos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-30T07:37:43Z",
        "updated_at": "2016-05-30T09:01:12Z",
        "author_association": "NONE",
        "body": "That's ok, but I'm not expecting a `NullReferenceException`. This exception doesn't tell me much about what's wrong.\n\n If I serialize an array of 5 element with 3 of them set to null, can protobuf simply give me back an array of 2 elements?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/222495311",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/157#issuecomment-222495311",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/157",
        "id": 222495311,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjQ5NTMxMQ==",
        "user": {
            "login": "eric-b",
            "id": 2078047,
            "node_id": "MDQ6VXNlcjIwNzgwNDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2078047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-b",
            "html_url": "https://github.com/eric-b",
            "followers_url": "https://api.github.com/users/eric-b/followers",
            "following_url": "https://api.github.com/users/eric-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-b/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-b/orgs",
            "repos_url": "https://api.github.com/users/eric-b/repos",
            "events_url": "https://api.github.com/users/eric-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-30T13:42:05Z",
        "updated_at": "2016-05-30T13:43:27Z",
        "author_association": "NONE",
        "body": "I eventually found the cause.\n\nThis sample will throw a StackoverflowException:\n\n```\nvoid Main()\n{\n    var model = new Model();\n    model.Foo = new FooB() { Property2 = \"bar\" };\n\n    var modelBuffer = new Model();\n    modelBuffer.Foo = new FooA();\n\n    var serializer = RuntimeTypeModel.Default;\n\n    using (var ms = new MemoryStream())\n    {\n        serializer.Serialize(ms, model);\n        ms.Position = 0;\n        serializer.Deserialize(ms, modelBuffer, typeof(Model));\n    }\n\n}\n\n[ProtoContract]\npublic sealed class Model\n{\n    [ProtoMember(1)]\n    public FooBase Foo { get; set; }\n\n}\n\n[ProtoContract]\n[ProtoInclude(100, typeof(FooA))]\n[ProtoInclude(200, typeof(FooB))]\npublic abstract class FooBase\n{\n}\n\n[ProtoContract]\npublic sealed class FooA : FooBase\n{\n    [ProtoMember(1)]\n    public string Property1 { get; set; }\n}\n\n[ProtoContract]\npublic sealed class FooB : FooBase\n{\n    [ProtoMember(1)]\n    public string Property2 { get; set; }\n}\n```\n- Model.Foo property's type is abstract (FooBase).\n- If we try to deserialize an object containing the subtype FooA in Model.Foo, with a buffer instance containing a subtype FooB, the application crashes.\n\nThe workaround here is to reinitialize the buffer instance with Model.Foo = null. Until now, I used to only reset the properties of Model.Foo.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/224975083",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-224975083",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 224975083,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk3NTA4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-09T17:54:39Z",
        "updated_at": "2016-06-09T17:54:39Z",
        "author_association": "OWNER",
        "body": "I have not yet updated it to current RCs.\n\nOn Thu, 9 Jun 2016 10:50 William Davis, notifications@github.com wrote:\n\n> It appears that the project supports .NET Core 4.5 (is that even a thing?)\n> But does support .NET Core RC1\n> \n> [image: image]\n> https://cloud.githubusercontent.com/assets/2580575/15925646/f9a27ea6-2e05-11e6-9745-1acdaa04714b.png\n> \n> Errors in C:\\users\\willi\\documents\\visual studio\n> 2015\\Projects\\ConsoleApp1\\src\\ConsoleApp1\\project.json\n> \n> Package protobuf-net 2.0.0.668 is not compatible with netcoreapp1.0 (.NETCoreApp,Version=v1.0). Package protobuf-net\n> \n> 2.0.0.668 supports:\n> - net20 (.NETFramework,Version=v2.0)\n> - net20-cf (.NETFramework,Version=v2.0,Profile=CompactFramework)\n> - net30 (.NETFramework,Version=v3.0)\n> - net35 (.NETFramework,Version=v3.5)\n> - net35-cf (.NETFramework,Version=v3.5,Profile=CompactFramework)\n> - net40 (.NETFramework,Version=v4.0)\n> - net40-cf (.NETFramework,Version=v4.0,Profile=CompactFramework)\n>   _\\- netcore45 (.NETCore,Version=v4.5)_\n> - portable-net40+sl4+win8+wp7 (.NETPortable,Version=v0.0,Profile=Profile2)\n> - sl3-wp (Silverlight,Version=v3.0,Profile=WindowsPhone)\n> - sl4 (Silverlight,Version=v4.0)\n> - sl4-wp71 (Silverlight,Version=v4.0,Profile=WindowsPhone71)\n> - wp8 (WindowsPhone,Version=v8.0)\n>   _One or more packages are incompatible with .NETCoreApp,Version=v1.0._\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/159, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsNy0YQqiae1rDG98J0eyj8ONvOqzks5qJ-HfgaJpZM4IxzXo\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225193512",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-225193512",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 225193512,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE5MzUxMg==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-10T14:15:29Z",
        "updated_at": "2016-06-10T14:15:29Z",
        "author_association": "NONE",
        "body": "I downloaded demo in this, in file protobuf-net.proto wrote as below:\n\npackage protobuf_net;\nimport \"descriptor.proto\";\n\nextend google.protobuf.FileOptions {\n  optional string namespace = 52500;\n}\n\n**while it created nothing:**\n//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n// Generated from: protobuf-net.proto\n// Note: requires additional types generated from: descriptor.proto\nnamespace protobuf_net\n{\n}\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225529146",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/162#issuecomment-225529146",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/162",
        "id": 225529146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTUyOTE0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-13T09:17:38Z",
        "updated_at": "2016-06-13T09:17:38Z",
        "author_association": "OWNER",
        "body": "Dammit, I hate the Uri type; craziness ensues every time. Suggestion: just\nsend a string?\n\nOn 13 June 2016 at 10:07, Ivan Demchuk notifications@github.com wrote:\n\n> Serialization of relative URL results in exception:\n> \n> An exception of type 'System.InvalidOperationException' occurred in System.dll but was not handled in user code\n> Additional information: This operation is not supported for a relative URI.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/162, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsBXfdPCqMqmdgfOU93Q8uZjAEJ3mks5qLR3jgaJpZM4I0IM2\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225535132",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/162#issuecomment-225535132",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/162",
        "id": 225535132,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTUzNTEzMg==",
        "user": {
            "login": "Demivan",
            "id": 2339406,
            "node_id": "MDQ6VXNlcjIzMzk0MDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2339406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Demivan",
            "html_url": "https://github.com/Demivan",
            "followers_url": "https://api.github.com/users/Demivan/followers",
            "following_url": "https://api.github.com/users/Demivan/following{/other_user}",
            "gists_url": "https://api.github.com/users/Demivan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Demivan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Demivan/subscriptions",
            "organizations_url": "https://api.github.com/users/Demivan/orgs",
            "repos_url": "https://api.github.com/users/Demivan/repos",
            "events_url": "https://api.github.com/users/Demivan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Demivan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-13T09:43:53Z",
        "updated_at": "2016-06-13T09:43:53Z",
        "author_association": "NONE",
        "body": "I will probably convert URLs to strings for now.\nI wanted to implement surrogate for URI class but surrogate types cannot be used on types with inbuilt behavior. Can I somehow change serialization of inbuilt type?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225545743",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-225545743",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 225545743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU0NTc0Mw==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-13T10:34:12Z",
        "updated_at": "2016-06-13T10:34:12Z",
        "author_association": "NONE",
        "body": "Hey, I want to use custom options?\nDoes not support it?\nThank u.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225549664",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-225549664",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 225549664,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTU0OTY2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-13T10:55:29Z",
        "updated_at": "2016-06-13T10:55:29Z",
        "author_association": "OWNER",
        "body": "`Extensible.GetValue`; for example:\nhttp://stackoverflow.com/questions/2218793/how-to-use-protobuf-net-extensions\n\nOn 13 June 2016 at 11:34, LazyPlanet notifications@github.com wrote:\n\n> Hey, I want to use custom options?\n> Does not support it?\n> Thank u.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/160#issuecomment-225545743,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsA3KTmcUOAc-eaRa12Fsxn-z2JINks5qLTIkgaJpZM4Iy-TP\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/225760565",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-225760565",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 225760565,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTc2MDU2NQ==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-14T02:03:56Z",
        "updated_at": "2016-06-14T02:03:56Z",
        "author_association": "NONE",
        "body": "Thank u, but you may mistake what I mean,\n\n## My question is in\n\nimport \"google/protobuf/descriptor.proto\";\n     extend google.protobuf.MessageOptions {\n     optional string my_option = 51234;\n}\nmessage MyMessage {\n     option (my_option) = \"Hello world!\";\n\n## }\n\n**How can i get my_option value from MyMessage ?**\nThank u for your time.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/226385649",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-226385649",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 226385649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjM4NTY0OQ==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-16T04:29:50Z",
        "updated_at": "2016-06-16T04:29:50Z",
        "author_association": "NONE",
        "body": "Does it support?\nThank u.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/226678955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/160#issuecomment-226678955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/160",
        "id": 226678955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjY3ODk1NQ==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-17T04:38:54Z",
        "updated_at": "2016-06-17T04:38:54Z",
        "author_association": "NONE",
        "body": "I have search as below:\nhttp://stackoverflow.com/questions/8421463/how-to-support-custom-options-with-protobuf-net\nhttp://stackoverflow.com/questions/5458477/generate-c-sharp-from-proto-files-and-vice-versa-interpreting-custom-options\n\nWhat a pity it does not support it.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/226929382",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/164#issuecomment-226929382",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/164",
        "id": 226929382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjkyOTM4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-18T08:28:24Z",
        "updated_at": "2016-06-18T08:28:24Z",
        "author_association": "OWNER",
        "body": "Are you talking about the collection accessor? It is pretty rare and\nunusual for collection accessors to have setters - and frankly, that isn't\nhow you're meant to use them. I'm not sure how implementing this would\nimprove the general case, but you're welcome to change the xslt locally\n(just drop a modified csharp.xslt next to the generator, and it will use it)\n\nOn Sat, 18 Jun 2016 07:04 LazyPlanet, notifications@github.com wrote:\n\n> When I write proto file like this:\n> message Material {\n> optional int32 m = 1;\n> }\n> message Forge{\n> repeated Material materials = 1;\n> }\n> \n> And I want to use Reflection to set a Property with type as follow:\n> `Forge forge = new Forge ();\n> PropertyInfo pi = forge.GetType().GetProperty(\"materials \");\n> Object instance = Activator.CreateInstance(property.ProtoperyType);\n> IList list = (IList) instance;\n> \n> Material ma = new Material();\n> ma.m = 10;\n> list.Add(ma);\n> \n> pi.SetValue(forge, list, null);`\n> \n> It asserts...For code generated is \"readonly\" and has not \"set\" function...\n> I do not know why repeated items generated like that.\n> Thank u.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/164, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsL1pIKP51YtnnMn969iVZUDQHuFwks5qM4p7gaJpZM4I44UG\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/226930313",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/164#issuecomment-226930313",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/164",
        "id": 226930313,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjkzMDMxMw==",
        "user": {
            "login": "LazyPlanet",
            "id": 15156350,
            "node_id": "MDQ6VXNlcjE1MTU2MzUw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15156350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LazyPlanet",
            "html_url": "https://github.com/LazyPlanet",
            "followers_url": "https://api.github.com/users/LazyPlanet/followers",
            "following_url": "https://api.github.com/users/LazyPlanet/following{/other_user}",
            "gists_url": "https://api.github.com/users/LazyPlanet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LazyPlanet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LazyPlanet/subscriptions",
            "organizations_url": "https://api.github.com/users/LazyPlanet/orgs",
            "repos_url": "https://api.github.com/users/LazyPlanet/repos",
            "events_url": "https://api.github.com/users/LazyPlanet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LazyPlanet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-18T08:53:23Z",
        "updated_at": "2016-06-18T08:53:23Z",
        "author_association": "NONE",
        "body": "Thank u, It works. I have another mix about custom options :\n\nmessage person {\n   option (my_message_option) = true;\n\n   optional string firstname = 1 [(my_field_option) = 42];\n   optional string lastname = 2 [(my_field_option) = 12];\n   optional int age = 3;\n}\nI want to generate:\n\n[ProtoContract, MyMessageOption(true)]\npublic class Person\n{\n    [ProtoMember(1), MyFieldOption(42)]\n    public string Firstname;\n\n```\n[ProtoMember(2), MyFieldOption(12)]\npublic string Firstname;\n\n[ProtoMember(3)]\npublic string Firstname;\n```\n\n}\n\nHow can i do that, does it support that ? and I have seen this article as below:\nhttp://stackoverflow.com/questions/5458477/generate-c-sharp-from-proto-files-and-vice-versa-interpreting-custom-options\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/226973113",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/164#issuecomment-226973113",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/164",
        "id": 226973113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk3MzExMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-19T00:50:17Z",
        "updated_at": "2016-06-19T00:50:17Z",
        "author_association": "OWNER",
        "body": "Protobuf-net doesn't support custom options as attributes, and the nature\nof partial classes doesn't make it convenient for them either.\n\nOn Sat, 18 Jun 2016 09:53 LazyPlanet, notifications@github.com wrote:\n\n> Thank u, It works. I have another mix about custom options :\n> \n> message person {\n> option (my_message_option) = true;\n> \n> optional string firstname = 1 [(my_field_option) = 42];\n> optional string lastname = 2 [(my_field_option) = 12];\n> optional int age = 3;\n> }\n> I want to generate:\n> \n> [ProtoContract, MyMessageOption(true)]\n> public class Person\n> {\n> [ProtoMember(1), MyFieldOption(42)]\n> public string Firstname;\n> \n> [ProtoMember(2), MyFieldOption(12)]\n> public string Firstname;\n> \n> [ProtoMember(3)]\n> public string Firstname;\n> \n> }\n> \n> How can i do that, does it support that ? and I have seen this article as\n> below:\n> \n> http://stackoverflow.com/questions/5458477/generate-c-sharp-from-proto-files-and-vice-versa-interpreting-custom-options\n> \n> \u2014\n> You are receiving this because you commented.\n> \n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/164#issuecomment-226930313,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsLbaKztOEAHffn7ZsI1y-mQPyz1Jks5qM7IDgaJpZM4I44UG\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/227549207",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/79#issuecomment-227549207",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/79",
        "id": 227549207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU0OTIwNw==",
        "user": {
            "login": "tlhintoq",
            "id": 11351506,
            "node_id": "MDQ6VXNlcjExMzUxNTA2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11351506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlhintoq",
            "html_url": "https://github.com/tlhintoq",
            "followers_url": "https://api.github.com/users/tlhintoq/followers",
            "following_url": "https://api.github.com/users/tlhintoq/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlhintoq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlhintoq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlhintoq/subscriptions",
            "organizations_url": "https://api.github.com/users/tlhintoq/orgs",
            "repos_url": "https://api.github.com/users/tlhintoq/repos",
            "events_url": "https://api.github.com/users/tlhintoq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlhintoq/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-21T19:41:40Z",
        "updated_at": "2016-06-21T19:41:40Z",
        "author_association": "NONE",
        "body": "I'm guessing this project is abandoned or at least relegated to old hardware & OSes.  WinPhone?  Windows8?  Really?  I'm in the same boat as @R2D221 where I would like to use this in a MODERN solution targeting .NET4.5, WindowsUWP and Xamarin.Forms PCL - Profile111\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/227965476",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/136#issuecomment-227965476",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/136",
        "id": 227965476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzk2NTQ3Ng==",
        "user": {
            "login": "zhangjia517",
            "id": 4230691,
            "node_id": "MDQ6VXNlcjQyMzA2OTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4230691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangjia517",
            "html_url": "https://github.com/zhangjia517",
            "followers_url": "https://api.github.com/users/zhangjia517/followers",
            "following_url": "https://api.github.com/users/zhangjia517/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangjia517/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangjia517/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangjia517/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangjia517/orgs",
            "repos_url": "https://api.github.com/users/zhangjia517/repos",
            "events_url": "https://api.github.com/users/zhangjia517/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangjia517/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-23T06:55:00Z",
        "updated_at": "2016-06-23T06:55:00Z",
        "author_association": "NONE",
        "body": "wow\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/228900172",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-228900172",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 228900172,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODkwMDE3Mg==",
        "user": {
            "login": "akatz0813",
            "id": 7572738,
            "node_id": "MDQ6VXNlcjc1NzI3Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7572738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akatz0813",
            "html_url": "https://github.com/akatz0813",
            "followers_url": "https://api.github.com/users/akatz0813/followers",
            "following_url": "https://api.github.com/users/akatz0813/following{/other_user}",
            "gists_url": "https://api.github.com/users/akatz0813/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akatz0813/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akatz0813/subscriptions",
            "organizations_url": "https://api.github.com/users/akatz0813/orgs",
            "repos_url": "https://api.github.com/users/akatz0813/repos",
            "events_url": "https://api.github.com/users/akatz0813/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akatz0813/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T22:54:17Z",
        "updated_at": "2016-06-27T22:54:17Z",
        "author_association": "NONE",
        "body": "@mgravell Realistically do you have an ETA or prioritization for this now that 1.0 RTM is out?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/228901722",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-228901722",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 228901722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODkwMTcyMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-06-27T23:02:19Z",
        "updated_at": "2016-06-27T23:02:19Z",
        "author_association": "OWNER",
        "body": "I'll be hoping to work through my list of libraries fairly soon - I\nunderstand that the ecosystem is dependent on libraries. Dapper will\nprobably be first, bit this shouldn't be far behind.\nOn 27 Jun 2016 11:54 p.m., \"akatz0813\" notifications@github.com wrote:\n\n> @mgravell https://github.com/mgravell Realistically do you have an ETA\n> or prioritization for this now that 1.0 RTM is out?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/108#issuecomment-228900172,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsLHbbaWQaslxAmmFZIq6BW_7kWftks5qQFSZgaJpZM4FuWEY\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/230142899",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-230142899",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 230142899,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE0Mjg5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-03T08:56:04Z",
        "updated_at": "2016-07-03T08:56:04Z",
        "author_association": "OWNER",
        "body": "It is very odd that it is doing a stack dive here, but I can look. Can you\ntell me : is there an Add method here? And is there an indexer (this[int\nindex])? I need to see the signatures because that is part of the signal it\nuses for determining the inner type.\nOn 3 Jul 2016 6:31 a.m., \"jhimes144\" notifications@github.com wrote:\n\n> I encountered a stackoverflow exception while serializing an object who's\n> purpose is to convey a tree structure. The object implements IEnumerable\n> and the enumerator implementation returns the object's children, which\n> happen to be the same type as the parent object... thus it appears\n> protobuffers net is scanning that implementation, even though its the same\n> type, infinite amount of times. This issue isn't critical for me as I can\n> conceive a workaround, but I'd feel sorry for the next guy who hits this\n> issue.\n> \n> ```\n> public class TreeObject\n> {\n> protected List<TreeObject> _children =\n>     new List<TreeObject>();\n> \n>     public virtual IEnumerator GetEnumerator()\n>     {\n>         return this._children.GetEnumerator();\n>     }\n> }\n> ```\n> \n> ^ Where the this._children is an enumeration of the same type.\n> \n> The stack trace is infinite calls of: TypeModel.GetListItemType\n> \n> It took me 2 hours to figure out the cause of this problem, and I was\n> furious because my Visual Studio was hanging for about 5 minutes every time\n> I hit the exception. Let me know if you need further information.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/167, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsHAtlUstyL60Yw755IduaebduW3Kks5qR0kZgaJpZM4JDzrZ\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/230143553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-230143553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 230143553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE0MzU1Mw==",
        "user": {
            "login": "jhimes144",
            "id": 20263191,
            "node_id": "MDQ6VXNlcjIwMjYzMTkx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20263191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhimes144",
            "html_url": "https://github.com/jhimes144",
            "followers_url": "https://api.github.com/users/jhimes144/followers",
            "following_url": "https://api.github.com/users/jhimes144/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhimes144/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhimes144/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhimes144/subscriptions",
            "organizations_url": "https://api.github.com/users/jhimes144/orgs",
            "repos_url": "https://api.github.com/users/jhimes144/repos",
            "events_url": "https://api.github.com/users/jhimes144/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhimes144/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-03T09:13:09Z",
        "updated_at": "2016-07-03T09:19:30Z",
        "author_association": "NONE",
        "body": "@mgravell Yes I took a quick look at the protobuf-net source to acquaint myself. The code for the TreeObject class does not make use of a method named Add neither does it have an indexer. As you probably already know the _children field does have an add method and indexer with it being a List. If you'd like I can attempt to create an example project to recreate the issue. If I can't produce an example project I can provide you with a private message containing code from an old commit that produces the problem. Keep me posted\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/230146925",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-230146925",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 230146925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE0NjkyNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-03T10:45:36Z",
        "updated_at": "2016-07-03T10:45:36Z",
        "author_association": "OWNER",
        "body": "protobuf-net isn't going to be interested in unmarked private fields unless\nit has good cause to do so. The code in the example you have provide simply\nfails with:\n\nSystem.InvalidOperationException: Type is not expected, and no contract can\nbe inferred: TreeObject\n\nI am very interested in what is happening here, and want to fix it (I'm in\nthe process of doing core-clr changes, so it is a good time to fix it), but\nI need a minimal repro to ensure that I'm investigating the correct\nproblem. It doesn't need to be your actual code, but it should ideally\nillustrate the same problem.\n\nIs there any chance you can provide a minimal repro?\n\nOn 3 July 2016 at 10:13, jhimes144 notifications@github.com wrote:\n\n> @mgravell https://github.com/mgravell Yes I took a quick look at the\n> source to acquaint myself. The code for the TreeObject class does not make\n> use of Add neither does it have an indexer. As you probably already knew\n> the _children field does have an add method and indexer. If you'd like I\n> can attempt to create an example project to recreate the issue. If I can't\n> produce an example project I can provide you with a private message\n> containing code from an old commit that produces the problem.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/167#issuecomment-230143553,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsJGI6C_pK2jIxHYbv1M0osfbGb3kks5qR30lgaJpZM4JDzrZ\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/230160722",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-230160722",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 230160722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE2MDcyMg==",
        "user": {
            "login": "jhimes144",
            "id": 20263191,
            "node_id": "MDQ6VXNlcjIwMjYzMTkx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20263191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhimes144",
            "html_url": "https://github.com/jhimes144",
            "followers_url": "https://api.github.com/users/jhimes144/followers",
            "following_url": "https://api.github.com/users/jhimes144/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhimes144/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhimes144/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhimes144/subscriptions",
            "organizations_url": "https://api.github.com/users/jhimes144/orgs",
            "repos_url": "https://api.github.com/users/jhimes144/repos",
            "events_url": "https://api.github.com/users/jhimes144/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhimes144/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-03T16:05:25Z",
        "updated_at": "2016-07-03T23:47:04Z",
        "author_association": "NONE",
        "body": "@mgravell  Sorry, the example I provided was just an excerpt, I should of included more. I wrote a very small console application that recreates the issue. The code only uses the latest nuget version of protobuffers-net. I was wrong about the indexer, my original code DID have an indexer that I forgot about and the bug DOES NOT occur unless an indexer is present. I was able to do this in 40 lines of code so it should be an easy read.\n\nFYI The children field is irrelevant to the issue, it appears to have something to do with the combination of the enumeration type and indexer. The children field is specified for code completeness.\n\nI didn't test whether the problem occurs with an explicit enumeration implementation with a type generic as well as a generic-less enumeration implementation. This is in regards to the problematic class in the source I provided.\n\nSource -\n[Program.zip](https://github.com/mgravell/protobuf-net/files/345153/Program.zip)\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/231280308",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231280308",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 231280308,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTI4MDMwOA==",
        "user": {
            "login": "jhimes144",
            "id": 20263191,
            "node_id": "MDQ6VXNlcjIwMjYzMTkx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20263191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhimes144",
            "html_url": "https://github.com/jhimes144",
            "followers_url": "https://api.github.com/users/jhimes144/followers",
            "following_url": "https://api.github.com/users/jhimes144/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhimes144/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhimes144/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhimes144/subscriptions",
            "organizations_url": "https://api.github.com/users/jhimes144/orgs",
            "repos_url": "https://api.github.com/users/jhimes144/repos",
            "events_url": "https://api.github.com/users/jhimes144/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhimes144/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-08T05:48:06Z",
        "updated_at": "2016-07-08T05:48:06Z",
        "author_association": "NONE",
        "body": "Any news on the bug? My team is actually very much relying on the fact that our implementation has this IEnumerable interface. I know your project is open source and you probably have a life outside of this, let me know where I can donate as well.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/231286489",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231286489",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 231286489,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTI4NjQ4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-08T06:37:39Z",
        "updated_at": "2016-07-08T06:37:39Z",
        "author_association": "OWNER",
        "body": "I missed the follow-up reply - entirely my mistake. Will look today. Thanks\nfor providing a repro.\nOn 8 Jul 2016 6:48 a.m., \"jhimes144\" notifications@github.com wrote:\n\n> Any news on the bug? My team is actually very much relying on the fact\n> that our implementation has this IEnumerable interface. I know your project\n> is open source and you probably have a life outside of this, let me know\n> where I can donate as well.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231280308,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsCQvDVkArBqa9fmpblCNUOZX7jLuks5qTeSWgaJpZM4JDzrZ\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/231317406",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231317406",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 231317406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTMxNzQwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-08T09:35:09Z",
        "updated_at": "2016-07-08T09:35:09Z",
        "author_association": "OWNER",
        "body": "K; I've fixed the library to stop it exploding, but the fundamental problem here is that a type (to protobuf-net) can either be a leaf or a list, not both; in being enumerable of itself, it tries to be both. The code isn't going to like the \"list\" style (it ... just doesn't parse), so it now reverts to \"leaf\". This will, however, mean that to get this to behave as you expect, you will need to still expose the downstream tree; this could be done by:\n\n```\n[ProtoMember(3)] // or whatever\nprotected List<TreeObject> _children = \n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/231317924",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231317924",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 231317924,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTMxNzkyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-08T09:37:42Z",
        "updated_at": "2016-07-08T09:38:07Z",
        "author_association": "OWNER",
        "body": "Note: to fix this using the existing library, you should be able to do:\n\n```\n[ProtoContract(IgnoreListHandling = true)]\nclass Problematic : IEnumerable\n{\n    [ProtoMember(3)] // or whatever\n    protected List<TreeObject> _children = \n```\n\nhere the `IgnoreListHandling` is checked **before** the code that is currently causing it to explode.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/231485069",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/167#issuecomment-231485069",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/167",
        "id": 231485069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ4NTA2OQ==",
        "user": {
            "login": "jhimes144",
            "id": 20263191,
            "node_id": "MDQ6VXNlcjIwMjYzMTkx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20263191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhimes144",
            "html_url": "https://github.com/jhimes144",
            "followers_url": "https://api.github.com/users/jhimes144/followers",
            "following_url": "https://api.github.com/users/jhimes144/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhimes144/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhimes144/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhimes144/subscriptions",
            "organizations_url": "https://api.github.com/users/jhimes144/orgs",
            "repos_url": "https://api.github.com/users/jhimes144/repos",
            "events_url": "https://api.github.com/users/jhimes144/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhimes144/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-08T22:11:29Z",
        "updated_at": "2016-07-08T22:11:29Z",
        "author_association": "NONE",
        "body": "Excellent, I've managed to create a class to surrogate our real life implementation for serialization, it allowed for a better implementation anyways. Thanks for your support. I've used protobuffers-net in a few projects. We used the library to transfer storage of data from a database implementation to a pure document-based storage implementation.\n\nI'd like to help in some way, If you are interested... I run a startup that generates documentation for projects like this... our back end uses protobuffers-net.\n\nhttps://www.docify.net/\n\nI think we could set you up with a free premium account if you have the slightest interest.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/232662210",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-232662210",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 232662210,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY2MjIxMA==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T13:16:49Z",
        "updated_at": "2016-07-14T13:16:49Z",
        "author_association": "NONE",
        "body": "+1 Need urgently\n\nThanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/232675304",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-232675304",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 232675304,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY3NTMwNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T14:05:55Z",
        "updated_at": "2016-07-14T14:05:55Z",
        "author_association": "OWNER",
        "body": "Well that's odd. I'll try to setup a minimal repro here.\nOn 14 Jul 2016 2:26 pm, \"pantonis\" notifications@github.com wrote:\n\n> Hi,\n> \n> I have an asp.net core application. I referenced protobuf-net 2.1.0\n> Project builds fine\n> \n> I have the following line of code\n> \n> And gives the following exception:\n> \n> An unhandled exception occurred while processing the request.\n> \n> FileLoadException: Could not load file or assembly 'protobuf-net, Version=2.1.0.0, Culture=neutral, PublicKeyToken=257b51d87d2e4d67' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\n> GetProto in HomeController.cs, line 17\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/171, or mute the thread\n> https://github.com/notifications/unsubscribe/AABDsFNRq5k10KuqS1bDXsH9yyxIgBwUks5qVjj_gaJpZM4JMbrK\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/232677292",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-232677292",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 232677292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY3NzI5Mg==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T14:12:58Z",
        "updated_at": "2016-07-14T14:13:19Z",
        "author_association": "NONE",
        "body": "This happened in an asp.net core (.net framework project) targeting .net46 with minimal code.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/233167324",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-233167324",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 233167324,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE2NzMyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-17T06:16:11Z",
        "updated_at": "2016-07-17T06:17:29Z",
        "author_association": "OWNER",
        "body": "So I set up a minimal asp.net core site, used `install-package protobuf-net` (it picked up 2.1.0), added some protobuf-net code, and... it simply worked. Cannot repro the issue. Please can you give more context about what you're doing. In particular, if you are using any indirect tooling (things that reference protobuf-net), check that either they have been updated, or that you have an assembly binding redirect (which should be added automatically when you install from nuget).\n\nFor completeness, here's the code I added to the `/Home/About` route of the default asp.net core app:\n\n```\n    [ProtoContract]\n    public class Foo\n    {\n        [ProtoMember(1)]\n        public string Bar { get; set; }\n    }\n    public IActionResult About()\n    {\n        using (var ms = new MemoryStream())\n        {\n            Serializer.Serialize(ms, new Foo { Bar = \"hello world\" });\n            ArraySegment<byte> buffer;\n            if (!ms.TryGetBuffer(out buffer)) throw new InvalidOperationException();\n\n            ViewData[\"Message\"] = BitConverter.ToString(\n                buffer.Array, buffer.Offset, buffer.Count);\n        }\n        return View();\n    }\n```\n\nand here's the PMC:\n\n```\nPM> install-package protobuf-net\n  GET https://api.nuget.org/v3/registration1-gz/protobuf-net/index.json\n  OK https://api.nuget.org/v3/registration1-gz/protobuf-net/index.json 136ms\nRetrieving package 'protobuf-net 2.1.0' from 'nuget.org'.\n  GET https://api.nuget.org/v3-flatcontainer/protobuf-net/2.1.0/protobuf-net.2.1.0.nupkg\n  OK https://api.nuget.org/v3-flatcontainer/protobuf-net/2.1.0/protobuf-net.2.1.0.nupkg 459ms\nInstalling protobuf-net 2.1.0.\nInstalling NuGet package protobuf-net.2.1.0.\nSuccessfully installed 'protobuf-net 2.1.0' to WebApplication1\nExecuting nuget actions took 1.39 sec\nTime Elapsed: 00:00:03.0723974\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/233167555",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-233167555",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 233167555,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE2NzU1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-17T06:25:25Z",
        "updated_at": "2016-07-17T06:25:25Z",
        "author_association": "OWNER",
        "body": "Actually, I'd used core-clr by mistake, but doing the same thing in asp.net core using .net framework also worked perfectly; minor tweak to the test code:\n\n```\n    public IActionResult About()\n    {\n        using (var ms = new MemoryStream())\n        {\n            Serializer.Serialize(ms, new Foo { Bar = \"hello world\" });\n\n            ViewData[\"Message\"] = BitConverter.ToString(\n                ms.GetBuffer(), 0, (int)ms.Length);\n        }\n        return View();\n    }\n```\n\n(`TryGetBuffer` vs `GetBuffer()`)\n\nStill cannot repro.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/233167570",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-233167570",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 233167570,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE2NzU3MA==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-17T06:26:06Z",
        "updated_at": "2016-07-17T06:26:06Z",
        "author_association": "NONE",
        "body": "I think I have found the issue. Apart from the web project I had my ViewModels as a class library. The protobuf lib there was version 2.0.0.668 and in the web project it was 2.1.0. As soon as I updated the class library to 2.1.0 it worked.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/233167661",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/171#issuecomment-233167661",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/171",
        "id": 233167661,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE2NzY2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-17T06:29:50Z",
        "updated_at": "2016-07-17T06:29:50Z",
        "author_association": "OWNER",
        "body": "Ah, k; an assembly binding redirect should also fix that.  I don't know if it has changed in the latest tooling, but app.config (not web.config) used to be the home for this: http://blog.rytmis.net/2016/03/29/asp-net-core-and-assembly-binding-redirects/\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235330128",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235330128",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 235330128,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMzMDEyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T16:47:26Z",
        "updated_at": "2016-07-26T16:47:26Z",
        "author_association": "OWNER",
        "body": "Inherit from Extensible. Add members for your 1 and 2. The rest should be\nstored opaquely without you needing to know anything about them.\n\nSo:\n\n```\n[ProtoContract] class Foo : Extensible {\n    [ProtoMember(1)] public string X {...}\n    [ProtoMember(2)] public string Y {...}\n\n}\n```\n\nOn Tue, 26 Jul 2016 15:57 Alexander Lutz, notifications@github.com wrote:\n\n> Maybe it is an stupid question but I couldn't find an solution.\n> \n> I've got an byte[] of serialized data and I know that first & second proto\n> members in it are strings. And I need to change only that members -\n> everything else must stay the same(other member's count is unknown so it's\n> type).\n> \n> How can I do that?\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/173, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsKu2iLD0bsNxdSmVFq2qZM8PHsxCks5qZiBhgaJpZM4JVPMl\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235331487",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235331487",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 235331487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMzMTQ4Nw==",
        "user": {
            "login": "SL-RU",
            "id": 4263405,
            "node_id": "MDQ6VXNlcjQyNjM0MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4263405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SL-RU",
            "html_url": "https://github.com/SL-RU",
            "followers_url": "https://api.github.com/users/SL-RU/followers",
            "following_url": "https://api.github.com/users/SL-RU/following{/other_user}",
            "gists_url": "https://api.github.com/users/SL-RU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SL-RU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SL-RU/subscriptions",
            "organizations_url": "https://api.github.com/users/SL-RU/orgs",
            "repos_url": "https://api.github.com/users/SL-RU/repos",
            "events_url": "https://api.github.com/users/SL-RU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SL-RU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T16:52:01Z",
        "updated_at": "2016-07-26T16:52:01Z",
        "author_association": "NONE",
        "body": "Awesome! Thanks!\n\n26.07.2016 19:47, Marc Gravell \u043f\u0438\u0448\u0435\u0442:\n\n> Inherit from Extensible. Add members for your 1 and 2. The rest should be\n> stored opaquely without you needing to know anything about them.\n> \n> So:\n> \n> [ProtoContract] class Foo : Extensible {\n> [ProtoMember(1)] public string X {...}\n> [ProtoMember(2)] public string Y {...}\n> \n> }\n> \n> On Tue, 26 Jul 2016 15:57 Alexander Lutz, notifications@github.com\n> wrote:\n> \n> > Maybe it is an stupid question but I couldn't find an solution.\n> > \n> > I've got an byte[] of serialized data and I know that first & second\n> > proto\n> > members in it are strings. And I need to change only that members -\n> > everything else must stay the same(other member's count is unknown\n> > so it's\n> > type).\n> > \n> > How can I do that?\n> > \n> > \u2014\n> > You are receiving this because you are subscribed to this thread.\n> > Reply to this email directly, view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/173, or mute the\n> > thread\n> > \n> > https://github.com/notifications/unsubscribe-auth/AABDsKu2iLD0bsNxdSmVFq2qZM8PHsxCks5qZiBhgaJpZM4JVPMl\n> > .\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235330128,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AEEN7WVIBAhio1sdeoYkAAjEl753X-o0ks5qZjokgaJpZM4JVPMl.\n\n## \n\n\u0421 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c, \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235369859",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235369859",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 235369859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM2OTg1OQ==",
        "user": {
            "login": "SL-RU",
            "id": 4263405,
            "node_id": "MDQ6VXNlcjQyNjM0MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4263405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SL-RU",
            "html_url": "https://github.com/SL-RU",
            "followers_url": "https://api.github.com/users/SL-RU/followers",
            "following_url": "https://api.github.com/users/SL-RU/following{/other_user}",
            "gists_url": "https://api.github.com/users/SL-RU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SL-RU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SL-RU/subscriptions",
            "organizations_url": "https://api.github.com/users/SL-RU/orgs",
            "repos_url": "https://api.github.com/users/SL-RU/repos",
            "events_url": "https://api.github.com/users/SL-RU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SL-RU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T18:59:08Z",
        "updated_at": "2016-07-26T18:59:08Z",
        "author_association": "NONE",
        "body": "Well, I've got a new problem.\n\nThat class was made as you sad.\n\n```\n    [ProtoContract]\n    public class SqliteDbInterfaceVersionData : Extensible\n    {\n        [ProtoMember(1)]\n        public string Locked { get; set; }\n\n        [ProtoMember(2)]\n        public string Version { get; set; }\n\n        [ProtoMember(3)]\n        public string EditBy { get; set; }\n\n        [ProtoMember(4)]\n        public string EditTime { get; set; }\n    }\n```\n\nThat class is one of which is serialized\n\n```\n    [ProtoContract]\n    public class TextData : IData, INotifyPropertyChanged\n    {\n        private string _locked;\n\n        [ProtoMember(1)]\n        public string Locked { get; set; }\n\n        private string _version;\n        [ProtoMember(2)]\n        public string Version { get { return _version; } set { _version = value; OnPropertyChanged(); } }\n\n        private string _editBy;\n\n        [ProtoMember(3)]\n        public string EditBy\n        {\n            get { return _editBy; }\n            set\n            {\n                _editBy = value;\n                OnPropertyChanged(); \n            }\n        }\n\n        private string _editTime;\n        [ProtoMember(4)]\n        public string EditTime { get { return _editTime; } set { _editTime = value; OnPropertyChanged(); } }\n\n        private string _text;\n        [ProtoMember(5)]\n        public string Text\n        {\n            get { return _text; }\n            set { _text = value; OnPropertyChanged(); }\n        }\n\n        public string Id { get; set; }\n        public bool IsFullDataRecieved => true;\n\n        #region notify\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n\n        #endregion\n    }\n```\n\nWhat am I doing:\n1. I'm serializing TextData \n\n```\n        public T Deserialize(byte[] s)\n        {\n            using (var m = new MemoryStream(s))\n            {\n                return (T)Serializer.Deserialize(typeof(T), m);\n            }\n        }\n\n        public byte[] Serialize(T data)\n        {\n            using (var m = new MemoryStream())\n            {\n                Serializer.Serialize(m, data);\n                return m.ToArray();\n            }\n        }\n```\n1. Deserializing that data as DbInterfaceVersionData \n\n```\n            SqliteDbInterfaceVersionData d;\n            using (var m = new MemoryStream(data))\n            {\n                d = (SqliteDbInterfaceVersionData) Serializer.Deserialize(typeof (SqliteDbInterfaceVersionData), m);\n                d.EditBy = CurrentAuthor;\n                d.Version = CurrentVersion;\n                d.EditTime = DateTime.Now.ToString();\n                if (d.Locked == null)\n                    d.Locked = \"\";\n            }\n```\n1. Changing values in DbInterfaceVersionData \n2. Serializing that again and store that data somewhere\n\nAfter that I'm deserializing that stored data in TextData again. Text field deserialized without a problems... but other fields are null =c\n\nWhat can it be? Is it because Extensible\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235398157",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235398157",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 235398157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM5ODE1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T20:40:13Z",
        "updated_at": "2016-07-26T20:40:13Z",
        "author_association": "OWNER",
        "body": "What is T in your generic usage? What is the relationship between the two\ndifferent classes and the interface?\n\nOn Tue, 26 Jul 2016 19:59 Alexander Lutz, notifications@github.com wrote:\n\n> Reopened #173 https://github.com/mgravell/protobuf-net/issues/173.\n> \n> \u2014\n> You are receiving this because you commented.\n> \n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/173#event-735432972, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsNOsY-WPTx0k2wyGNAH20BaMporFks5qZlj9gaJpZM4JVPMl\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235403398",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-235403398",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 235403398,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQwMzM5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T20:58:42Z",
        "updated_at": "2016-07-26T20:58:42Z",
        "author_association": "OWNER",
        "body": "To put it another way: what would a fully reproducible sample look like?\n\nOn 26 Jul 2016 9:39 p.m., \"Marc Gravell\" marc.gravell@gmail.com wrote:\n\n> What is T in your generic usage? What is the relationship between the two\n> different classes and the interface?\n> \n> On Tue, 26 Jul 2016 19:59 Alexander Lutz, notifications@github.com\n> wrote:\n> \n> > Reopened #173 https://github.com/mgravell/protobuf-net/issues/173.\n> > \n> > \u2014\n> > You are receiving this because you commented.\n> > \n> > Reply to this email directly, view it on GitHub\n> > https://github.com/mgravell/protobuf-net/issues/173#event-735432972,\n> > or mute the thread\n> > https://github.com/notifications/unsubscribe-auth/AABDsNOsY-WPTx0k2wyGNAH20BaMporFks5qZlj9gaJpZM4JVPMl\n> > .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235405752",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/174#issuecomment-235405752",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/174",
        "id": 235405752,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQwNTc1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T21:07:21Z",
        "updated_at": "2016-07-26T21:07:21Z",
        "author_association": "OWNER",
        "body": "Thanks - vexing that I missed this :(\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235406148",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/175#issuecomment-235406148",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/175",
        "id": 235406148,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQwNjE0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-26T21:08:55Z",
        "updated_at": "2016-07-26T21:08:55Z",
        "author_association": "OWNER",
        "body": "The empty System.Xml looks odd - can you confirm this as a legal syntax?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/235711008",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/175#issuecomment-235711008",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/175",
        "id": 235711008,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTcxMTAwOA==",
        "user": {
            "login": "schulz3000",
            "id": 1812705,
            "node_id": "MDQ6VXNlcjE4MTI3MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1812705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schulz3000",
            "html_url": "https://github.com/schulz3000",
            "followers_url": "https://api.github.com/users/schulz3000/followers",
            "following_url": "https://api.github.com/users/schulz3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/schulz3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schulz3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schulz3000/subscriptions",
            "organizations_url": "https://api.github.com/users/schulz3000/orgs",
            "repos_url": "https://api.github.com/users/schulz3000/repos",
            "events_url": "https://api.github.com/users/schulz3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schulz3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-27T20:30:45Z",
        "updated_at": "2016-07-27T20:30:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "To tell the truth I have no reference for this syntax.\nI can only say that if I input a version number for it e.g. 3.5.0.0 build is not working.\nAlso I had a look into [project.json](https://github.com/JamesNK/Newtonsoft.Json/blob/master/Src/Newtonsoft.Json/project.json) file from Newtonsoft.Json. There are no version numbers given for all frameworkAssemblies references and looks like it build correct.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/236000303",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-236000303",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 236000303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjAwMDMwMw==",
        "user": {
            "login": "SL-RU",
            "id": 4263405,
            "node_id": "MDQ6VXNlcjQyNjM0MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4263405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SL-RU",
            "html_url": "https://github.com/SL-RU",
            "followers_url": "https://api.github.com/users/SL-RU/followers",
            "following_url": "https://api.github.com/users/SL-RU/following{/other_user}",
            "gists_url": "https://api.github.com/users/SL-RU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SL-RU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SL-RU/subscriptions",
            "organizations_url": "https://api.github.com/users/SL-RU/orgs",
            "repos_url": "https://api.github.com/users/SL-RU/repos",
            "events_url": "https://api.github.com/users/SL-RU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SL-RU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-28T19:31:06Z",
        "updated_at": "2016-07-28T19:31:06Z",
        "author_association": "NONE",
        "body": "Here it go:\n\n``` C#\n    [ProtoContract]\n    public class SqliteDbInterfaceVersionData : Extensible\n    {\n        [ProtoMember(1)]\n        public string Locked { get; set; }\n\n        [ProtoMember(2)]\n        public string Version { get; set; }\n\n        [ProtoMember(3)]\n        public string EditBy { get; set; }\n\n        [ProtoMember(4)]\n        public string EditTime { get; set; }\n    }\n\n    public interface IData\n    {\n        //Weeell, let client be creating new data.\n        string Locked { get; }\n        string Version { get; }\n        string EditBy { get; }\n        string EditTime { get; }\n\n        string Id { get; set; }\n        bool IsFullDataRecieved { get; }\n    }\n    [ProtoContract]\n    public class Data : IData, INotifyPropertyChanged\n    {\n        private string _locked;\n\n        [ProtoMember(1)]\n        public string Locked { get; set; }\n\n        private string _version;\n        [ProtoMember(2)]\n        public string Version { get { return _version; } set { _version = value; OnPropertyChanged(); } }\n\n        private string _editBy;\n\n        [ProtoMember(3)]\n        public string EditBy\n        {\n            get { return _editBy; }\n            set\n            {\n                _editBy = value;\n                OnPropertyChanged(); \n            }\n        }\n\n        private string _editTime;\n        [ProtoMember(4)]\n        public string EditTime { get { return _editTime; } set { _editTime = value; OnPropertyChanged(); } }\n\n        public string Id { get; set; }\n        public bool IsFullDataRecieved => true;\n\n        #region notify\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n\n        #endregion\n    }\n    [ProtoContract]\n    public class TextData : Data, INotifyPropertyChanged\n    {\n        private string _text;\n        [ProtoMember(5)]\n        public string Text\n        {\n            get { return _text; }\n            set { _text = value; OnPropertyChanged(); }\n        }\n    }\n...............................................\n            TextData td = new TextData();\n            TextData.Text = \"blahblah\";\n            byte[] ser;\n            using (var m = new MemoryStream())\n            {\n                Serializer.Serialize(m, dt);\n                ser = m.ToArray();\n            }\n\n            SqliteDbInterfaceVersionData d;\n            using (var m = new MemoryStream(ser))\n            {\n                d = (SqliteDbInterfaceVersionData) Serializer.Deserialize(typeof (SqliteDbInterfaceVersionData), m);\n                d.EditBy = CurrentAuthor;\n                d.Version = CurrentVersion;\n                d.EditTime = DateTime.Now.ToString();\n                if (d.Locked == null)\n                    d.Locked = \"\";\n            }\n            byte[] data;\n            using (var m = new MemoryStream())\n            {\n                Serializer.Serialize(m, d);\n                data = m.ToArray();\n            }\n```\n\nHere is everything OK. All data is serialized.\n![screenshot 877](https://cloud.githubusercontent.com/assets/4263405/17226317/8e683b02-5511-11e6-9035-366f239035a3.png)\n\nBut after deserialization\n\n```\n            TextData td;\n            using (var m = new MemoryStream(data))\n            {\n                td = (TextData)Serializer.Deserialize(typeof(TextData), m);\n            }\n```\n\nAll fields in td  except td.Text is nul!!1\n\nMaybe it because of parenting?\n\nThank you for the answer!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/236454437",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/173#issuecomment-236454437",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/173",
        "id": 236454437,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjQ1NDQzNw==",
        "user": {
            "login": "SL-RU",
            "id": 4263405,
            "node_id": "MDQ6VXNlcjQyNjM0MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4263405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SL-RU",
            "html_url": "https://github.com/SL-RU",
            "followers_url": "https://api.github.com/users/SL-RU/followers",
            "following_url": "https://api.github.com/users/SL-RU/following{/other_user}",
            "gists_url": "https://api.github.com/users/SL-RU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SL-RU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SL-RU/subscriptions",
            "organizations_url": "https://api.github.com/users/SL-RU/orgs",
            "repos_url": "https://api.github.com/users/SL-RU/repos",
            "events_url": "https://api.github.com/users/SL-RU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SL-RU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-31T20:24:59Z",
        "updated_at": "2016-07-31T20:24:59Z",
        "author_association": "NONE",
        "body": "Is it because of parenting?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/239627935",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/29#issuecomment-239627935",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/29",
        "id": 239627935,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyNzkzNQ==",
        "user": {
            "login": "MhAllan",
            "id": 13087546,
            "node_id": "MDQ6VXNlcjEzMDg3NTQ2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13087546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MhAllan",
            "html_url": "https://github.com/MhAllan",
            "followers_url": "https://api.github.com/users/MhAllan/followers",
            "following_url": "https://api.github.com/users/MhAllan/following{/other_user}",
            "gists_url": "https://api.github.com/users/MhAllan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MhAllan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MhAllan/subscriptions",
            "organizations_url": "https://api.github.com/users/MhAllan/orgs",
            "repos_url": "https://api.github.com/users/MhAllan/repos",
            "events_url": "https://api.github.com/users/MhAllan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MhAllan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-13T16:00:15Z",
        "updated_at": "2016-08-13T16:00:15Z",
        "author_association": "NONE",
        "body": "what the heck is that resolver? first time in my life i see the type supplied in this way!! I keep getting \"a type must be provided unless base-128...\" error while I supplied the resolver i => typeof(myclass). on the other side the serializer wants \"fieldNumber\" .. which is what do you want!!?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/240134776",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240134776",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/179",
        "id": 240134776,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDEzNDc3Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-16T15:16:47Z",
        "updated_at": "2016-08-16T15:16:47Z",
        "author_association": "OWNER",
        "body": "Multiple ways. If your code-gen tool supports DataContractSerializer (many\ndo), then: job done - enable that\n\nIf your code-gen tool creates \"partial\" classes, you can create a\n**second** file with the same \"partial\" class and add your attributes\n**there**. In place of [ProtoMember], there's a [ProtoPartialMember] that\ncan be applied at the class level (instead of the member level), simply by\ntelling each one the name of the member it applies to.\n\nFinally, you can configure _everything_ at runtime using RuntimeTypeModel.\n\nThat do?\n\nOn 16 August 2016 at 03:04, HOHO notifications@github.com wrote:\n\n> in my application,the model is generated by db-first,so how can I\n> (de)serialize my class without ProtoContract attribute and ProtoMember\n> attribute ?thanks~\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/179, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsA2-rIfSd3xNSrAni9ghcadsCtPjks5qgRqigaJpZM4Jk9AN\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/240371157",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240371157",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/179",
        "id": 240371157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDM3MTE1Nw==",
        "user": {
            "login": "hey-hoho",
            "id": 8401517,
            "node_id": "MDQ6VXNlcjg0MDE1MTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8401517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hey-hoho",
            "html_url": "https://github.com/hey-hoho",
            "followers_url": "https://api.github.com/users/hey-hoho/followers",
            "following_url": "https://api.github.com/users/hey-hoho/following{/other_user}",
            "gists_url": "https://api.github.com/users/hey-hoho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hey-hoho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hey-hoho/subscriptions",
            "organizations_url": "https://api.github.com/users/hey-hoho/orgs",
            "repos_url": "https://api.github.com/users/hey-hoho/repos",
            "events_url": "https://api.github.com/users/hey-hoho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hey-hoho/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-17T10:14:38Z",
        "updated_at": "2016-08-17T10:14:38Z",
        "author_association": "NONE",
        "body": "hi~ @mgravell ,thanks for your answer!But I cannot understand the first way absolutely,can you describe in detail, or give me some example?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/240476923",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240476923",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/179",
        "id": 240476923,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDQ3NjkyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-17T17:00:04Z",
        "updated_at": "2016-08-17T17:00:04Z",
        "author_association": "OWNER",
        "body": "What ORM tool are you using for your DB-first approach? It all depends on\nthat.\n\nOn 17 Aug 2016 11:14 a.m., \"HOHO\" notifications@github.com wrote:\n\n> hi~ @mgravell https://github.com/mgravell ,thanks for your answer!But I\n> cannot understand the first way absolutely,can you describe in detail, or\n> give me some example?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240371157,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsFMuGiLJwlZiBwzFTzfjxc_W4MN_ks5qgt8OgaJpZM4Jk9AN\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/240597320",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240597320",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/179",
        "id": 240597320,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU5NzMyMA==",
        "user": {
            "login": "hey-hoho",
            "id": 8401517,
            "node_id": "MDQ6VXNlcjg0MDE1MTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8401517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hey-hoho",
            "html_url": "https://github.com/hey-hoho",
            "followers_url": "https://api.github.com/users/hey-hoho/followers",
            "following_url": "https://api.github.com/users/hey-hoho/following{/other_user}",
            "gists_url": "https://api.github.com/users/hey-hoho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hey-hoho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hey-hoho/subscriptions",
            "organizations_url": "https://api.github.com/users/hey-hoho/orgs",
            "repos_url": "https://api.github.com/users/hey-hoho/repos",
            "events_url": "https://api.github.com/users/hey-hoho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hey-hoho/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-18T01:18:13Z",
        "updated_at": "2016-08-18T01:18:13Z",
        "author_association": "NONE",
        "body": "I use EF6.0  with the .edmx file to generate all models\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/240605209",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/179#issuecomment-240605209",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/179",
        "id": 240605209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDYwNTIwOQ==",
        "user": {
            "login": "hey-hoho",
            "id": 8401517,
            "node_id": "MDQ6VXNlcjg0MDE1MTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8401517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hey-hoho",
            "html_url": "https://github.com/hey-hoho",
            "followers_url": "https://api.github.com/users/hey-hoho/followers",
            "following_url": "https://api.github.com/users/hey-hoho/following{/other_user}",
            "gists_url": "https://api.github.com/users/hey-hoho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hey-hoho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hey-hoho/subscriptions",
            "organizations_url": "https://api.github.com/users/hey-hoho/orgs",
            "repos_url": "https://api.github.com/users/hey-hoho/repos",
            "events_url": "https://api.github.com/users/hey-hoho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hey-hoho/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-18T02:16:29Z",
        "updated_at": "2016-08-18T02:16:29Z",
        "author_association": "NONE",
        "body": "hi~ @mgravell ,I have found a way to add attribute for class and property.My model are generated by T4 ,so I can add the attribute in .tt file.But the other question is ,can I set a global config for all class rather than one by one ,because there are so many custom class in my application,or there is a way to (de)serialize class without attribute ?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/241311470",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/15#issuecomment-241311470",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/15",
        "id": 241311470,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTMxMTQ3MA==",
        "user": {
            "login": "maguslin",
            "id": 6290870,
            "node_id": "MDQ6VXNlcjYyOTA4NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6290870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maguslin",
            "html_url": "https://github.com/maguslin",
            "followers_url": "https://api.github.com/users/maguslin/followers",
            "following_url": "https://api.github.com/users/maguslin/following{/other_user}",
            "gists_url": "https://api.github.com/users/maguslin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maguslin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maguslin/subscriptions",
            "organizations_url": "https://api.github.com/users/maguslin/orgs",
            "repos_url": "https://api.github.com/users/maguslin/repos",
            "events_url": "https://api.github.com/users/maguslin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maguslin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-22T04:12:25Z",
        "updated_at": "2016-08-22T04:12:25Z",
        "author_association": "NONE",
        "body": "I've met that issue as well, what should I do to fix this,sir ?@ mgravell \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/242188836",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/181#issuecomment-242188836",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/181",
        "id": 242188836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjE4ODgzNg==",
        "user": {
            "login": "schulz3000",
            "id": 1812705,
            "node_id": "MDQ6VXNlcjE4MTI3MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1812705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schulz3000",
            "html_url": "https://github.com/schulz3000",
            "followers_url": "https://api.github.com/users/schulz3000/followers",
            "following_url": "https://api.github.com/users/schulz3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/schulz3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schulz3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schulz3000/subscriptions",
            "organizations_url": "https://api.github.com/users/schulz3000/orgs",
            "repos_url": "https://api.github.com/users/schulz3000/repos",
            "events_url": "https://api.github.com/users/schulz3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schulz3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-24T19:58:27Z",
        "updated_at": "2016-08-24T19:58:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "already fixed in pull request #175 but not merged or published right now\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/242189242",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/181#issuecomment-242189242",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/181",
        "id": 242189242,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjE4OTI0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-24T19:59:59Z",
        "updated_at": "2016-08-24T19:59:59Z",
        "author_association": "OWNER",
        "body": "Merged. Will publish.\n\nOn 24 Aug 2016 8:58 p.m., \"Xaver Schulz\" notifications@github.com wrote:\n\n> already fixed in pull request #175\n> https://github.com/mgravell/protobuf-net/pull/175 but not merged or\n> published right now\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/181#issuecomment-242188836,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsEGImHCxfomP4QYaCKA0ZoO3BVctks5qjKJjgaJpZM4JsGR2\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/242238795",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-242238795",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 242238795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjIzODc5NQ==",
        "user": {
            "login": "veblush",
            "id": 2793282,
            "node_id": "MDQ6VXNlcjI3OTMyODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2793282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/veblush",
            "html_url": "https://github.com/veblush",
            "followers_url": "https://api.github.com/users/veblush/followers",
            "following_url": "https://api.github.com/users/veblush/following{/other_user}",
            "gists_url": "https://api.github.com/users/veblush/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/veblush/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/veblush/subscriptions",
            "organizations_url": "https://api.github.com/users/veblush/orgs",
            "repos_url": "https://api.github.com/users/veblush/repos",
            "events_url": "https://api.github.com/users/veblush/events{/privacy}",
            "received_events_url": "https://api.github.com/users/veblush/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-24T23:24:18Z",
        "updated_at": "2016-08-24T23:24:18Z",
        "author_association": "NONE",
        "body": "Awesome \ud83d\udc4d \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/242325802",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/181#issuecomment-242325802",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/181",
        "id": 242325802,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMyNTgwMg==",
        "user": {
            "login": "teocomi",
            "id": 2679513,
            "node_id": "MDQ6VXNlcjI2Nzk1MTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2679513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teocomi",
            "html_url": "https://github.com/teocomi",
            "followers_url": "https://api.github.com/users/teocomi/followers",
            "following_url": "https://api.github.com/users/teocomi/following{/other_user}",
            "gists_url": "https://api.github.com/users/teocomi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teocomi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teocomi/subscriptions",
            "organizations_url": "https://api.github.com/users/teocomi/orgs",
            "repos_url": "https://api.github.com/users/teocomi/repos",
            "events_url": "https://api.github.com/users/teocomi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teocomi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-25T09:13:14Z",
        "updated_at": "2016-08-25T09:13:14Z",
        "author_association": "NONE",
        "body": "Great, thanks\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/243604895",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/181#issuecomment-243604895",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/181",
        "id": 243604895,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzYwNDg5NQ==",
        "user": {
            "login": "JobaDiniz",
            "id": 165290,
            "node_id": "MDQ6VXNlcjE2NTI5MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/165290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JobaDiniz",
            "html_url": "https://github.com/JobaDiniz",
            "followers_url": "https://api.github.com/users/JobaDiniz/followers",
            "following_url": "https://api.github.com/users/JobaDiniz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JobaDiniz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JobaDiniz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JobaDiniz/subscriptions",
            "organizations_url": "https://api.github.com/users/JobaDiniz/orgs",
            "repos_url": "https://api.github.com/users/JobaDiniz/repos",
            "events_url": "https://api.github.com/users/JobaDiniz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JobaDiniz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-30T22:42:39Z",
        "updated_at": "2016-08-30T22:42:39Z",
        "author_association": "NONE",
        "body": "It's not possible to use 2.1 version in VS2013: [stackoverflow](http://stackoverflow.com/questions/38654856/how-to-install-protobuf-net-on-visual-studio-2012-using-nuget)\n\n`'protobuf-net' already has a dependency defined for 'NETStandard.Library'.`\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/247410180",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/152#issuecomment-247410180",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/152",
        "id": 247410180,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQxMDE4MA==",
        "user": {
            "login": "yariker",
            "id": 1933456,
            "node_id": "MDQ6VXNlcjE5MzM0NTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1933456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yariker",
            "html_url": "https://github.com/yariker",
            "followers_url": "https://api.github.com/users/yariker/followers",
            "following_url": "https://api.github.com/users/yariker/following{/other_user}",
            "gists_url": "https://api.github.com/users/yariker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yariker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yariker/subscriptions",
            "organizations_url": "https://api.github.com/users/yariker/orgs",
            "repos_url": "https://api.github.com/users/yariker/repos",
            "events_url": "https://api.github.com/users/yariker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yariker/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-15T18:25:25Z",
        "updated_at": "2016-09-15T18:25:25Z",
        "author_association": "NONE",
        "body": "Will throw in my two cents. This issue applies not only to the structs, but to the regular classes as well, so I would change the issue title. We need the support of C# 6.0 read-only properties in protobuf-net!\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/248903245",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/187#issuecomment-248903245",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/187",
        "id": 248903245,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODkwMzI0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-22T13:28:33Z",
        "updated_at": "2016-09-22T13:28:33Z",
        "author_association": "OWNER",
        "body": "The  schema processing tools have not been updated to parse proto3. The\nbinary format, however, is unchanged - so as long as you understand how\nproto3 translates to the object model, it is readily consumable. I'm open\nto offers from anyone who wants to update the schema parsing tooling - they\nare long overdue some love. But the _primary_ API in protobuf-net has\nalways been code-first, which simply isn't impacted at all by proto3.\n\nOn 21 September 2016 at 22:41, jgrandyxignite notifications@github.com\nwrote:\n\n> Does protobuf-net support proto3 ?\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/187, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsOebUEbB8sX6MBrVVj9piVVhIuNkks5qsaRsgaJpZM4KDTy3\n> .\n\n## \n\nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/248988262",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/187#issuecomment-248988262",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/187",
        "id": 248988262,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk4ODI2Mg==",
        "user": {
            "login": "jgrandyxignite",
            "id": 22203420,
            "node_id": "MDQ6VXNlcjIyMjAzNDIw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22203420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgrandyxignite",
            "html_url": "https://github.com/jgrandyxignite",
            "followers_url": "https://api.github.com/users/jgrandyxignite/followers",
            "following_url": "https://api.github.com/users/jgrandyxignite/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgrandyxignite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgrandyxignite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgrandyxignite/subscriptions",
            "organizations_url": "https://api.github.com/users/jgrandyxignite/orgs",
            "repos_url": "https://api.github.com/users/jgrandyxignite/repos",
            "events_url": "https://api.github.com/users/jgrandyxignite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgrandyxignite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-22T18:31:05Z",
        "updated_at": "2016-09-22T18:31:52Z",
        "author_association": "NONE",
        "body": "Thanks @mgravell -  just curious, is your coding involvement in protobuf-net on hold due to other commitments ?\n\nSo assuming I'm able to figure-out how the proto3 schema translates to protobuf-net object-model , potentially I could write my own generator to translate proto3 message-types to protobuf-net classes ? \n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/249085183",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/174#issuecomment-249085183",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/174",
        "id": 249085183,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTA4NTE4Mw==",
        "user": {
            "login": "shamork",
            "id": 714295,
            "node_id": "MDQ6VXNlcjcxNDI5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/714295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shamork",
            "html_url": "https://github.com/shamork",
            "followers_url": "https://api.github.com/users/shamork/followers",
            "following_url": "https://api.github.com/users/shamork/following{/other_user}",
            "gists_url": "https://api.github.com/users/shamork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shamork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shamork/subscriptions",
            "organizations_url": "https://api.github.com/users/shamork/orgs",
            "repos_url": "https://api.github.com/users/shamork/repos",
            "events_url": "https://api.github.com/users/shamork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shamork/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-23T02:19:38Z",
        "updated_at": "2016-09-23T02:21:13Z",
        "author_association": "NONE",
        "body": "expecting the update of the nuget package\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/250939306",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/124#issuecomment-250939306",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/124",
        "id": 250939306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDkzOTMwNg==",
        "user": {
            "login": "habermeier",
            "id": 1214689,
            "node_id": "MDQ6VXNlcjEyMTQ2ODk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1214689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/habermeier",
            "html_url": "https://github.com/habermeier",
            "followers_url": "https://api.github.com/users/habermeier/followers",
            "following_url": "https://api.github.com/users/habermeier/following{/other_user}",
            "gists_url": "https://api.github.com/users/habermeier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/habermeier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/habermeier/subscriptions",
            "organizations_url": "https://api.github.com/users/habermeier/orgs",
            "repos_url": "https://api.github.com/users/habermeier/repos",
            "events_url": "https://api.github.com/users/habermeier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/habermeier/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-01T21:40:39Z",
        "updated_at": "2016-10-01T21:40:39Z",
        "author_association": "NONE",
        "body": "Hmm... I'm also getting: `Could not install package 'protobuf-net 2.1.0'. You are trying to install this package into a project that targets 'portable-net45+win+wp80+MonoTouch10+MonoAndroid10+xamarinmac20+xamarintvos10+xamarinwatchos10+xamarinios10', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.`\n\nIs there a work-around?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/251701917",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/174#issuecomment-251701917",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/174",
        "id": 251701917,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTcwMTkxNw==",
        "user": {
            "login": "petriashev",
            "id": 127600,
            "node_id": "MDQ6VXNlcjEyNzYwMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/127600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petriashev",
            "html_url": "https://github.com/petriashev",
            "followers_url": "https://api.github.com/users/petriashev/followers",
            "following_url": "https://api.github.com/users/petriashev/following{/other_user}",
            "gists_url": "https://api.github.com/users/petriashev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petriashev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petriashev/subscriptions",
            "organizations_url": "https://api.github.com/users/petriashev/orgs",
            "repos_url": "https://api.github.com/users/petriashev/repos",
            "events_url": "https://api.github.com/users/petriashev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petriashev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-05T15:04:40Z",
        "updated_at": "2016-10-05T15:05:04Z",
        "author_association": "NONE",
        "body": "Hello, this fix was at 27 jul, but latest package was uploaded at 8 jul.\nCan you upload new version of package?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/252551695",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-252551695",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 252551695,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjU1MTY5NQ==",
        "user": {
            "login": "abdullin",
            "id": 504782,
            "node_id": "MDQ6VXNlcjUwNDc4Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/504782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abdullin",
            "html_url": "https://github.com/abdullin",
            "followers_url": "https://api.github.com/users/abdullin/followers",
            "following_url": "https://api.github.com/users/abdullin/following{/other_user}",
            "gists_url": "https://api.github.com/users/abdullin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abdullin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abdullin/subscriptions",
            "organizations_url": "https://api.github.com/users/abdullin/orgs",
            "repos_url": "https://api.github.com/users/abdullin/repos",
            "events_url": "https://api.github.com/users/abdullin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abdullin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-10T07:33:58Z",
        "updated_at": "2016-10-10T07:33:58Z",
        "author_association": "NONE",
        "body": "This was also already discussed a few years ago on [StackOverflow](http://stackoverflow.com/questions/13802844/protobuf-net-into-proto-generates-enum-conflicts). \n\nAre there any news on this feature?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/253306279",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/188#issuecomment-253306279",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/188",
        "id": 253306279,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMwNjI3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-12T19:00:37Z",
        "updated_at": "2016-10-12T19:00:37Z",
        "author_association": "OWNER",
        "body": "Yup, looks like the code I added to Jil for the same thing, so was pretty much what I had in mind; much appreciated.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/254067226",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-254067226",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 254067226,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA2NzIyNg==",
        "user": {
            "login": "nhnifong",
            "id": 345920,
            "node_id": "MDQ6VXNlcjM0NTkyMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/345920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nhnifong",
            "html_url": "https://github.com/nhnifong",
            "followers_url": "https://api.github.com/users/nhnifong/followers",
            "following_url": "https://api.github.com/users/nhnifong/following{/other_user}",
            "gists_url": "https://api.github.com/users/nhnifong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nhnifong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nhnifong/subscriptions",
            "organizations_url": "https://api.github.com/users/nhnifong/orgs",
            "repos_url": "https://api.github.com/users/nhnifong/repos",
            "events_url": "https://api.github.com/users/nhnifong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nhnifong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-16T19:11:32Z",
        "updated_at": "2016-10-16T19:11:32Z",
        "author_association": "NONE",
        "body": "This seems to still be a problem when trying to install with \"Install-Package protobuf-net\"\nIs it not released?\n\nInstall-Package : Could not install package 'protobuf-net 2.1.0'. You are trying to install this package into a project that targets '.NETFramework,Version=v3.5', but the package does n\not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\nAt line:1 char:16\n- Install-Package <<<<  protobuf-net\n  - CategoryInfo          : NotSpecified: (:) [Install-Package], Exception\n  - FullyQualifiedErrorId : NuGetCmdletUnhandledException,NuGet.PackageManagement.PowerShellCmdlets.InstallPackageCommand\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/254629293",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-254629293",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 254629293,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDYyOTI5Mw==",
        "user": {
            "login": "cemremengu",
            "id": 1297759,
            "node_id": "MDQ6VXNlcjEyOTc3NTk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1297759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cemremengu",
            "html_url": "https://github.com/cemremengu",
            "followers_url": "https://api.github.com/users/cemremengu/followers",
            "following_url": "https://api.github.com/users/cemremengu/following{/other_user}",
            "gists_url": "https://api.github.com/users/cemremengu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cemremengu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cemremengu/subscriptions",
            "organizations_url": "https://api.github.com/users/cemremengu/orgs",
            "repos_url": "https://api.github.com/users/cemremengu/repos",
            "events_url": "https://api.github.com/users/cemremengu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cemremengu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-18T20:27:53Z",
        "updated_at": "2016-10-18T20:27:53Z",
        "author_association": "NONE",
        "body": "Any ETA on this one ?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/258666441",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/190#issuecomment-258666441",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/190",
        "id": 258666441,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY2NjQ0MQ==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-06T09:10:40Z",
        "updated_at": "2016-11-06T09:14:39Z",
        "author_association": "NONE",
        "body": "@pskpsk6 Both attributes can work. Think the problem here has to do with paremeterized constructor not the attributes\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/259099666",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/177#issuecomment-259099666",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/177",
        "id": 259099666,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTA5OTY2Ng==",
        "user": {
            "login": "daef",
            "id": 2098598,
            "node_id": "MDQ6VXNlcjIwOTg1OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2098598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daef",
            "html_url": "https://github.com/daef",
            "followers_url": "https://api.github.com/users/daef/followers",
            "following_url": "https://api.github.com/users/daef/following{/other_user}",
            "gists_url": "https://api.github.com/users/daef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daef/subscriptions",
            "organizations_url": "https://api.github.com/users/daef/orgs",
            "repos_url": "https://api.github.com/users/daef/repos",
            "events_url": "https://api.github.com/users/daef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daef/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-08T10:22:42Z",
        "updated_at": "2016-11-08T10:22:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "same problem here :(\n\nhave you found a solution yet @zhenlinyang ?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/259186627",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-259186627",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 259186627,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTE4NjYyNw==",
        "user": {
            "login": "schulz3000",
            "id": 1812705,
            "node_id": "MDQ6VXNlcjE4MTI3MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1812705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schulz3000",
            "html_url": "https://github.com/schulz3000",
            "followers_url": "https://api.github.com/users/schulz3000/followers",
            "following_url": "https://api.github.com/users/schulz3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/schulz3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schulz3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schulz3000/subscriptions",
            "organizations_url": "https://api.github.com/users/schulz3000/orgs",
            "repos_url": "https://api.github.com/users/schulz3000/repos",
            "events_url": "https://api.github.com/users/schulz3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schulz3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-08T16:32:48Z",
        "updated_at": "2016-11-08T16:32:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is already fixed in #170 but no new nuget package was created since then.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/259210357",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-259210357",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 259210357,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTIxMDM1Nw==",
        "user": {
            "login": "kenoma",
            "id": 6205671,
            "node_id": "MDQ6VXNlcjYyMDU2NzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6205671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenoma",
            "html_url": "https://github.com/kenoma",
            "followers_url": "https://api.github.com/users/kenoma/followers",
            "following_url": "https://api.github.com/users/kenoma/following{/other_user}",
            "gists_url": "https://api.github.com/users/kenoma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kenoma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kenoma/subscriptions",
            "organizations_url": "https://api.github.com/users/kenoma/orgs",
            "repos_url": "https://api.github.com/users/kenoma/repos",
            "events_url": "https://api.github.com/users/kenoma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kenoma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-08T17:58:01Z",
        "updated_at": "2016-11-08T17:58:01Z",
        "author_association": "NONE",
        "body": "Thanks for your reply. I'm not sure, should be that issue closed until new nuget package release, or not.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/259543554",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-259543554",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 259543554,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU0MzU1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-09T22:20:41Z",
        "updated_at": "2016-11-09T22:20:41Z",
        "author_association": "OWNER",
        "body": "K, I need to look at what has broken. Will try to look asap.\n\nOn 8 Nov 2016 10:33 a.m., \"mnml_\" notifications@github.com wrote:\n\n> I've spent hours now trying to compile protobuf-net\n> \n> when i try to simply build the core project msbuild protobuf-net.csproj i\n> get\n> \n> Microsoft.NuGet.targets(140,5): error : Your project is not referencing the \".NETFramework,Version=v3.0\" framework. Add a reference to \".NETFramework,Version=v3.0\" in the \"frameworks\" sectio n of your project.json, and then re-run NuGet restore. [D:\\lib\\protobuf-net\\protobuf-net\\protobuf-net.csproj]\n> \n> I've tried fiddling around with the project.json, the best I've got was\n> either \"there's no interpolated strings in c#2\" or the same as here\n> https://github.com/mgravell/protobuf-net/issues/177\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mgravell/protobuf-net/issues/193, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABDsBFEOkQ1dtmdeGIAWdLX4RF1RWajks5q8E_cgaJpZM4KsRJ8\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/259781547",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-259781547",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 259781547,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc4MTU0Nw==",
        "user": {
            "login": "schulz3000",
            "id": 1812705,
            "node_id": "MDQ6VXNlcjE4MTI3MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1812705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schulz3000",
            "html_url": "https://github.com/schulz3000",
            "followers_url": "https://api.github.com/users/schulz3000/followers",
            "following_url": "https://api.github.com/users/schulz3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/schulz3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schulz3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schulz3000/subscriptions",
            "organizations_url": "https://api.github.com/users/schulz3000/orgs",
            "repos_url": "https://api.github.com/users/schulz3000/repos",
            "events_url": "https://api.github.com/users/schulz3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schulz3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-10T19:19:18Z",
        "updated_at": "2016-11-10T19:19:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "Let it open and @mgravell maybe can give us some insights about his time plans about publishing a new version to nuget\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/260458100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/172#issuecomment-260458100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/172",
        "id": 260458100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDQ1ODEwMA==",
        "user": {
            "login": "philipogorman",
            "id": 3401258,
            "node_id": "MDQ6VXNlcjM0MDEyNTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3401258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philipogorman",
            "html_url": "https://github.com/philipogorman",
            "followers_url": "https://api.github.com/users/philipogorman/followers",
            "following_url": "https://api.github.com/users/philipogorman/following{/other_user}",
            "gists_url": "https://api.github.com/users/philipogorman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philipogorman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philipogorman/subscriptions",
            "organizations_url": "https://api.github.com/users/philipogorman/orgs",
            "repos_url": "https://api.github.com/users/philipogorman/repos",
            "events_url": "https://api.github.com/users/philipogorman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philipogorman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-14T20:49:08Z",
        "updated_at": "2016-11-14T20:49:08Z",
        "author_association": "NONE",
        "body": "The nuget package is in the folder `portable-sl4+net40+wp7+windows8`\nThis doesn't match the name for 136 here http://portablelibraryprofiles.apps.stephencleary.com/\n`portable-net4+sl50+netcore45+wp8` maybe this is the cause?\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/261156521",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-261156521",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 261156521,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTE1NjUyMQ==",
        "user": {
            "login": "ScottAllSet",
            "id": 5465089,
            "node_id": "MDQ6VXNlcjU0NjUwODk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5465089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ScottAllSet",
            "html_url": "https://github.com/ScottAllSet",
            "followers_url": "https://api.github.com/users/ScottAllSet/followers",
            "following_url": "https://api.github.com/users/ScottAllSet/following{/other_user}",
            "gists_url": "https://api.github.com/users/ScottAllSet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ScottAllSet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ScottAllSet/subscriptions",
            "organizations_url": "https://api.github.com/users/ScottAllSet/orgs",
            "repos_url": "https://api.github.com/users/ScottAllSet/repos",
            "events_url": "https://api.github.com/users/ScottAllSet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ScottAllSet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-17T05:05:25Z",
        "updated_at": "2016-11-17T05:05:25Z",
        "author_association": "NONE",
        "body": "I got the same error through xbuild. I fixed it by renaming project.lock.json to project.lock.json.1.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262525847",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/195#issuecomment-262525847",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/195",
        "id": 262525847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjUyNTg0Nw==",
        "user": {
            "login": "nrandell",
            "id": 1963181,
            "node_id": "MDQ6VXNlcjE5NjMxODE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1963181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nrandell",
            "html_url": "https://github.com/nrandell",
            "followers_url": "https://api.github.com/users/nrandell/followers",
            "following_url": "https://api.github.com/users/nrandell/following{/other_user}",
            "gists_url": "https://api.github.com/users/nrandell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nrandell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nrandell/subscriptions",
            "organizations_url": "https://api.github.com/users/nrandell/orgs",
            "repos_url": "https://api.github.com/users/nrandell/repos",
            "events_url": "https://api.github.com/users/nrandell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nrandell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-23T14:26:15Z",
        "updated_at": "2016-11-23T14:26:15Z",
        "author_association": "NONE",
        "body": "Why not?\r\nDid you try it. I just ran this and it produced a 32 byte file called person.bin\r\n\r\n    32 Nov 23 14:23 person.bin\r\n\r\n    00000000  08 b9 60 12 04 46 72 65  64 1a 15 0a 06 46 6c 61  |..`..Fred....Fla|\r\n    00000010  74 20 31 12 0b 54 68 65  20 4d 65 61 64 6f 77 73  |t 1..The Meadows|\r\n    00000020\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262629581",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/195#issuecomment-262629581",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/195",
        "id": 262629581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjYyOTU4MQ==",
        "user": {
            "login": "SherifRefaat",
            "id": 11178713,
            "node_id": "MDQ6VXNlcjExMTc4NzEz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11178713?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherifRefaat",
            "html_url": "https://github.com/SherifRefaat",
            "followers_url": "https://api.github.com/users/SherifRefaat/followers",
            "following_url": "https://api.github.com/users/SherifRefaat/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherifRefaat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherifRefaat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherifRefaat/subscriptions",
            "organizations_url": "https://api.github.com/users/SherifRefaat/orgs",
            "repos_url": "https://api.github.com/users/SherifRefaat/repos",
            "events_url": "https://api.github.com/users/SherifRefaat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherifRefaat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-23T21:04:30Z",
        "updated_at": "2016-11-23T21:12:11Z",
        "author_association": "NONE",
        "body": "@nrandell .Net strings are of size 2 bytes characters, how they are written into 1 byte format?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262631048",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/195#issuecomment-262631048",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/195",
        "id": 262631048,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjYzMTA0OA==",
        "user": {
            "login": "nrandell",
            "id": 1963181,
            "node_id": "MDQ6VXNlcjE5NjMxODE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1963181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nrandell",
            "html_url": "https://github.com/nrandell",
            "followers_url": "https://api.github.com/users/nrandell/followers",
            "following_url": "https://api.github.com/users/nrandell/following{/other_user}",
            "gists_url": "https://api.github.com/users/nrandell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nrandell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nrandell/subscriptions",
            "organizations_url": "https://api.github.com/users/nrandell/orgs",
            "repos_url": "https://api.github.com/users/nrandell/repos",
            "events_url": "https://api.github.com/users/nrandell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nrandell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-23T21:12:16Z",
        "updated_at": "2016-11-23T21:12:16Z",
        "author_association": "NONE",
        "body": "Have a look at the protocol buffers specification (see https://developers.google.com/protocol-buffers/)\r\n\r\nThe bottom line is that protocol buffers are a generic encoding format that is cross platform. All values are represented in a more efficient wire protocol. For example using 4 bytes to store an integer value of 7 is 3 bytes too many. The same is true of storing strings. Most strings can be represented as one byte per character, but in order to make for efficient in memory processing, most modern languages store in 2 bytes per character (though there are efforts ongoing to make this more efficient for .net core). \r\n\r\nI suggest you read the specification in more detail, then run some examples and understand how this can be the case. Remember that the wire format can be different to the in memory format. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262631497",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/195#issuecomment-262631497",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/195",
        "id": 262631497,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjYzMTQ5Nw==",
        "user": {
            "login": "SherifRefaat",
            "id": 11178713,
            "node_id": "MDQ6VXNlcjExMTc4NzEz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11178713?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherifRefaat",
            "html_url": "https://github.com/SherifRefaat",
            "followers_url": "https://api.github.com/users/SherifRefaat/followers",
            "following_url": "https://api.github.com/users/SherifRefaat/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherifRefaat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherifRefaat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherifRefaat/subscriptions",
            "organizations_url": "https://api.github.com/users/SherifRefaat/orgs",
            "repos_url": "https://api.github.com/users/SherifRefaat/repos",
            "events_url": "https://api.github.com/users/SherifRefaat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherifRefaat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-23T21:14:32Z",
        "updated_at": "2016-11-23T21:14:50Z",
        "author_association": "NONE",
        "body": "@nrandell It is my fault not reading the specification first.\r\nThanks for your kindness and help."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262914565",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/191#issuecomment-262914565",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/191",
        "id": 262914565,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkxNDU2NQ==",
        "user": {
            "login": "Measurity",
            "id": 1107063,
            "node_id": "MDQ6VXNlcjExMDcwNjM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1107063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Measurity",
            "html_url": "https://github.com/Measurity",
            "followers_url": "https://api.github.com/users/Measurity/followers",
            "following_url": "https://api.github.com/users/Measurity/following{/other_user}",
            "gists_url": "https://api.github.com/users/Measurity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Measurity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Measurity/subscriptions",
            "organizations_url": "https://api.github.com/users/Measurity/orgs",
            "repos_url": "https://api.github.com/users/Measurity/repos",
            "events_url": "https://api.github.com/users/Measurity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Measurity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-25T09:26:48Z",
        "updated_at": "2016-11-25T09:26:48Z",
        "author_association": "NONE",
        "body": "An issue could be that the stream is being read at the wrong position. Besides that, it might not be done writing when you're calling the deserialize.\r\n\r\nInstead of:\r\n\r\n    var serverStream = new MemoryStream();\r\n    ProtoBuf.Serializer.Serialize(serverStream, responseMsg);\r\n    Console.WriteLine($\"responseMsg {responseMsg?.responseStr ?? \"failed\"}\\n\");\r\n\r\n    var response =ProtoBuf.Serializer.Deserialize<ResponseMessage>(serverStream);\r\n    Console.WriteLine($\"response {response?.responseStr ?? \"failed\"}\\n\");\r\n\r\nTry:\r\n\r\n    var serverStream = new MemoryStream();\r\n    ProtoBuf.Serializer.Serialize(serverStream, responseMsg);\r\n    Console.WriteLine($\"responseMsg {responseMsg?.responseStr ?? \"failed\"}\\n\");\r\n\r\n    serverStream.Flush();\r\n    serverStream.Position = 0;\r\n\r\n    var response =ProtoBuf.Serializer.Deserialize<ResponseMessage>(serverStream);\r\n    Console.WriteLine($\"response {response?.responseStr ?? \"failed\"}\\n\");"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/262916589",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/191#issuecomment-262916589",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/191",
        "id": 262916589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkxNjU4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-25T09:37:41Z",
        "updated_at": "2016-11-25T09:37:41Z",
        "author_association": "OWNER",
        "body": "Agreed - this looks like  a missing stream rewind, thanks (sorry, this\nslipped past my email). Note: the `Flush()` here is not needed, but also\ndoesn't hurt.\n\nOn 25 November 2016 at 09:26, Anton van Dijk <notifications@github.com>\nwrote:\n\n> An issue could be that the stream is being read at the wrong position.\n> Besides that, it might not be done writing when you're calling the\n> deserialize.\n>\n> Instead of:\n>\n> var serverStream = new MemoryStream();\n> ProtoBuf.Serializer.Serialize(serverStream, responseMsg);\n> Console.WriteLine($\"responseMsg {responseMsg?.responseStr ?? \"failed\"}\\n\");\n>\n> var response =ProtoBuf.Serializer.Deserialize<ResponseMessage>(serverStream);\n> Console.WriteLine($\"response {response?.responseStr ?? \"failed\"}\\n\");\n>\n> Try:\n>\n> var serverStream = new MemoryStream();\n> ProtoBuf.Serializer.Serialize(serverStream, responseMsg);\n> Console.WriteLine($\"responseMsg {responseMsg?.responseStr ?? \"failed\"}\\n\");\n>\n> serverStream.Flush();\n> serverStream.Position = 0;\n>\n> var response =ProtoBuf.Serializer.Deserialize<ResponseMessage>(serverStream);\n> Console.WriteLine($\"response {response?.responseStr ?? \"failed\"}\\n\");\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/191#issuecomment-262914565>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHaBbdM-qnW0mWmQMTPE6_90grLtks5rBqnYgaJpZM4Kh5Z5>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/263022582",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/196#issuecomment-263022582",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/196",
        "id": 263022582,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzAyMjU4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-25T21:08:23Z",
        "updated_at": "2016-11-25T21:08:23Z",
        "author_association": "OWNER",
        "body": "Protobuf-net has not had tooling updates for processing 2.0 schema files.\nI'm in several minds as to the best way to make those changes. It can\nprocess 2.0 data (the data format is unchanged in 2.0) - but only if you're\nusing correctly configured code-first implementations. It cannot currently\nautomatically generate classes to represent a 2.0 schema.\n\nOn 25 Nov 2016 7:46 pm, \"Mitch Capper\" <notifications@github.com> wrote:\n\n> ie:\n> message SampleMessage { oneof test_oneof { string name = 4; SubMessage\n> sub_message = 9; } }\n> errors out with:\n> C:\\temp\\proto\\test.proto(1,9): error CS001: unknown rule: oneof\n> unknown rule: oneof\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/196>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJrNnOLYhv6cGoGTY29OhVXoLIssks5rBzr9gaJpZM4K8rph>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/263554528",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-263554528",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 263554528,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzU1NDUyOA==",
        "user": {
            "login": "mexmer",
            "id": 5429727,
            "node_id": "MDQ6VXNlcjU0Mjk3Mjc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5429727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mexmer",
            "html_url": "https://github.com/mexmer",
            "followers_url": "https://api.github.com/users/mexmer/followers",
            "following_url": "https://api.github.com/users/mexmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mexmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mexmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mexmer/subscriptions",
            "organizations_url": "https://api.github.com/users/mexmer/orgs",
            "repos_url": "https://api.github.com/users/mexmer/repos",
            "events_url": "https://api.github.com/users/mexmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mexmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-29T12:11:32Z",
        "updated_at": "2016-11-29T12:11:32Z",
        "author_association": "NONE",
        "body": "@sjones204g unfortunately that doesn't work for me. \r\n\r\ntried to build protobuf-net in VS 2015 and VS 2017, and same issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/263555359",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-263555359",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 263555359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzU1NTM1OQ==",
        "user": {
            "login": "mexmer",
            "id": 5429727,
            "node_id": "MDQ6VXNlcjU0Mjk3Mjc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5429727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mexmer",
            "html_url": "https://github.com/mexmer",
            "followers_url": "https://api.github.com/users/mexmer/followers",
            "following_url": "https://api.github.com/users/mexmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mexmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mexmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mexmer/subscriptions",
            "organizations_url": "https://api.github.com/users/mexmer/orgs",
            "repos_url": "https://api.github.com/users/mexmer/repos",
            "events_url": "https://api.github.com/users/mexmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mexmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-29T12:16:02Z",
        "updated_at": "2016-11-29T12:16:02Z",
        "author_association": "NONE",
        "body": "also when i change protobuf-net to different target framework (2,3.5,4.0 etc.) i get\r\n\r\n\r\n\"Your project.json doesn't have a runtimes section. You should add '\"runtimes\": { \"win\": { } }' to your project.json and then re-run NuGet restore.\tprotobuf-net\"\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/263683044",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/44#issuecomment-263683044",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/44",
        "id": 263683044,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzY4MzA0NA==",
        "user": {
            "login": "mauricio-morales",
            "id": 3408159,
            "node_id": "MDQ6VXNlcjM0MDgxNTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3408159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mauricio-morales",
            "html_url": "https://github.com/mauricio-morales",
            "followers_url": "https://api.github.com/users/mauricio-morales/followers",
            "following_url": "https://api.github.com/users/mauricio-morales/following{/other_user}",
            "gists_url": "https://api.github.com/users/mauricio-morales/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mauricio-morales/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mauricio-morales/subscriptions",
            "organizations_url": "https://api.github.com/users/mauricio-morales/orgs",
            "repos_url": "https://api.github.com/users/mauricio-morales/repos",
            "events_url": "https://api.github.com/users/mauricio-morales/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mauricio-morales/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-29T20:05:42Z",
        "updated_at": "2016-11-29T20:06:31Z",
        "author_association": "NONE",
        "body": "I'm facing this issue now (with v2.0.0.668, latest I can get in VS2012 \ud83d\ude22). While I'm happy accepting that I'm going to have to manually include the DLL into VS2012 instead of nuget to get v2.1 running... I do have a question:\r\n\r\nSince `DateTime.Ticks` is already _always_ in UTC (according to my interpretation of https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396), why wasn't \"always serialize and deserialize in UTC\" considered? I mean, if I ask to send a `DateTimeKind.Local` message, it would still send UTC Ticks, and could receive a `DateTimeKind.UTC` on the other side (which I effectively am anyway). Perhaps it's just a matter of staying _true_ to what was sent over the wire.\r\n\r\nI'm not deeply familiar with the code, so I'm sorry if this was a silly question. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/263896534",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/108#issuecomment-263896534",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/108",
        "id": 263896534,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzg5NjUzNA==",
        "user": {
            "login": "CumpsD",
            "id": 1201644,
            "node_id": "MDQ6VXNlcjEyMDE2NDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1201644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CumpsD",
            "html_url": "https://github.com/CumpsD",
            "followers_url": "https://api.github.com/users/CumpsD/followers",
            "following_url": "https://api.github.com/users/CumpsD/following{/other_user}",
            "gists_url": "https://api.github.com/users/CumpsD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CumpsD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CumpsD/subscriptions",
            "organizations_url": "https://api.github.com/users/CumpsD/orgs",
            "repos_url": "https://api.github.com/users/CumpsD/repos",
            "events_url": "https://api.github.com/users/CumpsD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CumpsD/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-30T15:07:43Z",
        "updated_at": "2016-11-30T15:07:43Z",
        "author_association": "NONE",
        "body": "Any news if protobuf works on coreclr?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/264222040",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/138#issuecomment-264222040",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/138",
        "id": 264222040,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDIyMjA0MA==",
        "user": {
            "login": "karkusviktor",
            "id": 14263851,
            "node_id": "MDQ6VXNlcjE0MjYzODUx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/14263851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karkusviktor",
            "html_url": "https://github.com/karkusviktor",
            "followers_url": "https://api.github.com/users/karkusviktor/followers",
            "following_url": "https://api.github.com/users/karkusviktor/following{/other_user}",
            "gists_url": "https://api.github.com/users/karkusviktor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karkusviktor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karkusviktor/subscriptions",
            "organizations_url": "https://api.github.com/users/karkusviktor/orgs",
            "repos_url": "https://api.github.com/users/karkusviktor/repos",
            "events_url": "https://api.github.com/users/karkusviktor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karkusviktor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-01T16:33:42Z",
        "updated_at": "2016-12-01T16:33:42Z",
        "author_association": "NONE",
        "body": "Will it be fixed? Now protobuf-net 2.1 is not alpha anymore and I still can't add this package to my UWP App. Unfortunately I couldn't manage to build the new version with the above build configuration."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/264860999",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-264860999",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 264860999,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDg2MDk5OQ==",
        "user": {
            "login": "daef",
            "id": 2098598,
            "node_id": "MDQ6VXNlcjIwOTg1OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2098598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daef",
            "html_url": "https://github.com/daef",
            "followers_url": "https://api.github.com/users/daef/followers",
            "following_url": "https://api.github.com/users/daef/following{/other_user}",
            "gists_url": "https://api.github.com/users/daef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daef/subscriptions",
            "organizations_url": "https://api.github.com/users/daef/orgs",
            "repos_url": "https://api.github.com/users/daef/repos",
            "events_url": "https://api.github.com/users/daef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daef/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-05T14:01:17Z",
        "updated_at": "2016-12-05T14:01:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mexmer have you tried commit 66bf1217...?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/264881465",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-264881465",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 264881465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDg4MTQ2NQ==",
        "user": {
            "login": "mexmer",
            "id": 5429727,
            "node_id": "MDQ6VXNlcjU0Mjk3Mjc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5429727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mexmer",
            "html_url": "https://github.com/mexmer",
            "followers_url": "https://api.github.com/users/mexmer/followers",
            "following_url": "https://api.github.com/users/mexmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mexmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mexmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mexmer/subscriptions",
            "organizations_url": "https://api.github.com/users/mexmer/orgs",
            "repos_url": "https://api.github.com/users/mexmer/repos",
            "events_url": "https://api.github.com/users/mexmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mexmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-05T15:20:53Z",
        "updated_at": "2016-12-05T15:21:43Z",
        "author_association": "NONE",
        "body": "@daef that does fix issue with missing .NET refference as per OP, but not issue with \r\n\r\n> \"Your project.json doesn't have a runtimes section. You should add '\"runtimes\": { \"win\": { } }' to your project.json and then re-run NuGet restore.\tprotobuf-net\""
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/266379523",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/199#issuecomment-266379523",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/199",
        "id": 266379523,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM3OTUyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-12T09:22:17Z",
        "updated_at": "2016-12-12T09:22:17Z",
        "author_association": "OWNER",
        "body": "lgtm; ta"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267342140",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/200#issuecomment-267342140",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/200",
        "id": 267342140,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzM0MjE0MA==",
        "user": {
            "login": "pred4c3",
            "id": 24459558,
            "node_id": "MDQ6VXNlcjI0NDU5NTU4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/24459558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pred4c3",
            "html_url": "https://github.com/pred4c3",
            "followers_url": "https://api.github.com/users/pred4c3/followers",
            "following_url": "https://api.github.com/users/pred4c3/following{/other_user}",
            "gists_url": "https://api.github.com/users/pred4c3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pred4c3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pred4c3/subscriptions",
            "organizations_url": "https://api.github.com/users/pred4c3/orgs",
            "repos_url": "https://api.github.com/users/pred4c3/repos",
            "events_url": "https://api.github.com/users/pred4c3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pred4c3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-15T14:35:49Z",
        "updated_at": "2016-12-15T14:35:49Z",
        "author_association": "NONE",
        "body": "I've also struggled recently with building this project (using Proto 2013.sln file or the build scripts). Then I've tried using proto_dnx.sln which worked fine under VS2015."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267612483",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-267612483",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 267612483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYxMjQ4Mw==",
        "user": {
            "login": "arman-arian",
            "id": 6461518,
            "node_id": "MDQ6VXNlcjY0NjE1MTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6461518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arman-arian",
            "html_url": "https://github.com/arman-arian",
            "followers_url": "https://api.github.com/users/arman-arian/followers",
            "following_url": "https://api.github.com/users/arman-arian/following{/other_user}",
            "gists_url": "https://api.github.com/users/arman-arian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arman-arian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arman-arian/subscriptions",
            "organizations_url": "https://api.github.com/users/arman-arian/orgs",
            "repos_url": "https://api.github.com/users/arman-arian/repos",
            "events_url": "https://api.github.com/users/arman-arian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arman-arian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-16T15:01:11Z",
        "updated_at": "2016-12-16T15:01:11Z",
        "author_association": "NONE",
        "body": "@mgravell please publish new nuget package. protobuf doesn't work in WCF configurations."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267714011",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/200#issuecomment-267714011",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/200",
        "id": 267714011,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzcxNDAxMQ==",
        "user": {
            "login": "Cardanis",
            "id": 2449538,
            "node_id": "MDQ6VXNlcjI0NDk1Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2449538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Cardanis",
            "html_url": "https://github.com/Cardanis",
            "followers_url": "https://api.github.com/users/Cardanis/followers",
            "following_url": "https://api.github.com/users/Cardanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/Cardanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Cardanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Cardanis/subscriptions",
            "organizations_url": "https://api.github.com/users/Cardanis/orgs",
            "repos_url": "https://api.github.com/users/Cardanis/repos",
            "events_url": "https://api.github.com/users/Cardanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Cardanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-16T22:43:02Z",
        "updated_at": "2016-12-16T22:43:02Z",
        "author_association": "NONE",
        "body": "Ya, it works fine for me as well, but that's because it's a completely different csproj file for a different platform.  All the other platform projects still rely on the core protobuf-net project which is broken (at least in my environment).  With just these few changes to the project files it will fix the project build for anyone trying to use it.  As far as I can tell the changes won't have any negative impact, though I'm not 100% sure about the CopyNuGetImplementations Property, as I haven't done much with NuGet projects (I do know it got the build to work however, and was a suggested fix to the error I was seeing)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267716174",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-267716174",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 267716174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzcxNjE3NA==",
        "user": {
            "login": "Cardanis",
            "id": 2449538,
            "node_id": "MDQ6VXNlcjI0NDk1Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2449538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Cardanis",
            "html_url": "https://github.com/Cardanis",
            "followers_url": "https://api.github.com/users/Cardanis/followers",
            "following_url": "https://api.github.com/users/Cardanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/Cardanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Cardanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Cardanis/subscriptions",
            "organizations_url": "https://api.github.com/users/Cardanis/orgs",
            "repos_url": "https://api.github.com/users/Cardanis/repos",
            "events_url": "https://api.github.com/users/Cardanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Cardanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-16T22:56:17Z",
        "updated_at": "2016-12-16T22:56:17Z",
        "author_association": "NONE",
        "body": "I have a PR right now that fixes this issue.  I added net30 to the Project.json which caused the same error as above (requiring runtimes in project.json).  Apparently the fix to that is adding <CopyNuGetImplementations>false</CopyNuGetImplementations> to the project, which made that error go away.  Though this works, I'm not sure if there will be a negative impact.\r\n\r\nOne last error to fix after this was language version.  Protobuf-net.csproj had the preferred language set to ISO-2, which doesn't include some of the newer C# language features that have been used in recent changes (nameof for example).  The suggested fix was setting the LangVersion to C#6, but I found just removing the tag altogether caused it to work fine.  I'm not sure if using ISO-2 is actually required, but if it is we need to revert usage of newer C# language features like nameof.\r\n\r\nMostly I'm curious as to how this \"build break\" got through.  There've been a lot of recent commits, and I'm assuming that building the project would be part of verification before doing a PR.  There must be some difference between the environment/build process of developers that's causing builds to succeed for some people and fail for others.  So for those of you who aren't seeing a build failure as described here, what environment/build process are you using?\r\n\r\nFor reference I'm running VS2015 on Windows 10, and trying to build protobuf-net.csproj under Debug/Release/CoreOnly (pretty much anything) and AnyCPU fails with the above errors."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267767749",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/138#issuecomment-267767749",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/138",
        "id": 267767749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc2Nzc0OQ==",
        "user": {
            "login": "thumbmunkeys",
            "id": 4988466,
            "node_id": "MDQ6VXNlcjQ5ODg0NjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4988466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thumbmunkeys",
            "html_url": "https://github.com/thumbmunkeys",
            "followers_url": "https://api.github.com/users/thumbmunkeys/followers",
            "following_url": "https://api.github.com/users/thumbmunkeys/following{/other_user}",
            "gists_url": "https://api.github.com/users/thumbmunkeys/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thumbmunkeys/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thumbmunkeys/subscriptions",
            "organizations_url": "https://api.github.com/users/thumbmunkeys/orgs",
            "repos_url": "https://api.github.com/users/thumbmunkeys/repos",
            "events_url": "https://api.github.com/users/thumbmunkeys/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thumbmunkeys/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-17T15:11:49Z",
        "updated_at": "2016-12-17T15:12:16Z",
        "author_association": "NONE",
        "body": "@karkusviktor I got a small uwp sample app running by adding protobuf-net version 2.0.0.668 to my project.\r\n\r\nFurthermore I had to add this into Default.rd.xml:\r\n `   <Namespace Name=\"ProtoBuf\"  Dynamic=\"Required All\" Serialize=\"Required Public\" Browse=\"Required All\" Activate=\"Required All\" />`\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267769369",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/138#issuecomment-267769369",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/138",
        "id": 267769369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc2OTM2OQ==",
        "user": {
            "login": "karkusviktor",
            "id": 14263851,
            "node_id": "MDQ6VXNlcjE0MjYzODUx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/14263851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karkusviktor",
            "html_url": "https://github.com/karkusviktor",
            "followers_url": "https://api.github.com/users/karkusviktor/followers",
            "following_url": "https://api.github.com/users/karkusviktor/following{/other_user}",
            "gists_url": "https://api.github.com/users/karkusviktor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karkusviktor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karkusviktor/subscriptions",
            "organizations_url": "https://api.github.com/users/karkusviktor/orgs",
            "repos_url": "https://api.github.com/users/karkusviktor/repos",
            "events_url": "https://api.github.com/users/karkusviktor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karkusviktor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-17T15:42:17Z",
        "updated_at": "2016-12-17T15:42:17Z",
        "author_association": "NONE",
        "body": "@thumbmunkeys Yes, it was mentioned at the first comment that the old stable (2.0.0.668) works, but thanks. Some nuget packages require the new version, that's why it is a problem."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267822244",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-267822244",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 267822244,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgyMjI0NA==",
        "user": {
            "login": "RomanBadiornyi",
            "id": 949814,
            "node_id": "MDQ6VXNlcjk0OTgxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/949814?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RomanBadiornyi",
            "html_url": "https://github.com/RomanBadiornyi",
            "followers_url": "https://api.github.com/users/RomanBadiornyi/followers",
            "following_url": "https://api.github.com/users/RomanBadiornyi/following{/other_user}",
            "gists_url": "https://api.github.com/users/RomanBadiornyi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RomanBadiornyi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RomanBadiornyi/subscriptions",
            "organizations_url": "https://api.github.com/users/RomanBadiornyi/orgs",
            "repos_url": "https://api.github.com/users/RomanBadiornyi/repos",
            "events_url": "https://api.github.com/users/RomanBadiornyi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RomanBadiornyi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-18T13:50:32Z",
        "updated_at": "2016-12-18T13:50:32Z",
        "author_association": "NONE",
        "body": "We've got an issue that we need support of both, WCF (available in < 2.1.0) and interface surrogates (available from 2.1.0) @mgravell , can you please publish at least alpha version which will bring WCF support back to 2.1.0.\r\nThanks in advance."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/267838115",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-267838115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 267838115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzgzODExNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-18T18:40:16Z",
        "updated_at": "2016-12-18T18:40:16Z",
        "author_association": "OWNER",
        "body": "I can take a look, but I am not confident in my ability to adequately test\n/ support the WCF pieces. It has been \"many years\" since I WCF'd...\n\nOn 18 Dec 2016 1:50 p.m., \"Roman Badiornyi\" <notifications@github.com>\nwrote:\n\nWe've got an issue that we need support of both, WCF (available in < 2.1.0)\nand interface surrogates (available from 2.1.0) @mgravell\n<https://github.com/mgravell> , can you please publish at least alpha\nversion which will bring WCF support back to 2.1.0.\nThanks in advance.\n\n\u2014\nYou are receiving this because you were mentioned.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/194#issuecomment-267822244>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsI0b44ritXl1LpP8bp9Rq43F14Bpks5rJTopgaJpZM4KscP3>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/268082464",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/201#issuecomment-268082464",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/201",
        "id": 268082464,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODA4MjQ2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-19T21:23:43Z",
        "updated_at": "2016-12-19T21:23:43Z",
        "author_association": "OWNER",
        "body": "Messing with the assembly version is always a fun topic. Just about every\napproach possible annoys someone. Since we deploy via nuget, assembly\nversion redirects are much less of an issue these days. Is there a good\nreason to stray from what it is doing currently?\n\nOn 19 Dec 2016 2:46 p.m., \"KlausLinzner\" <notifications@github.com> wrote:\n\n> I found no clear documentation on how you're versioning the assemblies but\n> I assume it's some sort of semantic versioning - please correct me if I'm\n> wrong.\n>\n> Could you change the AssemblyVersion from \"2.1.0.0\" (which is already a\n> huge step ahead compared to prior) to \"2.0.0.0\"? Do you see any downsides\n> on this?\n> As far as I know the AssemblyFileVersion and AssemblyInformationalVersion\n> can stay the same (\"2.1.0\" or even \"2.1.0.build\");\n>\n> This would allow easier updates and less need for assembly redirects\n> and/or synchronization of updates.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/201>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGkrCBosCIMLvMTahUWiX0O2xKc6ks5rJpjCgaJpZM4LQzHL>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/268102379",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/201#issuecomment-268102379",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/201",
        "id": 268102379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODEwMjM3OQ==",
        "user": {
            "login": "KlausLinzner",
            "id": 13362720,
            "node_id": "MDQ6VXNlcjEzMzYyNzIw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13362720?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KlausLinzner",
            "html_url": "https://github.com/KlausLinzner",
            "followers_url": "https://api.github.com/users/KlausLinzner/followers",
            "following_url": "https://api.github.com/users/KlausLinzner/following{/other_user}",
            "gists_url": "https://api.github.com/users/KlausLinzner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KlausLinzner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KlausLinzner/subscriptions",
            "organizations_url": "https://api.github.com/users/KlausLinzner/orgs",
            "repos_url": "https://api.github.com/users/KlausLinzner/repos",
            "events_url": "https://api.github.com/users/KlausLinzner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KlausLinzner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-19T22:53:01Z",
        "updated_at": "2016-12-19T22:53:01Z",
        "author_association": "NONE",
        "body": "Yes - you can pretty much count on it that versioning scheme and strong naming raises more opinions than people - sorry I'm one of those.\r\n\r\nFrom what I've seen, with the 2.1 nuget package you changed it a bit already and IMO improved things a lot: When you ship a bugfix to version 2.1 and publish it as 2.1.692 it can be hot fixed without the need of recompile or assembly redirects.\r\nOn the other hand - when you implement new features and make bugfixes you'd currently update the version to 2.2; This update would require a recompile or assembly redirects. \r\n\r\nYou are completely right that assembly redirects are not that much of an issue any more in (rather high volatile) nuget environments. But when shipping applications to industrial sites the required support timeframe can range to many years - and the easier and less error prone update and hotfix scenarios are the better.\r\n\r\nExample:\r\nI ship library AwesomeLib in version 3.3 that requires protobuf-net in version 2.1. \r\nThis libray is used by AwesomeService that uses protobuf-net itself as well;\r\nBoth are shipped to Customer site X and go to production.\r\n\r\nA year goes by, AwesomeLib is already at version 3.5 and upgraded to protobuf-net in version 2.2. \r\nNow a bug report comes in from site X - a bug that was already fixed in 3.5;\r\nInstead of being able to apply the hotfix (stop the service, copy the AwesomeLib and its dependencies, start the service) assembly redirects need to be made as well. \r\nAn additional, manual step that is error prone and can induce further bugs, but that doesn't provide any benefits (or at least: none that I'm aware of).\r\n\r\nOf course - those are just my problems, induced by a not that common usage scenario. Nevertheless - I'd really appreciate if you could think about it and maybe reconsider.\r\n\r\nBest regards"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/268207961",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/201#issuecomment-268207961",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/201",
        "id": 268207961,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODIwNzk2MQ==",
        "user": {
            "login": "maritaria",
            "id": 5500669,
            "node_id": "MDQ6VXNlcjU1MDA2Njk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5500669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maritaria",
            "html_url": "https://github.com/maritaria",
            "followers_url": "https://api.github.com/users/maritaria/followers",
            "following_url": "https://api.github.com/users/maritaria/following{/other_user}",
            "gists_url": "https://api.github.com/users/maritaria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maritaria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maritaria/subscriptions",
            "organizations_url": "https://api.github.com/users/maritaria/orgs",
            "repos_url": "https://api.github.com/users/maritaria/repos",
            "events_url": "https://api.github.com/users/maritaria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maritaria/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-20T10:25:01Z",
        "updated_at": "2016-12-20T10:25:01Z",
        "author_association": "NONE",
        "body": "If you copy over AwesomeLib v3.5 and its dependencies (including protobuf-net v2.2) then why would you still need to use redirects? Wouldn't you only need those if you can only deploy the new AwesomeLib v3.5 without its dependencies?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/268216709",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/201#issuecomment-268216709",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/201",
        "id": 268216709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODIxNjcwOQ==",
        "user": {
            "login": "KlausLinzner",
            "id": 13362720,
            "node_id": "MDQ6VXNlcjEzMzYyNzIw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13362720?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KlausLinzner",
            "html_url": "https://github.com/KlausLinzner",
            "followers_url": "https://api.github.com/users/KlausLinzner/followers",
            "following_url": "https://api.github.com/users/KlausLinzner/following{/other_user}",
            "gists_url": "https://api.github.com/users/KlausLinzner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KlausLinzner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KlausLinzner/subscriptions",
            "organizations_url": "https://api.github.com/users/KlausLinzner/orgs",
            "repos_url": "https://api.github.com/users/KlausLinzner/repos",
            "events_url": "https://api.github.com/users/KlausLinzner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KlausLinzner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-20T11:07:43Z",
        "updated_at": "2016-12-20T11:07:43Z",
        "author_association": "NONE",
        "body": "You're correct - if I replace AwesomeLib and its dependencies, AwesomeLib doesn't require the assembly redirect - but the the hosting AwesomeService would require the redirect for protobuf (as it's referencing protobuf directly as well).\r\n\r\nA less likely error scenario is that there's a bug in protobuf-net that can be hotfixed; in that case both AwesomeLib and AwesomeService require the redirect.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/268858418",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/202#issuecomment-268858418",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/202",
        "id": 268858418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODg1ODQxOA==",
        "user": {
            "login": "schulz3000",
            "id": 1812705,
            "node_id": "MDQ6VXNlcjE4MTI3MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1812705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schulz3000",
            "html_url": "https://github.com/schulz3000",
            "followers_url": "https://api.github.com/users/schulz3000/followers",
            "following_url": "https://api.github.com/users/schulz3000/following{/other_user}",
            "gists_url": "https://api.github.com/users/schulz3000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schulz3000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schulz3000/subscriptions",
            "organizations_url": "https://api.github.com/users/schulz3000/orgs",
            "repos_url": "https://api.github.com/users/schulz3000/repos",
            "events_url": "https://api.github.com/users/schulz3000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schulz3000/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-22T18:16:29Z",
        "updated_at": "2016-12-22T18:16:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "duplicate to #194 "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/269301591",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/106#issuecomment-269301591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/106",
        "id": 269301591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMwMTU5MQ==",
        "user": {
            "login": "Arthur-qi",
            "id": 8585660,
            "node_id": "MDQ6VXNlcjg1ODU2NjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/8585660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arthur-qi",
            "html_url": "https://github.com/Arthur-qi",
            "followers_url": "https://api.github.com/users/Arthur-qi/followers",
            "following_url": "https://api.github.com/users/Arthur-qi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arthur-qi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arthur-qi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arthur-qi/subscriptions",
            "organizations_url": "https://api.github.com/users/Arthur-qi/orgs",
            "repos_url": "https://api.github.com/users/Arthur-qi/repos",
            "events_url": "https://api.github.com/users/Arthur-qi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arthur-qi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-27T09:39:20Z",
        "updated_at": "2016-12-27T09:39:20Z",
        "author_association": "NONE",
        "body": "why not be using FEAT_SAFE?Did it run slow?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/269348730",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/106#issuecomment-269348730",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/106",
        "id": 269348730,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTM0ODczMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-27T16:30:49Z",
        "updated_at": "2016-12-27T16:30:49Z",
        "author_association": "OWNER",
        "body": "iirc there were, at some point in history, errors in unity from this. It\nmight be fixed now. I'm not a unity user, so.\n\nOn 27 Dec 2016 9:39 a.m., \"Arthur-qi\" <notifications@github.com> wrote:\n\n> why not be using FEAT_SAFE?Did it run slow?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/106#issuecomment-269301591>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHRenrG7rn8Fqc4GcwucZaTb7ew1ks5rMNzIgaJpZM4FqV5P>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270157499",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/67#issuecomment-270157499",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/67",
        "id": 270157499,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDE1NzQ5OQ==",
        "user": {
            "login": "btecu",
            "id": 7517745,
            "node_id": "MDQ6VXNlcjc1MTc3NDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7517745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/btecu",
            "html_url": "https://github.com/btecu",
            "followers_url": "https://api.github.com/users/btecu/followers",
            "following_url": "https://api.github.com/users/btecu/following{/other_user}",
            "gists_url": "https://api.github.com/users/btecu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/btecu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/btecu/subscriptions",
            "organizations_url": "https://api.github.com/users/btecu/orgs",
            "repos_url": "https://api.github.com/users/btecu/repos",
            "events_url": "https://api.github.com/users/btecu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/btecu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-03T16:35:05Z",
        "updated_at": "2017-01-03T16:35:05Z",
        "author_association": "NONE",
        "body": "Is there a way to handle subclasses in the newer versions?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270269083",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-270269083",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 270269083,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI2OTA4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-04T00:59:19Z",
        "updated_at": "2017-01-04T00:59:19Z",
        "author_association": "OWNER",
        "body": "indeed; there is no explicit support - it looks like the \"does it look a\nbit like a collection?\" code it trying to have a go at it, unsuccessfully.\nIt is a fun one - I can't say that bitarray is a common case. I might be\nable to come up with a surrogate implementation that works nicely, though -\nwill have a peek tomorrow (1am here)\n\nOn 3 Jan 2017 9:39 p.m., \"btecu\" <notifications@github.com> wrote:\n\n> When trying to serialize a BitArray I get Unable to resolve a suitable\n> Add method for System.Collections.BitArray.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/206>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD08b4ExLJQw8nt2ULy6BmHLDWIRks5rOsAfgaJpZM4LaDr0>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270361659",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-270361659",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 270361659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDM2MTY1OQ==",
        "user": {
            "login": "btecu",
            "id": 7517745,
            "node_id": "MDQ6VXNlcjc1MTc3NDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/7517745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/btecu",
            "html_url": "https://github.com/btecu",
            "followers_url": "https://api.github.com/users/btecu/followers",
            "following_url": "https://api.github.com/users/btecu/following{/other_user}",
            "gists_url": "https://api.github.com/users/btecu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/btecu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/btecu/subscriptions",
            "organizations_url": "https://api.github.com/users/btecu/orgs",
            "repos_url": "https://api.github.com/users/btecu/repos",
            "events_url": "https://api.github.com/users/btecu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/btecu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-04T12:39:03Z",
        "updated_at": "2017-01-04T12:39:03Z",
        "author_association": "NONE",
        "body": "@mgravell Thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270587166",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/207#issuecomment-270587166",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/207",
        "id": 270587166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDU4NzE2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-05T08:14:08Z",
        "updated_at": "2017-01-05T08:14:08Z",
        "author_association": "OWNER",
        "body": "it is pretty unusual for protobuf-net output to be as large or bigger than\nBF. Can I see the model? (the classes). Very hard to comment without that.\nAlso, is it possible that you have the same repeated object in the tree\nmultiple times? (for example, a City object where 20 customers all have the\nsame City instance) - protobuf-net is a tree serializer by default, so that\ndata would be repeated. BF is a graph serializer that uses object tracking\n- however protobuf-net also has this as an optional feature.\n\nOn 5 Jan 2017 2:38 a.m., \"SidneyWells\" <notifications@github.com> wrote:\n\n> I'm converting a .NET 4.0 C# app to use protobuf-net for binary\n> serialisation. It currently uses BinaryFormatter but this is proving too\n> fragile to be sustainable.\n>\n> I've got to the point where it can serialize an in-memory workspace to\n> disk, and the first thing I noticed is the resulting files are much larger\n> than their old BF equivalents. The protobuf files are nearly twice as big,\n> in fact. For example,\n>\n> File 1: BF = 1371 kB, protobuf = 2569 kB\n> File 2: BF = 12103 kB, protobuf = 21245 kB\n>\n> I've seen several comparisons between protobuf and other serialization\n> mechanisms, and if memory serves these tests usually show that protobuf\n> produces smaller files than BinaryFormatter, so this makes me think I'm\n> doing something wrong.\n>\n> I'm new to protobuf so I'm not sure what to change in order to reduce file\n> size. I've put IsPacked=true on all arrays of primitives (which sometimes\n> contain many thousands of elements), but this only resulted in a small\n> improvement.\n>\n> Any general tips on minimizing protobuf file sizes, or do I need to\n> provide more detail about the classes I'm serializing? (I tried to attach\n> my .proto file (zipped) but I get a message saying 'We don't support that\n> file type' even though ZIP is one of the listed file types!)\n>\n> Thanks in advance.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/207>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCheFzwobLyRNzZV9R4kB3ccsZNzks5rPFekgaJpZM4LbSh8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270782757",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/207#issuecomment-270782757",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/207",
        "id": 270782757,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc4Mjc1Nw==",
        "user": {
            "login": "SidneyWells",
            "id": 24926503,
            "node_id": "MDQ6VXNlcjI0OTI2NTAz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/24926503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SidneyWells",
            "html_url": "https://github.com/SidneyWells",
            "followers_url": "https://api.github.com/users/SidneyWells/followers",
            "following_url": "https://api.github.com/users/SidneyWells/following{/other_user}",
            "gists_url": "https://api.github.com/users/SidneyWells/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SidneyWells/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SidneyWells/subscriptions",
            "organizations_url": "https://api.github.com/users/SidneyWells/orgs",
            "repos_url": "https://api.github.com/users/SidneyWells/repos",
            "events_url": "https://api.github.com/users/SidneyWells/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SidneyWells/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-05T22:59:29Z",
        "updated_at": "2017-01-05T22:59:29Z",
        "author_association": "NONE",
        "body": "Thanks Marc, you're spot on.  One of my classes is referenced by a couple of others in the model.  I've set AsReference and AsReferenceDefault to true in what I think are the appropriate places and the file size is now slightly less than the BF equivalents:\r\n\r\nFile 1: BF = 1371 kB, protobuf = 1285 kB\r\nFile 2: BF = 12103 kB, protobuf = 11795 kB\r\n\r\nIs this nearer to what you'd expect?\r\n\r\nIn simplified terms, my model consists of a Workspace object, which contains a collection of Recordings, and each Recording contains a collection of Waveforms.  Each Waveform contains a reference to the Recording it belongs to.  This is the only place in the model where there are circular references.  Each of these three classes also contain a few primitives (or arrays of primitives) and a collection of Property objects.\r\n\r\nThe .proto file is pasted below.  Can you suggest any further optimisations?\r\n\r\n--\r\n\r\nimport \"bcl.proto\"; // schema for protobuf-net's handling of core .NET types\r\n\r\nmessage AirblastWaveform {\r\n   repeated int32 _amplitudeSigns = 1;\r\n}\r\nmessage BooleanProperty {\r\n   optional bool _value = 1 [default = false];\r\n}\r\nmessage DateTimeProperty {\r\n   optional bcl.DateTime _value = 1;\r\n}\r\nmessage DoubleProperty {\r\n   optional double _value = 1 [default = 0];\r\n}\r\nmessage DynamicStrain {\r\n   repeated double Ex = 1 [packed=true];\r\n   repeated double Ey = 2 [packed=true];\r\n   repeated double Ez = 3 [packed=true];\r\n   repeated double Exy = 4 [packed=true];\r\n   repeated double Eyz = 5 [packed=true];\r\n   repeated double Exz = 6 [packed=true];\r\n}\r\nmessage IntegerProperty {\r\n   optional int32 _value = 1 [default = 0];\r\n}\r\nmessage LongProperty {\r\n   optional int64 _value = 1 [default = 0];\r\n}\r\nmessage OID {\r\n   optional string Name = 1;\r\n   optional bcl_Guid Guid = 2;\r\n}\r\nmessage Object {\r\n}\r\nmessage ObjectProperty {\r\n   optional bcl.NetObjectProxy _value = 1;\r\n}\r\nmessage PhysicalQuantity {\r\n   optional PhysicalQuantityType _type = 1 [default = Dimensionless];\r\n   optional PhysicalUnitsType _siUnitsType = 2 [default = Dimensionless];\r\n}\r\nenum PhysicalQuantityType {\r\n   Dimensionless = 0;\r\n   Acceleration = 1;\r\n   Velocity = 2;\r\n   Displacement = 3;\r\n   Temperature = 4;\r\n   Voltage = 5;\r\n   Pressure = 6;\r\n   Time = 7;\r\n   Frequency = 8;\r\n   AccelerometerSensitivity = 9;\r\n   MicrophoneSensitivity = 10;\r\n   Mass = 11;\r\n   GeophoneSensitivity = 12;\r\n}\r\nmessage PhysicalUnits {\r\n   optional PhysicalUnitsType _type = 1 [default = Dimensionless];\r\n   optional PhysicalQuantity _quantity = 2;\r\n   optional string _symbol = 3;\r\n   optional string _name = 4;\r\n}\r\nenum PhysicalUnitsType {\r\n   Dimensionless = 0;\r\n   MetresPerSecondSquared = 1;\r\n   MultipleOfG = 2;\r\n   MmPerSecondSquared = 3;\r\n   MetresPerSecond = 4;\r\n   MmPerSecond = 5;\r\n   Metres = 6;\r\n   Millimetres = 7;\r\n   Pascals = 8;\r\n   Atmospheres = 9;\r\n   dBL = 10;\r\n   Seconds = 11;\r\n   Milliseconds = 12;\r\n   Microseconds = 13;\r\n   Volts = 14;\r\n   Celcius = 15;\r\n   Kelvin = 16;\r\n   Bits = 17;\r\n   Samples = 18;\r\n   Hertz = 19;\r\n   InchesPerSecondSquared = 20;\r\n   InchesPerSecond = 21;\r\n   VoltsPerMetrePerSecondSquared = 22;\r\n   VoltsPerG = 23;\r\n   VoltsPerPascal = 24;\r\n   MillivoltsPerPascal = 25;\r\n   Inches = 26;\r\n   Hours = 27;\r\n   Millibars = 28;\r\n   VoltsPerCmPerSecondSquared = 29;\r\n   CmPerSecondSquared = 30;\r\n   PoundsPerSquareInch = 31;\r\n   Kilograms = 32;\r\n   Pounds = 33;\r\n   VoltsPerMetrePerSecond = 34;\r\n   VoltsPerMmPerSecond = 35;\r\n   VoltsPerCmPerSecond = 36;\r\n   CmPerSecond = 37;\r\n}\r\nmessage PrincipalStrain {\r\n   repeated double E1 = 1 [packed=true];\r\n   repeated double E2 = 2 [packed=true];\r\n   repeated double E3 = 3 [packed=true];\r\n}\r\nmessage Property {\r\n   optional PropertyType _type = 1 [default = FilePath];\r\n   optional PhysicalUnits _units = 2;\r\n   // the following represent sub-types; at most 1 should have a value\r\n   optional ObjectProperty ObjectProperty = 100;\r\n   optional IntegerProperty IntegerProperty = 101;\r\n   optional LongProperty LongProperty = 102;\r\n   optional DoubleProperty DoubleProperty = 103;\r\n   optional StringProperty StringProperty = 104;\r\n   optional DateTimeProperty DateTimeProperty = 105;\r\n   optional BooleanProperty BooleanProperty = 106;\r\n}\r\nenum PropertyType {\r\n   FilePath = 0;\r\n   NumberOfChannels = 1;\r\n   Description = 2;\r\n   TriggerMethod = 3;\r\n   ConfigurationFile = 4;\r\n   Timestamp = 5;\r\n   BatteryVoltage = 6;\r\n   Temperature = 7;\r\n   TriggerSource = 8;\r\n   MonitorID = 9;\r\n   CalibrationDate = 10;\r\n   ChannelID = 11;\r\n   ChannelNumber = 12;\r\n   CalibrationValue = 13;\r\n   Units = 14;\r\n   OriginalUnits = 15;\r\n   SensorRange = 16;\r\n   Resolution = 17;\r\n   WaveformLength = 18;\r\n   WaveformDuration = 19;\r\n   SampleTime = 20;\r\n   SampleRate = 21;\r\n   PretriggerLength = 22;\r\n   PretriggerDuration = 23;\r\n   TriggerLevel = 24;\r\n   MaxAmplitude = 25;\r\n   MinAmplitude = 26;\r\n   PeakParticleAcceleration = 27;\r\n   PeakParticleVelocity = 28;\r\n   PeakPressure = 29;\r\n   Location = 30;\r\n   Comments = 31;\r\n   Coordinates = 32;\r\n   AccelerometerSensitivity = 33;\r\n   MicrophoneSensitivity = 34;\r\n   PeakParticleDisplacement = 35;\r\n   LocalTimeOffset = 36;\r\n   AirblastTriggerLevel = 37;\r\n   Null = 38;\r\n   RelativeEnergy = 39;\r\n   DigitisingConstant = 40;\r\n   FirmwareVersion = 41;\r\n   ShotNumber = 42;\r\n   ZeroCrossingFrequency = 43;\r\n   MonitoringPoint = 44;\r\n   BlastDesign = 45;\r\n   LocalCoordinates = 46;\r\n   Initiation = 47;\r\n   ChargeWeight = 48;\r\n   FiringDelay = 49;\r\n   ShowFiringData = 50;\r\n   FiringTimeOffset = 51;\r\n   FiringTimeScale = 52;\r\n   GeophoneSensitivity = 53;\r\n}\r\nmessage Recording {\r\n   repeated Property _originalProperties = 1;\r\n   optional double _originalInitialTimeOffset = 2 [default = 0];\r\n   optional double _initialTimeOffset = 3 [default = 0];\r\n   optional double _sampleTimeInSeconds = 4 [default = 0];\r\n   repeated Waveform _waveforms = 5;\r\n   repeated Property _properties = 6;\r\n}\r\nmessage StandardError {\r\n   repeated double Sx = 1 [packed=true];\r\n   repeated double Sy = 2 [packed=true];\r\n   repeated double Sz = 3 [packed=true];\r\n   repeated double Sxy = 4 [packed=true];\r\n   repeated double Syz = 5 [packed=true];\r\n   repeated double Sxz = 6 [packed=true];\r\n}\r\nmessage StrainCalculationResult {\r\n   optional DynamicStrain DynamicStrain = 1;\r\n   optional PrincipalStrain PrincipalStrain = 2;\r\n   optional StrainRotation Rotation = 3;\r\n   optional StandardError StandardError = 4;\r\n   repeated double SSR = 5 [packed=true];\r\n   repeated double Q = 6 [packed=true];\r\n   optional bcl.DateTime StartTime = 7;\r\n   optional StrainCalculationType CalculationType = 8 [default = TwoD];\r\n   repeated OID MonitorPoints = 9;\r\n   optional OID ReferencePoint = 10;\r\n   optional bool ArePrerequisitesMet = 11 [default = false];\r\n}\r\nenum StrainCalculationType {\r\n   TwoD = 0;\r\n   ThreeD = 1;\r\n}\r\nmessage StrainRotation {\r\n   repeated double Wx = 1 [packed=true];\r\n   repeated double Wy = 2 [packed=true];\r\n   repeated double Wz = 3 [packed=true];\r\n}\r\nmessage StringProperty {\r\n   optional string _value = 1;\r\n}\r\nenum TimeAxisStyle {\r\n   Relative = 0;\r\n   Absolute = 1;\r\n}\r\nmessage VectorSumWaveform {\r\n}\r\nmessage VibrationWaveform {\r\n   optional bool _hasBeenRotated = 1 [default = false];\r\n}\r\nmessage Waveform {\r\n   optional WaveformType _type = 1 [default = Radial];\r\n   optional bcl.NetObjectProxy _recording = 2; // reference-tracked Recording\r\n   optional string _name = 3;\r\n   repeated Property _properties = 4;\r\n   repeated double _amplitude = 5 [packed=true];\r\n   repeated double _originalAmplitude = 6 [packed=true];\r\n   optional bool _isAlignable = 7 [default = false];\r\n   optional bool _hasBeenFiltered = 8 [default = false];\r\n   optional bool _hasLengthChanged = 9 [default = false];\r\n   // the following represent sub-types; at most 1 should have a value\r\n   optional AirblastWaveform AirblastWaveform = 100;\r\n   optional VectorSumWaveform VectorSumWaveform = 101;\r\n   optional VibrationWaveform VibrationWaveform = 102;\r\n}\r\nenum WaveformType {\r\n   Radial = 0;\r\n   Transverse = 1;\r\n   Vertical = 2;\r\n   VectorSum = 3;\r\n   Airblast = 4;\r\n}\r\nmessage Workspace {\r\n   optional int32 _index = 1 [default = 0];\r\n   repeated bcl.NetObjectProxy _recordings = 2; // reference-tracked Recording\r\n   repeated Property _properties = 3;\r\n   optional bool _neverSaved = 4 [default = false];\r\n   optional TimeAxisStyle _xAxisStyle = 5 [default = Relative];\r\n   optional StrainCalculationResult _strainCalcResult = 6;\r\n}\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270785295",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/207#issuecomment-270785295",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/207",
        "id": 270785295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc4NTI5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-05T23:11:58Z",
        "updated_at": "2017-01-05T23:11:58Z",
        "author_association": "OWNER",
        "body": "I doubt you'll make any fundamental changes to the size at this point, if\nyou are sure you're not duplicating anything in the tree now. You could\nalso consider running it through DeflateStream or similar - of course that\napplies to either serializer. Ultimately, there's data there that needs\nstoring.\n\nMarc\n\nOn 5 Jan 2017 10:59 p.m., \"SidneyWells\" <notifications@github.com> wrote:\n\n> Thanks Marc, you're spot on. One of my classes is referenced by a couple\n> of others in the model. I've set AsReference and AsReferenceDefault to true\n> in what I think are the appropriate places and the file size is now\n> slightly less than the BF equivalents:\n>\n> File 1: BF = 1371 kB, protobuf = 1285 kB\n> File 2: BF = 12103 kB, protobuf = 11795 kB\n>\n> Is this nearer to what you'd expect?\n>\n> In simplified terms, my model consists of a Workspace object, which\n> contains a collection of Recordings, and each Recording contains a\n> collection of Waveforms. Each Waveform contains a reference to the\n> Recording it belongs to. This is the only place in the model where there\n> are circular references. Each of these three classes also contain a few\n> primitives (or arrays of primitives) and a collection of Property objects.\n>\n> The .proto file is pasted below. Can you suggest any further optimisations?\n>\n> --\n>\n> import \"bcl.proto\"; // schema for protobuf-net's handling of core .NET\n> types\n>\n> message AirblastWaveform {\n> repeated int32 _amplitudeSigns = 1;\n> }\n> message BooleanProperty {\n> optional bool _value = 1 [default = false];\n> }\n> message DateTimeProperty {\n> optional bcl.DateTime _value = 1;\n> }\n> message DoubleProperty {\n> optional double _value = 1 [default = 0];\n> }\n> message DynamicStrain {\n> repeated double Ex = 1 [packed=true];\n> repeated double Ey = 2 [packed=true];\n> repeated double Ez = 3 [packed=true];\n> repeated double Exy = 4 [packed=true];\n> repeated double Eyz = 5 [packed=true];\n> repeated double Exz = 6 [packed=true];\n> }\n> message IntegerProperty {\n> optional int32 _value = 1 [default = 0];\n> }\n> message LongProperty {\n> optional int64 _value = 1 [default = 0];\n> }\n> message OID {\n> optional string Name = 1;\n> optional bcl_Guid Guid = 2;\n> }\n> message Object {\n> }\n> message ObjectProperty {\n> optional bcl.NetObjectProxy _value = 1;\n> }\n> message PhysicalQuantity {\n> optional PhysicalQuantityType _type = 1 [default = Dimensionless];\n> optional PhysicalUnitsType _siUnitsType = 2 [default = Dimensionless];\n> }\n> enum PhysicalQuantityType {\n> Dimensionless = 0;\n> Acceleration = 1;\n> Velocity = 2;\n> Displacement = 3;\n> Temperature = 4;\n> Voltage = 5;\n> Pressure = 6;\n> Time = 7;\n> Frequency = 8;\n> AccelerometerSensitivity = 9;\n> MicrophoneSensitivity = 10;\n> Mass = 11;\n> GeophoneSensitivity = 12;\n> }\n> message PhysicalUnits {\n> optional PhysicalUnitsType _type = 1 [default = Dimensionless];\n> optional PhysicalQuantity _quantity = 2;\n> optional string _symbol = 3;\n> optional string _name = 4;\n> }\n> enum PhysicalUnitsType {\n> Dimensionless = 0;\n> MetresPerSecondSquared = 1;\n> MultipleOfG = 2;\n> MmPerSecondSquared = 3;\n> MetresPerSecond = 4;\n> MmPerSecond = 5;\n> Metres = 6;\n> Millimetres = 7;\n> Pascals = 8;\n> Atmospheres = 9;\n> dBL = 10;\n> Seconds = 11;\n> Milliseconds = 12;\n> Microseconds = 13;\n> Volts = 14;\n> Celcius = 15;\n> Kelvin = 16;\n> Bits = 17;\n> Samples = 18;\n> Hertz = 19;\n> InchesPerSecondSquared = 20;\n> InchesPerSecond = 21;\n> VoltsPerMetrePerSecondSquared = 22;\n> VoltsPerG = 23;\n> VoltsPerPascal = 24;\n> MillivoltsPerPascal = 25;\n> Inches = 26;\n> Hours = 27;\n> Millibars = 28;\n> VoltsPerCmPerSecondSquared = 29;\n> CmPerSecondSquared = 30;\n> PoundsPerSquareInch = 31;\n> Kilograms = 32;\n> Pounds = 33;\n> VoltsPerMetrePerSecond = 34;\n> VoltsPerMmPerSecond = 35;\n> VoltsPerCmPerSecond = 36;\n> CmPerSecond = 37;\n> }\n> message PrincipalStrain {\n> repeated double E1 = 1 [packed=true];\n> repeated double E2 = 2 [packed=true];\n> repeated double E3 = 3 [packed=true];\n> }\n> message Property {\n> optional PropertyType _type = 1 [default = FilePath];\n> optional PhysicalUnits _units = 2;\n> // the following represent sub-types; at most 1 should have a value\n> optional ObjectProperty ObjectProperty = 100;\n> optional IntegerProperty IntegerProperty = 101;\n> optional LongProperty LongProperty = 102;\n> optional DoubleProperty DoubleProperty = 103;\n> optional StringProperty StringProperty = 104;\n> optional DateTimeProperty DateTimeProperty = 105;\n> optional BooleanProperty BooleanProperty = 106;\n> }\n> enum PropertyType {\n> FilePath = 0;\n> NumberOfChannels = 1;\n> Description = 2;\n> TriggerMethod = 3;\n> ConfigurationFile = 4;\n> Timestamp = 5;\n> BatteryVoltage = 6;\n> Temperature = 7;\n> TriggerSource = 8;\n> MonitorID = 9;\n> CalibrationDate = 10;\n> ChannelID = 11;\n> ChannelNumber = 12;\n> CalibrationValue = 13;\n> Units = 14;\n> OriginalUnits = 15;\n> SensorRange = 16;\n> Resolution = 17;\n> WaveformLength = 18;\n> WaveformDuration = 19;\n> SampleTime = 20;\n> SampleRate = 21;\n> PretriggerLength = 22;\n> PretriggerDuration = 23;\n> TriggerLevel = 24;\n> MaxAmplitude = 25;\n> MinAmplitude = 26;\n> PeakParticleAcceleration = 27;\n> PeakParticleVelocity = 28;\n> PeakPressure = 29;\n> Location = 30;\n> Comments = 31;\n> Coordinates = 32;\n> AccelerometerSensitivity = 33;\n> MicrophoneSensitivity = 34;\n> PeakParticleDisplacement = 35;\n> LocalTimeOffset = 36;\n> AirblastTriggerLevel = 37;\n> Null = 38;\n> RelativeEnergy = 39;\n> DigitisingConstant = 40;\n> FirmwareVersion = 41;\n> ShotNumber = 42;\n> ZeroCrossingFrequency = 43;\n> MonitoringPoint = 44;\n> BlastDesign = 45;\n> LocalCoordinates = 46;\n> Initiation = 47;\n> ChargeWeight = 48;\n> FiringDelay = 49;\n> ShowFiringData = 50;\n> FiringTimeOffset = 51;\n> FiringTimeScale = 52;\n> GeophoneSensitivity = 53;\n> }\n> message Recording {\n> repeated Property _originalProperties = 1;\n> optional double _originalInitialTimeOffset = 2 [default = 0];\n> optional double _initialTimeOffset = 3 [default = 0];\n> optional double _sampleTimeInSeconds = 4 [default = 0];\n> repeated Waveform _waveforms = 5;\n> repeated Property _properties = 6;\n> }\n> message StandardError {\n> repeated double Sx = 1 [packed=true];\n> repeated double Sy = 2 [packed=true];\n> repeated double Sz = 3 [packed=true];\n> repeated double Sxy = 4 [packed=true];\n> repeated double Syz = 5 [packed=true];\n> repeated double Sxz = 6 [packed=true];\n> }\n> message StrainCalculationResult {\n> optional DynamicStrain DynamicStrain = 1;\n> optional PrincipalStrain PrincipalStrain = 2;\n> optional StrainRotation Rotation = 3;\n> optional StandardError StandardError = 4;\n> repeated double SSR = 5 [packed=true];\n> repeated double Q = 6 [packed=true];\n> optional bcl.DateTime StartTime = 7;\n> optional StrainCalculationType CalculationType = 8 [default = TwoD];\n> repeated OID MonitorPoints = 9;\n> optional OID ReferencePoint = 10;\n> optional bool ArePrerequisitesMet = 11 [default = false];\n> }\n> enum StrainCalculationType {\n> TwoD = 0;\n> ThreeD = 1;\n> }\n> message StrainRotation {\n> repeated double Wx = 1 [packed=true];\n> repeated double Wy = 2 [packed=true];\n> repeated double Wz = 3 [packed=true];\n> }\n> message StringProperty {\n> optional string _value = 1;\n> }\n> enum TimeAxisStyle {\n> Relative = 0;\n> Absolute = 1;\n> }\n> message VectorSumWaveform {\n> }\n> message VibrationWaveform {\n> optional bool _hasBeenRotated = 1 [default = false];\n> }\n> message Waveform {\n> optional WaveformType _type = 1 [default = Radial];\n> optional bcl.NetObjectProxy _recording = 2; // reference-tracked Recording\n> optional string _name = 3;\n> repeated Property _properties = 4;\n> repeated double _amplitude = 5 [packed=true];\n> repeated double _originalAmplitude = 6 [packed=true];\n> optional bool _isAlignable = 7 [default = false];\n> optional bool _hasBeenFiltered = 8 [default = false];\n> optional bool _hasLengthChanged = 9 [default = false];\n> // the following represent sub-types; at most 1 should have a value\n> optional AirblastWaveform AirblastWaveform = 100;\n> optional VectorSumWaveform VectorSumWaveform = 101;\n> optional VibrationWaveform VibrationWaveform = 102;\n> }\n> enum WaveformType {\n> Radial = 0;\n> Transverse = 1;\n> Vertical = 2;\n> VectorSum = 3;\n> Airblast = 4;\n> }\n> message Workspace {\n> optional int32 _index = 1 [default = 0];\n> repeated bcl.NetObjectProxy _recordings = 2; // reference-tracked Recording\n> repeated Property _properties = 3;\n> optional bool _neverSaved = 4 [default = false];\n> optional TimeAxisStyle _xAxisStyle = 5 [default = Relative];\n> optional StrainCalculationResult _strainCalcResult = 6;\n> }\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/207#issuecomment-270782757>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsAwI4IdYjTQsb0kL1hph88xoeO4aks5rPXXSgaJpZM4LbSh8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/270834928",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/207#issuecomment-270834928",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/207",
        "id": 270834928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDgzNDkyOA==",
        "user": {
            "login": "SidneyWells",
            "id": 24926503,
            "node_id": "MDQ6VXNlcjI0OTI2NTAz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/24926503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SidneyWells",
            "html_url": "https://github.com/SidneyWells",
            "followers_url": "https://api.github.com/users/SidneyWells/followers",
            "following_url": "https://api.github.com/users/SidneyWells/following{/other_user}",
            "gists_url": "https://api.github.com/users/SidneyWells/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SidneyWells/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SidneyWells/subscriptions",
            "organizations_url": "https://api.github.com/users/SidneyWells/orgs",
            "repos_url": "https://api.github.com/users/SidneyWells/repos",
            "events_url": "https://api.github.com/users/SidneyWells/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SidneyWells/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-06T05:32:25Z",
        "updated_at": "2017-01-06T05:32:25Z",
        "author_association": "NONE",
        "body": "Thanks Marc, I'm happy with things now.  I'll use compression to reduce file size further."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/272229406",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/208#issuecomment-272229406",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/208",
        "id": 272229406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjIyOTQwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-12T17:37:07Z",
        "updated_at": "2017-01-12T17:37:07Z",
        "author_association": "OWNER",
        "body": "And what is the code that goes with this? Indeed, protobuf-net can't\ndeserialize an interface - at least, not without some help to tell it how\nto interpret that in terms of concrete types.\n\nOn 12 January 2017 at 13:49, fhchina <notifications@github.com> wrote:\n\n> ProtoBuf couldn't find parameterless constructor for IExpression, but\n> IExpression is an interface.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/208>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOl0QuBV9GMQ1sUGcdhDqCiohdMNks5rRi9OgaJpZM4LhxL7>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/273723955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-273723955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 273723955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzcyMzk1NQ==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-19T09:33:15Z",
        "updated_at": "2017-01-19T09:33:15Z",
        "author_association": "NONE",
        "body": "Same problem here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/273741994",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-273741994",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 273741994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mzc0MTk5NA==",
        "user": {
            "login": "daef",
            "id": 2098598,
            "node_id": "MDQ6VXNlcjIwOTg1OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2098598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daef",
            "html_url": "https://github.com/daef",
            "followers_url": "https://api.github.com/users/daef/followers",
            "following_url": "https://api.github.com/users/daef/following{/other_user}",
            "gists_url": "https://api.github.com/users/daef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daef/subscriptions",
            "organizations_url": "https://api.github.com/users/daef/orgs",
            "repos_url": "https://api.github.com/users/daef/repos",
            "events_url": "https://api.github.com/users/daef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daef/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-19T10:47:31Z",
        "updated_at": "2017-01-19T10:47:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "@pantonis have you tried PR https://github.com/mgravell/protobuf-net/pull/200 from @Cardanis ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274272158",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/209#issuecomment-274272158",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/209",
        "id": 274272158,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3MjE1OA==",
        "user": {
            "login": "GregEakin",
            "id": 18450224,
            "node_id": "MDQ6VXNlcjE4NDUwMjI0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18450224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregEakin",
            "html_url": "https://github.com/GregEakin",
            "followers_url": "https://api.github.com/users/GregEakin/followers",
            "following_url": "https://api.github.com/users/GregEakin/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregEakin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregEakin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregEakin/subscriptions",
            "organizations_url": "https://api.github.com/users/GregEakin/orgs",
            "repos_url": "https://api.github.com/users/GregEakin/repos",
            "events_url": "https://api.github.com/users/GregEakin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregEakin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T16:34:09Z",
        "updated_at": "2017-01-21T16:34:09Z",
        "author_association": "NONE",
        "body": "If you look at the data written, when MvcUserId is default (-1), no information is written [correct].\r\n```C#\r\n[TestMethod]\r\npublic void UserWriteDefault()\r\n{\r\n    using (var stream = new MemoryStream())\r\n    {\r\n        var person = new MvcUser { Id = -1 };\r\n        Serializer.Serialize(stream, person);\r\n        CollectionAssert.AreEqual(new byte[] { }, stream.ToArray());\r\n    }\r\n}\r\n```\r\n\r\nBut the read-back doesn't change it from zero to the default [wrong].\r\n```C#\r\n[TestMethod]\r\npublic void UserReadDefault()\r\n{\r\n    using (var stream = new MemoryStream(new byte[] { }))\r\n    {\r\n        var person = Serializer.Deserialize<MvcUser>(stream);\r\n        Assert.AreEqual(-1, person.Id);\r\n    }\r\n}\r\n```\r\n\r\nThe schema looks good.\r\n```C#\r\n[TestMethod]\r\npublic void SchemaTest()\r\n{\r\n    var proto = Serializer.GetProto<MvcUser>();\r\n    var schema = \"package BufferTests;\\r\\n\\r\\n\" +\r\n        \"message MvcUser {\\r\\n\" +\r\n        \"   optional int32 Id = 1 [default = -1];\\r\\n\" +\r\n        \"}\\r\\n\";\r\n    Assert.AreEqual(schema, proto);\r\n}\r\n```\r\n\r\nThis also looks like issue #203.\r\n[DefaultTests.zip](https://github.com/mgravell/protobuf-net/files/721286/DefaultTests.zip)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274273842",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/190#issuecomment-274273842",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/190",
        "id": 274273842,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3Mzg0Mg==",
        "user": {
            "login": "GregEakin",
            "id": 18450224,
            "node_id": "MDQ6VXNlcjE4NDUwMjI0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18450224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregEakin",
            "html_url": "https://github.com/GregEakin",
            "followers_url": "https://api.github.com/users/GregEakin/followers",
            "following_url": "https://api.github.com/users/GregEakin/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregEakin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregEakin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregEakin/subscriptions",
            "organizations_url": "https://api.github.com/users/GregEakin/orgs",
            "repos_url": "https://api.github.com/users/GregEakin/repos",
            "events_url": "https://api.github.com/users/GregEakin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregEakin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T17:01:57Z",
        "updated_at": "2017-01-21T17:01:57Z",
        "author_association": "NONE",
        "body": "The code is applying the DataMembers to the properties, without the ability to write to the backing variable. To fix this, we can do either of these:\r\n1) Apply the DataMember to the backing variables (the contract will have lower case names):\r\n```C#\r\n[DataContract]\r\npublic class TestMessage\r\n{\r\n    [DataMember(Order = 1)]\r\n    private readonly int clientId;\r\n    public int ClientId\r\n    {\r\n        get { return clientId; }\r\n    }\r\n\r\n    [DataMember(Order = 2)]\r\n    private readonly string name;\r\n    public string Name\r\n    {\r\n        get { return name; }\r\n    }\r\n\r\n    public TestMessage()\r\n    {}\r\n\r\n    public TestMessage(int clientId, string name)\r\n    {\r\n        this.clientId = clientId;\r\n        this.name = name;\r\n    }\r\n}\r\n```\r\n\r\n2) Use Auto-Properties instead:\r\n```C#\r\n[DataContract]\r\npublic class TestMessage\r\n{\r\n    [DataMember(Order = 1)]\r\n    public int ClientId { get; private set; }\r\n\r\n    [DataMember(Order = 2)]\r\n    public string Name { get; private set; }\r\n\r\n    public TestMessage()\r\n    { }\r\n\r\n    public TestMessage(int clientId, string name)\r\n    {\r\n        ClientId = clientId;\r\n        Name = name;\r\n    }\r\n}\r\n```\r\n\r\nIn either case, we also need a default constructor.\r\n[DataMemberTests.zip](https://github.com/mgravell/protobuf-net/files/721324/DataMemberTests.zip)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274274553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/209#issuecomment-274274553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/209",
        "id": 274274553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3NDU1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T17:14:43Z",
        "updated_at": "2017-01-21T17:14:43Z",
        "author_association": "OWNER",
        "body": "default values also need to be applied by your own code. this is easy in c#\nlatest:\n\n    [Required]\n    [DefaultValue(-1)]\n    [ProtoMember(1)]\n    public int MvcUserId { get; set; } = -1;\n\n(Note the initial value after the property)\n\nOn 21 Jan 2017 4:34 p.m., \"Greg Eakin\" <notifications@github.com> wrote:\n\nIf you look at the data written, when MvcUserId is default (-1), no\ninformation is written [correct].\n\n[TestMethod]public void UserWriteDefault()\n{\n    using (var stream = new MemoryStream())\n    {\n        var person = new MvcUser { Id = -1 };\n        Serializer.Serialize(stream, person);\n        CollectionAssert.AreEqual(new byte[] { }, stream.ToArray());\n    }\n}\n\nBut the read-back doesn't change it from zero to the default [wrong].\n\n[TestMethod]public void UserReadDefault()\n{\n    using (var stream = new MemoryStream(new byte[] { }))\n    {\n        var person = Serializer.Deserialize<MvcUser>(stream);\n        Assert.AreEqual(-1, person.Id);\n    }\n}\n\nThe schema looks good.\n\n[TestMethod]public void SchemaTest()\n{\n    var proto = Serializer.GetProto<MvcUser>();\n    var schema = \"package BufferTests;\\r\\n\\r\\n\" +\n        \"message MvcUser {\\r\\n\" +\n        \"   optional int32 Id = 1 [default = -1];\\r\\n\" +\n        \"}\\r\\n\";\n    Assert.AreEqual(schema, proto);\n}\n\nThis also looks like issue #203\n<https://github.com/mgravell/protobuf-net/issues/203>.\nDefaultTests.zip\n<https://github.com/mgravell/protobuf-net/files/721286/DefaultTests.zip>\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/209#issuecomment-274272158>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsDGNzV1Kyfr4znUykzSU7jWI-E2vks5rUjOBgaJpZM4LlQt3>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274275117",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/209#issuecomment-274275117",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/209",
        "id": 274275117,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3NTExNw==",
        "user": {
            "login": "GregEakin",
            "id": 18450224,
            "node_id": "MDQ6VXNlcjE4NDUwMjI0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18450224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregEakin",
            "html_url": "https://github.com/GregEakin",
            "followers_url": "https://api.github.com/users/GregEakin/followers",
            "following_url": "https://api.github.com/users/GregEakin/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregEakin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregEakin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregEakin/subscriptions",
            "organizations_url": "https://api.github.com/users/GregEakin/orgs",
            "repos_url": "https://api.github.com/users/GregEakin/repos",
            "events_url": "https://api.github.com/users/GregEakin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregEakin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T17:23:22Z",
        "updated_at": "2017-01-21T17:23:22Z",
        "author_association": "NONE",
        "body": "Thank you. That fixes these tests, and the ones in #203 "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274275329",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/203#issuecomment-274275329",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/203",
        "id": 274275329,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3NTMyOQ==",
        "user": {
            "login": "GregEakin",
            "id": 18450224,
            "node_id": "MDQ6VXNlcjE4NDUwMjI0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18450224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregEakin",
            "html_url": "https://github.com/GregEakin",
            "followers_url": "https://api.github.com/users/GregEakin/followers",
            "following_url": "https://api.github.com/users/GregEakin/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregEakin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregEakin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregEakin/subscriptions",
            "organizations_url": "https://api.github.com/users/GregEakin/orgs",
            "repos_url": "https://api.github.com/users/GregEakin/repos",
            "events_url": "https://api.github.com/users/GregEakin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregEakin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-21T17:27:28Z",
        "updated_at": "2017-01-21T17:27:28Z",
        "author_association": "NONE",
        "body": "Per @mgravell's help, we also need to set the default in the C# code, like this:\r\n```C#\r\n  [ProtoMember(2, Name = \"Type\"), DefaultValue(PhoneType.HOME)]\r\n  private PhoneType _type = PhoneType.HOME;\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/274486680",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/182#issuecomment-274486680",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/182",
        "id": 274486680,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDQ4NjY4MA==",
        "user": {
            "login": "JobaDiniz",
            "id": 165290,
            "node_id": "MDQ6VXNlcjE2NTI5MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/165290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JobaDiniz",
            "html_url": "https://github.com/JobaDiniz",
            "followers_url": "https://api.github.com/users/JobaDiniz/followers",
            "following_url": "https://api.github.com/users/JobaDiniz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JobaDiniz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JobaDiniz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JobaDiniz/subscriptions",
            "organizations_url": "https://api.github.com/users/JobaDiniz/orgs",
            "repos_url": "https://api.github.com/users/JobaDiniz/repos",
            "events_url": "https://api.github.com/users/JobaDiniz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JobaDiniz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-23T13:23:50Z",
        "updated_at": "2017-01-23T13:23:50Z",
        "author_association": "NONE",
        "body": "Couldn't find either..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/275328642",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/190#issuecomment-275328642",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/190",
        "id": 275328642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTMyODY0Mg==",
        "user": {
            "login": "pantonis",
            "id": 3295086,
            "node_id": "MDQ6VXNlcjMyOTUwODY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3295086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pantonis",
            "html_url": "https://github.com/pantonis",
            "followers_url": "https://api.github.com/users/pantonis/followers",
            "following_url": "https://api.github.com/users/pantonis/following{/other_user}",
            "gists_url": "https://api.github.com/users/pantonis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pantonis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pantonis/subscriptions",
            "organizations_url": "https://api.github.com/users/pantonis/orgs",
            "repos_url": "https://api.github.com/users/pantonis/repos",
            "events_url": "https://api.github.com/users/pantonis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pantonis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-26T08:03:58Z",
        "updated_at": "2017-01-26T08:03:58Z",
        "author_association": "NONE",
        "body": "Yes I totally agree. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/275723766",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-275723766",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 275723766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTcyMzc2Ng==",
        "user": {
            "login": "artkravchenko",
            "id": 12209129,
            "node_id": "MDQ6VXNlcjEyMjA5MTI5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12209129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/artkravchenko",
            "html_url": "https://github.com/artkravchenko",
            "followers_url": "https://api.github.com/users/artkravchenko/followers",
            "following_url": "https://api.github.com/users/artkravchenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/artkravchenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/artkravchenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/artkravchenko/subscriptions",
            "organizations_url": "https://api.github.com/users/artkravchenko/orgs",
            "repos_url": "https://api.github.com/users/artkravchenko/repos",
            "events_url": "https://api.github.com/users/artkravchenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/artkravchenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-27T17:32:02Z",
        "updated_at": "2017-01-27T17:59:38Z",
        "author_association": "NONE",
        "body": "The same problem for .NET 2.0, 3.0 and 3.5.\r\n\r\nExample:\r\n```\r\nCould not install package 'protobuf-net 2.1.0'. You are trying to install this package\r\ninto a project that targets '.NETFramework,Version=v3.5', but the package does not\r\ncontain any assembly references or content files that are compatible with that\r\nframework. For more information, contact the package author.\r\n```\r\n\r\nHowever, it can be successfully installed on .NET 4.5.2."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/275802329",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/197#issuecomment-275802329",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/197",
        "id": 275802329,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgwMjMyOQ==",
        "user": {
            "login": "mauricio-morales",
            "id": 3408159,
            "node_id": "MDQ6VXNlcjM0MDgxNTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3408159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mauricio-morales",
            "html_url": "https://github.com/mauricio-morales",
            "followers_url": "https://api.github.com/users/mauricio-morales/followers",
            "following_url": "https://api.github.com/users/mauricio-morales/following{/other_user}",
            "gists_url": "https://api.github.com/users/mauricio-morales/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mauricio-morales/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mauricio-morales/subscriptions",
            "organizations_url": "https://api.github.com/users/mauricio-morales/orgs",
            "repos_url": "https://api.github.com/users/mauricio-morales/repos",
            "events_url": "https://api.github.com/users/mauricio-morales/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mauricio-morales/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-27T23:28:42Z",
        "updated_at": "2017-01-27T23:28:42Z",
        "author_association": "NONE",
        "body": "I wrote a test that can exercise this issue:\r\n\r\n```\r\n        [TestMethod, TestCategory(\"RecruitmentEdge\"), Owner(\"RecruitmentEdge@careerbuilder.com\")]\r\n        public void Verify_Protobuf_Serialization()\r\n        {\r\n            using (var writeStream = new System.IO.MemoryStream())\r\n            {\r\n                ISet<String> mySet = new HashSet<String>();\r\n                mySet.Add(\"hello world\");\r\n\r\n                ProtoBuf.Serializer.Serialize(writeStream, mySet);\r\n\r\n                using (var readStream = new System.IO.MemoryStream(writeStream.ToArray()))\r\n                {\r\n                    var myDeserializedSet = ProtoBuf.Serializer.Deserialize<ISet<String>>(readStream);\r\n                    Assert.AreEqual(mySet.First(), myDeserializedSet.First());\r\n                    Assert.AreEqual(\"hello world\", mySet.First());\r\n                }\r\n            }\r\n\r\n            using (var writeStream = new System.IO.MemoryStream())\r\n            {\r\n                IDictionary<DayOfWeek, ISet<String>> myMap = new Dictionary<DayOfWeek, ISet<String>>();\r\n                myMap.Add(DayOfWeek.Monday, new HashSet<string> { \"hello world\" });\r\n\r\n                ProtoBuf.Serializer.Serialize(writeStream, myMap);\r\n\r\n                using (var readStream = new System.IO.MemoryStream(writeStream.ToArray()))\r\n                {\r\n                    var myDeserializedMap = ProtoBuf.Serializer.Deserialize<IDictionary<DayOfWeek, ISet<String>>>(readStream);\r\n                    Assert.AreEqual(myMap[DayOfWeek.Monday].First(), myDeserializedMap[DayOfWeek.Monday].First());\r\n                    Assert.AreEqual(\"hello world\", myMap[DayOfWeek.Monday].First());\r\n                }\r\n            }\r\n        }\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/275835256",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/197#issuecomment-275835256",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/197",
        "id": 275835256,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgzNTI1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-28T08:27:35Z",
        "updated_at": "2017-01-28T08:27:35Z",
        "author_association": "OWNER",
        "body": "interesting; iirc I have some inbuilt default cases for things like IList-T\n(being List-T, obviously) - this would be a legitimate addition, I think. I\nhave some time booked to look at pb-net soon, so will hopefully look at\nsoon. I also have a lot of backlog to look through.\n\nOn 27 Jan 2017 11:28 p.m., \"Mauricio Morales\" <notifications@github.com>\nwrote:\n\n> I wrote a test that can exercise this issue:\n>\n>         [TestMethod, TestCategory(\"RecruitmentEdge\"), Owner(\"RecruitmentEdge@careerbuilder.com\")]\n>         public void Verify_Protobuf_Serialization()\n>         {\n>             using (var writeStream = new System.IO.MemoryStream())\n>             {\n>                 ISet<String> mySet = new HashSet<String>();\n>                 mySet.Add(\"hello world\");\n>\n>                 ProtoBuf.Serializer.Serialize(writeStream, mySet);\n>\n>                 using (var readStream = new System.IO.MemoryStream(writeStream.ToArray()))\n>                 {\n>                     var myDeserializedSet = ProtoBuf.Serializer.Deserialize<ISet<String>>(readStream);\n>                     Assert.AreEqual(mySet.First(), myDeserializedSet.First());\n>                     Assert.AreEqual(\"hello world\", mySet.First());\n>                 }\n>             }\n>\n>             using (var writeStream = new System.IO.MemoryStream())\n>             {\n>                 IDictionary<DayOfWeek, ISet<String>> myMap = new Dictionary<DayOfWeek, ISet<String>>();\n>                 myMap.Add(DayOfWeek.Monday, new HashSet<string> { \"hello world\" });\n>\n>                 ProtoBuf.Serializer.Serialize(writeStream, myMap);\n>\n>                 using (var readStream = new System.IO.MemoryStream(writeStream.ToArray()))\n>                 {\n>                     var myDeserializedMap = ProtoBuf.Serializer.Deserialize<IDictionary<DayOfWeek, ISet<String>>>(readStream);\n>                     Assert.AreEqual(myMap[DayOfWeek.Monday].First(), myDeserializedMap[DayOfWeek.Monday].First());\n>                     Assert.AreEqual(\"hello world\", myMap[DayOfWeek.Monday].First());\n>                 }\n>             }\n>         }\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/197#issuecomment-275802329>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsG2yq8AWozqcrG589ODL9bsYS7IAks5rWn2rgaJpZM4K-Sfo>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/275835672",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-275835672",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 275835672,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgzNTY3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-28T08:38:46Z",
        "updated_at": "2017-01-28T08:38:46Z",
        "author_association": "OWNER",
        "body": "The problem here is that it grarually becomes prohibitively and\ndisproportionately time consuming to support older runtimes. For context,\nMS .NET 4.51 support **ended over a year ago** (\nhttps://blogs.msdn.microsoft.com/dotnet/2014/08/07/moving-to-the-net-framework-4-5-2/\n).\n\nThis is especially challenging given the changes to the build process etc.\nWhich needs *another* overhaul for the csproj changes, but that's another\nstory.\n\nThe long and short, then, will be:\n\n- if I do the csproj changes (imminent) and the old versions \"just work\"\n(meaning: fall into place without me going crazy), then great: I'll include\nthem\n- otherwise, if someone can figure out what the csproj and build changes\nare to make it successfully target those versions without causing problems,\nthen a PR will be gratefully received and merged\n\nHistorically I have tried to consider back-level - heck, it even used to\ncompile on C#1.2 (.Net 1.1), and might still do so! But: there comes a time\nwhen it isn't the best use of my time to try to do so.\n\nI also have concerns that continuing to support these very very old\nruntimes is me being an \"enabler\" when what I should actually be doing is\nadvocating for you to move to an up to date framework.\n\nOn 27 Jan 2017 5:32 p.m., \"Artem Kravchenko\" <notifications@github.com>\nwrote:\n\nThe same problem (.NET 3.5)\n\nCould not install package 'protobuf-net 2.1.0'. You are trying to\ninstall this package\ninto a project that targets '.NETFramework,Version=v3.5', but the\npackage does not\ncontain any assembly references or content files that are compatible with that\nframework. For more information, contact the package author.\n\n\u2014\nYou are receiving this because you modified the open/close state.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/168#issuecomment-275723766>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsKa5y67uhEO_UWy-1tekDHBGMY5Cks5rWioSgaJpZM4JJDFA>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/276204112",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-276204112",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 276204112,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjIwNDExMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-30T21:55:25Z",
        "updated_at": "2017-01-30T21:55:25Z",
        "author_association": "OWNER",
        "body": "noted, thanks; very interesting - hopefully will find out what is happening\nasap\n\nOn 30 Jan 2017 4:57 p.m., \"jamesgibbs100\" <notifications@github.com> wrote:\n\n> Hi there,\n>\n> Environment : NET Core 1.1.0 console application, consuming protobuf-net\n> 2.1.0. MUST be run/build in Release mode.\n>\n>    - Create a class with a static public constructor\n>    - Deserialize the class (after having serialized it)\n>    - Exception is thrown : System.InvalidProgramException: Common\n>    Language Runtime detected an invalid program\n>\n> Remove the static public constructor and the deserialization works as\n> expected.\n>\n> *Note : This only effects deserialization and not serialization*\n>\n> Very simple test rig below demonstrated the problem\n>\n> Thanks\n> James\n>\n> public class Program\n> {\n>         public static void Main(string[] args)\n>         {\n>             ProtoTestOne t1 = null;\n>             using (MemoryStream ms = new MemoryStream())\n>             {\n>                 ProtoBuf.Serializer.Serialize<ProtoTestOne>(ms, t1);\n>                 ms.Seek(0, SeekOrigin.Begin);\n>                 t1 = ProtoBuf.Serializer.Deserialize<ProtoTestOne>(ms);\n>             }\n>         }\n>\n>         [ProtoBuf.ProtoContract]\n>         public class ProtoTestOne\n>         {\n>             //This causes the exception\n>             static ProtoTestOne()\n>             {\n>             }\n>\n>             public ProtoTestOne()\n>             {\n>             }\n>         }\n> }\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/210>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHhVVK3sEutChOKE5WLaY0OARCXrks5rXhZygaJpZM4LxpYv>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/276716537",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-276716537",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 276716537,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjcxNjUzNw==",
        "user": {
            "login": "DapperTayra",
            "id": 5155812,
            "node_id": "MDQ6VXNlcjUxNTU4MTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5155812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DapperTayra",
            "html_url": "https://github.com/DapperTayra",
            "followers_url": "https://api.github.com/users/DapperTayra/followers",
            "following_url": "https://api.github.com/users/DapperTayra/following{/other_user}",
            "gists_url": "https://api.github.com/users/DapperTayra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DapperTayra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DapperTayra/subscriptions",
            "organizations_url": "https://api.github.com/users/DapperTayra/orgs",
            "repos_url": "https://api.github.com/users/DapperTayra/repos",
            "events_url": "https://api.github.com/users/DapperTayra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DapperTayra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-01T17:06:08Z",
        "updated_at": "2017-02-01T17:06:08Z",
        "author_association": "NONE",
        "body": "+1"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/276754486",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-276754486",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 276754486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc1NDQ4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-01T19:23:50Z",
        "updated_at": "2017-02-01T19:23:50Z",
        "author_association": "OWNER",
        "body": "the fundsmental thing here is that the .proto schema proessing needs a\nsingnificant overhaul (read: rewrite) in order to be viable in the\nxplat/core-clr world. This would be a natural thing to fold into that, but\nin some ways I'm reluctant to stir too hard at the old protoc/xslt code.\n\nthe good-ish news is that it is all protocol compatible, but I acknowledge\nthat it is inconvenient to do so. Needs work, and I have a chunk of time\nearmarked for protobuf-net love this quarter.\n\nOn 1 Feb 2017 5:06 p.m., \"DapperTayra\" <notifications@github.com> wrote:\n\n> +1\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/47#issuecomment-276716537>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEbwksQtUcGRUtl53pGmztd3oyZyks5rYLuAgaJpZM4C8pza>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/276776485",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-276776485",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 276776485,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc3NjQ4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-01T20:44:46Z",
        "updated_at": "2017-02-01T20:44:46Z",
        "author_association": "OWNER",
        "body": "for info, I'm starting some ANTLR work to see what falls out; it isn't\nbeing ignored\n\nOn 1 Feb 2017 7:23 p.m., \"Marc Gravell\" <marc.gravell@gmail.com> wrote:\n\n> the fundsmental thing here is that the .proto schema proessing needs a\n> singnificant overhaul (read: rewrite) in order to be viable in the\n> xplat/core-clr world. This would be a natural thing to fold into that, but\n> in some ways I'm reluctant to stir too hard at the old protoc/xslt code.\n>\n> the good-ish news is that it is all protocol compatible, but I acknowledge\n> that it is inconvenient to do so. Needs work, and I have a chunk of time\n> earmarked for protobuf-net love this quarter.\n>\n> On 1 Feb 2017 5:06 p.m., \"DapperTayra\" <notifications@github.com> wrote:\n>\n>> +1\n>>\n>> \u2014\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/47#issuecomment-276716537>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsEbwksQtUcGRUtl53pGmztd3oyZyks5rYLuAgaJpZM4C8pza>\n>> .\n>>\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/277363576",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-277363576",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 277363576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzM2MzU3Ng==",
        "user": {
            "login": "jamesgibbs100",
            "id": 4983720,
            "node_id": "MDQ6VXNlcjQ5ODM3MjA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4983720?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesgibbs100",
            "html_url": "https://github.com/jamesgibbs100",
            "followers_url": "https://api.github.com/users/jamesgibbs100/followers",
            "following_url": "https://api.github.com/users/jamesgibbs100/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesgibbs100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesgibbs100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesgibbs100/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesgibbs100/orgs",
            "repos_url": "https://api.github.com/users/jamesgibbs100/repos",
            "events_url": "https://api.github.com/users/jamesgibbs100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesgibbs100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-03T21:12:48Z",
        "updated_at": "2017-02-03T21:12:48Z",
        "author_association": "NONE",
        "body": "Hi Marc,\r\n\r\nWas wondering how you were getting on - did you manage to reproduce the issue I faced ?\r\n\r\nThanks\r\nJames"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/279040450",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-279040450",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 279040450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA0MDQ1MA==",
        "user": {
            "login": "JohnHBrock",
            "id": 3038603,
            "node_id": "MDQ6VXNlcjMwMzg2MDM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3038603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnHBrock",
            "html_url": "https://github.com/JohnHBrock",
            "followers_url": "https://api.github.com/users/JohnHBrock/followers",
            "following_url": "https://api.github.com/users/JohnHBrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnHBrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnHBrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnHBrock/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnHBrock/orgs",
            "repos_url": "https://api.github.com/users/JohnHBrock/repos",
            "events_url": "https://api.github.com/users/JohnHBrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnHBrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-10T19:22:09Z",
        "updated_at": "2017-02-10T19:22:09Z",
        "author_association": "NONE",
        "body": "Here's my argument for continued .NET 3.5 support:\r\n\r\nMicrosoft has ended .NET 4.5.1 support, but they haven't ended .NET 3.5 SP1 support: [.NET 3.5 SP1 support is tied to the various Windows OS support lifecycles](https://support.microsoft.com/en-us/gp/framework_faq/en-us), including Windows 10; some of these OS support lifecycles last through at least 2020.\r\n\r\n.NET 3.5 is also the highest version that can still run on Windows XP. Standard Windows XP isn't supported by Microsoft anymore, but embedded versions -- especially for point-of-sale systems like cash registers -- I believe are still officially supported by Microsoft."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/280750275",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-280750275",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 280750275,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDc1MDI3NQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-17T19:54:46Z",
        "updated_at": "2017-02-17T19:56:07Z",
        "author_association": "NONE",
        "body": "Is there any update on tracking this down, I am encountering this issue as well.\r\n\r\nEdit:\r\nI am also having this problem in release mode..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/280825589",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/218#issuecomment-280825589",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/218",
        "id": 280825589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDgyNTU4OQ==",
        "user": {
            "login": "Tom-Cuthill",
            "id": 24502866,
            "node_id": "MDQ6VXNlcjI0NTAyODY2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/24502866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tom-Cuthill",
            "html_url": "https://github.com/Tom-Cuthill",
            "followers_url": "https://api.github.com/users/Tom-Cuthill/followers",
            "following_url": "https://api.github.com/users/Tom-Cuthill/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tom-Cuthill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tom-Cuthill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tom-Cuthill/subscriptions",
            "organizations_url": "https://api.github.com/users/Tom-Cuthill/orgs",
            "repos_url": "https://api.github.com/users/Tom-Cuthill/repos",
            "events_url": "https://api.github.com/users/Tom-Cuthill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tom-Cuthill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-18T06:21:31Z",
        "updated_at": "2017-02-18T06:21:31Z",
        "author_association": "NONE",
        "body": "Apologies, here is the GUI text:\r\n[GUI.txt](https://github.com/mgravell/protobuf-net/files/784819/GUI.txt)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/281079515",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-281079515",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 281079515,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA3OTUxNQ==",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-20T13:30:00Z",
        "updated_at": "2017-02-20T13:30:00Z",
        "author_association": "NONE",
        "body": "@mgravell, when I clone your source at ```master```, enter ```protobuf-net```, ```dotnet migrate``` (to use the new .NET Core csproj format), edit the csproj to add a ```PropertyGroup``` for ```netstandard1.5``` (also knocked out targets that I don't personally need for debugging purposes) and add ```DefineConstants``` for ```$(DefineConstants);FEAT_SAFE;COREFX;PORTABLE``` and then reference this DLL from my ```netstandard1.5``` project, everything seems to work fine..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/281087804",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-281087804",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 281087804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA4NzgwNA==",
        "user": {
            "login": "trimox",
            "id": 11887843,
            "node_id": "MDQ6VXNlcjExODg3ODQz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11887843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trimox",
            "html_url": "https://github.com/trimox",
            "followers_url": "https://api.github.com/users/trimox/followers",
            "following_url": "https://api.github.com/users/trimox/following{/other_user}",
            "gists_url": "https://api.github.com/users/trimox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trimox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trimox/subscriptions",
            "organizations_url": "https://api.github.com/users/trimox/orgs",
            "repos_url": "https://api.github.com/users/trimox/repos",
            "events_url": "https://api.github.com/users/trimox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trimox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-20T14:06:30Z",
        "updated_at": "2017-02-20T14:06:30Z",
        "author_association": "NONE",
        "body": "Can we get this published to nuget? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/281090193",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/217#issuecomment-281090193",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/217",
        "id": 281090193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA5MDE5Mw==",
        "user": {
            "login": "karkusviktor",
            "id": 14263851,
            "node_id": "MDQ6VXNlcjE0MjYzODUx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/14263851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karkusviktor",
            "html_url": "https://github.com/karkusviktor",
            "followers_url": "https://api.github.com/users/karkusviktor/followers",
            "following_url": "https://api.github.com/users/karkusviktor/following{/other_user}",
            "gists_url": "https://api.github.com/users/karkusviktor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karkusviktor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karkusviktor/subscriptions",
            "organizations_url": "https://api.github.com/users/karkusviktor/orgs",
            "repos_url": "https://api.github.com/users/karkusviktor/repos",
            "events_url": "https://api.github.com/users/karkusviktor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karkusviktor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-20T14:16:43Z",
        "updated_at": "2017-02-20T14:16:43Z",
        "author_association": "NONE",
        "body": "I managed to figure out the problem. My serialized fields were private, after I made them public it worked.\r\nI think the reason is the project in which I read the objects is a UWP project where the code generation is limited. (UWP is the reason why I use 2.0 instead of 2.1)\r\nIt was a little bit frustrating that I got no exception about this problem, just all my classes were empty."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/281196241",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/168#issuecomment-281196241",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/168",
        "id": 281196241,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTE5NjI0MQ==",
        "user": {
            "login": "mehmetakbulut",
            "id": 18250141,
            "node_id": "MDQ6VXNlcjE4MjUwMTQx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18250141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mehmetakbulut",
            "html_url": "https://github.com/mehmetakbulut",
            "followers_url": "https://api.github.com/users/mehmetakbulut/followers",
            "following_url": "https://api.github.com/users/mehmetakbulut/following{/other_user}",
            "gists_url": "https://api.github.com/users/mehmetakbulut/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mehmetakbulut/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mehmetakbulut/subscriptions",
            "organizations_url": "https://api.github.com/users/mehmetakbulut/orgs",
            "repos_url": "https://api.github.com/users/mehmetakbulut/repos",
            "events_url": "https://api.github.com/users/mehmetakbulut/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mehmetakbulut/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-20T22:25:46Z",
        "updated_at": "2017-02-20T22:25:46Z",
        "author_association": "NONE",
        "body": "In addition to POS systems pointed out by John, projects for the Unity3D platform also need to target .NET 3.5 for the time being. ([there is .NET 4.6 support on the way](https://forum.unity3d.com/threads/upgraded-mono-net-in-editor-on-5-5-0b9.438359/) but it is on the research track and won't be here for a while)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/281620157",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/215#issuecomment-281620157",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/215",
        "id": 281620157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTYyMDE1Nw==",
        "user": {
            "login": "hiredgunhouse",
            "id": 173206,
            "node_id": "MDQ6VXNlcjE3MzIwNg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/173206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hiredgunhouse",
            "html_url": "https://github.com/hiredgunhouse",
            "followers_url": "https://api.github.com/users/hiredgunhouse/followers",
            "following_url": "https://api.github.com/users/hiredgunhouse/following{/other_user}",
            "gists_url": "https://api.github.com/users/hiredgunhouse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hiredgunhouse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hiredgunhouse/subscriptions",
            "organizations_url": "https://api.github.com/users/hiredgunhouse/orgs",
            "repos_url": "https://api.github.com/users/hiredgunhouse/repos",
            "events_url": "https://api.github.com/users/hiredgunhouse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hiredgunhouse/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-22T09:47:40Z",
        "updated_at": "2017-02-22T09:47:40Z",
        "author_association": "NONE",
        "body": "I've added a Collections section to the Getting Started page: https://github.com/mgravell/protobuf-net/wiki/Getting-Started\r\nPlease feel free to make any updates/corrections you see fit and then close this issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/282543669",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/220#issuecomment-282543669",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/220",
        "id": 282543669,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU0MzY2OQ==",
        "user": {
            "login": "OnurGumus",
            "id": 4114592,
            "node_id": "MDQ6VXNlcjQxMTQ1OTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4114592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OnurGumus",
            "html_url": "https://github.com/OnurGumus",
            "followers_url": "https://api.github.com/users/OnurGumus/followers",
            "following_url": "https://api.github.com/users/OnurGumus/following{/other_user}",
            "gists_url": "https://api.github.com/users/OnurGumus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OnurGumus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OnurGumus/subscriptions",
            "organizations_url": "https://api.github.com/users/OnurGumus/orgs",
            "repos_url": "https://api.github.com/users/OnurGumus/repos",
            "events_url": "https://api.github.com/users/OnurGumus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OnurGumus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-26T09:26:41Z",
        "updated_at": "2017-02-26T09:26:41Z",
        "author_association": "NONE",
        "body": "Basically the error is due to you are serializing the same object to the same stream multiple times which is rather confusing for me. If you change the serialization line to\r\nSerializer.Serialize(stream, person);\r\nstream.Position = 0;\r\nthat would be a more reasonable test."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/282544878",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/220#issuecomment-282544878",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/220",
        "id": 282544878,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU0NDg3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-26T09:52:49Z",
        "updated_at": "2017-02-26T09:52:49Z",
        "author_association": "OWNER",
        "body": "The previous comment is correct, but to be more specific: because you write\nmultiple times to the same stream without rewinding/clearing the contents,\nyou are essentially *concatenating* all the objects into a single stream -\nso the overall length of data will be (number of objects)*(size of object).\nAs an aside, this also means it isn't a like for like performance test,\nespecially for deserialization!\n\nNow, protobuf is designed such that append===merge. So from protobuf's\nperspective, you have written a **single** object with many many key/value\npairs - most of which are duplicates. If you *ever need* to do what you are\ndoing here (writing multiple objects sequentially), the\nSerializeWithLengthPrefix and DeserializeWithLengthPrefix methods will help\nyou - basically they allow you to tell the system how to identify\nindividual objects. However, in your case what you should probably do is\nrewind and clear the stream between writes, so:\n\n\nfor(...) {\n    ms.Position = 0;\n    ms.Length = 0;\n\n    // not shown: serialize to ms here\n\n}\n// read the contents of the final write:\nvar arr = ms.ToArray();\n\n\n\nOn 23 February 2017 at 17:38, Snarly Narwhal <notifications@github.com>\nwrote:\n\n> I get a SystemArgumentException: \"An item with the same key has already\n> been added.\" when deserializing a dictionary. I wrote this test script:\n>\n> `\n> using System;\n> using System.Collections.Generic;\n> using System.Diagnostics;\n> using System.IO;\n> using System.Text;\n> using ProtoBuf;\n>\n> class Program {\n> static void Main(string[] args) {\n>\n> \tint length = 1000;\n>\n> \tstring json = \"\";\n>\n> \tStopwatch watch;\n>\n> \tfloat ms;\n>\n>\n> \tPerson person = new Person {\n> \t\tFirstName = \"John\",\n> \t\tLastName = \"Doe\",\n> \t\tProfession = \"Programmer\",\n> \t\tAge = 99,\n> \t\tIsMale = false\n> \t};\n>\n> \tperson.GiveFriends();\n>\n> \t//////////////////// JSON_START\n> \twatch = Stopwatch.StartNew();\n> \tfor (int i = 0; i < length; i++) {\n> \t\tjson = Newtonsoft.Json.JsonConvert.SerializeObject(person);\n> \t}\n> \twatch.Stop();\n> \tms = watch.ElapsedMilliseconds;\n> \tConsole.WriteLine(\"Json serialize: \" + ms);\n>\n> \twatch = Stopwatch.StartNew();\n> \tfor (int i = 0; i < length; i++) {\n> \t\tPerson person0 = Newtonsoft.Json.JsonConvert.DeserializeObject<Person>(json);\n> \t}\n> \twatch.Stop();\n> \tms = watch.ElapsedMilliseconds;\n> \tConsole.WriteLine(\"Json deserialize: \" + ms);\n>\n> \t//////////////////// JSON_END\n>\n> \t////////////////// PROTOBUFF_START\n>\n> \tbyte[] data = null;\n>\n> \twatch = Stopwatch.StartNew();\n> \tusing (MemoryStream stream = new MemoryStream()) {\t\n> \t\tfor (int i = 0; i < length; i++) {\n> \t\t\tSerializer.Serialize(stream, person);\n> \t\t}\n> \t\tdata = stream.ToArray();\n> \t}\n> \twatch.Stop();\n> \tms = watch.ElapsedMilliseconds;\n> \tConsole.WriteLine(\"Proto serialize: \" + ms);\n>\n> \twatch = Stopwatch.StartNew();\n> \tusing (MemoryStream stream = new MemoryStream(data)) {\n> \t\tfor (int i = 0; i < length; i++) {\n> \t\t\tSerializer.Deserialize<Person>(stream);\n> \t\t}\n> \t}\n>\n> \twatch.Stop();\n> \tms = watch.ElapsedMilliseconds;\n> \tConsole.WriteLine(\"Proto deserialize: \" + ms);\n>\n> \t//////////////////// PROTOBUFF_END\n>\n> \tConsole.ReadLine();\n> }\n>\n> }\n>\n> [ProtoContract]\n> public class Person {\n>\n> [ProtoMember(1)]\n> public string FirstName;\n> [ProtoMember(2)]\n> public string LastName;\n> [ProtoMember(3)]\n> public string Profession;\n> [ProtoMember(4)]\n> public int Age;\n> [ProtoMember(5)]\n> public bool IsMale;\n> [ProtoMember(6)]\n> public Person[] FriendsArray;\n> [ProtoMember(7)]\n> public List<Person> FriendsList = new List<Person>();\n> [ProtoMember(8)]\n> public Dictionary<int, Person> FriendsDictionary = new Dictionary<int, Person>();\n>\n> public Person() {\n> \tFirstName = \"John\";\n> \tLastName = \"Doe\";\n> \tProfession = \"Programmer\";\n> \tAge = 99;\n> \tIsMale = true;\n> }\n>\n> public void GiveFriends() {\n> \tint len = 100;\n> \tFriendsArray = new Person[len];\n> \tFriendsList = new List<Person>();\n> \tFriendsDictionary = new Dictionary<int, Person>();\n> \tfor (int i = 0; i < len; i++) {\n> \t\tFriendsArray[i] = new Person();\n> \t\tFriendsList.Add(new Person());\n> \t\tFriendsDictionary.Add(i, new Person());\n> \t}\n> }\n>\n> }\n> `\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/220>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGYa6L32UxHjPD59ec7sAW-hPVE7ks5rfcQAgaJpZM4MKRUD>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/282580955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/220#issuecomment-282580955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/220",
        "id": 282580955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4MDk1NQ==",
        "user": {
            "login": "snarlynarwhal",
            "id": 3300071,
            "node_id": "MDQ6VXNlcjMzMDAwNzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3300071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snarlynarwhal",
            "html_url": "https://github.com/snarlynarwhal",
            "followers_url": "https://api.github.com/users/snarlynarwhal/followers",
            "following_url": "https://api.github.com/users/snarlynarwhal/following{/other_user}",
            "gists_url": "https://api.github.com/users/snarlynarwhal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snarlynarwhal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snarlynarwhal/subscriptions",
            "organizations_url": "https://api.github.com/users/snarlynarwhal/orgs",
            "repos_url": "https://api.github.com/users/snarlynarwhal/repos",
            "events_url": "https://api.github.com/users/snarlynarwhal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snarlynarwhal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-26T19:39:15Z",
        "updated_at": "2017-02-27T18:26:07Z",
        "author_association": "NONE",
        "body": "Thanks so much for the speedy and thorough replies! I want to simulate writing multiple objects sequentially - (De)SerializeWithLengthPrefix worked perfectly!  Would you mind elaborating more or pointing me in the direction where I could learn more about what exactly the PrefixStyle options do? All of them work, although PrefixStyle.None made the deserialization time 1 ms which appeared odd.\r\n\r\nEdit:\r\n\r\nI closed the issue, but would appreciate an elaboration regarding the PrefixStyle option. :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/282646234",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-282646234",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 282646234,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjY0NjIzNA==",
        "user": {
            "login": "mydishes",
            "id": 16471374,
            "node_id": "MDQ6VXNlcjE2NDcxMzc0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16471374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mydishes",
            "html_url": "https://github.com/mydishes",
            "followers_url": "https://api.github.com/users/mydishes/followers",
            "following_url": "https://api.github.com/users/mydishes/following{/other_user}",
            "gists_url": "https://api.github.com/users/mydishes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mydishes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mydishes/subscriptions",
            "organizations_url": "https://api.github.com/users/mydishes/orgs",
            "repos_url": "https://api.github.com/users/mydishes/repos",
            "events_url": "https://api.github.com/users/mydishes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mydishes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-02-27T07:24:16Z",
        "updated_at": "2017-02-27T07:24:16Z",
        "author_association": "NONE",
        "body": "@daef Same problem\r\nAnd Try revert  protobuf-net\\protobuf-net\\Meta\\MetaType.cs to the [Commits on Jul 7, 2016](https://github.com/mgravell/protobuf-net/blob/96fd6d2d737344007e1f37af789156414c0583a2/protobuf-net/Meta/MetaType.cs) would compiling success!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/283737989",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-283737989",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 283737989,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzczNzk4OQ==",
        "user": {
            "login": "Scooletz",
            "id": 519707,
            "node_id": "MDQ6VXNlcjUxOTcwNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/519707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Scooletz",
            "html_url": "https://github.com/Scooletz",
            "followers_url": "https://api.github.com/users/Scooletz/followers",
            "following_url": "https://api.github.com/users/Scooletz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Scooletz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Scooletz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Scooletz/subscriptions",
            "organizations_url": "https://api.github.com/users/Scooletz/orgs",
            "repos_url": "https://api.github.com/users/Scooletz/repos",
            "events_url": "https://api.github.com/users/Scooletz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Scooletz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-02T18:30:28Z",
        "updated_at": "2017-03-02T18:30:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Same problem. @mgravell any update on this? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/283741288",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/174#issuecomment-283741288",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/174",
        "id": 283741288,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzc0MTI4OA==",
        "user": {
            "login": "nielslbeck",
            "id": 514291,
            "node_id": "MDQ6VXNlcjUxNDI5MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/514291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nielslbeck",
            "html_url": "https://github.com/nielslbeck",
            "followers_url": "https://api.github.com/users/nielslbeck/followers",
            "following_url": "https://api.github.com/users/nielslbeck/following{/other_user}",
            "gists_url": "https://api.github.com/users/nielslbeck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nielslbeck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nielslbeck/subscriptions",
            "organizations_url": "https://api.github.com/users/nielslbeck/orgs",
            "repos_url": "https://api.github.com/users/nielslbeck/repos",
            "events_url": "https://api.github.com/users/nielslbeck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nielslbeck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-02T18:42:58Z",
        "updated_at": "2017-03-02T18:42:58Z",
        "author_association": "NONE",
        "body": "A new version of the package would be great! I hope @mgravell can help here :-)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/284100219",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/222#issuecomment-284100219",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/222",
        "id": 284100219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDEwMDIxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-03T23:34:35Z",
        "updated_at": "2017-03-03T23:34:35Z",
        "author_association": "OWNER",
        "body": "To quote from the homepage:\n\ninstall\n\nNuget : Install-Package protobuf-net\n\n\nThe nuget link is https://www.nuget.org/packages/protobuf-net/, but as\nmentioned - the most common way to install would be via the package manager\nin Visual Studio.\n\nOn 2 March 2017 at 18:52, Snarly Narwhal <notifications@github.com> wrote:\n\n> Can the .dll files be downloaded anywhere? If not, can they be uploaded so\n> we don't need to build ourselves? Or could we get documentation explaining\n> how to build protobuf-net for a specific platform?\n>\n> I forked the project and can't even build the solution. :/\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/222>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsC60-qRLiA8xWKSJzrzLc3d3zNNeks5rhw_0gaJpZM4MRYZR>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/284102758",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/222#issuecomment-284102758",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/222",
        "id": 284102758,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDEwMjc1OA==",
        "user": {
            "login": "snarlynarwhal",
            "id": 3300071,
            "node_id": "MDQ6VXNlcjMzMDAwNzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3300071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snarlynarwhal",
            "html_url": "https://github.com/snarlynarwhal",
            "followers_url": "https://api.github.com/users/snarlynarwhal/followers",
            "following_url": "https://api.github.com/users/snarlynarwhal/following{/other_user}",
            "gists_url": "https://api.github.com/users/snarlynarwhal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snarlynarwhal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snarlynarwhal/subscriptions",
            "organizations_url": "https://api.github.com/users/snarlynarwhal/orgs",
            "repos_url": "https://api.github.com/users/snarlynarwhal/repos",
            "events_url": "https://api.github.com/users/snarlynarwhal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snarlynarwhal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-03T23:51:37Z",
        "updated_at": "2017-03-03T23:51:37Z",
        "author_association": "NONE",
        "body": "I needed it for Unity which doesn't integrate with Nuget. I eventually found the downloads page from the Google Code site - thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/285927530",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/223#issuecomment-285927530",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/223",
        "id": 285927530,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTkyNzUzMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T07:24:52Z",
        "updated_at": "2017-03-12T07:24:52Z",
        "author_association": "OWNER",
        "body": "0 bytes is legal in protobuf - so thr first thing to check is that you\ndon't have an example that serializes to zero bytes. However, is is also\npossible that UWP / Native is making it unhappy, in particular with the\nlack of meta-programming. Are there any exceptions? I would have expected\nexceptions if this were the case...\n\nOn 12 Mar 2017 2:18 a.m., \"Ryan Tremblay\" <notifications@github.com> wrote:\n\n> When protobuf-net 2.0.0.668 (the last one that seems to work with UWP\n> projects) is used in a UWP project that is compiled with .NET Native (the\n> default for Release builds, and required for any app published to the\n> store), it completely doesn't work. That is, the Serialize function writes\n> zero bytes to the specified stream.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/223>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOQscvHjga7-Oe2U_UydM0vaudcaks5rk1XagaJpZM4MaaJe>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/285960038",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/223#issuecomment-285960038",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/223",
        "id": 285960038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk2MDAzOA==",
        "user": {
            "login": "ryantrem",
            "id": 5084643,
            "node_id": "MDQ6VXNlcjUwODQ2NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5084643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryantrem",
            "html_url": "https://github.com/ryantrem",
            "followers_url": "https://api.github.com/users/ryantrem/followers",
            "following_url": "https://api.github.com/users/ryantrem/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryantrem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryantrem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryantrem/subscriptions",
            "organizations_url": "https://api.github.com/users/ryantrem/orgs",
            "repos_url": "https://api.github.com/users/ryantrem/repos",
            "events_url": "https://api.github.com/users/ryantrem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryantrem/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T17:31:51Z",
        "updated_at": "2017-03-12T22:26:17Z",
        "author_association": "NONE",
        "body": "In this case, the data I'm serializing definitely should not be 0 bytes. The exact same code works fine when built as Debug (without .NET Native), but in Release (with .NET Native) it doesn't write any data out. The same problem seems to exist for deserializing as well. That is, where I successfully serialized in a Debug build, when I try to deserialize the data in Release, it doesn't read any of the data and I get back an empty/default object. In both cases, there are no managed or native exceptions."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/285985605",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/223#issuecomment-285985605",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/223",
        "id": 285985605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk4NTYwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-12T23:13:04Z",
        "updated_at": "2017-03-12T23:13:04Z",
        "author_association": "OWNER",
        "body": "im kinda surpised it doesnt throw all kinds of exceptions, then.\n\nultimately UWP needs pre-gen. ive been hoping that the Roslyn generator\nstuff would ship so I can start working on a v3 that handles this\nautomatically, but until then you'd have to use the precompiler options in\npb-net. Unfortunately this isn't trivial and I have not tested it on UWP\nspecifically.\n\nOn 12 Mar 2017 5:31 p.m., \"Ryan Tremblay\" <notifications@github.com> wrote:\n\n> In this case, the data I'm serializing definitely should not be 0 bytes.\n> The exact same code works fine when built as Debug (without .NET Native),\n> but in Release (with .NET Native) it doesn't write any data out. The same\n> problem seems to exist for deserializing as well. That is, where I\n> successfully serialized in a Debug build, when I try to deserialize the\n> data in Release, it doesn't read any of the data and I get back an\n> empty/default object.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/223#issuecomment-285960038>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGE1aWk46KfGPyFqBYdTIP8XKsGEks5rlCwHgaJpZM4MaaJe>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286010747",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/223#issuecomment-286010747",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/223",
        "id": 286010747,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjAxMDc0Nw==",
        "user": {
            "login": "ryantrem",
            "id": 5084643,
            "node_id": "MDQ6VXNlcjUwODQ2NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5084643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryantrem",
            "html_url": "https://github.com/ryantrem",
            "followers_url": "https://api.github.com/users/ryantrem/followers",
            "following_url": "https://api.github.com/users/ryantrem/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryantrem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryantrem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryantrem/subscriptions",
            "organizations_url": "https://api.github.com/users/ryantrem/orgs",
            "repos_url": "https://api.github.com/users/ryantrem/repos",
            "events_url": "https://api.github.com/users/ryantrem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryantrem/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T04:00:21Z",
        "updated_at": "2017-03-13T04:00:21Z",
        "author_association": "NONE",
        "body": "I was reading up a bit on the *.rd.xml files used by the .NET Native compiler and found that if I change:\r\n\r\n`<Assembly Name=\"*Application*\" Dynamic=\"Required All\" />`\r\n\r\nto:\r\n\r\n`<Assembly Name=\"*Application*\" Dynamic=\"Required All\" Serialize=\"All\" />`\r\n\r\nthen protobuf works as expected. From the docs:\r\n\r\n> Serialize. Controls runtime access to constructors, fields, and properties, to enable type instances to be serialized and serialized by third-party libraries such as the Newtonsoft JSON serializer.\r\n\r\nProbably worth updating the protobuf-net docs to call this out! Also, after discovering this, I found there was a mention of something similar in issue #138. That issue is more focused on UWP support specifically in 2.1 (side note: Is there any update on this? As mentioned in this thread, I had to use 2.0.0.668)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286169243",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/223#issuecomment-286169243",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/223",
        "id": 286169243,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjE2OTI0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-13T16:51:53Z",
        "updated_at": "2017-03-13T16:51:53Z",
        "author_association": "OWNER",
        "body": "that is fantastic; thanks for that update!\n\nOn 13 Mar 2017 4:00 a.m., \"Ryan Tremblay\" <notifications@github.com> wrote:\n\n> I was reading up a bit on the *.rd.xml files used by the .NET Native\n> compiler and found that if I change:\n>\n> <Assembly Name=\"*Application*\" Dynamic=\"Required All\" />\n>\n> to:\n>\n> <Assembly Name=\"*Application*\" Dynamic=\"Required All\" Serialize=\"All\" />\n>\n> then protobuf works as expected. From the docs:\n>\n> Serialize. Controls runtime access to constructors, fields, and\n> properties, to enable type instances to be serialized and serialized by\n> third-party libraries such as the Newtonsoft JSON serializer.\n>\n> Probably worth updating the protobuf-net docs to call this out! Also,\n> after discovering this, I found there was a mention of something similar in\n> issue #138 <https://github.com/mgravell/protobuf-net/issues/138>. That\n> issue is more focused on UWP support specifically in 2.1 (side note: Is\n> there any update on this? As mentioned in this thread, I had to use\n> 2.0.0.668).\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/223#issuecomment-286010747>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPwWVuGXzhEpkO-G_toxe3GdVTJiks5rlL9WgaJpZM4MaaJe>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286678098",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/205#issuecomment-286678098",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/205",
        "id": 286678098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY3ODA5OA==",
        "user": {
            "login": "luoxiaodi",
            "id": 12781925,
            "node_id": "MDQ6VXNlcjEyNzgxOTI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12781925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luoxiaodi",
            "html_url": "https://github.com/luoxiaodi",
            "followers_url": "https://api.github.com/users/luoxiaodi/followers",
            "following_url": "https://api.github.com/users/luoxiaodi/following{/other_user}",
            "gists_url": "https://api.github.com/users/luoxiaodi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luoxiaodi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luoxiaodi/subscriptions",
            "organizations_url": "https://api.github.com/users/luoxiaodi/orgs",
            "repos_url": "https://api.github.com/users/luoxiaodi/repos",
            "events_url": "https://api.github.com/users/luoxiaodi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luoxiaodi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-15T08:53:15Z",
        "updated_at": "2017-03-15T08:53:15Z",
        "author_association": "NONE",
        "body": "me too. HELP! SOS ! Unity(64bit) 5.4.0f3"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286679079",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-286679079",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 286679079,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY3OTA3OQ==",
        "user": {
            "login": "luoxiaodi",
            "id": 12781925,
            "node_id": "MDQ6VXNlcjEyNzgxOTI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/12781925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luoxiaodi",
            "html_url": "https://github.com/luoxiaodi",
            "followers_url": "https://api.github.com/users/luoxiaodi/followers",
            "following_url": "https://api.github.com/users/luoxiaodi/following{/other_user}",
            "gists_url": "https://api.github.com/users/luoxiaodi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luoxiaodi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luoxiaodi/subscriptions",
            "organizations_url": "https://api.github.com/users/luoxiaodi/orgs",
            "repos_url": "https://api.github.com/users/luoxiaodi/repos",
            "events_url": "https://api.github.com/users/luoxiaodi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luoxiaodi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-15T08:57:23Z",
        "updated_at": "2017-03-15T08:57:23Z",
        "author_association": "NONE",
        "body": "me too. Error about \"$\"!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286696036",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-286696036",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 286696036,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY5NjAzNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-15T10:04:24Z",
        "updated_at": "2017-03-15T10:04:24Z",
        "author_association": "OWNER",
        "body": "It almost certainly got through because I'm primarily using the new build\ntooling, which presumably omits the langver stuff. The workaround is\nsimply: build from the DNX projects. These will be updated *yet again* soon\nto the new new new .net core build tools (back to csproj, but a smaller\nleaner csproj).\n\nHistorically I tried to preserve down-level language support, but frankly\nI'm not sure it is worth the effort.  We should just nuke that language\nversion setting. I'll go do that...\n\n\nOn 15 March 2017 at 08:57, luoxiaodi <notifications@github.com> wrote:\n\n> me too. Error about \"$\"!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/193#issuecomment-286679079>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsA5N2fXSuaD5w1AKArYctsK0n31lks5rl6fzgaJpZM4KsRJ8>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/286705618",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/205#issuecomment-286705618",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/205",
        "id": 286705618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjcwNTYxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-15T10:45:27Z",
        "updated_at": "2017-03-15T10:45:27Z",
        "author_association": "OWNER",
        "body": "I have pushed changes re the C# language version; pull and retry please\n\nOn 15 March 2017 at 08:53, luoxiaodi <notifications@github.com> wrote:\n\n> me too. HELP! SOS ! Unity(64bit) 5.4.0f3\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/205#issuecomment-286678098>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKC_u1CgnXUHxoH1LQUgWWQX6T10ks5rl6b7gaJpZM4LXJYC>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/288307608",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-288307608",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 288307608,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODMwNzYwOA==",
        "user": {
            "login": "mcmillab",
            "id": 3699825,
            "node_id": "MDQ6VXNlcjM2OTk4MjU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3699825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcmillab",
            "html_url": "https://github.com/mcmillab",
            "followers_url": "https://api.github.com/users/mcmillab/followers",
            "following_url": "https://api.github.com/users/mcmillab/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcmillab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcmillab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcmillab/subscriptions",
            "organizations_url": "https://api.github.com/users/mcmillab/orgs",
            "repos_url": "https://api.github.com/users/mcmillab/repos",
            "events_url": "https://api.github.com/users/mcmillab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcmillab/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-22T06:08:50Z",
        "updated_at": "2017-03-22T06:08:50Z",
        "author_association": "NONE",
        "body": "I don't understand - so we can't use Protobuf.Net on .Net Core at the moment?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/288439508",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-288439508",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 288439508,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODQzOTUwOA==",
        "user": {
            "login": "force78",
            "id": 26603845,
            "node_id": "MDQ6VXNlcjI2NjAzODQ1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/26603845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/force78",
            "html_url": "https://github.com/force78",
            "followers_url": "https://api.github.com/users/force78/followers",
            "following_url": "https://api.github.com/users/force78/following{/other_user}",
            "gists_url": "https://api.github.com/users/force78/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/force78/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/force78/subscriptions",
            "organizations_url": "https://api.github.com/users/force78/orgs",
            "repos_url": "https://api.github.com/users/force78/repos",
            "events_url": "https://api.github.com/users/force78/events{/privacy}",
            "received_events_url": "https://api.github.com/users/force78/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-22T15:38:54Z",
        "updated_at": "2017-03-22T15:47:14Z",
        "author_association": "NONE",
        "body": "Hello. I'm having trouble building protobuf-net. I'm ultimately trying to get a protogen.exe that can parse proto3 syntax. When I build protobuf-net I'm getting an error :\r\nYour project.json doesn't have a runtimes section. You should add '\"runtimes\": { \"win\": { } }' to your project.json and then re-run NuGet restore.\t\t\t\r\nI've pulled the latest commit. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/288540108",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/193#issuecomment-288540108",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/193",
        "id": 288540108,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU0MDEwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-22T21:07:42Z",
        "updated_at": "2017-03-22T21:07:42Z",
        "author_association": "OWNER",
        "body": "sigh; the tooling rework for .net core has been... pain pain pain. still,\nit should build fine from the sln - it worked a few days ago, at least.\n\ni cannot comment on proto3 - haven't reworked anything for that. If\nswitching the \"protoc\" makes it work: great. But I doubt it would be as\nsimple as that.\n\nOn 22 Mar 2017 3:38 p.m., \"force78\" <notifications@github.com> wrote:\n\n> Hello. I'm having trouble building protobuf-net. I'm ultimately trying to\n> get a protogen.exe that can parse proto3 syntax. When I build protobuf-net\n> I'm getting an error :\n> Your project.json doesn't have a runtimes section. You should add\n> '\"runtimes\": { \"win\": { } }' to your project.json and then re-run NuGet\n> restore. protobuf-net\n> I've pulled the latest commit.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/193#issuecomment-288439508>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsIfoK8mK2K17KQYUVRUPDpyuyRLgks5roUCOgaJpZM4KsRJ8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/288945339",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/225#issuecomment-288945339",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/225",
        "id": 288945339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODk0NTMzOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-24T06:39:23Z",
        "updated_at": "2017-03-24T06:39:23Z",
        "author_association": "OWNER",
        "body": "At a complete guess: IL2CPP is doing \"pruning\" to reduce the final size,\nremoving things that it can't see evidence for usage. There's usually\nattributes you can add, or other configuration options, to tell a pruning\ntool to leave something alone. Apply that to your DTOs.\n\nOn 24 Mar 2017 3:11 a.m., \"mygoodsemail\" <notifications@github.com> wrote:\n\n> I used ProtoBuf as network communication protocol. If my android project\n> compile using Mono 2x, everything is OK. But compile using IL2CPP throw\n> exception. The following exception information:\n>\n> System.Exception: ProtoBuf deserialize type:GameFramework.ConnectionData.GamePlayerData\n> error ---> ProtoBuf.ProtoException: No parameterless constructor found for\n> VehicleModel at ProtoBuf.Meta.TypeModel.ThrowCannotCreateInstance\n> (System.Type type) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.TypeSerializer.CreateInstance (ProtoBuf.ProtoReader\n> source, Boolean includeLocalCallback) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.TypeSerializer.Read (System.Object value,\n> ProtoBuf.ProtoReader source) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.ProtoReader.ReadTypedObject (System.Object value, Int32 key,\n> ProtoBuf.ProtoReader reader, System.Type type) [0x00000] in <filename\n> unknown>:0 at ProtoBuf.ProtoReader.ReadObject (System.Object value, Int32\n> key, ProtoBuf.ProtoReader reader) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.SubItemSerializer.ProtoBuf.\n> Serializers.IProtoSerializer.Read (System.Object value,\n> ProtoBuf.ProtoReader source) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.ListDecorator.Read (System.Object value,\n> ProtoBuf.ProtoReader source) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.PropertyDecorator.Read (System.Object value,\n> ProtoBuf.ProtoReader source) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Serializers.TypeSerializer.Read (System.Object value,\n> ProtoBuf.ProtoReader source) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Meta.TypeModel.DeserializeCore (ProtoBuf.ProtoReader reader,\n> System.Type type, System.Object value, Boolean noAutoCreate) [0x00000] in\n> <filename unknown>:0 at ProtoBuf.Meta.TypeModel.Deserialize\n> (System.IO.Stream source, System.Object value, System.Type type,\n> ProtoBuf.SerializationContext context) [0x00000] in <filename unknown>:0 at\n> ProtoBuf.Meta.TypeModel.Deserialize (System.IO.Stream source,\n> System.Object value, System.Type type) [0x00000] in <filename unknown>:0\n>\n> Version : 2.0.0.668\n> Anyone know why? Thank you!\n> Sorry for my english -_-!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/225>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFRn0YdypicdXOjsRX6f-uqro8Q_ks5rozREgaJpZM4MnnyW>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/288960283",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/185#issuecomment-288960283",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/185",
        "id": 288960283,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODk2MDI4Mw==",
        "user": {
            "login": "vinsrc",
            "id": 803784,
            "node_id": "MDQ6VXNlcjgwMzc4NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/803784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vinsrc",
            "html_url": "https://github.com/vinsrc",
            "followers_url": "https://api.github.com/users/vinsrc/followers",
            "following_url": "https://api.github.com/users/vinsrc/following{/other_user}",
            "gists_url": "https://api.github.com/users/vinsrc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vinsrc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vinsrc/subscriptions",
            "organizations_url": "https://api.github.com/users/vinsrc/orgs",
            "repos_url": "https://api.github.com/users/vinsrc/repos",
            "events_url": "https://api.github.com/users/vinsrc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vinsrc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-24T08:19:59Z",
        "updated_at": "2017-03-24T08:19:59Z",
        "author_association": "NONE",
        "body": "Came looking to suggest the fix and good to see its already done  :+1:  .   Thanks for the fix. \r\n\r\nThis is not only a memory issue.  Its causing considerable performance loss also.   \r\n\r\nThe internal hash bucket keeps growing as the protoreader is being recycled and the same dictionary used.\r\nEventually,  the clear method starts slowing down as it has to set all the buckets and entries to nil values.\r\n\r\nIts a .Net Dictionary implementation issue but affecting the protoreader .\r\n\r\nSince the protoreader is defined ThreadStatic ,  it occurs only if the same thread is used for multiple serialization and de-serialization with unique strings.\r\n\r\nBelow is the sample code to reproduce the issue.\r\n\r\n          //Build some data.\r\n            List<byte[]> bytes = new List<byte[]>();\r\n            foreach (var item in Enumerable.Range(0, 100000))\r\n            {\r\n                var ms = new MemoryStream();\r\n                Serializer.Serialize<string>(ms, item.ToString());\r\n                bytes.Add(ms.ToArray());\r\n            }\r\n\r\n            // before the issue, try to deserialize it\r\n            System.Diagnostics.Stopwatch sw = new System.Diagnostics.Stopwatch();\r\n            sw.Start();\r\n            foreach (var item in bytes) { var ret = Serializer.Deserialize<string>(new MemoryStream(item)); }\r\n            sw.Stop();\r\n            Console.WriteLine(\"Before:\" + sw.ElapsedMilliseconds + \" ms\");\r\n\r\n            // lets cause a lot of deserialization with unique strings\r\n            var stream = new MemoryStream();\r\n            IList<string> items = new List<string>();\r\n            Enumerable.Range(0, 40000).ToList().ForEach((item) => items.Add(item.ToString()));\r\n            Serializer.Serialize(stream, items);\r\n\r\n            // deserialize . This will result in the interner dictionary internal buckets to grow.\r\n           var test = Serializer.Deserialize<IList<string>>(new MemoryStream(stream.ToArray()));\r\n\r\n              // after this , every stringInterner.Clear(); call is slow.\r\n            // now we can see the delay\r\n            System.Diagnostics.Stopwatch sw2 = new System.Diagnostics.Stopwatch();\r\n            sw2.Start();\r\n            foreach (var item in bytes) { var ret = Serializer.Deserialize<string>(new MemoryStream(item)); }\r\n            sw2.Stop();\r\n            Console.WriteLine(\"After :\" + sw2.ElapsedMilliseconds +\" ms\");\r\n\r\n            Console.ReadKey();\r\n\r\n\r\nin my PC , the below results came out.  thats a significant performance loss\r\nBefore:262 ms\r\nAfter :4201 ms\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/289898763",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-289898763",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 289898763,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg5ODc2Mw==",
        "user": {
            "login": "andradf",
            "id": 1518150,
            "node_id": "MDQ6VXNlcjE1MTgxNTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1518150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andradf",
            "html_url": "https://github.com/andradf",
            "followers_url": "https://api.github.com/users/andradf/followers",
            "following_url": "https://api.github.com/users/andradf/following{/other_user}",
            "gists_url": "https://api.github.com/users/andradf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andradf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andradf/subscriptions",
            "organizations_url": "https://api.github.com/users/andradf/orgs",
            "repos_url": "https://api.github.com/users/andradf/repos",
            "events_url": "https://api.github.com/users/andradf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andradf/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-28T20:44:34Z",
        "updated_at": "2017-03-28T20:44:34Z",
        "author_association": "NONE",
        "body": "Any updates on this? It's been 3+ months since last one."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/290029264",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/194#issuecomment-290029264",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/194",
        "id": 290029264,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDAyOTI2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-03-29T09:05:42Z",
        "updated_at": "2017-03-29T09:05:42Z",
        "author_association": "OWNER",
        "body": "The code in the repo has service-model enabled; I've been working on the\nbuild etc tools for this in the last week or so, so it should now build\nusing the new csproj build tools - I'm just waiting on clarification / ETA\non a known regression with the nuspec output from the new build tools,\nbefore I do a package update (https://github.com/NuGet/Home/issues/4853)\n\nOn 28 March 2017 at 21:44, Felipe Andrade <notifications@github.com> wrote:\n\n> Any updates on this? It's been 3+ months since last one.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/194#issuecomment-289898763>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCBi95AXLvOgApMpwmblvXgFC8qoks5rqXEygaJpZM4KscP3>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/291684779",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/227#issuecomment-291684779",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/227",
        "id": 291684779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTY4NDc3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-05T00:12:59Z",
        "updated_at": "2017-04-05T00:12:59Z",
        "author_association": "OWNER",
        "body": "Hi; subclasses can also be configured at runtime via RuntimeTypeModel (in\nmost cases, the .Default instance is what you want). Note that any\nconfiguration must be done before you start serializing, and note also that\nthe tags used must be repeatable - if SomeSubType is key 17 today, then it\nneeds to stay key 17 in the future.\n\nI'm not at a PC, so this is purely from memory:\n\n     RuntimeTypeModel.Default[typeof(TheBaseType)]\n        .AddSubType(17, typeof(SomeSubType));\n\nOn 4 Apr 2017 11:35 p.m., \"Harsimran Bath\" <notifications@github.com> wrote:\n\n> I have been researching this for a while, and it seems that the BaseClass\n> needs the [ProtoInclude] attribute exposing the subclasses. As per:\n> http://wallaceturner.com/serialization-with-protobuf-net.\n>\n> However, my BaseClass and SubClass reside in separate assemblies. My\n> SubClass assembly is referencing the BaseClass assembly. Because of this\n> architecture, my BaseClass is not *aware* of the SubClass, but my\n> SubClass *is* obviously aware of my BaseClass.\n>\n> As such, how can I make inheritance work given this architecture? I tried\n> decorating my SubClass with [ProtoInclude] but that did not work.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/227>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLY_m7KsOCBxnWkL_hWG-3JH0oSgks5rssW9gaJpZM4MzhSG>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/292367359",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/192#issuecomment-292367359",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/192",
        "id": 292367359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM2NzM1OQ==",
        "user": {
            "login": "breyed",
            "id": 1299073,
            "node_id": "MDQ6VXNlcjEyOTkwNzM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1299073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/breyed",
            "html_url": "https://github.com/breyed",
            "followers_url": "https://api.github.com/users/breyed/followers",
            "following_url": "https://api.github.com/users/breyed/following{/other_user}",
            "gists_url": "https://api.github.com/users/breyed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/breyed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/breyed/subscriptions",
            "organizations_url": "https://api.github.com/users/breyed/orgs",
            "repos_url": "https://api.github.com/users/breyed/repos",
            "events_url": "https://api.github.com/users/breyed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/breyed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-06T23:57:57Z",
        "updated_at": "2017-04-06T23:57:57Z",
        "author_association": "NONE",
        "body": "The source code has lots of lovely comments, but since the NuGet package doesn't include the .xml files, we don't get to see them. :-("
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/292491509",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/192#issuecomment-292491509",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/192",
        "id": 292491509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ5MTUwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-07T09:43:51Z",
        "updated_at": "2017-04-07T09:44:43Z",
        "author_association": "OWNER",
        "body": "My colleagues and I are currently working on the build/pack tooling for the current dotnet bits, which should include this; our plan is essentially to have the same build/pack tooling for our combined libs, so: protobuf-net, se.redis, miniprofiler, dapper, etc. The intellisense is already included on the new myget feed (https://www.myget.org/F/protobuf-net/) (when we get our tooling stuff complete, it will include automatic myget builds from the repo).\r\n\r\nSo basically: \"done, ish\""
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294111334",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-294111334",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 294111334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDExMTMzNA==",
        "user": {
            "login": "li-keli",
            "id": 9330061,
            "node_id": "MDQ6VXNlcjkzMzAwNjE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9330061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/li-keli",
            "html_url": "https://github.com/li-keli",
            "followers_url": "https://api.github.com/users/li-keli/followers",
            "following_url": "https://api.github.com/users/li-keli/following{/other_user}",
            "gists_url": "https://api.github.com/users/li-keli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/li-keli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/li-keli/subscriptions",
            "organizations_url": "https://api.github.com/users/li-keli/orgs",
            "repos_url": "https://api.github.com/users/li-keli/repos",
            "events_url": "https://api.github.com/users/li-keli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/li-keli/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-14T07:59:10Z",
        "updated_at": "2017-04-14T07:59:10Z",
        "author_association": "NONE",
        "body": "now , .Net Core can use Protobuf.Net ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294372106",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/230#issuecomment-294372106",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/230",
        "id": 294372106,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDM3MjEwNg==",
        "user": {
            "login": "Tornhoof",
            "id": 7989549,
            "node_id": "MDQ6VXNlcjc5ODk1NDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7989549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tornhoof",
            "html_url": "https://github.com/Tornhoof",
            "followers_url": "https://api.github.com/users/Tornhoof/followers",
            "following_url": "https://api.github.com/users/Tornhoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tornhoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tornhoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tornhoof/subscriptions",
            "organizations_url": "https://api.github.com/users/Tornhoof/orgs",
            "repos_url": "https://api.github.com/users/Tornhoof/repos",
            "events_url": "https://api.github.com/users/Tornhoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tornhoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-16T20:22:06Z",
        "updated_at": "2017-04-16T20:22:06Z",
        "author_association": "NONE",
        "body": "Already done manually. Closing"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294427903",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/231#issuecomment-294427903",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/231",
        "id": 294427903,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQyNzkwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T08:00:23Z",
        "updated_at": "2017-04-17T08:00:23Z",
        "author_association": "OWNER",
        "body": "All great extra context, thanks. Merged."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294438759",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/232#issuecomment-294438759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/232",
        "id": 294438759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQzODc1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T09:23:11Z",
        "updated_at": "2017-04-17T09:23:11Z",
        "author_association": "OWNER",
        "body": "All good extra context, cheers"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294483198",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/234#issuecomment-294483198",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/234",
        "id": 294483198,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQ4MzE5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T13:12:50Z",
        "updated_at": "2017-04-17T13:15:04Z",
        "author_association": "OWNER",
        "body": "Merging as another interesting comparison / line in the sand - but in that outcome we'd just use `Task<T>` from the outset - both have the same allocation issue, and direct `Task<T>` is marginally faster. Odd that it is faster to wrap a `ValueTask<T>` into a `Task<T>` than to use `await` on the original `ValueTask<T>`!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294483450",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/234#issuecomment-294483450",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/234",
        "id": 294483450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDQ4MzQ1MA==",
        "user": {
            "login": "mattnischan",
            "id": 1650544,
            "node_id": "MDQ6VXNlcjE2NTA1NDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1650544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattnischan",
            "html_url": "https://github.com/mattnischan",
            "followers_url": "https://api.github.com/users/mattnischan/followers",
            "following_url": "https://api.github.com/users/mattnischan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattnischan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattnischan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattnischan/subscriptions",
            "organizations_url": "https://api.github.com/users/mattnischan/orgs",
            "repos_url": "https://api.github.com/users/mattnischan/repos",
            "events_url": "https://api.github.com/users/mattnischan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattnischan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T13:14:39Z",
        "updated_at": "2017-04-17T13:14:39Z",
        "author_association": "NONE",
        "body": "Agreed, this is sort of a worst case of the best case kinda thing. Really mostly to illustrate the inlining issues; this should always be slower than ValueTaskAsync in a sane world."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294557074",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/235#issuecomment-294557074",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/235",
        "id": 294557074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDU1NzA3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T18:47:26Z",
        "updated_at": "2017-04-17T18:47:26Z",
        "author_association": "OWNER",
        "body": "If I get a chance later I'll try with float and double (without a reference wrapper) - see if there's a stack size limit where the suckage starts."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294557273",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/235#issuecomment-294557273",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/235",
        "id": 294557273,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDU1NzI3Mw==",
        "user": {
            "login": "mattnischan",
            "id": 1650544,
            "node_id": "MDQ6VXNlcjE2NTA1NDQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1650544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattnischan",
            "html_url": "https://github.com/mattnischan",
            "followers_url": "https://api.github.com/users/mattnischan/followers",
            "following_url": "https://api.github.com/users/mattnischan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattnischan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattnischan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattnischan/subscriptions",
            "organizations_url": "https://api.github.com/users/mattnischan/orgs",
            "repos_url": "https://api.github.com/users/mattnischan/repos",
            "events_url": "https://api.github.com/users/mattnischan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattnischan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T18:48:16Z",
        "updated_at": "2017-04-17T18:48:16Z",
        "author_association": "NONE",
        "body": "Yeah, I was curious about that too. I figured I'd start here and go up."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294559240",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/237#issuecomment-294559240",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/237",
        "id": 294559240,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDU1OTI0MA==",
        "user": {
            "login": "sparticus1701",
            "id": 1194539,
            "node_id": "MDQ6VXNlcjExOTQ1Mzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1194539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sparticus1701",
            "html_url": "https://github.com/sparticus1701",
            "followers_url": "https://api.github.com/users/sparticus1701/followers",
            "following_url": "https://api.github.com/users/sparticus1701/following{/other_user}",
            "gists_url": "https://api.github.com/users/sparticus1701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sparticus1701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sparticus1701/subscriptions",
            "organizations_url": "https://api.github.com/users/sparticus1701/orgs",
            "repos_url": "https://api.github.com/users/sparticus1701/repos",
            "events_url": "https://api.github.com/users/sparticus1701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sparticus1701/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T18:55:37Z",
        "updated_at": "2017-04-17T18:55:37Z",
        "author_association": "NONE",
        "body": "[ProtoBufBug.zip](https://github.com/mgravell/protobuf-net/files/926396/ProtoBufBug.zip)\r\n\r\nGuess the link doesn't work."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294569359",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/237#issuecomment-294569359",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/237",
        "id": 294569359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDU2OTM1OQ==",
        "user": {
            "login": "sparticus1701",
            "id": 1194539,
            "node_id": "MDQ6VXNlcjExOTQ1Mzk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1194539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sparticus1701",
            "html_url": "https://github.com/sparticus1701",
            "followers_url": "https://api.github.com/users/sparticus1701/followers",
            "following_url": "https://api.github.com/users/sparticus1701/following{/other_user}",
            "gists_url": "https://api.github.com/users/sparticus1701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sparticus1701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sparticus1701/subscriptions",
            "organizations_url": "https://api.github.com/users/sparticus1701/orgs",
            "repos_url": "https://api.github.com/users/sparticus1701/repos",
            "events_url": "https://api.github.com/users/sparticus1701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sparticus1701/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-17T19:40:45Z",
        "updated_at": "2017-04-17T19:40:45Z",
        "author_association": "NONE",
        "body": "Apparently calling SerializeWithLengthPrefix and DeserializeWithLengthPrefix are the appropriate calls to make here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294735100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/238#issuecomment-294735100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/238",
        "id": 294735100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDczNTEwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-18T08:52:38Z",
        "updated_at": "2017-04-18T08:52:38Z",
        "author_association": "OWNER",
        "body": "The protobuf format doesn't include field names, so the code needs *some* mechanism to know which members map to which field **numbers** in the data, and it needs to be *reliable*, i.e. you'll always get the same mapping - today, tomorrow, and two months from now.\r\n\r\n*one* of the ways to do this is by annotating the object via attributes - this can be done via any of `[ProtoMember]`, `[DataMember]` or `[XmlElement]` (in the last two cases, you will need to include the field number in the optional `Order` member). If you have code-generated entity models, there is also a `[ProtoPartialMember]` that can be added in a separate `partial class` file to allow you to attach numbers to members in the generated file without having to edit the generated file.\r\n\r\nAnother way you can do it is by asking the library to just assume that you're *never going to change your type*, and use the alphabetical order of the members.  You would do this via `[ProtoContract(InferTagFromName = true)]` - or to apply this as a more general default: `RuntimeTypeModel.Default.InferTagFromNameDefault`. However, this should not be done lightly - it makes your types very brittle - adding, removing or renaming members can (will) make the data unreliable.\r\n\r\nIndividual types can also be configured entirely manually using the `RuntimeTypeModel` / `MetaType` API in the library.\r\n\r\nWould any of those options suffice? If you are more specific about what issue you are facing, I can advise further."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294742624",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/238#issuecomment-294742624",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/238",
        "id": 294742624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDc0MjYyNA==",
        "user": {
            "login": "gomathi04",
            "id": 12442973,
            "node_id": "MDQ6VXNlcjEyNDQyOTcz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12442973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gomathi04",
            "html_url": "https://github.com/gomathi04",
            "followers_url": "https://api.github.com/users/gomathi04/followers",
            "following_url": "https://api.github.com/users/gomathi04/following{/other_user}",
            "gists_url": "https://api.github.com/users/gomathi04/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gomathi04/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gomathi04/subscriptions",
            "organizations_url": "https://api.github.com/users/gomathi04/orgs",
            "repos_url": "https://api.github.com/users/gomathi04/repos",
            "events_url": "https://api.github.com/users/gomathi04/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gomathi04/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-18T09:21:43Z",
        "updated_at": "2017-04-18T09:21:43Z",
        "author_association": "NONE",
        "body": "Actually my entire project is already in live,  so its not advisable to make changes in entity class level . I just want work on performance part like response time and data consumption's with minimum level changes. Please suggest something "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/294750403",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/238#issuecomment-294750403",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/238",
        "id": 294750403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDc1MDQwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-18T09:41:31Z",
        "updated_at": "2017-04-18T09:41:31Z",
        "author_association": "OWNER",
        "body": "> Please suggest something\r\n\r\nto repeat:\r\n\r\n> Would any of those options suffice? If you are more specific about what issue you are facing, I can advise further.\r\n\r\nYou haven't told me what problem you are facing or where you're stuck."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297075874",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297075874",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/239",
        "id": 297075874,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA3NTg3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T15:52:34Z",
        "updated_at": "2017-04-25T15:52:34Z",
        "author_association": "OWNER",
        "body": "You haven't rewound the `MemoryStream` - if you are \"old school\" like me, think of VHS or audio cassettes: the `MemoryStream` is currently at the end, there is nothing to read. As it happens, 0 bytes is a perfectly valid length to protobuf. All you need is `ms.Position = 0;`.\r\n\r\nAdditional notes:\r\n\r\n- `var dcat = Serializer.DeepClone(cat);` would do all of this in one go\r\n- the generic `Serializer.Serialize(ms, cat)` and `Serializer.Deserialize<Cat>(ms)` API may be easier for you to use"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297079057",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297079057",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/239",
        "id": 297079057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA3OTA1Nw==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T16:02:39Z",
        "updated_at": "2017-04-25T16:02:39Z",
        "author_association": "NONE",
        "body": "Thank you so much. I didn't know that you had to \"rewind\" the memory stream to 0 after serializeing the object to the memory stream. Works fine now :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297081078",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297081078",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/239",
        "id": 297081078,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA4MTA3OA==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T16:09:08Z",
        "updated_at": "2017-04-25T16:09:08Z",
        "author_association": "NONE",
        "body": "I do have a question about the process of the Serialize / Deserialize process.\r\nIf you are feeding in a memory stream to your Serialize method, and need to \r\nrewind the position to 0 in order to get the Deserialize method to read it, why not \r\nautomatically do this on the Serialize call? I'm sure I'm missing something here.\r\n@mgravell "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297093526",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/240#issuecomment-297093526",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/240",
        "id": 297093526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA5MzUyNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T16:52:15Z",
        "updated_at": "2017-04-25T16:52:15Z",
        "author_association": "OWNER",
        "body": "GetBuffer returns the oversized array that MemoryStream uses to avoid\nallocating for every write. You should never use GetBuffer without also\nchecking .Length and limiting your access to exactly that many bytes.\n\nProtobuf-net got the message entirely correct :)\n\nEither use ToArray when storing to redis, or check .Length and use\nArraySegment<byte>(ms.GetBuffer(), 0, ms.Length) if your redis client\nsupport that or similar.\n\nOn 25 Apr 2017 5:39 p.m., \"nathvi\" <notifications@github.com> wrote:\n\n> I'm fine now with serializing an object and sending it to a Redis List,\n> but when I try and\n> pop it off into a byte[] and deserialize I'm getting a strange error.\n> First is my Cat definition:\n>\n> [ProtoContract]\n> public class Cat\n> {\n>     [ProtoMember(1)]\n>     public string Name { get; set; }\n>\n>     public Cat()\n>     {\n>     }\n>\n>     public Cat(string name)\n>     {\n>         Name = name;\n>     }\n> }\n>\n> And how I'm using it:\n>\n>     public override void Start()\n>     {\n>         base.Start();\n>\n>         Cat c1 = new Cat(\"Felix\");\n>         MemoryStream ms = new MemoryStream();\n>         Serializer.Serialize<Cat>(ms, c1);\n>         ms.Position = 0;\n>\n>         RedisClient.LPush(\"CatList\", ms.GetBuffer());\n>         byte[] catObject = RedisClient.LPop(\"CatList\");\n>         MemoryStream dStream = new MemoryStream(catObject);\n>         Cat dCat = Serializer.Deserialize<Cat>(dStream);\n>     }\n>\n> When executing the line:\n> Cat dCat = Serializer.Deserialize(dStream);\n> I'm getting this exception and I'm not sure why:\n> An exception of type 'ProtoBuf.ProtoException' occurred in\n> protobuf-net.dll but was not handled in\n> user code\n> Additional information: Unconsumed data left in the buffer; this suggests\n> corrupt input\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/240>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDBzTN0IGvJyKQQTo6LXzxGm11Epks5rziHKgaJpZM4NHv_J>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297094028",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297094028",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/239",
        "id": 297094028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA5NDAyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T16:54:05Z",
        "updated_at": "2017-04-25T16:54:05Z",
        "author_association": "OWNER",
        "body": "because that isn't how you usually use streams - indeed, most streams\n*arent rewindable* (TCP sockets, etc). MemoryStream is a very unusual case\n- usually people don't write and read to the same stream in this way.\n\nOn 25 Apr 2017 5:09 p.m., \"nathvi\" <notifications@github.com> wrote:\n\n> I do have a question about the process of the Serialize / Deserialize\n> process.\n> If you are feeding in a memory stream to your Serialize method, and need to\n> rewind the position to 0 in order to get the Deserialize method to read\n> it, why not\n> automatically do this on the Serialize call? I'm sure I'm missing\n> something here.\n> @mgravell <https://github.com/mgravell>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297081078>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsAdwxDdqqlnRdfFhkpP_fynLRkbrks5rzhqkgaJpZM4NHqed>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297096844",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/240#issuecomment-297096844",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/240",
        "id": 297096844,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA5Njg0NA==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T17:02:58Z",
        "updated_at": "2017-05-17T15:21:41Z",
        "author_association": "NONE",
        "body": "Good thing you are here to answer all these newb questions. I refactored in the way you suggested and it works fine.\r\n\r\n        public override void Start()\r\n        {\r\n            base.Start();\r\n\r\n            Cat c1 = new Cat(\"Felix\");\r\n            MemoryStream ms = new MemoryStream();\r\n            Serializer.Serialize<Cat>(ms, c1);\r\n            ms.Position = 0;\r\n\r\n            RedisClient.LPush(\"CatList\", ms.GetBuffer());\r\n            byte[] catObject = RedisClient.LPop(\"CatList\");\r\n            MemoryStream dStream = new MemoryStream(catObject, 0, (int)ms.Length);\r\n            Cat dCat = Serializer.Deserialize<Cat>(dStream);\r\n\r\n            // L is the left side of the list, or the first element.\r\n            // LPop will take the head node off and return it\r\n            // LPush will add an item to the head node\r\n        }"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297096977",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/240#issuecomment-297096977",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/240",
        "id": 297096977,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA5Njk3Nw==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T17:03:13Z",
        "updated_at": "2017-04-25T17:03:44Z",
        "author_association": "NONE",
        "body": "Good thing you are here to answer all these newb questions. I refactored in the way you suggested and it works fine. Working version is:\r\n\r\n    public override void Start()\r\n        {\r\n            base.Start();\r\n\r\n            Cat c1 = new Cat(\"Felix\");\r\n            MemoryStream ms = new MemoryStream();\r\n            Serializer.Serialize<Cat>(ms, c1);\r\n            ms.Position = 0;\r\n\r\n            RedisClient.LPush(\"CatList\", ms.GetBuffer());\r\n            byte[] catObject = RedisClient.LPop(\"CatList\");\r\n            MemoryStream dStream = new MemoryStream(catObject, 0, (int)ms.Length);\r\n            Cat dCat = Serializer.Deserialize<Cat>(dStream);\r\n        }"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297114979",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/239#issuecomment-297114979",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/239",
        "id": 297114979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzExNDk3OQ==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-25T18:02:05Z",
        "updated_at": "2017-04-25T18:02:05Z",
        "author_association": "NONE",
        "body": "Gotcha. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297446925",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-297446925",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 297446925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ0NjkyNQ==",
        "user": {
            "login": "mrtank",
            "id": 918230,
            "node_id": "MDQ6VXNlcjkxODIzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/918230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrtank",
            "html_url": "https://github.com/mrtank",
            "followers_url": "https://api.github.com/users/mrtank/followers",
            "following_url": "https://api.github.com/users/mrtank/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrtank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrtank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrtank/subscriptions",
            "organizations_url": "https://api.github.com/users/mrtank/orgs",
            "repos_url": "https://api.github.com/users/mrtank/repos",
            "events_url": "https://api.github.com/users/mrtank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrtank/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-26T15:26:31Z",
        "updated_at": "2017-04-26T15:26:31Z",
        "author_association": "NONE",
        "body": "IPEndPoint isn't [ProtoContract], so it's not that big surprise. All members have to be serializable, to serialize something."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297459512",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-297459512",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 297459512,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ1OTUxMg==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-26T16:03:41Z",
        "updated_at": "2017-04-26T16:03:52Z",
        "author_association": "NONE",
        "body": "What do you mean IPEndPoint isn't [ProtoContract]? Does that mean that IPEndPoint doesn't have the ProtoContract attribute on it? @mrtank "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297461231",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-297461231",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 297461231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ2MTIzMQ==",
        "user": {
            "login": "mrtank",
            "id": 918230,
            "node_id": "MDQ6VXNlcjkxODIzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/918230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrtank",
            "html_url": "https://github.com/mrtank",
            "followers_url": "https://api.github.com/users/mrtank/followers",
            "following_url": "https://api.github.com/users/mrtank/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrtank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrtank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrtank/subscriptions",
            "organizations_url": "https://api.github.com/users/mrtank/orgs",
            "repos_url": "https://api.github.com/users/mrtank/repos",
            "events_url": "https://api.github.com/users/mrtank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrtank/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-26T16:09:07Z",
        "updated_at": "2017-04-26T16:09:07Z",
        "author_association": "NONE",
        "body": "Yes. Besides some basic types\r\n(\r\ncustom classes that:\r\nare marked as data-contract\r\nhave a parameterless constructor\r\nfor Silverlight: are public\r\nmany common primitives etc\r\nsingle dimension arrays: T[]\r\nList / IList\r\nDictionary<TKey,TValue> / IDictionary<TKey,TValue>\r\nany type which implements IEnumerable and has an Add(T) method\r\n)\r\nYou need all members to be [ProtoContract]. Meaning the class is annotated with [ProtoContract], and satisfy the means of [ProtoContract] (meaning all of the members know it's ProtoMember attribute)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/297541081",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/217#issuecomment-297541081",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/217",
        "id": 297541081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU0MTA4MQ==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-26T21:05:43Z",
        "updated_at": "2017-04-26T21:05:43Z",
        "author_association": "NONE",
        "body": "Why don't you close this? @karkusviktor "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/298063540",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/241#issuecomment-298063540",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/241",
        "id": 298063540,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA2MzU0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-04-28T17:49:34Z",
        "updated_at": "2017-04-28T17:49:34Z",
        "author_association": "OWNER",
        "body": "Well that's embarrassing. I suspect you're right! "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/301171309",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/210#issuecomment-301171309",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/210",
        "id": 301171309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTE3MTMwOQ==",
        "user": {
            "login": "bcuff",
            "id": 504266,
            "node_id": "MDQ6VXNlcjUwNDI2Ng==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/504266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bcuff",
            "html_url": "https://github.com/bcuff",
            "followers_url": "https://api.github.com/users/bcuff/followers",
            "following_url": "https://api.github.com/users/bcuff/following{/other_user}",
            "gists_url": "https://api.github.com/users/bcuff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bcuff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bcuff/subscriptions",
            "organizations_url": "https://api.github.com/users/bcuff/orgs",
            "repos_url": "https://api.github.com/users/bcuff/repos",
            "events_url": "https://api.github.com/users/bcuff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bcuff/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-12T19:56:44Z",
        "updated_at": "2017-05-12T19:56:44Z",
        "author_association": "NONE",
        "body": "any update on this issue? I've had to work around it via\r\n```csharp\r\nclass SomeModelBase { static SomeModelBase() { /* do stuff here instead of in SomeModel */ } }\r\nclass SomeModel : SomeModelBase\r\n{\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/302639700",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/200#issuecomment-302639700",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/200",
        "id": 302639700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjYzOTcwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-19T08:16:03Z",
        "updated_at": "2017-05-19T08:16:03Z",
        "author_association": "OWNER",
        "body": "Closing because tooling has changed making this redundant"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303491958",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/248#issuecomment-303491958",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/248",
        "id": 303491958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ5MTk1OA==",
        "user": {
            "login": "SamuelEnglard",
            "id": 1119883,
            "node_id": "MDQ6VXNlcjExMTk4ODM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1119883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamuelEnglard",
            "html_url": "https://github.com/SamuelEnglard",
            "followers_url": "https://api.github.com/users/SamuelEnglard/followers",
            "following_url": "https://api.github.com/users/SamuelEnglard/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamuelEnglard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamuelEnglard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamuelEnglard/subscriptions",
            "organizations_url": "https://api.github.com/users/SamuelEnglard/orgs",
            "repos_url": "https://api.github.com/users/SamuelEnglard/repos",
            "events_url": "https://api.github.com/users/SamuelEnglard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamuelEnglard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-23T18:34:01Z",
        "updated_at": "2017-05-23T18:34:01Z",
        "author_association": "NONE",
        "body": "Issue with my environment"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303724311",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/246#issuecomment-303724311",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/246",
        "id": 303724311,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzcyNDMxMQ==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T13:31:29Z",
        "updated_at": "2017-05-24T13:31:29Z",
        "author_association": "NONE",
        "body": "Anybody know anything on this?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303811996",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/251#issuecomment-303811996",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/251",
        "id": 303811996,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxMTk5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:31:07Z",
        "updated_at": "2017-05-24T18:31:07Z",
        "author_association": "OWNER",
        "body": "I don't currently offer that, mostly because nobody has ever asked. If you have something in mind, feel free to ping me (marc.gravell@gmail.com), ideally spelling out whether you're after:\r\n\r\n- a specific feature addition / tweak\r\n- advice and guidance\r\n- troubleshooting / bug report\r\n- etc\r\n\r\nNote that I *have* recently added a librepay account in case anyone wants to make any donations, but: that is (by definition) not intended for work-in-kind things. https://liberapay.com/protobuf-net/donate"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303814095",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/249#issuecomment-303814095",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/249",
        "id": 303814095,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxNDA5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:38:40Z",
        "updated_at": "2017-05-24T18:38:40Z",
        "author_association": "OWNER",
        "body": "I think this is already fixed; hard to tell if we fixed it the same way, as all I can see in the merge is a sea of red and green; that file has changed radically in the last day. But running the \"failing\" example gives:\r\n\r\n```\r\n#pragma warning disable CS1591\r\n[global::ProtoBuf.ProtoContract(Name = @\"Test\")]\r\npublic partial class Test\r\n{\r\n    [global::ProtoBuf.ProtoMember(1, Name = @\"fs\", IsPacked = true)]\r\n    public float[] Fs { get; set; }\r\n}\r\n#pragma warning restore CS1591\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303815124",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/250#issuecomment-303815124",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/250",
        "id": 303815124,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxNTEyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:42:29Z",
        "updated_at": "2017-05-24T18:42:29Z",
        "author_association": "OWNER",
        "body": "Very much appreciated, but already found and fixed separately, and is going to be impossible to merge. Keep 'em coming, though!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303815426",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/243#issuecomment-303815426",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/243",
        "id": 303815426,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxNTQyNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:43:39Z",
        "updated_at": "2017-05-24T18:43:45Z",
        "author_association": "OWNER",
        "body": "I don't think there's much useful that protobuf-net can do for an `int` - using the base serializer should probably be fine. Does it work?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303816337",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/246#issuecomment-303816337",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/246",
        "id": 303816337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxNjMzNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:47:06Z",
        "updated_at": "2017-05-24T18:48:11Z",
        "author_association": "OWNER",
        "body": "IMO the problem is here:\r\n\r\n    Encoding.ASCII.GetBytes(messageString)\r\n\r\nIt isn't clear what `messageString` is here, but a .NET `string` is **not** a valid way to pass around raw binary ([see previous blog entry](http://blog.marcgravell.com/2013/02/how-many-ways-can-you-mess-up-io.html)).\r\n\r\nCan you indicate what `messageString` is and where it came from?\r\n\r\nIf you **absolutely must** use a `string` for some reason, then base-64 is your friend (`Convert.ToBase64String()` and `Convert.FromBase64String()`). Otherwise, prefer something like `byte[]` or `Stream` for raw data.\r\n\r\nWhat redis client are you using? StackExchange.Redis supports `byte[]` - anything that accepts a `RedisValue` can take a `byte[]`. Redis itself is binary-safe."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303818375",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/216#issuecomment-303818375",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/216",
        "id": 303818375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxODM3NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:54:33Z",
        "updated_at": "2017-05-24T18:54:33Z",
        "author_association": "OWNER",
        "body": "appreciated, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303818572",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/189#issuecomment-303818572",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/189",
        "id": 303818572,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxODU3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:55:17Z",
        "updated_at": "2017-05-24T18:55:17Z",
        "author_association": "OWNER",
        "body": "thanks, you're right of course"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303818955",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/184#issuecomment-303818955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/184",
        "id": 303818955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgxODk1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T18:56:41Z",
        "updated_at": "2017-05-24T18:56:41Z",
        "author_association": "OWNER",
        "body": "thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303838953",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/252#issuecomment-303838953",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/252",
        "id": 303838953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgzODk1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T20:16:13Z",
        "updated_at": "2017-05-24T20:16:13Z",
        "author_association": "OWNER",
        "body": "Ultimately, the protobuf format has no mechanism to express this. I could silently ignore them; would that be preferable?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303839807",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/251#issuecomment-303839807",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/251",
        "id": 303839807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzgzOTgwNw==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T20:19:34Z",
        "updated_at": "2017-05-24T20:19:34Z",
        "author_association": "NONE",
        "body": "Thank you for your response. I will be sending you an email shortly specifying what I had in mind."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303840539",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/212#issuecomment-303840539",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/212",
        "id": 303840539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg0MDUzOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T20:22:22Z",
        "updated_at": "2017-05-24T20:22:22Z",
        "author_association": "OWNER",
        "body": "There is a pre-existing `Serializer.NonGeneric.TryDeserializeWithLengthPrefix`, but that takes an awkward `TypeResolver`; will look at the PR (and: sorry for delay, I've been.... *distracted*)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303850238",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/185#issuecomment-303850238",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/185",
        "id": 303850238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg1MDIzOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-24T21:00:10Z",
        "updated_at": "2017-05-24T21:00:17Z",
        "author_association": "OWNER",
        "body": "Usually I would *expect* the reader to be collectable about the same time, but; yeah, this should be fine. Thanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303896125",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/252#issuecomment-303896125",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/252",
        "id": 303896125,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg5NjEyNQ==",
        "user": {
            "login": "jgrandydev",
            "id": 2849431,
            "node_id": "MDQ6VXNlcjI4NDk0MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2849431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgrandydev",
            "html_url": "https://github.com/jgrandydev",
            "followers_url": "https://api.github.com/users/jgrandydev/followers",
            "following_url": "https://api.github.com/users/jgrandydev/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgrandydev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgrandydev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgrandydev/subscriptions",
            "organizations_url": "https://api.github.com/users/jgrandydev/orgs",
            "repos_url": "https://api.github.com/users/jgrandydev/repos",
            "events_url": "https://api.github.com/users/jgrandydev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgrandydev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T01:19:47Z",
        "updated_at": "2017-05-25T02:31:38Z",
        "author_association": "NONE",
        "body": "Why not build into `Serialize()` a mechanism to scan root-lists for nulls and if found embed the root-list in a shim class with a single property `List<T>` with static constructor init `SupportNull=true` ?  ` Deserialize() ` would extract list from the shim class with nulls intact."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303979858",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/252#issuecomment-303979858",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/252",
        "id": 303979858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk3OTg1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T10:39:36Z",
        "updated_at": "2017-05-25T10:39:36Z",
        "author_association": "OWNER",
        "body": "if you `Deserialize<List<T>>`, how would you know whether to expect the shim or not? how would it work for append-only files? if the first list you append has nulls, the second list doesn't, and the third list does again? having a different *shape* depending on whether there are nulls or not is a very bad idea, IMO, and is going to lead to huge injuries - the effect is non-obvious.\r\n\r\nIMO the real fix here is: since you know you have nulls, manually create a root object that has a list *marked for nullable support*, and serialize *that* instead. Then it is in *your* control, and not down to the library to make arbitrary opinionated decisions."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303981349",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-303981349",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 303981349,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk4MTM0OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T10:47:56Z",
        "updated_at": "2017-05-25T10:47:56Z",
        "author_association": "OWNER",
        "body": "wow, that's pretty cute; much obliged"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303983577",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-303983577",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 303983577,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk4MzU3Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T11:00:37Z",
        "updated_at": "2017-05-25T11:00:37Z",
        "author_association": "OWNER",
        "body": "merged and deployed, but I notice that \"generate\" now only works once - any ideas? I can take a look later, but obviously you're more familiar. I like that the errors move to the right squigglies, btw - I'm glad I went to the trouble of tracking the full token ranges :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303983979",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-303983979",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 303983979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk4Mzk3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T11:03:02Z",
        "updated_at": "2017-05-25T11:03:02Z",
        "author_association": "OWNER",
        "body": "also: it doesn't show the generated code when there are only warnings; this may or may not be the same issue"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303985630",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-303985630",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 303985630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk4NTYzMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T11:12:50Z",
        "updated_at": "2017-05-25T11:13:02Z",
        "author_association": "OWNER",
        "body": "ah, got it; if it fails with an exception, the `exception` is returned in the JSON but not displayed anywhere; actual bug causing it to `throw` was mine"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/303999535",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-303999535",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 303999535,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzk5OTUzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T12:34:26Z",
        "updated_at": "2017-05-25T12:34:26Z",
        "author_association": "OWNER",
        "body": "I fixed this, btw; https://github.com/mgravell/protobuf-net/commit/ca2ad112386bc188bca14e5f233376b350808ce8"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304013716",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/253#issuecomment-304013716",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/253",
        "id": 304013716,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDAxMzcxNg==",
        "user": {
            "login": "SamuelEnglard",
            "id": 1119883,
            "node_id": "MDQ6VXNlcjExMTk4ODM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1119883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamuelEnglard",
            "html_url": "https://github.com/SamuelEnglard",
            "followers_url": "https://api.github.com/users/SamuelEnglard/followers",
            "following_url": "https://api.github.com/users/SamuelEnglard/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamuelEnglard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamuelEnglard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamuelEnglard/subscriptions",
            "organizations_url": "https://api.github.com/users/SamuelEnglard/orgs",
            "repos_url": "https://api.github.com/users/SamuelEnglard/repos",
            "events_url": "https://api.github.com/users/SamuelEnglard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamuelEnglard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T13:45:29Z",
        "updated_at": "2017-05-25T13:45:29Z",
        "author_association": "NONE",
        "body": "when exception are returned they're supposed to be shown as errors of the \"whole\" code (not the best UX but only thing I could think of)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304035341",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/254#issuecomment-304035341",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/254",
        "id": 304035341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDAzNTM0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T15:11:27Z",
        "updated_at": "2017-05-25T15:11:27Z",
        "author_association": "OWNER",
        "body": "works for me, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304042309",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/246#issuecomment-304042309",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/246",
        "id": 304042309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA0MjMwOQ==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T15:37:36Z",
        "updated_at": "2017-05-25T15:37:36Z",
        "author_association": "NONE",
        "body": "I'm using ServiceStack. `messageString` is supposed to be the last message that was placed in the `ProcessingMessageQueue` list. Looks like my problem is that I cannot find, or that ServiceStack does not have a way to copy binary data from the top off a list without dequeuing it. There has to be a way... "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304047343",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/255#issuecomment-304047343",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/255",
        "id": 304047343,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA0NzM0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T15:56:37Z",
        "updated_at": "2017-05-25T15:56:37Z",
        "author_association": "OWNER",
        "body": "powerful editor; like it!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304048587",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/255#issuecomment-304048587",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/255",
        "id": 304048587,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA0ODU4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:01:38Z",
        "updated_at": "2017-05-25T16:01:38Z",
        "author_association": "OWNER",
        "body": "![image](https://cloud.githubusercontent.com/assets/17328/26458655/ccac5ec4-416b-11e7-85db-0a63d700966b.png)\r\n\r\nyay!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304050981",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/246#issuecomment-304050981",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/246",
        "id": 304050981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1MDk4MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:10:34Z",
        "updated_at": "2017-05-25T16:10:34Z",
        "author_association": "OWNER",
        "body": "at the raw redis level, you want `LRANGE` ; I can't advise on ServiceStack. Basically: if you can get the original binary back, I can help. Until you have the same binary data that you wanted to store, protobuf-net doesn't stand a chance of succeeding. It sounds like your blocker is upstream of protobuf-net.\r\n\r\nWorst case, if the problem is that your client doesn't work with binary: base-64"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304051119",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/246#issuecomment-304051119",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/246",
        "id": 304051119,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1MTExOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:11:08Z",
        "updated_at": "2017-05-25T16:11:08Z",
        "author_association": "OWNER",
        "body": "I'm closing this because it doesn't sound like a protobuf-net issue, but if I've misunderstood please reopen or ping me"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304051338",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/72#issuecomment-304051338",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/72",
        "id": 304051338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1MTMzOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:12:04Z",
        "updated_at": "2017-05-25T16:12:04Z",
        "author_association": "OWNER",
        "body": "Hugely active right now; closing this"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304051655",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-304051655",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 304051655,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1MTY1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:13:18Z",
        "updated_at": "2017-05-25T16:13:18Z",
        "author_association": "OWNER",
        "body": "should be here in 2.3.0; preview of current state is here: https://protogen.marcgravell.com/\r\n\r\n(only a web site for convenience; long term we'd hope to get build tools too - the entire parser / generator pipe is being rewritten)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304051690",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/187#issuecomment-304051690",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/187",
        "id": 304051690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA1MTY5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T16:13:25Z",
        "updated_at": "2017-05-25T16:13:25Z",
        "author_association": "OWNER",
        "body": "should be here in 2.3.0; preview of current state is here: https://protogen.marcgravell.com/\r\n\r\n(only a web site for convenience; long term we'd hope to get build tools too - the entire parser / generator pipe is being rewritten)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304073443",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/252#issuecomment-304073443",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/252",
        "id": 304073443,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDA3MzQ0Mw==",
        "user": {
            "login": "jgrandydev",
            "id": 2849431,
            "node_id": "MDQ6VXNlcjI4NDk0MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2849431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgrandydev",
            "html_url": "https://github.com/jgrandydev",
            "followers_url": "https://api.github.com/users/jgrandydev/followers",
            "following_url": "https://api.github.com/users/jgrandydev/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgrandydev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgrandydev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgrandydev/subscriptions",
            "organizations_url": "https://api.github.com/users/jgrandydev/orgs",
            "repos_url": "https://api.github.com/users/jgrandydev/repos",
            "events_url": "https://api.github.com/users/jgrandydev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgrandydev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T17:38:47Z",
        "updated_at": "2017-06-12T10:21:10Z",
        "author_association": "NONE",
        "body": "Yes a shim root object ( containing a single `IList` property marked to support nulls ) with additional code pre/post-serialization to shim/un-shim is exactly the solution I'm currently going with.\r\n\r\nBut I still wonder if root-list nulls support could be built-into protobuf-net ? \r\n\r\nIf `Serialize()` encounters a root-list with nulls it first transfers the list into a shim object and includes in the bytes a special flag just before the serialized shim bytes.  If `Deserialize<List<T>>` finds the flag set it knows to first deserialize to the shim and then extract the list. \r\n\r\nOr are you saying that it's non-performant to determine whether the root-list has nulls ?  And also non-performant to always ( without first checking for nulls ) wrap all root-lists in the shim class ? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304134965",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304134965",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304134965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNDk2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T21:53:32Z",
        "updated_at": "2017-05-25T21:53:32Z",
        "author_association": "OWNER",
        "body": "oh wow, that's worrying; does dummy.zip exist and have data in this minimal example? trying to repro locally..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304135876",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304135876",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304135876,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNTg3Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T21:58:02Z",
        "updated_at": "2017-05-25T21:58:02Z",
        "author_association": "OWNER",
        "body": "k, can't repro with that code, because a: I don't have your `Pnl<T>` or `Holding` types, and b: I don't have your data, and if I do anything with an empty zip, the `ZipArchive` code exploded long before it gets near protobuf-net."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304136003",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136003",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304136003,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNjAwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T21:58:38Z",
        "updated_at": "2017-05-25T21:58:38Z",
        "author_association": "OWNER",
        "body": "additional question: how large is the data when uncompressed?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304136197",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136197",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304136197,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNjE5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T21:59:33Z",
        "updated_at": "2017-05-25T21:59:33Z",
        "author_association": "OWNER",
        "body": "> The error happens when there are at least 2 objects in the list. I can send the zip and the code to read it, if you'd like to take a look.\r\n\r\nYes please, very much. Sorry for drip-feeding comments here!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304136618",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136618",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304136618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNjYxOA==",
        "user": {
            "login": "mburbea",
            "id": 213233,
            "node_id": "MDQ6VXNlcjIxMzIzMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/213233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mburbea",
            "html_url": "https://github.com/mburbea",
            "followers_url": "https://api.github.com/users/mburbea/followers",
            "following_url": "https://api.github.com/users/mburbea/following{/other_user}",
            "gists_url": "https://api.github.com/users/mburbea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mburbea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mburbea/subscriptions",
            "organizations_url": "https://api.github.com/users/mburbea/orgs",
            "repos_url": "https://api.github.com/users/mburbea/repos",
            "events_url": "https://api.github.com/users/mburbea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mburbea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T22:01:35Z",
        "updated_at": "2017-05-25T22:01:35Z",
        "author_association": "NONE",
        "body": "No problem. I'll build a minimal gist, if you don't mind can I get an email\nto send it to?\n\nOn Thu, May 25, 2017, 5:59 PM Marc Gravell <notifications@github.com> wrote:\n\n> The error happens when there are at least 2 objects in the list. I can\n> send the zip and the code to read it, if you'd like to take a look.\n>\n> Yes please, very much. Sorry for drip-feeding comments here!\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136197>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AANA8Q3uIM2go3DcT6jlKza1dUOzRF4sks5r9fnJgaJpZM4Nm4Ke>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304136687",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136687",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304136687,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNjY4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T22:01:53Z",
        "updated_at": "2017-05-25T22:01:53Z",
        "author_association": "OWNER",
        "body": "marc.gravell@gmail.com"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304150147",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304150147",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304150147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE1MDE0Nw==",
        "user": {
            "login": "mburbea",
            "id": 213233,
            "node_id": "MDQ6VXNlcjIxMzIzMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/213233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mburbea",
            "html_url": "https://github.com/mburbea",
            "followers_url": "https://api.github.com/users/mburbea/followers",
            "following_url": "https://api.github.com/users/mburbea/following{/other_user}",
            "gists_url": "https://api.github.com/users/mburbea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mburbea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mburbea/subscriptions",
            "organizations_url": "https://api.github.com/users/mburbea/orgs",
            "repos_url": "https://api.github.com/users/mburbea/repos",
            "events_url": "https://api.github.com/users/mburbea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mburbea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-25T23:20:35Z",
        "updated_at": "2017-05-25T23:20:35Z",
        "author_association": "NONE",
        "body": "Ok, I sent you an email. Thanks again for the fast response!\n\nOn Thu, May 25, 2017 at 6:01 PM, Marc Gravell <notifications@github.com>\nwrote:\n\n> marc.gravell@gmail.com\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304136687>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AANA8Z2Lc0rJfhWvVoNupDW85HaGbeGxks5r9fpVgaJpZM4Nm4Ke>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304211379",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/221#issuecomment-304211379",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/221",
        "id": 304211379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDIxMTM3OQ==",
        "user": {
            "login": "jgrandydev",
            "id": 2849431,
            "node_id": "MDQ6VXNlcjI4NDk0MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2849431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgrandydev",
            "html_url": "https://github.com/jgrandydev",
            "followers_url": "https://api.github.com/users/jgrandydev/followers",
            "following_url": "https://api.github.com/users/jgrandydev/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgrandydev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgrandydev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgrandydev/subscriptions",
            "organizations_url": "https://api.github.com/users/jgrandydev/orgs",
            "repos_url": "https://api.github.com/users/jgrandydev/repos",
            "events_url": "https://api.github.com/users/jgrandydev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgrandydev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-26T07:20:41Z",
        "updated_at": "2017-05-26T07:20:41Z",
        "author_association": "NONE",
        "body": "Are you referring to root-lists ?  Or lists embedded in a type ? \r\n\r\nAn empty-list is not sent at all : `ProtoBuf.Serialize()` writes no bytes for that proto-index.\r\n\r\nWhen `ProtoBuf.Deserialize()` looks for bytes for that proto-index it doesn't find any, and so it defaults the value to null.  It has no way to know if the original value was null or an empty-list.\r\n\r\nIt's not the `protobuf-net` implementation behind this , it's the Google Protocol Buffers spec requiring no bytes if no actual data.\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304440646",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304440646",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304440646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ0MDY0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-27T09:26:28Z",
        "updated_at": "2017-05-27T09:26:28Z",
        "author_association": "OWNER",
        "body": "Thank you, your email was perfect. I have isolated the problem (I know what is happening, where, and why), and a fix should be available this weekend. Good bug report, thanks.\r\n\r\nhttps://twitter.com/marcgravell/status/868397653939429376"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304445369",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304445369",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304445369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ0NTM2OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-27T11:07:58Z",
        "updated_at": "2017-05-27T11:07:58Z",
        "author_association": "OWNER",
        "body": "fix deployed: https://www.nuget.org/packages/protobuf-net?NormalizedVersion=2.2.1"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304869724",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/257#issuecomment-304869724",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/257",
        "id": 304869724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg2OTcyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-30T12:57:07Z",
        "updated_at": "2017-05-30T12:57:07Z",
        "author_association": "OWNER",
        "body": "Regarding running protoc: do you actually need the includes? I am not involved in the official Google implementation, so I **cannot advise** on how to get protoc to behave, since that isn't my tooling. However! I do expose both protogen (the new incomplete rewrite) and protoc on my website:  https://protogen.marcgravell.com/\r\n\r\nRe ClaimsPrincipal; I don't know enough about that type. What do you actually need to serialize to store and rehydrate one of those? I genuinely don't know. However, protobuf-net includes features that allow you to get the serializer to automatically use a  simple DTO (serializaiton) type in place of a complex POCO object as long as you provide a method to get between them. So if you can say \"to work a ClaimsPrincipal I need to store a string, 3 integers and a boolean\" - then I can tell you how to get it to do that."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304876720",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-304876720",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 304876720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg3NjcyMA==",
        "user": {
            "login": "mburbea",
            "id": 213233,
            "node_id": "MDQ6VXNlcjIxMzIzMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/213233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mburbea",
            "html_url": "https://github.com/mburbea",
            "followers_url": "https://api.github.com/users/mburbea/followers",
            "following_url": "https://api.github.com/users/mburbea/following{/other_user}",
            "gists_url": "https://api.github.com/users/mburbea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mburbea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mburbea/subscriptions",
            "organizations_url": "https://api.github.com/users/mburbea/orgs",
            "repos_url": "https://api.github.com/users/mburbea/repos",
            "events_url": "https://api.github.com/users/mburbea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mburbea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-30T13:23:54Z",
        "updated_at": "2017-05-30T13:23:54Z",
        "author_association": "NONE",
        "body": "Thank you! Seems to be working great now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304905795",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/257#issuecomment-304905795",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/257",
        "id": 304905795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDkwNTc5NQ==",
        "user": {
            "login": "d-saravanan",
            "id": 20381669,
            "node_id": "MDQ6VXNlcjIwMzgxNjY5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20381669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d-saravanan",
            "html_url": "https://github.com/d-saravanan",
            "followers_url": "https://api.github.com/users/d-saravanan/followers",
            "following_url": "https://api.github.com/users/d-saravanan/following{/other_user}",
            "gists_url": "https://api.github.com/users/d-saravanan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d-saravanan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d-saravanan/subscriptions",
            "organizations_url": "https://api.github.com/users/d-saravanan/orgs",
            "repos_url": "https://api.github.com/users/d-saravanan/repos",
            "events_url": "https://api.github.com/users/d-saravanan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d-saravanan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-30T14:58:47Z",
        "updated_at": "2017-05-30T14:58:47Z",
        "author_association": "NONE",
        "body": "Thanks for your response. I was also exploring the claims principal and other some of my scope objects. I felt that, it was way too much to serialize and store. As you rightly said, the simple DTO against the claims principal is my choice. I am preparing the list of properties, if you can please give me directions in this step, it will be very helpful.\r\n\r\nA generic dot net question, please bear with me.\r\nLet's say I have an aggregate object, in which the claims principal is a part, should I implement ISerializable and handle the DTO back to claims principal mapping in the GetObject method. I understand that this breaks the separation of concerns ( regarding the Serialization resolver and dto transformation), however it can be taken care via an IoC like unity. Kindly let me know your thoughts on this. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/304936933",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/257#issuecomment-304936933",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/257",
        "id": 304936933,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDkzNjkzMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-30T16:40:59Z",
        "updated_at": "2017-05-30T16:42:35Z",
        "author_association": "OWNER",
        "body": "K\r\n\r\n## Option 0:\r\n\r\nMy *preferred* option would be to serialize an object model that just *doesn't have* the complex non-serializable thing in it. Leave that entirely in the code that is downstream. That isn't always possible, so:\r\n\r\n## Option 1:\r\n\r\nRetain your existing model, but have a shim property on your type; so while you might have:\r\n\r\n    public SomethingComplex ProblematicProperty {get;set;}\r\n\r\nyou could add:\r\n\r\n    [ProtoMember(12)]\r\n    private SomethingSimple ProblematicPropertySerialized {\r\n        get { /* convert from ProblematicProperty */ }\r\n        set { /* convert from value and assign into ProblematicProperty */ }\r\n    }\r\n\r\n(and you write a `SomethingSimple` type that meets your needs and works with the serializer)\r\n\r\nhowever, I acknowledge that this *also* isn't always possible. In that case, you can hack around it with...\r\n\r\n## Option 2\r\n\r\n a surrogate - the key point here is the `SetSurrogate` method which expects there to be conversion operators between the two types (on the assumption that you're writing the surrogate type specifically for this purpose, so that's fine); you can see this in the runnable example below. The idea is the same, but instead of using a shim property, the library does that step for you.\r\n\r\nAnd to answer your question: no, don't touch `ISerializable`\r\n\r\n```\r\nusing ProtoBuf;\r\nusing ProtoBuf.Meta;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var obj = new MyData { Id = 1, Foo = new ComplexNonSerializableClass() };\r\n\r\n        RuntimeTypeModel.Default.Add(typeof(ComplexNonSerializableClass), false)\r\n            .SetSurrogate(typeof(SimplerThingThatLooksSimilar));\r\n        var clone = Serializer.DeepClone(obj);\r\n    }\r\n\r\n\r\n    [ProtoContract]\r\n    public class MyData\r\n    {\r\n        [ProtoMember(1)]\r\n        public int Id { get; set; }\r\n        [ProtoMember(2)]\r\n        public ComplexNonSerializableClass Foo {get;set;}\r\n    }\r\n\r\n    public class ComplexNonSerializableClass\r\n    {\r\n         // ... real code here, obviously - although this probably isn't\r\n         // your type in the first place - it is probably a BCL type\r\n    }\r\n\r\n    [ProtoContract]\r\n    public class SimplerThingThatLooksSimilar\r\n    {\r\n        public static implicit operator SimplerThingThatLooksSimilar(ComplexNonSerializableClass other)\r\n        {   // ... real code here, obviously\r\n            return new SimplerThingThatLooksSimilar { Name = \"abc\", Whatever = 123 };\r\n        }\r\n        public static implicit operator ComplexNonSerializableClass(SimplerThingThatLooksSimilar other)\r\n        {\r\n            return new ComplexNonSerializableClass(); // ... real code here, obviously\r\n        }\r\n\r\n        [ProtoMember(1)]\r\n        public string Name { get; set; }\r\n        [ProtoMember(2)]\r\n        public int Whatever { get; set; }\r\n    }\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305089429",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/243#issuecomment-305089429",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/243",
        "id": 305089429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA4OTQyOQ==",
        "user": {
            "login": "AlleSchonWeg",
            "id": 6727366,
            "node_id": "MDQ6VXNlcjY3MjczNjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6727366?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlleSchonWeg",
            "html_url": "https://github.com/AlleSchonWeg",
            "followers_url": "https://api.github.com/users/AlleSchonWeg/followers",
            "following_url": "https://api.github.com/users/AlleSchonWeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlleSchonWeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlleSchonWeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlleSchonWeg/subscriptions",
            "organizations_url": "https://api.github.com/users/AlleSchonWeg/orgs",
            "repos_url": "https://api.github.com/users/AlleSchonWeg/repos",
            "events_url": "https://api.github.com/users/AlleSchonWeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlleSchonWeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T05:44:03Z",
        "updated_at": "2017-05-31T05:44:03Z",
        "author_association": "NONE",
        "body": "Yes ist works. I thought, that the WCF-Extensions are equal to the normal behavior."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305137749",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/257#issuecomment-305137749",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/257",
        "id": 305137749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTEzNzc0OQ==",
        "user": {
            "login": "d-saravanan",
            "id": 20381669,
            "node_id": "MDQ6VXNlcjIwMzgxNjY5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20381669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d-saravanan",
            "html_url": "https://github.com/d-saravanan",
            "followers_url": "https://api.github.com/users/d-saravanan/followers",
            "following_url": "https://api.github.com/users/d-saravanan/following{/other_user}",
            "gists_url": "https://api.github.com/users/d-saravanan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d-saravanan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d-saravanan/subscriptions",
            "organizations_url": "https://api.github.com/users/d-saravanan/orgs",
            "repos_url": "https://api.github.com/users/d-saravanan/repos",
            "events_url": "https://api.github.com/users/d-saravanan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d-saravanan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T09:32:42Z",
        "updated_at": "2017-05-31T09:32:42Z",
        "author_association": "NONE",
        "body": "Thanks a lot for the help. \r\nI was able to test with the sample that you gave and was able to implement in a similar but moderately complex POC. I am good to proceed with the main change shortly. I have the POC application in github for anyone else to get started [link](https://github.com/d-saravanan/protobuf-custom-serialize-complex-objects)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305140577",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/257#issuecomment-305140577",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/257",
        "id": 305140577,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE0MDU3Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T09:44:20Z",
        "updated_at": "2017-05-31T09:44:20Z",
        "author_association": "OWNER",
        "body": "I'm glad you were able to make progress; I'm going to close this, but feel free to ping me if there's something else."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305189067",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-305189067",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 305189067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE4OTA2Nw==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T13:38:19Z",
        "updated_at": "2017-05-31T13:38:19Z",
        "author_association": "NONE",
        "body": "Anyone know anything more on this?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305197278",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-305197278",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 305197278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE5NzI3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T14:06:12Z",
        "updated_at": "2017-05-31T14:06:12Z",
        "author_association": "OWNER",
        "body": "Hi; for some reason all my usual github notifications got blown away, so I only noticed this because of @nathvi 's comment (I rebuilt all my notifications the other day). I will look this evening and see what's wrong."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305214659",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-305214659",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 305214659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIxNDY1OQ==",
        "user": {
            "login": "nathvi",
            "id": 5109300,
            "node_id": "MDQ6VXNlcjUxMDkzMDA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5109300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathvi",
            "html_url": "https://github.com/nathvi",
            "followers_url": "https://api.github.com/users/nathvi/followers",
            "following_url": "https://api.github.com/users/nathvi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathvi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathvi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathvi/subscriptions",
            "organizations_url": "https://api.github.com/users/nathvi/orgs",
            "repos_url": "https://api.github.com/users/nathvi/repos",
            "events_url": "https://api.github.com/users/nathvi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathvi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T15:01:35Z",
        "updated_at": "2017-05-31T15:01:35Z",
        "author_association": "NONE",
        "body": "It's probably me just being an idiot again."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305229969",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/242#issuecomment-305229969",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/242",
        "id": 305229969,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTIyOTk2OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-31T15:47:30Z",
        "updated_at": "2017-05-31T15:52:32Z",
        "author_association": "OWNER",
        "body": "I'm assuming that `myIP` is an `IPEndPoint`. For the purposes of testing this, I generated a random IP and am using:\r\n\r\n    var myIP = new IPEndPoint(IPAddress.Parse(\"220.5.105.207\"), 6379);\r\n\r\nThis fails in the way you describe.\r\n\r\nYou can see the problem here if we look at the stacktrace:\r\n\r\n```\r\nUnhandled Exception: System.Net.Sockets.SocketException: The attempted operation is not supported for the type of object referenced\r\n   at System.Net.IPAddress.get_ScopeId()\r\n   at IPAddressSurrogate.op_Implicit(IPAddress value) in C:\\Users\\mgravell\\Documents\\Visual Studio 2017\\Projects\\ConsoleApp12\\ConsoleApp12\\Program.cs:line 44\r\n```\r\n\r\nNotice that it is failing when accessing the `ScopeId`, and sure enough - if we *forget about protobuf*, and just look at `myIP.ScopeId`, that alone is enough to make it fail. So; let's assume we don't need that and just throw it away (remove `ScopeId` completely in the surrogate and operators).\r\n\r\nThis now (for me) fails with a complaint about no wire-value for `InterNetwork`. I think this is just because the surrogate feature was never intended to work with enums; if we remove all mention of `AddressFamilySurrogate`, the code now *runs*, but doesn't actually serialize anything - that's because `IPAddressSurrogate` has no members marked for serialization - but... on investigation, I don't think we even need `IPAddressSurrogate` - the only interesting property that we actually need to store is `IPString` - or the bytes equivalent. I'm going to stick with the `string` approach.\r\n\r\nNext I notice that the conversion operators are failing because of the `null` initial values - conversion operators on reference types need to handle `null` (usually by passing it through).\r\n\r\nAnd you don't seem to be storing the `Port`, which is essential.\r\n\r\nAt this point I took a step back, because I think you're making this **way, way** more complicated than necessary. I'm pretty sure that *all* you need is:\r\n\r\n```\r\n[ProtoContract]\r\npublic class IPEndPointSurrogate\r\n{\r\n\r\n    [ProtoMember(1)]\r\n    public string Address { get; set; }\r\n\r\n    [ProtoMember(2)]\r\n    public int Port { get; set; }\r\n\r\n    public static implicit operator IPEndPointSurrogate(IPEndPoint value)\r\n        => value == null ? null : new IPEndPointSurrogate { Address = value.Address.ToString(), Port = value.Port };\r\n\r\n    public static implicit operator IPEndPoint(IPEndPointSurrogate value)\r\n        => value == null ? null : new IPEndPoint(IPAddress.Parse(value.Address), value.Port);\r\n}\r\n```\r\n\r\nwith example usage:\r\n\r\n```\r\npublic static class P\r\n{\r\n    public static void Main()\r\n    {\r\n        RuntimeTypeModel.Default.Add(typeof(IPEndPoint), false)\r\n            .SetSurrogate(typeof(IPEndPointSurrogate));\r\n\r\n        var myIP = new IPEndPoint(IPAddress.Parse(\"220.5.105.207\"), 6379);\r\n        using (var ipStream = new MemoryStream())\r\n        {\r\n            Serializer.Serialize(ipStream, myIP);\r\n            ipStream.Position = 0;\r\n            var clone = (IPEndPoint)Serializer.Deserialize<IPEndPoint>(ipStream);\r\n            Console.WriteLine(clone.ToString());\r\n\r\n            // prove it worked:\r\n            Console.WriteLine(ReferenceEquals(clone, myIP)); // false, different objects\r\n            Console.WriteLine(Equals(clone, myIP)); // true, count as equivalent\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI'm not sure if I've answered the question, but...\r\n\r\nNote it will be *slightly smaller* if we use raw bytes intead:\r\n\r\n```\r\n[ProtoContract]\r\npublic class IPEndPointSurrogate\r\n{\r\n\r\n    [ProtoMember(1)]\r\n    public byte[] Address { get; set; }\r\n\r\n    [ProtoMember(2)]\r\n    public int Port { get; set; }\r\n\r\n    public static implicit operator IPEndPointSurrogate(IPEndPoint value)\r\n        => value == null ? null : new IPEndPointSurrogate { Address = value.Address.GetAddressBytes(), Port = value.Port };\r\n\r\n    public static implicit operator IPEndPoint(IPEndPointSurrogate value)\r\n        => value == null ? null : new IPEndPoint(new IPAddress(value.Address), value.Port);\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305465302",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/258#issuecomment-305465302",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/258",
        "id": 305465302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTQ2NTMwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-01T11:22:33Z",
        "updated_at": "2017-06-01T11:22:33Z",
        "author_association": "OWNER",
        "body": "The library always intends to be as compatible in every direction as possible. That is a key aim of both protobuf as a general concept, and protobuf-net as a specific implementation of protobuf.\r\n\r\nIn the case of DateTimeKind - this data is tagged in as an additional optional field. As you correctly assume, if an older library doesn't know what to do with that, it will just ignore it.\r\n\r\nNote that this is *not* always possible, though. As a specific example, Google added \"Timestamp\" as a common standard for storing date-time data (long after I'd written protobuf-net's DateTime representation). I plan to add `Timestamp` support in 2.3.0, probably doing something like:\r\n\r\n    [ProtoMember(1, DataFormat = DataFormat.WellKnown)]\r\n    public DateTime When {get;set;}\r\n\r\nThis uses a *different format*. If there was old code that used 2.1.0 (or whatever) and had (since `DataFormat.WellKnown` doesn't exist yet):\r\n\r\n    [ProtoMember(1)]\r\n    public DateTime When {get;set;}\r\n\r\nthen when *this* code tries to deserialize the time, it will *either* fail *or* silently come up with a nonsensical value. Ultimately, changing the `DataFormat` property of a member is *almost always* a breaking change in your data. I do not plan on changing the *default* `DateTime` / `DataFormat` matching, for exactly the reasons you highlight: compatibility.\r\n\r\nThe protobuf wire format has not changed *at all*, even with the addition of proto3 - so there shouldn't be any *fundamentally* changing ideas, at least until some hypothetical proto4; and if that happens, I would expect to add configuration options to *enable* this, so that nothing changes how existing code behaves. For example, if that happened, I would probably change:\r\n\r\n    public void Serialize<T>(Stream s, T value, ...\r\n\r\nto:\r\n\r\n    [Obsolete(\"Please explicitly specify the protocol version; Proto2 is assumed by default\")]\r\n    public void Serialize<T>(Stream s, T value, ...) => Serialize<T>(s, value, ProtocolVersion.Proto2);\r\n    public void Serialize<T>(Stream s, T value, ProtocolVersion version, ...)\r\n\r\nif that makes sense. Basically, I will always go out of my way to **avoid** making it easy to fail. Which is, IMO, the entire point of a library."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305561116",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/258#issuecomment-305561116",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/258",
        "id": 305561116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU2MTExNg==",
        "user": {
            "login": "jnyrup",
            "id": 919634,
            "node_id": "MDQ6VXNlcjkxOTYzNA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/919634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnyrup",
            "html_url": "https://github.com/jnyrup",
            "followers_url": "https://api.github.com/users/jnyrup/followers",
            "following_url": "https://api.github.com/users/jnyrup/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnyrup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnyrup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnyrup/subscriptions",
            "organizations_url": "https://api.github.com/users/jnyrup/orgs",
            "repos_url": "https://api.github.com/users/jnyrup/repos",
            "events_url": "https://api.github.com/users/jnyrup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnyrup/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-01T17:19:23Z",
        "updated_at": "2017-06-01T17:19:23Z",
        "author_association": "NONE",
        "body": "Thanks for the answer and thoughts about the future."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305581762",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/259#issuecomment-305581762",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/259",
        "id": 305581762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTU4MTc2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-01T18:36:38Z",
        "updated_at": "2017-06-01T18:36:38Z",
        "author_association": "OWNER",
        "body": "I literally threw `CommonCodeGenerator` together as a starting point. I'm completely open to other radical ideas, although also note that `CodeGenerator` (the base) doesn't use that pattern at all - it may be that is the better fit for your scenario?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305710910",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/259#issuecomment-305710910",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/259",
        "id": 305710910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTcxMDkxMA==",
        "user": {
            "login": "rogeralsing",
            "id": 647031,
            "node_id": "MDQ6VXNlcjY0NzAzMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/647031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rogeralsing",
            "html_url": "https://github.com/rogeralsing",
            "followers_url": "https://api.github.com/users/rogeralsing/followers",
            "following_url": "https://api.github.com/users/rogeralsing/following{/other_user}",
            "gists_url": "https://api.github.com/users/rogeralsing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rogeralsing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rogeralsing/subscriptions",
            "organizations_url": "https://api.github.com/users/rogeralsing/orgs",
            "repos_url": "https://api.github.com/users/rogeralsing/repos",
            "events_url": "https://api.github.com/users/rogeralsing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rogeralsing/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-02T07:25:22Z",
        "updated_at": "2017-06-02T07:25:22Z",
        "author_association": "NONE",
        "body": "Are those things in any branch atm?\r\nthe compile-time-gen branch only contains CodeGenGenerator and CodeGenAttribute, am I looking in the wrong place?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/305737850",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/259#issuecomment-305737850",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/259",
        "id": 305737850,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTczNzg1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-02T09:29:52Z",
        "updated_at": "2017-06-02T09:29:52Z",
        "author_association": "OWNER",
        "body": "they're right next to the file in your own link (top post); https://github.com/mgravell/protobuf-net/blob/parser/src/protogen/CodeGenerator.cs"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306392637",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/259#issuecomment-306392637",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/259",
        "id": 306392637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM5MjYzNw==",
        "user": {
            "login": "rogeralsing",
            "id": 647031,
            "node_id": "MDQ6VXNlcjY0NzAzMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/647031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rogeralsing",
            "html_url": "https://github.com/rogeralsing",
            "followers_url": "https://api.github.com/users/rogeralsing/followers",
            "following_url": "https://api.github.com/users/rogeralsing/following{/other_user}",
            "gists_url": "https://api.github.com/users/rogeralsing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rogeralsing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rogeralsing/subscriptions",
            "organizations_url": "https://api.github.com/users/rogeralsing/orgs",
            "repos_url": "https://api.github.com/users/rogeralsing/repos",
            "events_url": "https://api.github.com/users/rogeralsing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rogeralsing/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-06T06:17:10Z",
        "updated_at": "2017-06-06T06:17:10Z",
        "author_association": "NONE",
        "body": "It's working fine, I've got all the injection points needed. closing"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306610173",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-306610173",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 306610173,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjYxMDE3Mw==",
        "user": {
            "login": "breyed",
            "id": 1299073,
            "node_id": "MDQ6VXNlcjEyOTkwNzM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1299073?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/breyed",
            "html_url": "https://github.com/breyed",
            "followers_url": "https://api.github.com/users/breyed/followers",
            "following_url": "https://api.github.com/users/breyed/following{/other_user}",
            "gists_url": "https://api.github.com/users/breyed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/breyed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/breyed/subscriptions",
            "organizations_url": "https://api.github.com/users/breyed/orgs",
            "repos_url": "https://api.github.com/users/breyed/repos",
            "events_url": "https://api.github.com/users/breyed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/breyed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-06T20:39:59Z",
        "updated_at": "2017-06-06T20:39:59Z",
        "author_association": "NONE",
        "body": "Should this issue still be open? I was encouraged at first to think that proto3 support was available already... only to find out it isn't."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306611521",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-306611521",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 306611521,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjYxMTUyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-06T20:45:02Z",
        "updated_at": "2017-06-06T20:45:02Z",
        "author_association": "OWNER",
        "body": "it will be closed in a very few days - I'm about to release 2.3.0 which\nprovides this. Note that comamn-line / IDE build tools will be part of\n2.3.1 (or similar); for 2.3.0 the only provision is\nhttps://protogen.marcgravell.com (which is in the \"parser\" branch if you\nwant to self host)\n\nOn 6 Jun 2017 9:40 p.m., \"Edward Brey\" <notifications@github.com> wrote:\n\n> Should this issue still be open? I was encouraged at first to think that\n> proto3 support was available already... only to find out it isn't.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/150#issuecomment-306610173>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBIahMDhtWCXON413C_ApZuxc9xNks5sBbkfgaJpZM4H56El>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306766045",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/50#issuecomment-306766045",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/50",
        "id": 306766045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc2NjA0NQ==",
        "user": {
            "login": "rstonkus",
            "id": 2207082,
            "node_id": "MDQ6VXNlcjIyMDcwODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2207082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rstonkus",
            "html_url": "https://github.com/rstonkus",
            "followers_url": "https://api.github.com/users/rstonkus/followers",
            "following_url": "https://api.github.com/users/rstonkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/rstonkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rstonkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rstonkus/subscriptions",
            "organizations_url": "https://api.github.com/users/rstonkus/orgs",
            "repos_url": "https://api.github.com/users/rstonkus/repos",
            "events_url": "https://api.github.com/users/rstonkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rstonkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T11:22:33Z",
        "updated_at": "2017-06-07T11:22:33Z",
        "author_association": "NONE",
        "body": "I'd suggest introduce global flag for this instead of dropping all errors.\r\nMy option here: [https://github.com/mgravell/protobuf-net/pull/260](https://github.com/mgravell/protobuf-net/pull/260).\r\nInstead of dropping the exception, one could use single-liner:\r\n`\r\nRuntimeTypeModel.Default.GlobalEnumPassthru = true;\r\n`\r\nOr set that option for each enum separatelly like (existing functionality):\r\n`\r\nRuntimeTypeModel.Default[typeof(YourEnum)].EnumPassthru = true;\r\n`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306767718",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/50#issuecomment-306767718",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/50",
        "id": 306767718,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc2NzcxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T11:31:10Z",
        "updated_at": "2017-06-07T11:31:10Z",
        "author_association": "OWNER",
        "body": "Yeah, I'm *not* going to simply remove all enum verification, so I'm not going to merge the PR \"as is\", but I am open to suggestions on what the right \"fix\" is - if there is any. As noted, there is support to disable enum verification, and this is done automatically if `[Flag]` is on the enum. It can also be specified per-enum in the metadata via `[ProtoContract(EnumPassthru = true)]`. And it can be set at runtime for other types via `RuntimeTypeModel`.\r\n\r\nIs that not enough?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306767888",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/50#issuecomment-306767888",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/50",
        "id": 306767888,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc2Nzg4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T11:32:08Z",
        "updated_at": "2017-06-07T11:32:08Z",
        "author_association": "OWNER",
        "body": "I'm going to close this PR as it is unmergeable in `git` terms, *plus* I think the code suggested is the wrong fix; but I'm open to further discussion on the topic both here or in a separate issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306772716",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306772716",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306772716,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3MjcxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T11:56:55Z",
        "updated_at": "2017-06-07T11:56:55Z",
        "author_association": "OWNER",
        "body": "There's also `[ProtoContract(EnumPassthru = true)]` at the enum level. Wouldn't it make more sense for your test to just use:\r\n\r\n    [ProtoContract(Name = @\"TestEnum\", EnumPassthru = true)]\r\n\r\n? I'm open to the *idea*; I'm just not sure that there's a *necessity* for it... and global options are almost always problematic, especially in complex systems where one bit of code expects the global option to be one way, and another bit of code expects it to be the opposite."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306772777",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306772777",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306772777,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3Mjc3Nw==",
        "user": {
            "login": "rstonkus",
            "id": 2207082,
            "node_id": "MDQ6VXNlcjIyMDcwODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2207082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rstonkus",
            "html_url": "https://github.com/rstonkus",
            "followers_url": "https://api.github.com/users/rstonkus/followers",
            "following_url": "https://api.github.com/users/rstonkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/rstonkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rstonkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rstonkus/subscriptions",
            "organizations_url": "https://api.github.com/users/rstonkus/orgs",
            "repos_url": "https://api.github.com/users/rstonkus/repos",
            "events_url": "https://api.github.com/users/rstonkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rstonkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T11:57:12Z",
        "updated_at": "2017-06-07T11:57:12Z",
        "author_association": "NONE",
        "body": "As an example of scenario, where global Enum passthru would help is the [Google RTB protobuf contract](https://developers.google.com/ad-exchange/rtb/downloads/realtime-bidding-proto). It happens that they change (add) Enum values from time to time, prior to updating contract schema.\r\nUsually, there's 0 business impact in those changes, before they appear in actual contract, but they certainly can brake business if failing to process requests because of the new values.\r\n\r\nAnd there is a lot of Enums in those types of contracts, so:\r\n\r\n- listing them statically is not an option\r\n- adding attribute is not an option as well, as the code is generated via proto-gen\r\n- reflecting through enums through reflection on start is an option, but IMO it is a bit overkill\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306774421",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306774421",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306774421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3NDQyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:04:52Z",
        "updated_at": "2017-06-07T12:06:29Z",
        "author_association": "OWNER",
        "body": "K; interesting thing I notice: in proto3 (and in contrast to proto2), there is a new additional paragraph that clarifies how it expects unknown enums to be handled:\r\n\r\n> During deserialization, unrecognized enum values will be preserved in the message, though how this is represented when the message is deserialized is language-dependent. In languages that support open enum types with values outside the range of specified symbols, such as C++ and Go, the unknown enum value is simply stored as its underlying integer representation.\r\n\r\nBecause of this, I think it is entirely reasonable for proto3-based generation to automatically include `EnumPassthru = true`. It helps that proto3 has more sensible rules for enums that make this more ... possible.\r\n\r\nI notice that RTB is implicitly a proto2 schema, so the interesting question *for me* is: \"should we interpret this paragraph as applying retrospectively to proto2?\". And if we do: what are the consequences? Are there problems where this will be actively harmful?\r\n\r\nLet me have a think about that. It *might* be that we can magic this away completely, especially if we detect that the enum looks proto3 compatible (meaning: the first enum item has the value of zero).\r\n\r\nIt looks like the RTB enums would satisfy this rule.\r\n\r\nThoughts?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306775610",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306775610",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306775610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3NTYxMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:10:32Z",
        "updated_at": "2017-06-07T12:10:32Z",
        "author_association": "OWNER",
        "body": "Ooh, I also need to thank you for the example; looks like the upcoming 2.3.0 parser needs a few more tweaks - it fails on that proto schema ([see here](https://protogen.marcgravell.com/#g0435db396fa82fe2434ea4fab590b66f)) in two ways:\r\n\r\n- it doesn't expect hex numbers, giving \"unable to parse integers\" on everything in `NativeAdTemplate.Fields`\r\n- it fails to resolve `Hyperlocal.Point` correctly\r\n\r\nI expect both of these to be easy fixes - will have a look this evening."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306776694",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306776694",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306776694,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3NjY5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:15:24Z",
        "updated_at": "2017-06-07T12:17:29Z",
        "author_association": "OWNER",
        "body": "The annoying problem with enums in C# is that they *don't have a defined order*, and in proto2 the order matters (because the first one is the default). I think the rule for automatic \"yeah, this is passthru\" should be:\r\n\r\n- if `[Flags]` or `[ProtoContract(EnumPassthru=true)]` - trivial case, explicitly pass-thru\r\n\r\notherwise:\r\n\r\n- if there's an enum definition with value zero\r\n- and if there is no enum definition that has a `[ProtoEnum(...)]` marker with a value that is **different** than the enum's native value\r\n- and if there is **not** a `[DefaultValue(...)]` on the *member* that gives a value *other* than zero\r\n\r\nthen: treat it as pass-thru\r\n\r\nI *think* that works......?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306778472",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306778472",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306778472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc3ODQ3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:24:04Z",
        "updated_at": "2017-06-07T12:27:05Z",
        "author_association": "OWNER",
        "body": "The more I think about it, the more I think we should *only* worry about this if there *is* a `[ProtoEnum]` with a non-matching value... i.e. do we *actually* need to do any mapping. If we don't: just pass it through as-is; which means *at the DSL layer*, both proto2 and proto3 can include this happily. It is only user-generated \"code-first\" enums that would ever have this problem."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306782105",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306782105",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306782105,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc4MjEwNQ==",
        "user": {
            "login": "rstonkus",
            "id": 2207082,
            "node_id": "MDQ6VXNlcjIyMDcwODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2207082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rstonkus",
            "html_url": "https://github.com/rstonkus",
            "followers_url": "https://api.github.com/users/rstonkus/followers",
            "following_url": "https://api.github.com/users/rstonkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/rstonkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rstonkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rstonkus/subscriptions",
            "organizations_url": "https://api.github.com/users/rstonkus/orgs",
            "repos_url": "https://api.github.com/users/rstonkus/repos",
            "events_url": "https://api.github.com/users/rstonkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rstonkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:39:49Z",
        "updated_at": "2017-06-07T12:42:38Z",
        "author_association": "NONE",
        "body": "Googles protoc for c# on proto3 relies on int type backing field for enums as far as I have checked.\r\n\r\nYes, proto3 basically relaxes the requirement for enums in the sense that they allow other values than defined by default, which makes it backwards compatible (in business sense) by default. But AFAIK they must be 0 based, which is not the case in case of current RTB contract, e.g. `VideoFormat`. \r\nAnd just recently they've added extra enumerators to that type :) So, I guess, your previous suggestion wouldn't work either (if I understand it correctly).\r\n\r\nNot sure though that completely removing check or relying on `[DefaultValue(...)]` logic makes sense. 'Cause in some more stringent scenarios that could be used to validate data on the wire. I see as two different domains.\r\nOf course, there's a possibility to invert. `EnablePassthru=true` by default, and add option for concrete checks. Not sure if it is a good thing regarding backwards compatibility."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306783894",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306783894",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306783894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc4Mzg5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:47:28Z",
        "updated_at": "2017-06-07T12:48:01Z",
        "author_association": "OWNER",
        "body": "What you say about `VideoFormat` is *fine* **if** we use the \"The more I think about it\" version, i.e. \"as long as we don't *know that there is* a conflict: use the simple rules\". This would only ever apply to \"I'm using enums that I wrote in my regular non-.proto code, and I've added ProtoEnum to remap the values\". This is a tiny edge case, and I'm OK if things are more complicated for that scenario. The default thing isn't a factor there - was just being paranoid - separate concern.\r\n\r\nBTW, I fixed the parser - it *almost* works perfectly for that .proto now - only issue is the *emitted* code doesn't give quite the right name - it says `public Point CenterPoint { get; set; }` when it should be `public Hyperlocal.Point CenterPoint { get; set; }`. That's a known issue (it was already in the \"Pending work items in generated code\" list) that I'll try to fix tonight."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306786154",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306786154",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306786154,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjc4NjE1NA==",
        "user": {
            "login": "rstonkus",
            "id": 2207082,
            "node_id": "MDQ6VXNlcjIyMDcwODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2207082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rstonkus",
            "html_url": "https://github.com/rstonkus",
            "followers_url": "https://api.github.com/users/rstonkus/followers",
            "following_url": "https://api.github.com/users/rstonkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/rstonkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rstonkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rstonkus/subscriptions",
            "organizations_url": "https://api.github.com/users/rstonkus/orgs",
            "repos_url": "https://api.github.com/users/rstonkus/repos",
            "events_url": "https://api.github.com/users/rstonkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rstonkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T12:56:13Z",
        "updated_at": "2017-06-07T12:56:13Z",
        "author_association": "NONE",
        "body": "And what scenario you mean by _\"remap the values\"_?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306888702",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306888702",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306888702,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg4ODcwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T18:45:04Z",
        "updated_at": "2017-06-07T18:45:04Z",
        "author_association": "OWNER",
        "body": "@rstonkus \"exactly!\" - the fact that is unclear highlights how unusual a situation that is. But basically, protobuf-net supports the hypothetical situation where you have an enum:\r\n\r\n    enum Foo {\r\n        A = 0, B = 17, C = 42\r\n    }\r\n\r\nAnd **for whatever reason** you want to use that in a model that is (perhaps at a later date) being exposed to protobuf but where the protobuf enum has values 0, 1, 4. In that scenario you can add [ProtoEnum(Value = 1)] against B and [ProtoEnum(Value = 4)] against C, and those values will be used in the serialization. This is a very unusual scenario, and is the only one where the pass-thru would appear to be unsafe. Having a [ProtoEnum] marker by itself is fine, as is using the same value in the ProtoEnum and the .NET enum.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/306890864",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-306890864",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 306890864,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg5MDg2NA==",
        "user": {
            "login": "rstonkus",
            "id": 2207082,
            "node_id": "MDQ6VXNlcjIyMDcwODI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2207082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rstonkus",
            "html_url": "https://github.com/rstonkus",
            "followers_url": "https://api.github.com/users/rstonkus/followers",
            "following_url": "https://api.github.com/users/rstonkus/following{/other_user}",
            "gists_url": "https://api.github.com/users/rstonkus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rstonkus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rstonkus/subscriptions",
            "organizations_url": "https://api.github.com/users/rstonkus/orgs",
            "repos_url": "https://api.github.com/users/rstonkus/repos",
            "events_url": "https://api.github.com/users/rstonkus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rstonkus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T18:53:10Z",
        "updated_at": "2017-06-07T18:53:10Z",
        "author_association": "NONE",
        "body": "I thought so, just don't have any reasonable scenario in my mind, where I could want to use that :)\r\nSo in other words, your suggestion is to use pass thru always, except when attribute values do not match actual enum values?\r\nStill, in that case it would be _decent idea_ to provide option to strictly control and match wire values, either for particular enum or for all of them. Just to enforce \"strict\" integration scenario between parties if that is deemed necessary.\r\nIn other words, that would result in similar solution, just different default."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307582191",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307582191",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307582191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4MjE5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T18:26:28Z",
        "updated_at": "2017-06-10T18:26:28Z",
        "author_association": "OWNER",
        "body": "I'll hack the csproj this evening and create a 3.5 target. Basically, the\nproblem is:\n\n- VS2017 can target 3.5\n- dotnet CLI can't\n- I want the project to be trivially buildable via dotnet CLI\n\nI suspect I can add a different config that includes 3.5 support for use\nwhen building in VS.\n\nOn 10 Jun 2017 6:53 p.m., \"Qingfeng Tan\" <notifications@github.com> wrote:\n\n> Hi,\n> I am trying to rebuild this library to target framework .net 3.5. However,\n> when I got to the right clicked project name Protobuf-net, properties,\n> application tab, the target framework field is grayed out and can not be\n> changed.\n>\n> Is there a way to set the target framework to .net 3.5?\n>\n> Thank you!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/262>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHNdOJ0MKAvSb5wJwWDprHzavBYvks5sCtgDgaJpZM4N2Laj>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307582552",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307582552",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307582552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4MjU1Mg==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T18:33:10Z",
        "updated_at": "2017-06-10T18:33:10Z",
        "author_association": "NONE",
        "body": "Hi, \r\nThanks for the response!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307583134",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307583134",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307583134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4MzEzNA==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T18:44:25Z",
        "updated_at": "2017-06-10T18:44:25Z",
        "author_association": "NONE",
        "body": "Hi,\r\nIs it in the csproj file, just need to change:\r\n    <TargetFrameworks>net40;netstandard1.3</TargetFrameworks>\r\nto \r\n    <TargetFrameworks>net3.5;netstandard1.3</TargetFrameworks>\r\n\r\nI can give it a try now.\r\n\r\nThank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307583626",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307583626",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307583626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4MzYyNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T18:52:28Z",
        "updated_at": "2017-06-10T18:52:28Z",
        "author_association": "OWNER",
        "body": "Yep; see this commit that I've made to the \"parser\" branch:\nhttps://github.com/mgravell/protobuf-net/commit/26f56e72dcd76d6389153f820fa6633477b3b242\n-\nanything similar should work. If you just want it for your local build,\njust change the targetframework to whatever you need\n\nOn 10 June 2017 at 19:44, Qingfeng Tan <notifications@github.com> wrote:\n\n> Hi,\n> Is it in the csproj file, just need to change:\n> net40;netstandard1.3\n> to\n> net3.5;netstandard1.3\n>\n> I can give it a try now.\n>\n> Thank you!\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307583134>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNkfkNI_d3zd143snsy5dD5-DGv9ks5sCuQJgaJpZM4N2Laj>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307584122",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307584122",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307584122,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4NDEyMg==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T19:02:41Z",
        "updated_at": "2017-06-10T19:02:41Z",
        "author_association": "NONE",
        "body": "It works! Thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307584314",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/78#issuecomment-307584314",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/78",
        "id": 307584314,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU4NDMxNA==",
        "user": {
            "login": "siegelpeter",
            "id": 3708070,
            "node_id": "MDQ6VXNlcjM3MDgwNzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3708070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siegelpeter",
            "html_url": "https://github.com/siegelpeter",
            "followers_url": "https://api.github.com/users/siegelpeter/followers",
            "following_url": "https://api.github.com/users/siegelpeter/following{/other_user}",
            "gists_url": "https://api.github.com/users/siegelpeter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siegelpeter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siegelpeter/subscriptions",
            "organizations_url": "https://api.github.com/users/siegelpeter/orgs",
            "repos_url": "https://api.github.com/users/siegelpeter/repos",
            "events_url": "https://api.github.com/users/siegelpeter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siegelpeter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-10T19:06:04Z",
        "updated_at": "2017-06-10T19:06:04Z",
        "author_association": "NONE",
        "body": "Hello,  I have the same Problem as this Issue is old, has anybody found a solution for this? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307654072",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307654072",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 307654072,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY1NDA3Mg==",
        "user": {
            "login": "Codeusa",
            "id": 1297077,
            "node_id": "MDQ6VXNlcjEyOTcwNzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1297077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Codeusa",
            "html_url": "https://github.com/Codeusa",
            "followers_url": "https://api.github.com/users/Codeusa/followers",
            "following_url": "https://api.github.com/users/Codeusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/Codeusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Codeusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Codeusa/subscriptions",
            "organizations_url": "https://api.github.com/users/Codeusa/orgs",
            "repos_url": "https://api.github.com/users/Codeusa/repos",
            "events_url": "https://api.github.com/users/Codeusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Codeusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-11T20:18:53Z",
        "updated_at": "2017-06-11T20:18:53Z",
        "author_association": "NONE",
        "body": "Is 2.3.0 likely to hit this week? [Sachiel](https://github.com/RainwayApp/sachiel-net) makes heavy use of this library and 3.0 support would be fantastic. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307660315",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307660315",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 307660315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY2MDMxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-11T22:10:49Z",
        "updated_at": "2017-06-11T22:10:49Z",
        "author_association": "OWNER",
        "body": "Which bits do you need? If you're just talking about the 2.3 language\ntools: then ... *voila*: https://protogen.marcgravell.com/ - it is done!\n\nIf you mean runtime support for some of the new pieces (Map<TKey,TValue>,\nTimestamp, Duration, etc); then yes, I expect that to be released in the\nnext few days. Just a few pieces to tidy up. Are there any specific pieces\nyou need?\n\nOn 11 June 2017 at 21:18, Andrew Sampson <notifications@github.com> wrote:\n\n> Is 2.3.0 likely to hit this week? Sachiel\n> <https://github.com/RainwayApp/sachiel-net> makes heavy use of this\n> library and 3.0 support would be fantastic.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307654072>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFWGMbPTolZThKATxgXH0BGyXKoPks5sDEutgaJpZM4H56El>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307662645",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/78#issuecomment-307662645",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/78",
        "id": 307662645,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY2MjY0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-11T22:57:46Z",
        "updated_at": "2017-06-11T22:57:46Z",
        "author_association": "OWNER",
        "body": "To do this, call `AppendBytes`; pass null as the existing data. For example:\r\n\r\n    var payloadBytes = ProtoBuf.ProtoReader.AppendBytes(null, reader);\r\n\r\n(from https://github.com/mgravell/protobuf-net/blob/parser/src/protogen.site/Views/Home/DecodeBytes.cshtml#L58)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307665496",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307665496",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 307665496,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY2NTQ5Ng==",
        "user": {
            "login": "Codeusa",
            "id": 1297077,
            "node_id": "MDQ6VXNlcjEyOTcwNzc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1297077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Codeusa",
            "html_url": "https://github.com/Codeusa",
            "followers_url": "https://api.github.com/users/Codeusa/followers",
            "following_url": "https://api.github.com/users/Codeusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/Codeusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Codeusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Codeusa/subscriptions",
            "organizations_url": "https://api.github.com/users/Codeusa/orgs",
            "repos_url": "https://api.github.com/users/Codeusa/repos",
            "events_url": "https://api.github.com/users/Codeusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Codeusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-11T23:57:56Z",
        "updated_at": "2017-06-11T23:57:56Z",
        "author_association": "NONE",
        "body": "Mostly I'm just referring to the ability to serialize/deseralize proto3 compliant buffers along with generating a .proto schema from decorated models.  I suppose this mostly has to do with run time? \r\n\r\nLooking forward to it!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307703116",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307703116",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/150",
        "id": 307703116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzcwMzExNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T06:41:08Z",
        "updated_at": "2017-06-12T06:41:08Z",
        "author_association": "OWNER",
        "body": "oddly, no not really. You see, there aren't any binary serialization format\nchanges between proto2 and proto3, so you can already do everything. The\nDSL changes just make it more elegant in some cases if you're using .proto\nschemas. Which has never been a hard requirement in protobuf-net. The\nruntime in proto3 for protobuf-net aren't huge - the biggest things are the\naddition of Duration / Timestamp support and cleaner Map handling, but:\nthey're done. I haven't started the attribs=>proto3 work; proto3 is\nactually a subset of proto2, not a superset as you might imagine. The\nchallenge for me will be to see what I can live without :)\n\nOn 12 Jun 2017 12:57 a.m., \"Andrew Sampson\" <notifications@github.com>\nwrote:\n\nMostly I'm just referring to the ability to serialize/deseralize proto3\ncompliant buffers along with generating a .proto schema from decorated\nmodels. I suppose this mostly has to do with run time?\n\nLooking forward to it!\n\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/150#issuecomment-307665496>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsMozgDAKRHeAb6CtBUe_ek5JsQFrks5sDH8FgaJpZM4H56El>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307888576",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307888576",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307888576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzg4ODU3Ng==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T19:04:32Z",
        "updated_at": "2017-06-12T19:04:32Z",
        "author_association": "NONE",
        "body": "So after I created the dll from the vs2017 build, with target framework of .Net3.5. Ireferenced it in a Windows Mobile 6.5 application. But unluckily, that WM6.5 application had errors after I have reference the new dll. The first error is:\r\nThe type 'System.Xml.Serialization.IXmlSerializable' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\t\r\n\r\nAnother question I have is: Is it possible to convert this package (protobuf-net) to a vs2008 solution and build it with target frame .Net3.5 in there?\r\n\r\nThank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307915359",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307915359",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307915359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzkxNTM1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T20:31:59Z",
        "updated_at": "2017-06-12T20:31:59Z",
        "author_association": "OWNER",
        "body": "On the first: did you try adding a reference to System.Xml? This sounds\nlike the nuget pack problem that should be fixed soon - basically, the\nnuget pack tooling fails to properly record framework dependencies, so\ndownstream references aren't added when needed. You should be able to add\nmanually while that gets fixed.\n\nOn VS2008:\n\nis it possible: absolutely! but: not by me. I don't have VS2008 and have no\nintentions of installing VS2008 or supporting VS2008. However, it shouldn't\nbe necessary. I'd rather understand what the thing is that makes you want\nVS2008 to build this.\n\nOn 12 June 2017 at 20:04, Qingfeng Tan <notifications@github.com> wrote:\n\n> So after I created the dll from the vs2017 build, with target framework of\n> .Net3.5. Ireferenced it in a Windows Mobile 6.5 application. But unluckily,\n> that WM6.5 application had errors after I have reference the new dll. The\n> first error is:\n> The type 'System.Xml.Serialization.IXmlSerializable' is defined in an\n> assembly that is not referenced. You must add a reference to assembly\n> 'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=\n> b77a5c561934e089'.\n>\n> Another question I have is: Is it possible to convert this package\n> (protobuf-net) to a vs2008 solution and build it with target frame .Net3.5\n> in there?\n>\n> Thank you!\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307888576>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDZY0KnWKcShfo8Ho3_TOCGyfu9Zks5sDYvCgaJpZM4N2Laj>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307923440",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307923440",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307923440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzkyMzQ0MA==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T20:52:26Z",
        "updated_at": "2017-06-12T20:52:26Z",
        "author_association": "NONE",
        "body": "The protobuf-net dll was used for an application developed in vs2008. So has the error happened in. Yes, System.xml is in reference, but the version is 3.5.0.0 for this application. However in the protobuf-net solution, it reference to a version of 2.0.0.0 for the System.Xml it is using.\r\n\r\nSince vs2008 is used for my application, so that's why I was trying to build the protobuf-net.dll in vs2008. thought this could but actually may not."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307927201",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307927201",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307927201,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzkyNzIwMQ==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T20:59:01Z",
        "updated_at": "2017-06-12T20:59:01Z",
        "author_association": "NONE",
        "body": "When I tried to remove the System.Xml version 2.0.0.0 referenced in the protobuf-net solution, it gave an error: \r\n![image](https://user-images.githubusercontent.com/17502718/27054839-699df83c-4f90-11e7-9da7-0ef933de7826.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/307947158",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307947158",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 307947158,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzk0NzE1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-12T22:03:21Z",
        "updated_at": "2017-06-12T22:03:21Z",
        "author_association": "OWNER",
        "body": "I've checked the csproj, and xmlserializer isn't in there explicitly,\nexcept for the .net core builds; however, what you're seeing sounds like\nsomething that an assembly binding redirect should be able to solve. Again,\nthese are usually added automatically by nuget, but for the issue (that is\nbeing fixed, but it is a MS thing) with framework deps in dotnet cli.\n\nSee\nhttps://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/bindingredirect-element\n- you should be able to copy the required values directly out of the error\nmessage.\n\nOn 12 June 2017 at 21:59, Qingfeng Tan <notifications@github.com> wrote:\n\n> When I tried to remove the System.Xml version 2.0.0.0 referenced in the\n> protobuf-net solution, it gave an error:\n> [image: image]\n> <https://user-images.githubusercontent.com/17502718/27054839-699df83c-4f90-11e7-9da7-0ef933de7826.png>\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307927201>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD0K3mX_VhyHcgs27r0fYte1bN2Aks5sDaaWgaJpZM4N2Laj>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308031050",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308031050",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308031050,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODAzMTA1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T07:27:16Z",
        "updated_at": "2017-06-13T07:27:16Z",
        "author_association": "OWNER",
        "body": "btw, if you want the full gory details:\nhttps://github.com/NuGet/Home/issues/4853\n\nOn 12 Jun 2017 11:02 p.m., \"Marc Gravell\" <marc.gravell@gmail.com> wrote:\n\nI've checked the csproj, and xmlserializer isn't in there explicitly,\nexcept for the .net core builds; however, what you're seeing sounds like\nsomething that an assembly binding redirect should be able to solve. Again,\nthese are usually added automatically by nuget, but for the issue (that is\nbeing fixed, but it is a MS thing) with framework deps in dotnet cli.\n\nSee https://docs.microsoft.com/en-us/dotnet/framework/\nconfigure-apps/file-schema/runtime/bindingredirect-element - you should be\nable to copy the required values directly out of the error message.\n\nOn 12 June 2017 at 21:59, Qingfeng Tan <notifications@github.com> wrote:\n\n> When I tried to remove the System.Xml version 2.0.0.0 referenced in the\n> protobuf-net solution, it gave an error:\n> [image: image]\n> <https://user-images.githubusercontent.com/17502718/27054839-699df83c-4f90-11e7-9da7-0ef933de7826.png>\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/262#issuecomment-307927201>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD0K3mX_VhyHcgs27r0fYte1bN2Aks5sDaaWgaJpZM4N2Laj>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308117490",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308117490",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308117490,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODExNzQ5MA==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:34:22Z",
        "updated_at": "2017-06-13T13:39:59Z",
        "author_association": "NONE",
        "body": "So I have tried adding a line:\r\n\r\n\t<PackageReference Include=\"System.Xml\" Version=\"3.5.0.0\" />\r\n\r\ninto the csproj xml, however, then vs2017 shows build errors:\r\nUnable to resolve 'System.Xml (>= 3.5.0)' for '.NETFramework,Version=v3.5'.\t\t\t\t\r\nUnable to resolve 'System.Xml (>= 3.5.0)' for '.NETFramework,Version=v4.5.2'.\t\t\t\t\r\nUnexpected dependency 'System.Xml' with no version number.\t\r\n\r\nAny insights on those?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308119550",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308119550",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308119550,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODExOTU1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:41:41Z",
        "updated_at": "2017-06-13T13:44:26Z",
        "author_association": "OWNER",
        "body": "Yeah, this isn't a package reference on regular .NET; it is a framework reference. Try:\r\n\r\n    <Reference Include=System.Xml\" />\r\n\r\nIt *is*, however, a package reference in .NET core. Build tools are fun :/ I have fun `Condition` markers to do things like this, for example in protobuf-net itself:\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(ImportLibs)|$(FeatureServiceModel)' == 'net|true'\">\r\n    <Reference Include=\"System.ServiceModel\" />\r\n    <Reference Include=\"System.Configuration\" />\r\n    <Reference Include=\"System.Runtime.Serialization\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\"'$(ImportLibs)' == 'core'\">\r\n    <!-- could make this more granular to respect the options, but no need yet -->\r\n    <PackageReference Include=\"System.Reflection.Emit\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"System.Reflection.Emit.ILGeneration\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"System.Reflection.Emit.Lightweight\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"System.Reflection.TypeExtensions\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"System.Xml.XmlSerializer\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"System.Runtime.Serialization.Primitives\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\nHowever, I'm slightly confused because IIRC `System.Xml` is actually *included by default*. Sheesh.\r\n\r\nThe fact is the build tools are a bit of a mess right now (for .NET / .NET core generally, not this library specifically). It is causing me pain on a number of projects. Fixes are in the pipelines, but are outside of my control."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308122184",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308122184",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308122184,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODEyMjE4NA==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:50:45Z",
        "updated_at": "2017-06-13T13:50:45Z",
        "author_association": "NONE",
        "body": "Ok, I have changed it to:\r\n\t<Reference Include=\"System.Xml\" Version=\"3.5.0.0\" />\r\nHowever, under the Dependencies, Assemblies, The System.Xml is still 2.0.0.0. I will need 3.5. It's strange because the System.Xml.Linq is 3.5.\r\n\r\nBut now the build error is gone."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308123131",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308123131",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308123131,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODEyMzEzMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:53:57Z",
        "updated_at": "2017-06-13T13:54:53Z",
        "author_association": "OWNER",
        "body": "If you're targetting .NET 3.5, then it *is* System.Xml 2.0; .NET 3.5 are *incremental additions* to .NET 2.0 via additional assemblies; the base assembles do not change (except for bugfixes etc, but they didn't increase the major version).\r\n\r\nBecause `System.Xml.Linq` is one of those additions in .NET 3.5, *it* gets the 3.5 versioning; however `System.Xml`: does not - it stays 2.0\r\n\r\nIn .NET 4.0, they all become 4.0."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308123801",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308123801",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308123801,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODEyMzgwMQ==",
        "user": {
            "login": "Qtan75",
            "id": 17502718,
            "node_id": "MDQ6VXNlcjE3NTAyNzE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17502718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qtan75",
            "html_url": "https://github.com/Qtan75",
            "followers_url": "https://api.github.com/users/Qtan75/followers",
            "following_url": "https://api.github.com/users/Qtan75/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qtan75/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qtan75/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qtan75/subscriptions",
            "organizations_url": "https://api.github.com/users/Qtan75/orgs",
            "repos_url": "https://api.github.com/users/Qtan75/repos",
            "events_url": "https://api.github.com/users/Qtan75/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qtan75/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:55:56Z",
        "updated_at": "2017-06-13T13:55:56Z",
        "author_association": "NONE",
        "body": "got it. However, in the other project that uses this protobuf-net.dll, it has a System.Xml reference version of 3.5. So we were wondering if that could help.\r\n\r\nThanks for the help!\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308124343",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-308124343",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 308124343,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODEyNDM0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-13T13:57:32Z",
        "updated_at": "2017-06-13T13:57:32Z",
        "author_association": "OWNER",
        "body": "AFAIK (and I'm happy to be corrected): System.Xml 3.5 *does not exist*.. at least, not in regular .NET. If it exists in some Mono / Unity / whatever branch, then fine."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308521643",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-308521643",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 308521643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUyMTY0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-14T18:39:53Z",
        "updated_at": "2017-06-14T18:40:19Z",
        "author_association": "OWNER",
        "body": "What is \"it\" in this context? What specifically are you looking for? Are you talking about the DSL parsing tools (protogen)? And if so, are you talking about the old version, or are you talking about the version that I'm working on for the 2.3.0 release? If you *aren't* talking about the DSL parsing tools... what *do* you mean?\r\n\r\nPlease be specific so I can address your question."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308522661",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/264#issuecomment-308522661",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/264",
        "id": 308522661,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUyMjY2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-14T18:43:34Z",
        "updated_at": "2017-06-14T18:43:34Z",
        "author_association": "OWNER",
        "body": "Yes, it probably should; will target for 2.3.0"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308679406",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/224#issuecomment-308679406",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/224",
        "id": 308679406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODY3OTQwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-15T09:28:53Z",
        "updated_at": "2017-06-15T09:28:53Z",
        "author_association": "OWNER",
        "body": "protogen has been completely rewritten for 2.3.0; this will be working in the 2.3.0 release.\r\n\r\nNote, however, that it is now **strongly** recommended (by Google) to always have a zero value as the first item in an enum. This is a requirement for proto3 (you are using proto2 by default, since you don't have `syntax = \"proto3\";`)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/308679665",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/260#issuecomment-308679665",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/260",
        "id": 308679665,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwODY3OTY2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-15T09:29:51Z",
        "updated_at": "2017-06-15T09:30:38Z",
        "author_association": "OWNER",
        "body": "This will behave in the desired way in 2.3.0; tests (passing) have been added, etc; https://github.com/mgravell/protobuf-net/commit/b248af6487c9baf89d199868aa72695bf60ea4fa\r\n\r\nThe strict mode is enabled by **explicitly** setting `EnumPassThru` to `false`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309231599",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/261#issuecomment-309231599",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/261",
        "id": 309231599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIzMTU5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-17T18:21:33Z",
        "updated_at": "2017-06-17T18:21:33Z",
        "author_association": "OWNER",
        "body": "This looks great, thanks; I expect the next deploy will be 2.3.0 in the next week; this will be included. Much appreciated"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309231716",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/162#issuecomment-309231716",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/162",
        "id": 309231716,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIzMTcxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-17T18:23:34Z",
        "updated_at": "2017-06-17T18:23:34Z",
        "author_association": "OWNER",
        "body": "Very kindly fixed via PR. Will be included next deploy."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309231897",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309231897",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309231897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIzMTg5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-17T18:27:36Z",
        "updated_at": "2017-06-17T18:27:36Z",
        "author_association": "OWNER",
        "body": "I'm happy to investigate, but I really need it to be clearer what you are after. Please could you explain more, otherwise I'll have to close it as unclear."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309231932",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/262#issuecomment-309231932",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/262",
        "id": 309231932,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIzMTkzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-17T18:28:23Z",
        "updated_at": "2017-06-17T18:28:23Z",
        "author_association": "OWNER",
        "body": "Closing issue; 2.3.0 will include 2.0 and 3.5 builds via the \"VS\" configuration (that only works in VS, hence the name)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309232157",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/217#issuecomment-309232157",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/217",
        "id": 309232157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIzMjE1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-17T18:32:28Z",
        "updated_at": "2017-06-17T18:32:28Z",
        "author_association": "OWNER",
        "body": "if the main issue here is UWP, that's on the roadmap as a future item"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309301856",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/224#issuecomment-309301856",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/224",
        "id": 309301856,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMwMTg1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-18T20:46:45Z",
        "updated_at": "2017-06-18T20:48:18Z",
        "author_association": "OWNER",
        "body": "Fixed in 2.3.0; example output:\r\n\r\n```\r\n[global::ProtoBuf.ProtoContract()]\r\npublic partial class EnumFirstIsNonZero\r\n{\r\n    [global::ProtoBuf.ProtoMember(1, Name = @\"optional\")]\r\n    [global::System.ComponentModel.DefaultValue(Foo.A)]\r\n    public Foo Optional\r\n    {\r\n        get { return __pbn__Optional ?? Foo.A; }\r\n        set { __pbn__Optional = value; }\r\n    }\r\n    public bool ShouldSerializeOptional() => __pbn__Optional != null;\r\n    public void ResetOptional() => __pbn__Optional = null;\r\n    private Foo? __pbn__Optional;\r\n\r\n    [global::ProtoBuf.ProtoMember(2, Name = @\"required\", IsRequired = true)]\r\n    public Foo Required { get; set; } = Foo.A;\r\n\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309302388",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/264#issuecomment-309302388",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/264",
        "id": 309302388,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMwMjM4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-18T20:56:04Z",
        "updated_at": "2017-06-18T20:56:04Z",
        "author_association": "OWNER",
        "body": "It surprises me that you've hit this, as this *should* only impact the runtime-only (reflection etc) implementation. Are you running on UWP or similar, by any chance? Anyway, fixed for 2.3.0"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309309342",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309309342",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309309342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMwOTM0Mg==",
        "user": {
            "login": "xxpniu",
            "id": 10766082,
            "node_id": "MDQ6VXNlcjEwNzY2MDgy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10766082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxpniu",
            "html_url": "https://github.com/xxpniu",
            "followers_url": "https://api.github.com/users/xxpniu/followers",
            "following_url": "https://api.github.com/users/xxpniu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxpniu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxpniu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxpniu/subscriptions",
            "organizations_url": "https://api.github.com/users/xxpniu/orgs",
            "repos_url": "https://api.github.com/users/xxpniu/repos",
            "events_url": "https://api.github.com/users/xxpniu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxpniu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-18T23:16:03Z",
        "updated_at": "2017-06-18T23:16:03Z",
        "author_association": "NONE",
        "body": "I am sorry for replay so late.\r\nYes, \"it\" is the  DLS (protogen). \r\nI will try the version,thanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309311711",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309311711",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309311711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMxMTcxMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T00:03:11Z",
        "updated_at": "2017-06-19T00:03:11Z",
        "author_association": "OWNER",
        "body": "there is a brand new \"protogen\" tool in the \"parser\" branch, scheduled for\nrelease with 2.3.0\n\nOn 19 Jun 2017 12:16 a.m., \"\u8c22\u96c4\u5e73\" <notifications@github.com> wrote:\n\n> I am sorry for replay so late.\n> Yes, \"it\" is the DLS (protogen).\n> I will try the version,thanks.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309309342>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNIt4oLt-S8zRffyI7J-3fciLsg6ks5sFa-zgaJpZM4N5VNH>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309311785",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309311785",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309311785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMxMTc4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T00:04:21Z",
        "updated_at": "2017-06-19T00:04:21Z",
        "author_association": "OWNER",
        "body": "If what you are saying is \"comments are not carried over from the .proto into the generated code\": that indeed has not been looked at yet. Please can you clarify whether you mean \"comment line\" vs \"command line\"?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309325066",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309325066",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309325066,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMyNTA2Ng==",
        "user": {
            "login": "xxpniu",
            "id": 10766082,
            "node_id": "MDQ6VXNlcjEwNzY2MDgy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10766082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xxpniu",
            "html_url": "https://github.com/xxpniu",
            "followers_url": "https://api.github.com/users/xxpniu/followers",
            "following_url": "https://api.github.com/users/xxpniu/following{/other_user}",
            "gists_url": "https://api.github.com/users/xxpniu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xxpniu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xxpniu/subscriptions",
            "organizations_url": "https://api.github.com/users/xxpniu/orgs",
            "repos_url": "https://api.github.com/users/xxpniu/repos",
            "events_url": "https://api.github.com/users/xxpniu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xxpniu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T02:38:23Z",
        "updated_at": "2017-06-19T08:16:32Z",
        "author_association": "NONE",
        "body": "source code is:\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage Utility.proto;\r\n\r\n//\u5efa\u7b51\u529f\u80fd\u7c7b\u578b\r\nenum BuildingFunType\r\n{\r\n   NONE = 0;//\u6ca1\u6709\u529f\u80fd\u7c7b\u578b \r\n   Produce = 1 ;//\u751f\u4ea7\r\n   Function = 2 ;//\u529f\u80fd \r\n}\r\n```\r\n\r\nand it export this file:\r\n\r\n```\r\n#pragma warning disable CS1591, CS0612, CS3021\r\n\r\nnamespace Utility.proto\r\n{\r\n\r\n    [global::ProtoBuf.ProtoContract()]\r\n    public enum BuildingFunType\r\n    {\r\n        [global::ProtoBuf.ProtoEnum(Name = @\"NONE\")]\r\n        None = 0,\r\n        [global::ProtoBuf.ProtoEnum()]\r\n        Produce = 1,\r\n        [global::ProtoBuf.ProtoEnum()]\r\n        Function = 2,\r\n    }\r\n\r\n}\r\n\r\n#pragma warning restore CS1591, CS0612, CS3021\r\n```\r\n\r\ni want like this:\r\n\r\n```\r\n#pragma warning disable CS1591, CS0612, CS3021\r\n\r\nnamespace Utility.proto\r\n{\r\n\r\n    /// <summary>\r\n    /// \u5efa\u7b51\u529f\u80fd\u7c7b\u578b\r\n    /// </summary>\r\n    [global::ProtoBuf.ProtoContract()]\r\n    public enum BuildingFunType\r\n    {\r\n        /// <summary>\r\n        /// \u6ca1\u6709\u529f\u80fd\u7c7b\u578b\r\n        /// </summary>\r\n        [global::ProtoBuf.ProtoEnum(Name = @\"NONE\")]\r\n        None = 0,\r\n        /// <summary>\r\n        /// \u751f\u4ea7\r\n        /// </summary>\r\n        [global::ProtoBuf.ProtoEnum()]\r\n        Produce = 1,\r\n        /// <summary>\r\n        /// \u529f\u80fd\r\n        /// </summary>\r\n        [global::ProtoBuf.ProtoEnum()]\r\n        Function = 2,\r\n    }\r\n\r\n}\r\n\r\n#pragma warning restore CS1591, CS0612, CS3021\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309369780",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309369780",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309369780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTM2OTc4MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T08:13:18Z",
        "updated_at": "2017-06-19T08:13:18Z",
        "author_association": "OWNER",
        "body": "Got it; yes, totally agree we should get that, and I know (vaguely) what we need to do to get it - it just isn't done yet. I'm going to make this part of the 2.3.1 milestone; 2.3.0 is pretty much wrapped - I'm just doing regression / test suite updates (see PR #265); have updated the *branch* release notes (will hit master when I've finished the regression test): https://github.com/mgravell/protobuf-net/blob/parser/docs/releasenotes.md"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309370121",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/263#issuecomment-309370121",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/263",
        "id": 309370121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTM3MDEyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T08:14:54Z",
        "updated_at": "2017-06-19T09:18:23Z",
        "author_association": "OWNER",
        "body": "note: what I'll *probably* do is : when I've finished everything I want for 2.3.0, I'll take a look at this - if it falls out easily, it'll move into 2.3.0 - otherwise I'll ship 2.3.0 and look at it as a separate piece of work\r\n\r\nnote to self: also implement `protogen --include_source_info`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309488297",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/264#issuecomment-309488297",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/264",
        "id": 309488297,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTQ4ODI5Nw==",
        "user": {
            "login": "zbynek001",
            "id": 6747896,
            "node_id": "MDQ6VXNlcjY3NDc4OTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6747896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zbynek001",
            "html_url": "https://github.com/zbynek001",
            "followers_url": "https://api.github.com/users/zbynek001/followers",
            "following_url": "https://api.github.com/users/zbynek001/following{/other_user}",
            "gists_url": "https://api.github.com/users/zbynek001/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zbynek001/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zbynek001/subscriptions",
            "organizations_url": "https://api.github.com/users/zbynek001/orgs",
            "repos_url": "https://api.github.com/users/zbynek001/repos",
            "events_url": "https://api.github.com/users/zbynek001/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zbynek001/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-19T16:09:32Z",
        "updated_at": "2017-06-19T16:09:32Z",
        "author_association": "NONE",
        "body": "The application is running on full .net 4.6.2., not sure why it went there. \r\nAnd it didn't happen every time, only on some rare occasions"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309680095",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/268#issuecomment-309680095",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/268",
        "id": 309680095,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY4MDA5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T08:19:39Z",
        "updated_at": "2017-06-20T08:19:39Z",
        "author_association": "OWNER",
        "body": "d'oh! you're absolutely right; fix applied to code, will be in 2.3.0 (which is in package prep)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309683749",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/267#issuecomment-309683749",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/267",
        "id": 309683749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY4Mzc0OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T08:34:16Z",
        "updated_at": "2017-06-20T08:34:16Z",
        "author_association": "OWNER",
        "body": "K; I can switch to `.FullName` which solves a lot of this (it expands generics), but do you have a minimal repro that I can use to validate? My attempt at a repro shows the concrete type name, not the interface; would really like to validate"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309684843",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/225#issuecomment-309684843",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/225",
        "id": 309684843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY4NDg0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T08:38:30Z",
        "updated_at": "2017-06-20T08:38:30Z",
        "author_association": "OWNER",
        "body": "I'm *assuming* my guess was right; closing due to lack of feedback. Feel free to reopen if I'm wrong."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309688517",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/211#issuecomment-309688517",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/211",
        "id": 309688517,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY4ODUxNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T08:52:32Z",
        "updated_at": "2017-06-20T08:52:32Z",
        "author_association": "OWNER",
        "body": "This appears to be fixed - I think via a contributed PR at some point. Closing."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309688990",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/219#issuecomment-309688990",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/219",
        "id": 309688990,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY4ODk5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T08:54:30Z",
        "updated_at": "2017-06-20T08:54:30Z",
        "author_association": "OWNER",
        "body": "This is an interesting one; I need to think about how this should work. The non-trivial part of the issue is that enums in protobuf are only defined for 32-bit values. However, since 2.3.0 adds much improved enum pass-thru support (consistent with proto3 runtime behaviour), it might be that we can simply treat `long` enums as direct pass-thru. Needs consideration. Adding to 2.3.1"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309695445",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/221#issuecomment-309695445",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/221",
        "id": 309695445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY5NTQ0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T09:19:21Z",
        "updated_at": "2017-06-20T09:20:05Z",
        "author_association": "OWNER",
        "body": "This isn't a scenario that the library targets or that I intend the library to target; my advice here would be: always initialize your lists. For example\r\n\r\n    [ProtoMember(1)]\r\n    public List<Foo> Items {get; } = new List<Foo>();\r\n\r\nprotobuf-net is fine with things like that. If you want lazier initialization, then you can do that with more nuanced getters, for example:\r\n\r\n    private List<Foo> _items;\r\n    [ProtoMember(1)]\r\n    public List<Foo> Items => items ?? (_items = new List<Foo>());\r\n\r\nwhich again: protobuf-net is fine with.\r\n\r\nWhen the 3.0.0 codegen code changes are a thing, it might be that this is something we can target *there*, but: ultimately I'm not sure this is protobuf-net's thing to do.\r\n\r\nNote that root-level lists *are* initialized, but that's a very different scenario."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309696635",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/214#issuecomment-309696635",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/214",
        "id": 309696635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTY5NjYzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T09:24:12Z",
        "updated_at": "2017-06-20T09:26:33Z",
        "author_association": "OWNER",
        "body": "Re \"really big integers\": that's actually part of the protobuf spec (https://developers.google.com/protocol-buffers/docs/proto):\r\n\r\n> The smallest tag number you can specify is 1, and the largest is 229 - 1, or 536,870,911.\r\n\r\n(unless the obsolete and undocumented \"message-set\" encoding is used, but protobuf-net doesn't support message-set encoding - it isn't even part of the formal specification, although I've reverse-engineered it and understand what it needs to look like)\r\n\r\nHowever, I'm happy to check to see that appropriate and useful errors are being raised.  The exception thing (base class) - yup, sounds like a bug. Will target both in 2.31"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/309836096",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/271#issuecomment-309836096",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/271",
        "id": 309836096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTgzNjA5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-20T17:49:21Z",
        "updated_at": "2017-06-20T17:49:21Z",
        "author_association": "OWNER",
        "body": "Do you have an illustration of what your callback signature looks like? And you mention silver light: I'll be honest : it is increasingly hard to support silverlight, and many of the tools I need to build and test for that aren't tools that I have installed usually. If the fix requires a build (rather than a fix of your signature): it is going to be gnarly."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310045016",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/267#issuecomment-310045016",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/267",
        "id": 310045016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA0NTAxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T11:05:40Z",
        "updated_at": "2017-06-21T11:05:40Z",
        "author_association": "OWNER",
        "body": "fixed in 2.3.0"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310045045",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/268#issuecomment-310045045",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/268",
        "id": 310045045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA0NTA0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T11:05:47Z",
        "updated_at": "2017-06-21T11:05:47Z",
        "author_association": "OWNER",
        "body": "fixed in 2.3.0"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310058587",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/165#issuecomment-310058587",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/165",
        "id": 310058587,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA1ODU4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T12:07:23Z",
        "updated_at": "2017-06-21T12:07:23Z",
        "author_association": "OWNER",
        "body": "it looks like this already got fixed, but merging anyway to preserve credit! it is appreciated"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310058907",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/148#issuecomment-310058907",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/148",
        "id": 310058907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA1ODkwNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T12:08:56Z",
        "updated_at": "2017-06-21T12:08:56Z",
        "author_association": "OWNER",
        "body": "closing as this is not going to be compatible with the massively refactored tooling; if there are good ways of adding this to the new tooling, I'm open to options, but it would need to not break simple \"dotnet build\" usage"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310059183",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/131#issuecomment-310059183",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/131",
        "id": 310059183,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA1OTE4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T12:10:16Z",
        "updated_at": "2017-06-21T12:10:16Z",
        "author_association": "OWNER",
        "body": "thanks; wow, it took me a while to close that down, sorry; I fail"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310059462",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/97#issuecomment-310059462",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/97",
        "id": 310059462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA1OTQ2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T12:11:33Z",
        "updated_at": "2017-06-21T12:11:33Z",
        "author_association": "OWNER",
        "body": "closing this down because I don't think the WCF options are going to be supportable going forwards; long term, I think the direction this should take is: gRPC. We're moving in that direction, but I don't see benefit in trying to hack the existing tools any further."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310059804",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/23#issuecomment-310059804",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/23",
        "id": 310059804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDA1OTgwNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-21T12:13:29Z",
        "updated_at": "2017-06-21T12:13:29Z",
        "author_association": "OWNER",
        "body": "the fix is noted and appreciated, but no longer applies now that 2.3.0 has gutted the protogen tools; the PR is unmergeable, so I can't merge just to say thanks - but: thanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310547233",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/214#issuecomment-310547233",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/214",
        "id": 310547233,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDU0NzIzMw==",
        "user": {
            "login": "TieSKey",
            "id": 7355381,
            "node_id": "MDQ6VXNlcjczNTUzODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7355381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TieSKey",
            "html_url": "https://github.com/TieSKey",
            "followers_url": "https://api.github.com/users/TieSKey/followers",
            "following_url": "https://api.github.com/users/TieSKey/following{/other_user}",
            "gists_url": "https://api.github.com/users/TieSKey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TieSKey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TieSKey/subscriptions",
            "organizations_url": "https://api.github.com/users/TieSKey/orgs",
            "repos_url": "https://api.github.com/users/TieSKey/repos",
            "events_url": "https://api.github.com/users/TieSKey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TieSKey/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-23T01:39:56Z",
        "updated_at": "2017-06-23T01:40:27Z",
        "author_association": "NONE",
        "body": "Oh gtk, I never actually read the spec. Since AddSubType() accepted it I though it was a bug.\r\nMaybe it would make sense to throw an exception from AddSubType() when the id exceeds the spec, since the parameter type has a bigger range."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310613541",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/214#issuecomment-310613541",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/214",
        "id": 310613541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDYxMzU0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-23T09:05:53Z",
        "updated_at": "2017-06-23T09:05:53Z",
        "author_association": "OWNER",
        "body": "you're absolutely right, of course; either it needs to work, or it needs to fail as early as possible with a meaningful message; I've shipped 2.3.0, so I'm starting the 2.3.1 work currently (this issue is tagged for 2.3.1)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310899785",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/273#issuecomment-310899785",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/273",
        "id": 310899785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg5OTc4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-25T12:25:34Z",
        "updated_at": "2017-06-25T12:25:34Z",
        "author_association": "OWNER",
        "body": "I would say that is the *correct* deserialization - protobuf (the google\nspec) is designed such that data is appended, not replaced.\n\nThe good news is that there are two ways to fix this:\n\n1) don't run the initializer during deserialization - you do this by adding\nSkipConstructor = true to the [ProtoContract]\n\n2) tell protobuf-net to not interpret the list data as append; add\nOverwriteList = true to the [ProtoMember]\n\nEither of these should achieve what you want\n\nOn 25 Jun 2017 12:22 p.m., \"vmas\" <notifications@github.com> wrote:\n\n> Sample (protobuf-net 2.2.1):\n>\n> [ProtoContract]\n> class A\n> {\n>     public A() { Values = new int[5]; }\n>\n>     [ProtoMember(1)]\n>     public int[] Values { get; set; }\n> }\n>\n> static void Main(string[] args)\n> {\n>      A a, b;\n>      a = new A();\n>      a.Values[0] = 5;\n>\n>      using (var ms = new MemoryStream())\n>      {\n>          Serializer.Serialize(ms, a);\n>          ms.Seek(0, SeekOrigin.Begin);\n>          b = Serializer.Deserialize<A>(ms);\n>      }\n>      Console.WriteLine(\"Sizes: {0}, {1}\", a.Values.Length, b.Values.Length);\n> }\n>\n> After deserialization *b.Values* contains 10 elements instead 5.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/273>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPKT1O_uQ3AdYAJzKyFWjzUFrIDeks5sHkLbgaJpZM4OElLh>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310900432",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/273#issuecomment-310900432",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/273",
        "id": 310900432,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkwMDQzMg==",
        "user": {
            "login": "vmas",
            "id": 2703561,
            "node_id": "MDQ6VXNlcjI3MDM1NjE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2703561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmas",
            "html_url": "https://github.com/vmas",
            "followers_url": "https://api.github.com/users/vmas/followers",
            "following_url": "https://api.github.com/users/vmas/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmas/subscriptions",
            "organizations_url": "https://api.github.com/users/vmas/orgs",
            "repos_url": "https://api.github.com/users/vmas/repos",
            "events_url": "https://api.github.com/users/vmas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-25T12:40:47Z",
        "updated_at": "2017-06-25T12:40:47Z",
        "author_association": "NONE",
        "body": "OK. Thank you for your help."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310916737",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310916737",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310916737,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkxNjczNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-25T17:40:34Z",
        "updated_at": "2017-06-25T17:40:34Z",
        "author_association": "OWNER",
        "body": "K, this is a complex one.\r\n\r\nCurrently, the support for .net native and UWP / AOT etc is limited. As back-story, historically there is a precompilation tool for protobuf-net that allows limited cross-platform pre-compilation of the IL pieces. This *kinda worked*, but was awkward, ugly, really hard to support, and just generally messy. Additionally, this is going to be a nightmare as we add \"async\" (on the roadmap).\r\n\r\nI don't think that is the way to go in the future, although the google code download still has the bits for this.\r\n\r\nI have repeatedly been talking with MS and other folks re better ways of doing code-gen for this and other scenarios, for two different needs - the code-first approach and the contract-first approach. There are a range of plans to improve what is available here in the mid-range future. Basically the plan is to split the non-IL pieces (the reader/writer, etc) into \"protobuf-net.Core\" or similar. Projects would target the .Core project if they have generated C#, or both .Core and protobuf-net if they want to use the runtime emitter. The idea being that AOT scenarios would fall into the first camp.\r\n\r\nAt the moment, though, that mostly doesn't exist.\r\n\r\nIn the r668 world there is a core-only project that uses reflection. We could probably resurrect that short term, but the performance won't be anything to shout about.\r\n\r\nSo: are you looking for something *today*? Or is this \"in the next n months\" stuff?\r\n\r\nI'm working on it; it exists on the roadmap; but it won't be there this week."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310916741",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310916741",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310916741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkxNjc0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-25T17:40:38Z",
        "updated_at": "2017-06-25T17:40:58Z",
        "author_association": "OWNER",
        "body": "(Opps, accidentally closed - wrong button)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310970894",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310970894",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310970894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk3MDg5NA==",
        "user": {
            "login": "mjeanrichard",
            "id": 778448,
            "node_id": "MDQ6VXNlcjc3ODQ0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/778448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjeanrichard",
            "html_url": "https://github.com/mjeanrichard",
            "followers_url": "https://api.github.com/users/mjeanrichard/followers",
            "following_url": "https://api.github.com/users/mjeanrichard/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjeanrichard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjeanrichard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjeanrichard/subscriptions",
            "organizations_url": "https://api.github.com/users/mjeanrichard/orgs",
            "repos_url": "https://api.github.com/users/mjeanrichard/repos",
            "events_url": "https://api.github.com/users/mjeanrichard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjeanrichard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T06:04:58Z",
        "updated_at": "2017-06-26T06:04:58Z",
        "author_association": "NONE",
        "body": "Thanks for your fast response. I don't need it today, since it currently works if I disable .net native. I'll need it as soon as I want to deploy it to the store though. So next n months with n smaller than 6 :-)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310989308",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310989308",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310989308,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk4OTMwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T07:58:24Z",
        "updated_at": "2017-06-26T07:58:24Z",
        "author_association": "OWNER",
        "body": "quick question: are you a code-first person or a contract-first person?\nmeaning: is your serialisation model primarily in c#? or in .proto? (c#\ntends to be the norm for protobuf-net)\n\nOn 26 Jun 2017 7:04 a.m., \"Meinrad Jean-Richard\" <notifications@github.com>\nwrote:\n\n> Thanks for your fast response. I don't need it today, since it currently\n> works if I disable .net native. I'll need it as soon as I want to deploy it\n> to the store though. So next n months with n smaller than 6 :-)\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310970894>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsO_CFuMvD5HFmogJl9j7IekGVL4Tks5sH0oKgaJpZM4OEpFX>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310990545",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310990545",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310990545,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk5MDU0NQ==",
        "user": {
            "login": "mjeanrichard",
            "id": 778448,
            "node_id": "MDQ6VXNlcjc3ODQ0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/778448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjeanrichard",
            "html_url": "https://github.com/mjeanrichard",
            "followers_url": "https://api.github.com/users/mjeanrichard/followers",
            "following_url": "https://api.github.com/users/mjeanrichard/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjeanrichard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjeanrichard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjeanrichard/subscriptions",
            "organizations_url": "https://api.github.com/users/mjeanrichard/orgs",
            "repos_url": "https://api.github.com/users/mjeanrichard/repos",
            "events_url": "https://api.github.com/users/mjeanrichard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjeanrichard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T08:04:17Z",
        "updated_at": "2017-06-26T08:04:17Z",
        "author_association": "NONE",
        "body": "I am a code-first person. I could however switch to contract-first if that would solve my problem..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/310991390",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310991390",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 310991390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk5MTM5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T08:08:23Z",
        "updated_at": "2017-06-26T08:08:23Z",
        "author_association": "OWNER",
        "body": "that doesn't provide an immediate fix; it simply changes the starting point\nfor the serializer emit - Roslyn vs protocol/protogen, specifically. My\nusual approach is \"support everything, but get the thing being asked for\nmost: first\".\n\nOn 26 Jun 2017 9:04 a.m., \"Meinrad Jean-Richard\" <notifications@github.com>\nwrote:\n\n> I am a code-first person. I could however switch to contract-first if that\n> would solve my problem...\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/274#issuecomment-310990545>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsH4jLJwxAe056LgiyoJU5za6f4ptks5sH2YCgaJpZM4OEpFX>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311124466",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/275#issuecomment-311124466",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/275",
        "id": 311124466,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTEyNDQ2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T17:19:06Z",
        "updated_at": "2017-06-26T17:19:06Z",
        "author_association": "OWNER",
        "body": "I am pretty sure that this is already fixed in 2.3.0 (available on nuget).\nCsnnyou try 2.3.0?\n\nOn 26 Jun 2017 10:57 a.m., \"Serj8500\" <notifications@github.com> wrote:\n\n> Hi!\n>\n> *Test project:* https://yadi.sk/d/cipeM9z63KTHVV\n>\n> *Description:* I serialize data into memory stream then I try to\n> deserialize it back. If I specify length for Deserialize() I receive\n> NullReferenceException. The problem has appeared after upgrade to the\n> latest version (2.2.1) - you can see it in the test project where I used 3\n> versions of the library: 2.2.1, 2.1.0 and 2.0.0.668\n>\n> In the test project the test for 2.2.1 fails with the message:\n>\n> Test Name: TestDeserializeWithLength_In_2_2_1\n> Test FullName: ProtoBufNet_2_2_1.UnitTest1.TestDeserializeWithLength_In_\n> 2_2_1\n> Test Source: C:\\Projects\\TestProtoBufNetVersions\\ProtoBufNet_2_2_1\\UnitTest1.cs\n> : line 24\n> Test Outcome: Failed\n> Test Duration: 0:00:00,0427232\n>\n> Result StackTrace:\n> at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type\n> type, Int32 length, SerializationContext context)\n> at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type\n> type, Int32 length)\n> at ProtoBufNetVersions.Logic.DeserializeWithLength(RuntimeTypeModel\n> model, Int32[] data) in C:\\Projects\\TestProtoBufNetVersions\\\n> ProtoBufNet_2_2_1\\Logic.cs:line 33\n> at ProtoBufNet_2_2_1.UnitTest1.TestDeserializeWithLength_In_2_2_1() in\n> C:\\Projects\\TestProtoBufNetVersions\\ProtoBufNet_2_2_1\\UnitTest1.cs:line 28\n> Result Message:\n> Test method ProtoBufNet_2_2_1.UnitTest1.TestDeserializeWithLength_In_2_2_1\n> threw exception:\n> System.NullReferenceException: Object reference not set to an instance of\n> an object.\n>\n> Best regards,\n> Sergey.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/275>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHvOAF7HtLuQ3S4B58A_JtBUJXnSks5sH4CJgaJpZM4OFGi8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311134139",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/275#issuecomment-311134139",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/275",
        "id": 311134139,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTEzNDEzOQ==",
        "user": {
            "login": "Serj8500",
            "id": 29704028,
            "node_id": "MDQ6VXNlcjI5NzA0MDI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/29704028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Serj8500",
            "html_url": "https://github.com/Serj8500",
            "followers_url": "https://api.github.com/users/Serj8500/followers",
            "following_url": "https://api.github.com/users/Serj8500/following{/other_user}",
            "gists_url": "https://api.github.com/users/Serj8500/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Serj8500/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Serj8500/subscriptions",
            "organizations_url": "https://api.github.com/users/Serj8500/orgs",
            "repos_url": "https://api.github.com/users/Serj8500/repos",
            "events_url": "https://api.github.com/users/Serj8500/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Serj8500/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-26T17:56:35Z",
        "updated_at": "2017-06-26T17:56:35Z",
        "author_association": "NONE",
        "body": "Yep it works in the current 2.3.0-alpha, thank you =)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311571539",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/276#issuecomment-311571539",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/276",
        "id": 311571539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTU3MTUzOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-28T06:44:51Z",
        "updated_at": "2017-06-28T06:44:51Z",
        "author_association": "OWNER",
        "body": "Looks good, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311615419",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/218#issuecomment-311615419",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/218",
        "id": 311615419,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTYxNTQxOQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-28T10:03:41Z",
        "updated_at": "2017-06-28T10:03:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "I don't see this [anymore](https://gist.github.com/lbargaoanu/5fb4a3376b2619e5e8e5d9d582d53ddb). @Tom-Cuthill Can you make that gist break?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311621644",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/208#issuecomment-311621644",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/208",
        "id": 311621644,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTYyMTY0NA==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-28T10:31:48Z",
        "updated_at": "2017-06-28T10:31:48Z",
        "author_association": "NONE",
        "body": "Can you give an example of how to tell it what types to attempt to interpret the interface as?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/311623424",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/208#issuecomment-311623424",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/208",
        "id": 311623424,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTYyMzQyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-28T10:40:51Z",
        "updated_at": "2017-06-28T10:40:51Z",
        "author_association": "OWNER",
        "body": "In general I would try to avoid that scenario *entirely* - interfaces on DTOs look ... just wrong. However, `MetaType` has a `ConcreteType` property (simple use) or a `SetFactory` method (more complex scenarios), which *may* be usable, depending on the scenario.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/312639207",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/208#issuecomment-312639207",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/208",
        "id": 312639207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjYzOTIwNw==",
        "user": {
            "login": "fhchina",
            "id": 5356726,
            "node_id": "MDQ6VXNlcjUzNTY3MjY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5356726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fhchina",
            "html_url": "https://github.com/fhchina",
            "followers_url": "https://api.github.com/users/fhchina/followers",
            "following_url": "https://api.github.com/users/fhchina/following{/other_user}",
            "gists_url": "https://api.github.com/users/fhchina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fhchina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fhchina/subscriptions",
            "organizations_url": "https://api.github.com/users/fhchina/orgs",
            "repos_url": "https://api.github.com/users/fhchina/repos",
            "events_url": "https://api.github.com/users/fhchina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fhchina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-03T12:59:43Z",
        "updated_at": "2017-07-03T12:59:43Z",
        "author_association": "NONE",
        "body": "I have changed all of my domain models, use abstract base class instead of interface :(. It's a huge task"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/313904009",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/277#issuecomment-313904009",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/277",
        "id": 313904009,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzkwNDAwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-09T07:23:22Z",
        "updated_at": "2017-07-09T07:23:22Z",
        "author_association": "OWNER",
        "body": "It means it will either read zero bytes (already at the end of a stream,\nyou just didn't know), or it will consume an entire varint. Partial data is\nnot supported - if it reads an incomplete varint it will throw. TCP is a\nstream, so if you use this method on a NetworkStream it will still work as\nlong as the data arrives eventually.\n\nIf you are processing a back-buffer in a MemoryStream, you may have to\nmanually check for a complete varint - or just catch the exception. To\ncheck, you need to test at most 10 bytes to see if the MSB is zero. Once\nyou have a zero MSB, you're good to go.\n\n\nOn 9 Jul 2017 6:31 a.m., \"PM Extra\" <notifications@github.com> wrote:\n\nIn my case, if the stream data is split (tcp socket), and the received data\nis not a whole base128 variant. The TryReadLengthPrefix(source,\nPrefixStyle.Base128, out var length) will throw the exception\nEndOfStreamException.\n\nSo, what does the Try mean?\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/277>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsKMSmIBIN0QbBWUM0gPdsniLqvAFks5sMGWdgaJpZM4OR9l4>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314023877",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/277#issuecomment-314023877",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/277",
        "id": 314023877,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDAyMzg3Nw==",
        "user": {
            "login": "PMExtra",
            "id": 11289158,
            "node_id": "MDQ6VXNlcjExMjg5MTU4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11289158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PMExtra",
            "html_url": "https://github.com/PMExtra",
            "followers_url": "https://api.github.com/users/PMExtra/followers",
            "following_url": "https://api.github.com/users/PMExtra/following{/other_user}",
            "gists_url": "https://api.github.com/users/PMExtra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PMExtra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PMExtra/subscriptions",
            "organizations_url": "https://api.github.com/users/PMExtra/orgs",
            "repos_url": "https://api.github.com/users/PMExtra/repos",
            "events_url": "https://api.github.com/users/PMExtra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PMExtra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-10T07:10:42Z",
        "updated_at": "2017-07-10T07:10:42Z",
        "author_association": "NONE",
        "body": "@mgravell Thanks a lot. I am using a third party socket framework and that process a back-buffer in a MemoryStream. So shall we add the MSB check to the `TryReadLengthPrefix` method?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314025591",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/277#issuecomment-314025591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/277",
        "id": 314025591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDAyNTU5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-10T07:20:04Z",
        "updated_at": "2017-07-10T07:20:04Z",
        "author_association": "OWNER",
        "body": "you can add that check - or a try/catch - by the code that *calls* that\nmethod, sure.\n\nOn 10 Jul 2017 8:10 a.m., \"PM Extra\" <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell> Thanks a lot. I am using a third\n> party socket framework and that process a back-buffer in a MemoryStream. So\n> shall we add the MSB check to the TryReadLengthPrefix method?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/277#issuecomment-314023877>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsC5BjixrcZ1a8_4towBxKFGVmIq3ks5sMc5zgaJpZM4OR9l4>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314978597",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314978597",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314978597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk3ODU5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T05:54:20Z",
        "updated_at": "2017-07-13T05:54:20Z",
        "author_association": "OWNER",
        "body": "There are a few things that make this more awkward when starting from interfaces. Firstly, we can't just serialize it as a Class1 - it would need to be wrapped appropriately, which would mean any interface members at the root level, which would then probably end up being duplicated at the type level (because people would forget to exclude them), which is especially problematic for lists / arrays.\r\n\r\nSecondly, it is very hard to deal with interfaces as the root object, since when using GetType() you lose the declared type and only have the concrete type. This would potentially make it serialize differently per context, which is very awkward. Likewise when the class type is used directly without mention of the interface.\r\n\r\nThis scenario is a lot more nuanced then is obvious. It would need very clear consideration as to how it would behave in a range of scenarios including (but not limited to) these cases."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314979565",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314979565",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314979565,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk3OTU2NQ==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:00:35Z",
        "updated_at": "2017-07-13T06:10:53Z",
        "author_association": "NONE",
        "body": "Firstly please forgive my ignorance, I am still learning how your typemodel is built.\r\n\r\n_Firstly, we can't just serialize it as a Class1 - it would need to be wrapped appropriately,_\r\n\r\nCan you explain why that is the case for an interface but not the case for a class that extends a base class?\r\n\r\n_Secondly, it is very hard to deal with interfaces as the root object, since when using GetType() you lose the declared type and only have the concrete type._\r\n\r\nIsn't this a good thing? You simply serialise it as a the concrete type which in my example is what I would like it to do.\r\n\r\n_This would potentially make it serialize differently per context, which is very awkward_\r\n\r\nWell yes, because its an interface it would serialise as whatever the underlying object is. Wouldn't that be what most people expect?\r\n\r\nCurrently no one serialises interfaces (at least I doubt many people do) so would this not be adding additional functionality?\r\n\r\nI might explore the source code myself to see if I can understand why you are saying it is more difficult that I seem to currently believe. Appreciate the quick response.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314981315",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314981315",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314981315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4MTMxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:11:53Z",
        "updated_at": "2017-07-13T06:11:53Z",
        "author_association": "OWNER",
        "body": "> Can you explain why that is the case for an interface but not the case for a class that extends a base class?\r\n\r\nIt *is* the case for a base-class / sub-class. The difference is that a subclass doesn't usually re-declare (`new` etc) the same properties that the base class had. Most interface implementations, however: do.\r\n\r\n> Isn't this a good thing? You simply serialise it as a the concrete type which in my example is what I would like it to do.\r\n\r\nit *cannot* simply be serialized as the concrete type - that will not work in any way. During deserialization it needs to know what type to deserialize. Serializing it *as* the type itself includes **zero** such metadata, so you'd be thinking `IFoo` and seeing data for `Bar`, but with no clue that it is a `Bar`. This is why it needs wrapping in the first place.\r\n\r\n> Well yes, because its an interface it would serialise as whatever the underlying object is. Wouldn't that be what most people expect?\r\n\r\nSee above.\r\n\r\nThe aim is fine, but it isn't as simple as just serializing as the concrete type. As I say: any approach here would need very clear ideas of what should happen (ideally in terms of the data protocol) in each case."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314983090",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314983090",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314983090,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4MzA5MA==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:21:43Z",
        "updated_at": "2017-07-13T06:21:43Z",
        "author_association": "NONE",
        "body": "Would a simpler method to effectively ignore the fact it is an interface and effectively serialise it as if it was a concrete class?\r\n\r\nThen when it comes to deserialising the data and it sees a Bar but it expects an IFoo could it not simply perform a check to see if Bar IS an IFoo and cast it back?\r\n\r\nEg during serialisation if the serialiser encounters an interface it simply casts it to its actual type.\r\n\r\nThen during deserialization if it comes across an object that it expects to be an interface, it first checks if that object implements that interface and if it does casts it back ?\r\n\r\nThis would probably break any existing interface behaviour however I believe not many people are currently serialising interfaces due to the difficulty in doing so."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314985147",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314985147",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314985147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4NTE0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:34:00Z",
        "updated_at": "2017-07-13T06:34:00Z",
        "author_association": "OWNER",
        "body": "No. The problem is that the serialization of a Foo does not include anything that says \"I'm a Foo\".\r\n\r\nIf we did that, then during deserialization: *how do you know what it should be*?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314985950",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314985950",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314985950,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4NTk1MA==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:38:22Z",
        "updated_at": "2017-07-13T06:43:13Z",
        "author_association": "NONE",
        "body": "After stepping through the code I can see where my misunderstanding comes from. It creates a model based on reflecting the code, not based upon the actual in memory object.\r\n\r\nWhat I was hoping to do is dynamically create the model based upon what the object in memories type is. Eg when it builds the model it takes the current in memory state of the object and calls GetType on it then.\r\n\r\nIs there any functionality in the protobuf library to obtain the current in memory type of an object during the runtime model creation? I am not talking by creating the model in code at runtime, but by the protobuf library doing this automatically for you.\r\n\r\nI'm not sure if you currently support serialising dynamic types. However I imagine you would do it the same way I am proposing, treat the interface as \"dynamic\" with its type unknown until runtime."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314987336",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314987336",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314987336,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4NzMzNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:46:13Z",
        "updated_at": "2017-07-13T06:46:13Z",
        "author_association": "OWNER",
        "body": "A lot of the code *does* use exactly GetType() etc. That doesn't change he nature of the problem in any way. Types don't change their members, so it doesn't matter when we check if it will be the same shape either way."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314987786",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314987786",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314987786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4Nzc4Ng==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:48:43Z",
        "updated_at": "2017-07-13T06:53:57Z",
        "author_association": "NONE",
        "body": "Then I don't understand the problem.\r\n\r\nGetType would return Class1 in my first example. So it wouldn't even realise it was an interface, hence it should serialise without issue. However it seems to currently return IClass not Class1, why is this?\r\n\r\nWhen deserialising and it gets Class1 but expects IClass, could it not just check that Class1 is an IClass and cast it?\r\n\r\n> No. The problem is that the serialization of a Foo does not include anything that says \"I'm a Foo\".\r\n\r\nvar type = Foo.GetType()\r\ntype should = Foo, not IFoo\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314987948",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/279#issuecomment-314987948",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/279",
        "id": 314987948,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4Nzk0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:49:24Z",
        "updated_at": "2017-07-13T06:49:24Z",
        "author_association": "OWNER",
        "body": "This is #276 and is fixed and available on nuget: https://mgravell.github.io/protobuf-net/releasenotes"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314988303",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/279#issuecomment-314988303",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/279",
        "id": 314988303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4ODMwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:51:27Z",
        "updated_at": "2017-07-13T06:51:27Z",
        "author_association": "OWNER",
        "body": "I can do a \"non pre-release\" build if it would help; I was waiting on\ndogfooding results, but we've been using 2.3.0-gamma on Stack Overflow\nsuccessfully, so we're probably OK for that smoke test.\n\nOn 13 Jul 2017 7:36 a.m., \"Lu Hao\" <notifications@github.com> wrote:\n\n> Sample (protobuf-net 2.2.1):\n>\n> using System.IO;using ProtoBuf;\n> namespace ConsoleApp7\n> {\n>     [ProtoContract]\n>     class A\n>     {\n>         static A() {}\n>\n>         [ProtoMember(1)]\n>         public int Value { get; set; }\n>     }\n>\n>     class Program\n>     {\n>         static void Main(string[] args)\n>         {\n>             using (var stream = new MemoryStream())\n>             {\n>                 var a = new A();\n>                 Serializer.Serialize(stream, a);\n>                 stream.Seek(0, SeekOrigin.Begin);\n>                 var b = Serializer.Deserialize<A>(stream);\n>             }\n>         }\n>     }\n> }\n>\n> It will throw \u201cSystem.InvalidProgramException:\u201cCommon Language Runtime\n> detected an invalid program.\u201d\u201d when deserializing. It works after I remove\n> the static constructor. However I need a static constructor in my project.\n> You can also see the case in https://github.com/HaleLu/ProtobufCase.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/279>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsIwVBIL4PGSM0UU642ZXlEPazZhcks5sNbr4gaJpZM4OWj95>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314989797",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314989797",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314989797,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk4OTc5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T06:58:30Z",
        "updated_at": "2017-07-13T06:58:30Z",
        "author_association": "OWNER",
        "body": "Because this stuff is nuanced :)\r\n\r\nThere are 3 different scenarios here, and we'd need to know how each should behave:\r\n\r\n- root objects via generic usage such as `Serialize<T>` uses `typeof(T)` IIRC\r\n- root objects via non-generic usage may or may not have a type specified\r\n- members inside types know the member's type\r\n\r\nFrankly, I don't think the problem that you're trying to solve is very clear at the moment. And the key point is: it isn't enough to serialize - we also need to be able to deserialize knowing just the interface."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/314991726",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-314991726",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 314991726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk5MTcyNg==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T07:08:27Z",
        "updated_at": "2017-07-13T07:08:27Z",
        "author_association": "NONE",
        "body": "I'll give an example of why I thought it was simple.\r\n\r\nIf I make a base class with nothing in it, then make all my interface implementations inherit from that base class, then set the type to the base class instead of the interface the existing protobuf code works and will serialise and deserialise my \"interface\".\r\n\r\nThe above is ugly though, I'd rather just serialise my interface directly.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315010322",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315010322",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315010322,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAxMDMyMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T08:33:33Z",
        "updated_at": "2017-07-13T08:36:43Z",
        "author_association": "OWNER",
        "body": "Indeed, but we start getting into problems.\r\n\r\nConsider: in order to serialize such a model, we need to find the logical root, which in this case *probably is* the interface - so: imagine we have:\r\n\r\n    [ProtoContract, ProtoInclude(10, typeof(Foo))]\r\n    interface IFoo {\r\n       [ProtoMember(1)] int Id {get;set;}\r\n    }\r\n    [ProtoContract, ProtoInclude(10, typeof(Bar))]\r\n    class Foo : IFoo {\r\n        public int Id {get;set;}\r\n        // ...\r\n    }\r\n    [ProtoContract]\r\n    class Bar : Foo { ... }\r\n\r\nSo far so good. If we see a `Bar`, we need to build the model. Currently we just look at the `.BaseType`, which is simple and readily available - we find `Foo`, notice that there is an \"include\" and note that `Bar`'s logical root is `Foo`, and we start from there.\r\n\r\nSo; let's say we want to fully support interfaces. Now we need to look not just at the `.BaseType` of each level, but also at the interfaces implemented by each level - and check *them* for \"include\" directives. In theory that's fine - we can find `IFoo` easily enough and determine that `IFoo` is the logical root for `Foo` and `Bar`.\r\n\r\nNote that this is **not** the same as just serializing the concrete type - we need to start at the logical root in order to be able to deserialize correctly (we need to identify the correct type). This is one of the key points I was trying to call out earlier, although perhaps that is largely an implementation detail (it is a very important one). It would also be necessary to observe that adding an interface using this kind of \"include\" approach is fundamentally a breaking serialization change in the same way that adding a new base-type (with \"include\") is a breaking serialization change. But it can probably work - it just doesn't today.\r\n\r\nIt gets more complex, though - we'd need to think about what scenarios we don't support and how to message the user. For example:\r\n\r\n    [ProtoContract, ProtoInclude(10, typeof(SomeType))]\r\n    interface IFoo {...}\r\n    [ProtoContract, ProtoInclude(10, typeof(SomeType))]\r\n    interface IBar {...}\r\n\r\n    [ProtoContract]\r\n    class SomeType : IFoo, IBar { ... }\r\n\r\nThis *doesn't have* a sensible common root, and cannot be supported. Then we get into interfaces implementing interfaces (`IFoo : IBar`), etc. Should *that* work? \r\n\r\nThis is probably fine, for example:\r\n\r\n    [ProtoContract, ProtoInclude(10, typeof(IBar))]\r\n    interface IFoo {...}\r\n    [ProtoContract, ProtoInclude(10, typeof(SomeType))]\r\n    interface IBar : IFoo {...}\r\n    [ProtoContract]\r\n    class SomeType : IBar { ...}\r\n\r\nBut what if we get to the same concrete type via multiple paths?\r\n\r\n---\r\n\r\nWe also get into fun scenarios around unknown data and different versions of the contract; this is *mostly* the same scenario that we already have today for `abstract` classes, so it isn't drastically a new problem - but it is one that needs consideration\r\n\r\n---\r\n\r\nI guess the point I'm getting at here is that this is a complex problem. It isn't impossible to do it - but rather, it needs serious consideration and design and testing - plus of course whatever changes it needs to implement it, and document it, and update any now-wrong documents/questions on the topic, and fix any code regressions, and update any tests that now fail incorrectly because of the changes, and support these changes at every point in the future. We can't just shoe-horn it in with a 5 line hack. And before I take on significant pieces of work, I like to understand *why* we're doing it - i.e. what use case it supports that can't already be supported in other ways. Ultimately, time spent working on this is time not spent working on other code, so it is all a juggling act re how to spend resources (mostly: my time). It seems to me that everything here can already be achieved via a DTO layer. I'm not saying we can't do it, but I'd really want to explore what the **compelling example is** for doing it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315013911",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315013911",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315013911,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAxMzkxMQ==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T08:47:25Z",
        "updated_at": "2017-07-13T08:56:06Z",
        "author_association": "NONE",
        "body": "Thank you for the explanation. It makes a lot more sense after you detail the problems.\r\n\r\nIf we simply said you cannot serialise objects where the logical root is an interface I believe that would remove a lot of problems. I can't imagine many people would attempt this either so it is probably acceptable.\r\n\r\nI would also suggest that you simply cannot put [ProtoContact] on an interface, eg you can only serialise concrete classes. I would argue to attempt to serialise an actual interface or use an interface as the root object are poor design choices and it would be reasonable to exclude them.\r\n\r\nSo my suggestion would be to only support the following use cases of interfaces. From what I've read on SO and the issues register these are the only asked for use cases and in my head are the only ones that make design sense to actually implement. \r\n\r\n```\r\ninterface IFoo {...}\r\n\r\n[ProtoContract]\r\nclass SomeType : IFoo { ... }\r\n\r\nOr\r\n\r\n[ProtoContract]\r\nclass SomeClass {\r\n     List<IFoo> ListOfIFoo;\r\n }\r\n\r\n```\r\nThese restrictions would simplify the design and problems you encounter.\r\n\r\nCurrently to achieve the above there are two solutions. \r\n\r\nMaking all IFoo implementations (eg SomeType) inherit from a common base class, and changing `List<IFoo>` to be `List<Base>`.\r\n\r\n(edited by @mgravell to add markdown on the list generic types, for readability)\r\n\r\nSecond solution is to make a new DTO class with individual lists for each implementation of IFoo, this is painful as every time you add a new implementation of IFoo you need to update your DTO container class.\r\n\r\nPersonally both seem like average solutions to me.\r\n\r\nI've posted up a gist of my current problem and how I have had to solve it. As you can see it looks yuck.\r\nhttps://gist.github.com/rolandh/68c208cdf4d9ca2c9e1cff7a344477f2\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315016885",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315016885",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315016885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAxNjg4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T08:58:46Z",
        "updated_at": "2017-07-13T09:00:01Z",
        "author_association": "OWNER",
        "body": "In the example you give, *during deserialization*, how would the code know to select `SomeType`? what members are serialized? are the members on `IFoo` serialized? or just those on `SomeType`? What happens if the list contains multiple different `IFoo` implementations? Why is `SomeType` tested for, specifically? What happens if there aren't any known `IFoo` implementations? What happens if I serialize a `SomeType` instance by itself? Does that look the same as an `IFoo` that *was* a `SomeType`? Does a `List<SomeType>` look identical to a `List<IFoo>`?\r\n\r\nThese are the questions that I'd need to get to the bottom of."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315019886",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315019886",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315019886,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAxOTg4Ng==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T09:10:33Z",
        "updated_at": "2017-07-13T09:11:53Z",
        "author_association": "NONE",
        "body": "> In the example you give, during deserialization, how would the code know to select SomeType? \r\n\r\nWhen you start deserialising you know what you are deserialising due to the ProtoMember numbers in the data don't you? So from these you can infer the type that was serialised eg in this case SomeClass?\r\n\r\nThen you can look at the Class you are trying to deserialise to, in this case it is IFoo but you have found a class of type SomeClass specified instead. Could you not then check (is SomeClass an IFoo) and perform a cast?\r\n\r\n> what members are serialized?\r\nOnly the members of SomeClass \r\n\r\n> What happens if the list contains multiple different IFoo implementations? \r\nWhen you serialise a list that has multiple IFoo implementations you simply serialise their concrete classes\r\nEg\r\n\r\nListOfIFoo.Add(SomeClass);\r\nListOfIFoo.Add(SomeClass2);   //Another IFoo implementation\r\n\r\nWould simply serialise the object SomeClass followed by the object SomeClass2 with zero knowledge that it was originally IFoo. I would imagine the binary serialised result of the list would look the same as the following:\r\n\r\nstruct test{\r\n    Public SomeClass someClass;\r\n    Public SomeClass2 someClass2\r\n}\r\n\r\n> Why is SomeType tested for, specifically? What happens if there aren't any known IFoo implementations?\r\n\r\nWhen you start the deserialization process and you receive the memberNumber do you not look up the class of this member number? I'm not sure how this problem is unique to interfaces.\r\n\r\nIf there are no known IFoo implementations then how was it serialised in the first place? I would argue this would be completely fair to fail at this point.\r\n\r\nIn my example problem I posted up earlier, can you see a better way to achieve that using the existing protobuf implementation?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315022295",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315022295",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315022295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAyMjI5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T09:19:30Z",
        "updated_at": "2017-07-13T09:19:30Z",
        "author_association": "OWNER",
        "body": "> When you start deserialising you know what you are deserialising due to the ProtoMember numbers in the data don't you? So from these you can infer the type that was serialised eg in this case SomeClass?\r\n\r\nHow? where did that number come from? If we take your specfic example: where would it get such a number from? The only possible place is a `[ProtoInclude]` on the interface,  which takes us back to the more complex scenario that I strongly suspect is the only way to do it.\r\n\r\n> When you start the deserialization process and you receive the memberNumber do you not look up the class of this member number? I'm not sure how this problem is unique to interfaces.\r\n\r\nThe member number only tells us that we're talking about the `ListOfIFoo` member."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315022607",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315022607",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315022607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAyMjYwNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T09:20:46Z",
        "updated_at": "2017-07-13T09:21:28Z",
        "author_association": "OWNER",
        "body": "If you mean \"treat all `IFoo` as though they were `SomeType`, and fail if one isn't, and just use `SomeType` during deserialization\"... then frankly I think it should be a `List<SomeType>`..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315034147",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/280#issuecomment-315034147",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/280",
        "id": 315034147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAzNDE0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T10:05:58Z",
        "updated_at": "2017-07-13T10:06:56Z",
        "author_association": "OWNER",
        "body": "Ah, sub-types; yes, this is a bug - will be fixed 2.3.1\r\n\r\nSimply removing the `optional` should fix it, although it would be nice if it emitted `oneof` instead, really..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315038839",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/280#issuecomment-315038839",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/280",
        "id": 315038839,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAzODgzOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T10:27:04Z",
        "updated_at": "2017-07-13T10:27:04Z",
        "author_association": "OWNER",
        "body": "(reopening for tracking purposes)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315063346",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315063346",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315063346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA2MzM0Ng==",
        "user": {
            "login": "rig12",
            "id": 11139702,
            "node_id": "MDQ6VXNlcjExMTM5NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11139702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rig12",
            "html_url": "https://github.com/rig12",
            "followers_url": "https://api.github.com/users/rig12/followers",
            "following_url": "https://api.github.com/users/rig12/following{/other_user}",
            "gists_url": "https://api.github.com/users/rig12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rig12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rig12/subscriptions",
            "organizations_url": "https://api.github.com/users/rig12/orgs",
            "repos_url": "https://api.github.com/users/rig12/repos",
            "events_url": "https://api.github.com/users/rig12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rig12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T12:30:08Z",
        "updated_at": "2017-07-13T12:30:08Z",
        "author_association": "NONE",
        "body": "I've seen a [stackoverflow ](https://stackoverflow.com/questions/13802844/protobuf-net-into-proto-generates-enum-conflicts) solution. And unfortunately didn't find the way to make change in RuntimeTypeModel. Is there any?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315086166",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315086166",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315086166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA4NjE2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T13:59:28Z",
        "updated_at": "2017-07-13T13:59:51Z",
        "author_association": "OWNER",
        "body": "Will attributes suffice?\r\n\r\n```\r\npublic enum ViaAttribs\r\n{\r\n    [ProtoEnum(Name = \"a\")]\r\n    X,\r\n    [ProtoEnum(Name = \"b\")]\r\n    Y\r\n}\r\n```\r\n\r\nwhich gives:\r\n\r\n```\r\nenum ViaAttribs {\r\n   a = 0;\r\n   b = 1;\r\n}\r\n```\r\n\r\nIf not, I can check whether they can be tweaked via `RuntimeTypeModel`."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315089967",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315089967",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315089967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA4OTk2Nw==",
        "user": {
            "login": "rig12",
            "id": 11139702,
            "node_id": "MDQ6VXNlcjExMTM5NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11139702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rig12",
            "html_url": "https://github.com/rig12",
            "followers_url": "https://api.github.com/users/rig12/followers",
            "following_url": "https://api.github.com/users/rig12/following{/other_user}",
            "gists_url": "https://api.github.com/users/rig12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rig12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rig12/subscriptions",
            "organizations_url": "https://api.github.com/users/rig12/orgs",
            "repos_url": "https://api.github.com/users/rig12/repos",
            "events_url": "https://api.github.com/users/rig12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rig12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T14:12:39Z",
        "updated_at": "2017-07-13T14:12:39Z",
        "author_association": "NONE",
        "body": "Marc,\r\nthanks for the feedback\r\nI'll try to use attribute for now.\r\nBut I wonder if you tell me how to configure enums through `RuntimeTypeModel`\r\nThere's a lot of them )\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315105399",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315105399",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315105399,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTEwNTM5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T15:03:22Z",
        "updated_at": "2017-07-13T15:03:49Z",
        "author_association": "OWNER",
        "body": "I'll investigate; there's a chance it isn't currently supported, in which case it'll need to wait for 2.3.1"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315107909",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315107909",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315107909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTEwNzkwOQ==",
        "user": {
            "login": "rig12",
            "id": 11139702,
            "node_id": "MDQ6VXNlcjExMTM5NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11139702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rig12",
            "html_url": "https://github.com/rig12",
            "followers_url": "https://api.github.com/users/rig12/followers",
            "following_url": "https://api.github.com/users/rig12/following{/other_user}",
            "gists_url": "https://api.github.com/users/rig12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rig12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rig12/subscriptions",
            "organizations_url": "https://api.github.com/users/rig12/orgs",
            "repos_url": "https://api.github.com/users/rig12/repos",
            "events_url": "https://api.github.com/users/rig12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rig12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T15:11:25Z",
        "updated_at": "2017-07-13T15:11:25Z",
        "author_association": "NONE",
        "body": "Thanks a lot\r\nI'll be waiting"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315112099",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-315112099",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 315112099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTExMjA5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-13T15:25:11Z",
        "updated_at": "2017-07-13T15:25:11Z",
        "author_association": "OWNER",
        "body": "Needed a code change; this will work in 2.3.1 (or if you build locally):\r\n\r\n```\r\n        [Fact]\r\n        public void TestEnumProto_Proto2_RuntimeRenamed()\r\n        {\r\n            var model = TypeModel.Create();\r\n            model[typeof(HazEnum.SomeEnum)][1].Name = \"zzz\";\r\n            var schema = model.GetSchema(typeof(HazEnum), ProtoSyntax.Proto2);\r\n            Assert.Equal(@\"syntax = \"\"proto2\"\";\r\npackage ProtoBuf.Serializers;\r\n\r\nmessage HazEnum {\r\n   optional SomeEnum X = 1 [default = B];\r\n}\r\nenum SomeEnum {\r\n   B = 0;\r\n   zzz = 1;\r\n   C = 2;\r\n}\r\n\", schema);\r\n        }\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315270179",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315270179",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315270179,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI3MDE3OQ==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T04:59:22Z",
        "updated_at": "2017-07-14T05:00:27Z",
        "author_association": "NONE",
        "body": "> How? where did that number come from? If we take your specfic example: where would it get such a number from? The only possible place is a [ProtoInclude] on the interface, which takes us back to the more complex scenario that I strongly suspect is the only way to do it.\r\n\r\nIt would get the number from SomeClass, it would never look at anything about the interface implementation.\r\n\r\n> If you mean \"treat all IFoo as though they were SomeType, and fail if one isn't, and just use SomeType during deserialization\"... then frankly I think it should be a List<SomeType>...\r\n\r\nTreat List of IFoo as a dynamic list, eg the same as List of dynamic. For every single object in the list you call GetType, then go to the actual class and look for a [ProtoContract] to determine how to serialise it.\r\n\r\nUpon deserialisation you check every single object Is An IFoo and cast it to IFoo"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315289187",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315289187",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315289187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI4OTE4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T07:15:08Z",
        "updated_at": "2017-07-14T07:15:08Z",
        "author_association": "OWNER",
        "body": "> It would get the number from SomeClass, it would never look at anything about the interface implementation.\r\n\r\nThat just tells us to expect IFoo. We don't know about SomeType from that\r\n\r\n> Upon deserialisation you check every single object Is An IFoo and cast it to IFoo\r\n\r\nI think the key thing you're missing here is context on how deserialization works and what data the protobuf stream contains. The ultimate problem is: the data in the raw stream doesn't tell us what type of object to create. A `List<Blah>` when deserialized doesn't create `Blah` instances \"because the data tells us to\". Rather, it creates `Blah` instances *because it is deserializing a `List<Blah>`*. As such, it interprets the data (which is otherwise unadorned) using the rules for `Blah`. So: you can't just deserialize and then cast to `IFoo` - we need to know what to actually do with the data that we see. This is what the \"logical root / include\" approach of protobuf-net does - it defines a set of conventions for interpreting an inheritance based model."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315302928",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315302928",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315302928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMwMjkyOA==",
        "user": {
            "login": "rolandh",
            "id": 1109554,
            "node_id": "MDQ6VXNlcjExMDk1NTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1109554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolandh",
            "html_url": "https://github.com/rolandh",
            "followers_url": "https://api.github.com/users/rolandh/followers",
            "following_url": "https://api.github.com/users/rolandh/following{/other_user}",
            "gists_url": "https://api.github.com/users/rolandh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rolandh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rolandh/subscriptions",
            "organizations_url": "https://api.github.com/users/rolandh/orgs",
            "repos_url": "https://api.github.com/users/rolandh/repos",
            "events_url": "https://api.github.com/users/rolandh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rolandh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T08:28:26Z",
        "updated_at": "2017-07-14T08:30:35Z",
        "author_association": "NONE",
        "body": "> I think the key thing you're missing here is context on how deserialization works and what data the protobuf stream contains. The ultimate problem is: the data in the raw stream doesn't tell us what type of object to create. \r\n\r\nThis is definitely what I was misunderstanding. I can see the problem now. To help with my understanding in this example below, how does the deserialiser know to when deserialising class DTO that listOfBase contains an instance of ExtendsBase1, ExtendsBase2 and then BaseClass. Eg when processing the raw byte stream, how does it know that the object is ExtendsBase2 and not ExtendsBase1 or even BaseClass? What tells it which is which?\r\n\r\n```\r\n[ProtoInclude(typeof(ExtendsBase1),1]\r\n[ProtoInclude(typeof(ExtendsBase2),2]\r\n[ProtoContract]\r\nclass BaseClass:\r\n\r\n[ProtoContract]\r\nclass ExtendsBase1 : BaseClass\r\n[ProtoMember(3)]\r\nstring Test3;\r\n\r\n[ProtoContract]\r\nclass ExtendsBase2 : BaseClass\r\n[ProtoMember(4)]\r\nstring Test4;\r\n\r\n[ProtoContract]\r\nclass DTO\r\n[ProtoMember(5)]\r\nList<BaseClass> listOfBase;\r\n\r\nlistOfBase.Add(new ExtendsBase1());\r\nlistOfBase.Add(new ExtendsBase2());\r\nlistOfBase.Add(new BaseClass());\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315306858",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/278#issuecomment-315306858",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/278",
        "id": 315306858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTMwNjg1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T08:48:00Z",
        "updated_at": "2017-07-14T08:48:00Z",
        "author_association": "OWNER",
        "body": "K; the way protobuf-net encodes that is essentially (to use `.proto` syntax):\r\n\r\n    message DTO {\r\n        repeated BaseClass listOfBase  = 5;\r\n    }\r\n    message BaseClass {\r\n        optional ExtendsBase1 _eb1 = 1;\r\n        optional ExtendsBase2 _eb2 = 2;\r\n    }\r\n    message ExtendsBase1 {\r\n        optional string Test3 = 3;\r\n    }\r\n    message ExtendsBase2 {\r\n        optional string Test4 = 4;\r\n    }\r\n\r\nwhere exactly zero or one of `_eb1` / `_eb2` are assigned a value (this could also use `oneof` in recent `.proto` versions). The sub-classes are mapped as *inner objects*, and the sub-class data always comes first. In JSON terms (although it isn't JSON - this is purely for example purposes), an object would look something like:\r\n\r\n    {\r\n       \"_eb1\": {\r\n        \"Test3\": \"foo\"\r\n      }\r\n    }\r\n\r\nDuring deserialization, we start with a `null` reference, and start resolving fields, and only create the instance when required (because of data fields, or at the end of any deserialization path). Since the first *actual data* we get is the `\"Test3\"`, it is *at that point* that we create the instance, which we know by the context should be a `ExtendsBase1`. If neither `_eb1` or `eb2` had a value, then we'd create a `BaseClass` instance on the way out (or when some data in that context was encountered, but there aren't any other fields in this case).\r\n\r\n---\r\n\r\nMy point in the comment yesterday is that we could apply this same logic to interfaces, **within certain constraints** - mainly around the topics of multiple inheritance (resolving to contract types) would be disallowed.\r\n\r\nSo essentially, it could be mapped with the interface as the root type:\r\n\r\n    message IFoo {\r\n        optional SomeType _st = 1;\r\n        optional SomeOtherType _sot = 2;\r\n    }\r\n\r\nwhich would map to:\r\n\r\n    [ProtoContract]\r\n    [ProtoInclude(1, typeof(SomeType))]\r\n    [ProtoInclude(2, typeof(SomeOtherType))]\r\n    interface IFoo {...}\r\n\r\nThis would allow us to deserialize an `IFoo` into any of the known / expected concrete types. This obviously has the issue that if no expected type is found in the data, then it can't instantiate - but that's actually the same problem we get for `abstract` base classes today, so that's not a new restriction."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315354779",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/279#issuecomment-315354779",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/279",
        "id": 315354779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM1NDc3OQ==",
        "user": {
            "login": "HaleLu",
            "id": 10864533,
            "node_id": "MDQ6VXNlcjEwODY0NTMz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10864533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HaleLu",
            "html_url": "https://github.com/HaleLu",
            "followers_url": "https://api.github.com/users/HaleLu/followers",
            "following_url": "https://api.github.com/users/HaleLu/following{/other_user}",
            "gists_url": "https://api.github.com/users/HaleLu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HaleLu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HaleLu/subscriptions",
            "organizations_url": "https://api.github.com/users/HaleLu/orgs",
            "repos_url": "https://api.github.com/users/HaleLu/repos",
            "events_url": "https://api.github.com/users/HaleLu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HaleLu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T13:05:25Z",
        "updated_at": "2017-07-14T13:05:25Z",
        "author_association": "NONE",
        "body": "Thanks. It works when using 2.3.0-gamma."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315374317",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/279#issuecomment-315374317",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/279",
        "id": 315374317,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM3NDMxNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-14T14:30:45Z",
        "updated_at": "2017-07-14T14:30:45Z",
        "author_association": "OWNER",
        "body": "2.3.0 (non-gamma) is available"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315559622",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/282#issuecomment-315559622",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/282",
        "id": 315559622,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU1OTYyMg==",
        "user": {
            "login": "KingKnecht",
            "id": 4339172,
            "node_id": "MDQ6VXNlcjQzMzkxNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4339172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KingKnecht",
            "html_url": "https://github.com/KingKnecht",
            "followers_url": "https://api.github.com/users/KingKnecht/followers",
            "following_url": "https://api.github.com/users/KingKnecht/following{/other_user}",
            "gists_url": "https://api.github.com/users/KingKnecht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KingKnecht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KingKnecht/subscriptions",
            "organizations_url": "https://api.github.com/users/KingKnecht/orgs",
            "repos_url": "https://api.github.com/users/KingKnecht/repos",
            "events_url": "https://api.github.com/users/KingKnecht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KingKnecht/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-15T20:19:11Z",
        "updated_at": "2017-07-15T20:19:11Z",
        "author_association": "NONE",
        "body": "` public static byte[] ToByteArray<T>(this T obj)\r\n        {\r\n            using (var memStream = new MemoryStream())\r\n            {\r\n                Serializer.Serialize(memStream, obj);\r\n                return memStream.ToArray();\r\n            }\r\n        }`\r\n\r\n`  public static T FromByteArray<T>(this byte[] protoBytes)\r\n        {\r\n            T result;\r\n            using (var memStream = new MemoryStream(protoBytes))\r\n            {\r\n                 result = Serializer.Deserialize<T>(memStream);\r\n            }\r\n           return result;\r\n        }`\r\n\r\nworks for me at the moment"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315562193",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/282#issuecomment-315562193",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/282",
        "id": 315562193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2MjE5Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-15T20:57:43Z",
        "updated_at": "2017-07-15T20:57:43Z",
        "author_association": "OWNER",
        "body": "MemoryStream would be the normal way to do this in .NET; I'm not sure\nthere's a need for a specific method to do this. no other .NET serializer\nthat I can think of wraps that up. Thought: is it actually needed?\n\nOn 15 Jul 2017 8:54 p.m., \"sbardos\" <notifications@github.com> wrote:\n\n> RabbitMQ expects a byte array (byte[]) as message.\n> Is there a way to get a byte array back from the serializer?\n>\n> At the moment I write to a Memorystream and get the byte array from there.\n>\n> Thx,\n> Sven\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/282>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsG9wkrh4AdJAReoYAvYqmAyXOnxaks5sORjigaJpZM4OZHEv>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315564636",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/282#issuecomment-315564636",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/282",
        "id": 315564636,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2NDYzNg==",
        "user": {
            "login": "KingKnecht",
            "id": 4339172,
            "node_id": "MDQ6VXNlcjQzMzkxNzI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4339172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KingKnecht",
            "html_url": "https://github.com/KingKnecht",
            "followers_url": "https://api.github.com/users/KingKnecht/followers",
            "following_url": "https://api.github.com/users/KingKnecht/following{/other_user}",
            "gists_url": "https://api.github.com/users/KingKnecht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KingKnecht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KingKnecht/subscriptions",
            "organizations_url": "https://api.github.com/users/KingKnecht/orgs",
            "repos_url": "https://api.github.com/users/KingKnecht/repos",
            "events_url": "https://api.github.com/users/KingKnecht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KingKnecht/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-15T21:32:27Z",
        "updated_at": "2017-07-15T21:40:51Z",
        "author_association": "NONE",
        "body": "Hm, not sure. In case of JSON, serializer returns a string, right? I think this is because one can presume that applications that act on JSON can handle strings as data by default. How is it with protobuf? I think byte array won't be too esoteric. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315568915",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/282#issuecomment-315568915",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/282",
        "id": 315568915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2ODkxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-15T22:59:14Z",
        "updated_at": "2017-07-15T22:59:14Z",
        "author_association": "OWNER",
        "body": "See, when I'm talking binary serializers, I always think of them as writing\n*to* somewhere - a file, a network, etc....\n\nOn 15 July 2017 at 22:32, sbardos <notifications@github.com> wrote:\n\n> Hm, not sure. In case of JSON, serializer returns a string, right? I think\n> this is because one can presume that applications that act on JSON can\n> handle strings as data by default. How is it with protobuf? I think byte\n> array won't be to esoteric.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/282#issuecomment-315564636>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsN3JaxhJUafORG0cAkACdbyHOxH4ks5sOS_rgaJpZM4OZHEv>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315802817",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315802817",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 315802817,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTgwMjgxNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-17T16:17:17Z",
        "updated_at": "2017-07-17T16:17:17Z",
        "author_association": "OWNER",
        "body": "the main reason for that is that I dont have a setup or the experience /\nneed to build and test CF 3.5. The actual code is probably fine. Does CF\nsupport .NET Standard of any flavor? that would be the easiest thing for me\nto support, as I won't require a separate build etc.\n\nOn 17 Jul 2017 4:46 p.m., \"Matt Shindala\" <notifications@github.com> wrote:\n\n> Hi,\n>\n> I'm trying to parse proto3 messages on a device running Compact Framework\n> 3.5. From what I understand, Google's official implementation\n> <https://github.com/google/protobuf/tree/master/csharp> doesn't support\n> Compact Framework at all. From reading your README, protobuf-net supports\n> Compact Framework 3.5 only up to version 2.1.0, and after that it dropped\n> support.\n>\n>    - Does v2.1.0 support proto3?\n>    - Do you know of any other way to get proto3 messages parsed on a\n>    Compact Framework 3.5 device?\n>\n> Thanks.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/283>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDnFb1wjPolMdbERwRtXUo0HHI73ks5sO3VogaJpZM4OaFUm>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315817918",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315817918",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 315817918,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTgxNzkxOA==",
        "user": {
            "login": "mshindal",
            "id": 3990260,
            "node_id": "MDQ6VXNlcjM5OTAyNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3990260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshindal",
            "html_url": "https://github.com/mshindal",
            "followers_url": "https://api.github.com/users/mshindal/followers",
            "following_url": "https://api.github.com/users/mshindal/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshindal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshindal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshindal/subscriptions",
            "organizations_url": "https://api.github.com/users/mshindal/orgs",
            "repos_url": "https://api.github.com/users/mshindal/repos",
            "events_url": "https://api.github.com/users/mshindal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshindal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-17T17:09:39Z",
        "updated_at": "2017-07-17T17:09:39Z",
        "author_association": "NONE",
        "body": "As far as I know CF does not support .NET Standard, unfortunately. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315830362",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315830362",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 315830362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTgzMDM2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-17T17:52:49Z",
        "updated_at": "2017-07-17T17:52:49Z",
        "author_association": "OWNER",
        "body": "Can I ask: what build environment do you use? Are you restricted to VS2008?\n\nOn 17 Jul 2017 6:10 p.m., \"Matt Shindala\" <notifications@github.com> wrote:\n\n> As far as I know CF does not support .NET Standard, unfortunately.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315817918>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLZ_pzJwrYSjUdMrD91hJIZOXec8ks5sO5VTgaJpZM4OaFUm>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315840189",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315840189",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 315840189,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg0MDE4OQ==",
        "user": {
            "login": "mshindal",
            "id": 3990260,
            "node_id": "MDQ6VXNlcjM5OTAyNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3990260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshindal",
            "html_url": "https://github.com/mshindal",
            "followers_url": "https://api.github.com/users/mshindal/followers",
            "following_url": "https://api.github.com/users/mshindal/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshindal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshindal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshindal/subscriptions",
            "organizations_url": "https://api.github.com/users/mshindal/orgs",
            "repos_url": "https://api.github.com/users/mshindal/repos",
            "events_url": "https://api.github.com/users/mshindal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshindal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-17T18:26:40Z",
        "updated_at": "2017-07-17T18:26:40Z",
        "author_association": "NONE",
        "body": "I use VS2008. I don't think Compact Framework development is supported in any release after VS2008. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/315853209",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-315853209",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 315853209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg1MzIwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-17T19:13:51Z",
        "updated_at": "2017-07-17T19:14:52Z",
        "author_association": "OWNER",
        "body": "That's what I thought and is the crux of the difficulty for me. I don't have\r\nVS2008, and I don't really want to install VS2008, etc. It is a major PITA\r\nto support, unfortunately.\r\n\r\nI'm open to good ideas here..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316027669",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-316027669",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 316027669,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjAyNzY2OQ==",
        "user": {
            "login": "rig12",
            "id": 11139702,
            "node_id": "MDQ6VXNlcjExMTM5NzAy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11139702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rig12",
            "html_url": "https://github.com/rig12",
            "followers_url": "https://api.github.com/users/rig12/followers",
            "following_url": "https://api.github.com/users/rig12/following{/other_user}",
            "gists_url": "https://api.github.com/users/rig12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rig12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rig12/subscriptions",
            "organizations_url": "https://api.github.com/users/rig12/orgs",
            "repos_url": "https://api.github.com/users/rig12/repos",
            "events_url": "https://api.github.com/users/rig12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rig12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T10:49:21Z",
        "updated_at": "2017-07-18T10:50:31Z",
        "author_association": "NONE",
        "body": "I fetched from github and built locally, though still seeing 2.3.0.0-gamma version\r\nAnd Name field from ValueMember, which I got by indexer [typeof(HazEnum.SomeEnum)][1] in example above - this is read only property.\r\nDid I get it right?\r\n```\r\ninternal void SetName(string name)\r\n        {\r\n            if (name != this.name)\r\n            {\r\n                ThrowIfFrozen();\r\n                this.name = name;\r\n            }\r\n        }\r\n```\r\nI make ValueMember.SetName public for now, but consider this as temporary solution, and it does workaround."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316036745",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/281#issuecomment-316036745",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/281",
        "id": 316036745,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjAzNjc0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T11:32:53Z",
        "updated_at": "2017-07-18T11:32:53Z",
        "author_association": "OWNER",
        "body": "I suspect that you're seeing some reference confusion - you're main project is probably still referencing the nuget version. Make sure you've completely removed any protobuf-net references before trying to switch to the local build version.\r\n\r\nThe version in git is definitely read/write: https://github.com/mgravell/protobuf-net/blob/master/src/protobuf-net/Meta/ValueMember.cs#L779"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316068429",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-316068429",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 316068429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjA2ODQyOQ==",
        "user": {
            "login": "mshindal",
            "id": 3990260,
            "node_id": "MDQ6VXNlcjM5OTAyNjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3990260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshindal",
            "html_url": "https://github.com/mshindal",
            "followers_url": "https://api.github.com/users/mshindal/followers",
            "following_url": "https://api.github.com/users/mshindal/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshindal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshindal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshindal/subscriptions",
            "organizations_url": "https://api.github.com/users/mshindal/orgs",
            "repos_url": "https://api.github.com/users/mshindal/repos",
            "events_url": "https://api.github.com/users/mshindal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshindal/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T13:46:04Z",
        "updated_at": "2017-07-18T13:46:04Z",
        "author_association": "NONE",
        "body": "I definitely understand not wanting to have old versions of VS installed. The only way to build Compact Framework apps is with VS2008 though. Maybe install it in a VM or Docker or something? Why is it such a PITA to support?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316072048",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-316072048",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 316072048,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjA3MjA0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T13:58:15Z",
        "updated_at": "2017-07-18T13:58:15Z",
        "author_association": "OWNER",
        "body": "> Why is it such a PITA to support?\r\n\r\nbecause a: I don't *have* those things setup currently, b: I don't use CF to know if it *works*, and c: it means I need to create and maintain an entirely separate set of project files / build scripts (the new format csproj is not going to work with VS2008 build tools)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316104571",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/283#issuecomment-316104571",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/283",
        "id": 316104571,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEwNDU3MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-18T15:39:12Z",
        "updated_at": "2017-07-18T15:39:12Z",
        "author_association": "OWNER",
        "body": "and d: because it will mean manually creating and maintaining a nuspec, since I don't think I can include that separate build from `dotnet pack`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316280232",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-316280232",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 316280232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI4MDIzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-19T05:53:41Z",
        "updated_at": "2017-07-19T05:53:41Z",
        "author_association": "OWNER",
        "body": "Are you able to add :\r\n\r\n    RuntimeTypeModel.Default[typeof(BaseClass)]\r\n        .AddSubType(12, typeof(ChildClassA));\r\n\r\nsomewhere at app startup? That would seem a better option. Obviously change 12 to a sensible number."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316405909",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-316405909",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 316405909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQwNTkwOQ==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-19T14:30:23Z",
        "updated_at": "2017-07-19T14:30:23Z",
        "author_association": "NONE",
        "body": "This method can partial solve my problem. In my project i can control the startup.\r\nHowever some of library projects will provide to others use.\r\n\r\nIn some document about Protobuf 3, have two solution for Inheritace: one is use oneof equals to ProtoInclude and the other is \"Composite\" define a property with type is base class.\r\n\r\nIf use ProtoInclude there a two little flaw\r\n1.  When add or remove a child class, you should modify base class.\r\n2. Consider about byte size of field number, use which number as the first ProtoInclude argument sometimes becomes a question.\r\nSince if use a small number when need to add filed to base class the property field number will greater than child class field number, and then add a child class, the child class field number will greater than some property field number, I think it's a little problem.\r\nBut if use a great enough number will west of memory and network bandwidth.\r\n\r\nConsidering these problem, I prefer to add a ProtoInheritAttribute, in .net one class only have one base class just set the base class field number to 1.\r\n\r\nHow do you think?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316509677",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-316509677",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 316509677,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjUwOTY3Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-19T20:38:15Z",
        "updated_at": "2017-07-19T20:38:15Z",
        "author_association": "OWNER",
        "body": "there are very good reasons that injeritance in protobuf-net starts at the\nroot not the leaf. i don't see any way to implement deserialization\nsensibly with leaf-oriented layout. how wouod you propose that would work,\nwith consideration of what gets stored and how that is interpreted?\n\nOn 19 Jul 2017 3:30 p.m., \"chrishaly\" <notifications@github.com> wrote:\n\n> This method can partial solve my problem. In my project i can control the\n> startup.\n> However some of library projects will provide to others use.\n>\n> In some document about Protobuf 3, have two solution for Inheritace: one\n> is use oneof equals to ProtoInclude and the other is \"Composite\" define a\n> property with type is base class.\n>\n> If use ProtoInclude there a two little flaw\n>\n>    1. When add or remove a child class, you should modify base class.\n>    2. Consider about byte size of field number, use which number as the\n>    first ProtoInclude argument sometimes becomes a question.\n>    Since if use a small number when need to add filed to base class the\n>    property field number will greater than child class field number, and then\n>    add a child class, the child class field number will greater than some\n>    property field number, I think it's a little problem.\n>    But if use a great enough number will west of memory and network\n>    bandwidth.\n>\n> Considering these problem, I prefer to add a ProtoInheritAttribute, in\n> .net one class only have one base class just set the base class field\n> number to 1.\n>\n> How do you think?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/284#issuecomment-316405909>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGPlofpOzD9fTOIlFL0caXAVG9iiks5sPhL_gaJpZM4OcOHr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316759288",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-316759288",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 316759288,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc1OTI4OA==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-20T16:32:36Z",
        "updated_at": "2017-07-20T16:32:36Z",
        "author_association": "NONE",
        "body": "I've try to solved this case, and create a pull request\r\nhttps://github.com/mgravell/protobuf-net/pull/287\r\nplease review"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316809563",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/287#issuecomment-316809563",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/287",
        "id": 316809563,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgwOTU2Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-20T19:44:10Z",
        "updated_at": "2017-07-20T19:44:10Z",
        "author_association": "OWNER",
        "body": "The interesting challenges re inheritance aren't when you *know* what the concrete type is. They are when you *don't know* - and only know about the base type. From what I can see, this code will only work in the \"we know what the exact actual type will be\" scenario. This is indeed *a valid scenario*, but is the small %, not the large %.\r\n\r\nIs this the intention? Have I misunderstood?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316900692",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/287#issuecomment-316900692",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/287",
        "id": 316900692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkwMDY5Mg==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-21T04:38:54Z",
        "updated_at": "2017-07-21T04:39:39Z",
        "author_association": "NONE",
        "body": "I'm not clear when don't know the concrete base type is, except generic type.\r\n\r\nI did a test for generic class, it passed.\r\n\r\n```\r\n[ProtoContract]\r\n\t\t[ProtoInherit(1)]\r\n\t\tpublic class MessageChildG<T> : MessageBaseG<MessageChildG<T>>\r\n\t\t{\r\n\t\t\t[ProtoMember(2)]\r\n\t\t\tpublic string Name { get; set; }\r\n\r\n\t\t\t[ProtoMember(3)]\r\n\t\t\tpublic Pet Pet { get; set; }\r\n\r\n\r\n\t\t\t[ProtoMember(4)]\r\n\t\t\tpublic T ValueG { get; set; }\r\n\t\t}\r\n\r\n\t[Fact]\r\n\t\tpublic void GenericTest1()\r\n\t\t{\r\n\t\t\tvar name = \"Hello\";\r\n\t\t\tvar id = 9;\r\n\t\t\tvar petId = 67;\r\n\t\t\tvar petName = \"Cat\";\r\n\r\n\t\t\tvar person = new MessageChildG<string>\r\n\t\t\t{\r\n\t\t\t\tId = id,\r\n\t\t\t\tName = name,\r\n\t\t\t\tPet = new Pet\r\n\t\t\t\t{\r\n\t\t\t\t\tPetId = petId,\r\n\t\t\t\t\tPetName = petName\r\n\t\t\t\t},\r\n\t\t\t\tValueG = \"value in generic parameter type\",\r\n\t\t\t};\r\n\r\n\t\t\tusing (var ms = new MemoryStream())\r\n\t\t\t{\r\n\t\t\t\tSerializer.Serialize(ms, person);\r\n\t\t\t\tms.Position = 0;\r\n\t\t\t\tvar dobj = Serializer.Deserialize<MessageChildG<string>>(ms);\r\n\r\n\t\t\t\tAssert.Equal(id, dobj.Id);\r\n\t\t\t\tAssert.Equal(name, dobj.Name);\r\n\t\t\t\tAssert.Equal(petId, dobj.Pet.PetId);\r\n\t\t\t\tAssert.Equal(petName, dobj.Pet.PetName);\r\n\t\t\t}\r\n\t\t}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316918552",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/287#issuecomment-316918552",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/287",
        "id": 316918552,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkxODU1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-21T06:45:00Z",
        "updated_at": "2017-07-21T06:45:00Z",
        "author_association": "OWNER",
        "body": "No, I mean when you don't know what the **derived** type is. For example, with :\r\n\r\n    Vehicle\r\n    RoadVehicle : Vehicle\r\n    Car : RoadVehicle\r\n    Bike : RoadVehicle\r\n    Train : Vehicle\r\n\r\nAnd all you know to expect is a Vehicle. Ultimately this is the problem that ProtoInclude solves via root-based serialization. What you have is leaf-based serialization, which only works for specific types - it would be fine if you know to expect a Car, for example.\r\n\r\nIs this an intentional limitation?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/316938352",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/287#issuecomment-316938352",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/287",
        "id": 316938352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjkzODM1Mg==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-21T08:24:41Z",
        "updated_at": "2017-07-21T08:24:41Z",
        "author_association": "NONE",
        "body": "yes you are right\r\n\r\nchange code from\r\n```\r\nif (actualType.GetBaseType() == forType) return null; //for BaseTypeSerializer\r\n```\r\nto\r\n```\r\nif (forType.IsAssignableFrom(actualType)) return null; //for BaseTypeSerializer\r\n```\r\nin  TypeSerializer.cs, serialization/deserialization works fine.\r\n\r\nthe theory of ProtoInherit is Add a Virtual Member(BaseType) to Current Type, when serialize except current  type's properties also serialize BaseType as a member. no matter what the concrete type is, just the serializer can read or write BaseType's properties from(or to) the concrete type is ok.\r\n\r\n```\r\n\tpublic class ProtoInheritTest\r\n\t{\r\n\t\t[Fact]\r\n\t\tpublic void ChildsChildTest()\r\n\t\t{\r\n\t\t\tvar name = \"DS 2017\";\r\n\t\t\tvar id = 9;\r\n\t\t\tvar diameter = 67;\r\n\t\t\tvar license = \"CAR3256\";\r\n\t\t\tvar passengerCapacity = 4;\r\n\r\n\t\t\tvar car = new Car\r\n\t\t\t{\r\n\t\t\t\tId = id,\r\n\t\t\t\tName = name,\r\n\t\t\t\tWheels = new[]\r\n\t\t\t\t{\r\n\t\t\t\t\tnew Wheel\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDiameter = diameter,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tLicense = license,\r\n\t\t\t\tPassengerCapacity = passengerCapacity,\r\n\t\t\t};\r\n\r\n\t\t\tusing (var ms = new MemoryStream())\r\n\t\t\t{\r\n\t\t\t\tSerializer.Serialize(ms, car);\r\n\r\n\t\t\t\tms.Position = 0;\r\n\t\t\t\tvar dobj = Serializer.Deserialize<Car>(ms);\r\n\r\n\t\t\t\tAssert.Equal(id, dobj.Id);\r\n\t\t\t\tAssert.Equal(name, dobj.Name);\r\n\t\t\t\tAssert.Equal(diameter, dobj.Wheels[0].Diameter);\r\n\t\t\t\tAssert.Equal(license, dobj.License);\r\n\t\t\t\tAssert.Equal(passengerCapacity, dobj.PassengerCapacity);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t[ProtoContract]\r\n\t\tpublic class Vehicle\r\n\t\t{\r\n\t\t\t[ProtoMember(1)]\r\n\t\t\tpublic int Id { get; set; }\r\n\r\n\t\t\t[ProtoMember(2)]\r\n\t\t\tpublic virtual string Name { get; set; }\r\n\t\t}\r\n\r\n\t\t[ProtoContract]\r\n\t\t[ProtoInherit(1)]\r\n\t\tpublic class RoadVehicle : Vehicle\r\n\t\t{\r\n\t\t\t[ProtoMember(2)]\r\n\t\t\tpublic string License { get; set; }\r\n\r\n\t\t\t[ProtoMember(3)]\r\n\t\t\tpublic Wheel[] Wheels { get; set; }\r\n\t\t}\r\n\r\n\t\t[ProtoContract]\r\n\t\t[ProtoInherit(1)]\r\n\t\tpublic class Car : RoadVehicle\r\n\t\t{\r\n\t\t\t[ProtoMember(2)]\r\n\t\t\tpublic int PassengerCapacity { get; set; }\r\n\t\t}\r\n\r\n\t\t[ProtoContract]\r\n\t\tpublic class Wheel\r\n\t\t{\r\n\t\t\t[ProtoMember(1)]\r\n\t\t\tpublic int Diameter { get; set; }\r\n\t\t}\r\n\t}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/317436360",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/288#issuecomment-317436360",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/288",
        "id": 317436360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQzNjM2MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-24T14:16:16Z",
        "updated_at": "2017-07-24T14:16:50Z",
        "author_association": "OWNER",
        "body": "closing as duplicate of #289 (technically this one was first obviously, but status update is already in 289)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/318048187",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/290#issuecomment-318048187",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/290",
        "id": 318048187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA0ODE4Nw==",
        "user": {
            "login": "jgrossrieder",
            "id": 7582002,
            "node_id": "MDQ6VXNlcjc1ODIwMDI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7582002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgrossrieder",
            "html_url": "https://github.com/jgrossrieder",
            "followers_url": "https://api.github.com/users/jgrossrieder/followers",
            "following_url": "https://api.github.com/users/jgrossrieder/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgrossrieder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgrossrieder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgrossrieder/subscriptions",
            "organizations_url": "https://api.github.com/users/jgrossrieder/orgs",
            "repos_url": "https://api.github.com/users/jgrossrieder/repos",
            "events_url": "https://api.github.com/users/jgrossrieder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgrossrieder/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T13:09:37Z",
        "updated_at": "2017-07-26T13:09:37Z",
        "author_association": "NONE",
        "body": "I also did encounter some other cases where it seems that the AsReferenceDefault was just ignored, and I had to put the AsReference =true too, not exactly sure why."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/318182108",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/290#issuecomment-318182108",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/290",
        "id": 318182108,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODE4MjEwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T21:03:36Z",
        "updated_at": "2017-07-26T21:03:36Z",
        "author_association": "OWNER",
        "body": "Yes, I saw the two questions (One of them even has or had a bounty, which is awesome). This is already on my list to look at, but I have not had time to look in the last few days as my daughter is unwell. Thanks for adding a github issue though - it will make it easier to track and make sure I investigate."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319416554",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319416554",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319416554,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQxNjU1NA==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-01T16:04:25Z",
        "updated_at": "2017-08-01T16:13:15Z",
        "author_association": "NONE",
        "body": "I have  exactly the same issue after upgrading from 2.1.0 to 2.3.0/2.3.1.\r\nI do **not** get this error when using 2.2.1 or 2.1.0\r\n\r\n@mgravell  seems like the issue was introduced back with 2.3.0 and persists in 2.3.1. Please let me know if mistaken.\r\n\r\nEDIT: \r\nMore details - error occurs while de-serializing the data using 2.3.0 or 2.3.1, which was serialized by using 2.1.0. Exception below - \r\n\r\n```\r\nInvalid wire-type; this usually means you have over-written a file without truncating or setting the length; see http://stackoverflow.com/q/2152978/23354\r\nat ProtoBuf.ProtoReader.StartSubItem(ProtoReader reader)\r\nat ProtoBuf.ProtoReader.ReadTypedObject(Object value, Int32 key, ProtoReader reader, Type type)\r\nat proto_78(Object , ProtoReader )\r\nat ProtoBuf.Meta.TypeModel.DeserializeCore(ProtoReader reader, Type type, Object value, Boolean noAutoCreate)\r\nat ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context)\r\nat ProtoBuf.Serializer.Deserialize[T](Stream source)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319442628",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319442628",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319442628,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQ0MjYyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-01T17:38:34Z",
        "updated_at": "2017-08-01T17:38:34Z",
        "author_association": "OWNER",
        "body": "@newton3 do you have anything I can use to repro this? It is quite hard to diagnose *just* from a stacktrace - a minimal repro would make it a lot easier to find what the problem is"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319446529",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319446529",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319446529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQ0NjUyOQ==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-01T17:52:46Z",
        "updated_at": "2017-08-01T17:52:46Z",
        "author_association": "NONE",
        "body": "I understand. Trying to come up with a minimal repro."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319564317",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-319564317",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 319564317,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTU2NDMxNw==",
        "user": {
            "login": "rushfrisby",
            "id": 574729,
            "node_id": "MDQ6VXNlcjU3NDcyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rushfrisby",
            "html_url": "https://github.com/rushfrisby",
            "followers_url": "https://api.github.com/users/rushfrisby/followers",
            "following_url": "https://api.github.com/users/rushfrisby/following{/other_user}",
            "gists_url": "https://api.github.com/users/rushfrisby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rushfrisby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rushfrisby/subscriptions",
            "organizations_url": "https://api.github.com/users/rushfrisby/orgs",
            "repos_url": "https://api.github.com/users/rushfrisby/repos",
            "events_url": "https://api.github.com/users/rushfrisby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rushfrisby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T04:30:41Z",
        "updated_at": "2017-08-02T04:30:41Z",
        "author_association": "NONE",
        "body": "Your surrogate should be\r\n```csharp\r\nusing System;\r\nusing System.Runtime.Serialization;\r\n\r\nnamespace ProtobufNetTest\r\n{\r\n    [DataContract(Name = nameof(DateTimeOffset))]\r\n    public class DateTimeOffsetSurrogate\r\n    {\r\n        [DataMember(Order = 1)]\r\n        public long? Value { get; set; }\r\n\r\n        public static implicit operator DateTimeOffset(DateTimeOffsetSurrogate surrogate)\r\n        {\r\n            return DateTimeOffset.FromUnixTimeMilliseconds(surrogate.Value.Value);\r\n        }\r\n\r\n        public static implicit operator DateTimeOffset?(DateTimeOffsetSurrogate surrogate)\r\n        {\r\n            return surrogate != null ? DateTimeOffset.FromUnixTimeMilliseconds(surrogate.Value.Value) : (DateTimeOffset?)null;\r\n        }\r\n\r\n        public static implicit operator DateTimeOffsetSurrogate(DateTimeOffset source)\r\n        {\r\n            return new DateTimeOffsetSurrogate\r\n            {\r\n                Value = source.ToUnixTimeMilliseconds()\r\n            };\r\n        }\r\n\r\n        public static implicit operator DateTimeOffsetSurrogate(DateTimeOffset? source)\r\n        {\r\n            return new DateTimeOffsetSurrogate\r\n            {\r\n                Value = source?.ToUnixTimeMilliseconds()\r\n            };\r\n        }\r\n    }\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319577640",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-319577640",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 319577640,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTU3NzY0MA==",
        "user": {
            "login": "odysseus1973",
            "id": 7000262,
            "node_id": "MDQ6VXNlcjcwMDAyNjI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7000262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odysseus1973",
            "html_url": "https://github.com/odysseus1973",
            "followers_url": "https://api.github.com/users/odysseus1973/followers",
            "following_url": "https://api.github.com/users/odysseus1973/following{/other_user}",
            "gists_url": "https://api.github.com/users/odysseus1973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odysseus1973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odysseus1973/subscriptions",
            "organizations_url": "https://api.github.com/users/odysseus1973/orgs",
            "repos_url": "https://api.github.com/users/odysseus1973/repos",
            "events_url": "https://api.github.com/users/odysseus1973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odysseus1973/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T06:12:08Z",
        "updated_at": "2017-08-02T06:12:08Z",
        "author_association": "NONE",
        "body": "Thanks! I will try it, but why surrogate can't use string and how to register surrogate correctly? When I was debugging I did not see that the surrogate was called, so i think my problem with surrogate registration."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319594941",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/292#issuecomment-319594941",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/292",
        "id": 319594941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTU5NDk0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T07:44:43Z",
        "updated_at": "2017-08-02T07:44:43Z",
        "author_association": "OWNER",
        "body": "Not currently, no.\n\nOn 2 Aug 2017 6:21 a.m., \"Rush Frisby\" <notifications@github.com> wrote:\n\n> To work around protobuf-net's handling of Guids which other languages\n> don't know how to work with I've ended up doing this a lot:\n>\n> [DataContract]public class TestResult\n> {\n>     public Guid Id { get; set; }\n>\n>     [DataMember(Order = 1)]\n>     private string IdValue\n>     {\n>         get\n>         {\n>             return Id.ToString();\n>         }\n>         set\n>         {\n>             Id = Guid.Parse(value);\n>         }\n>     }\n> }\n>\n> This can get messy if Guids are used a lot and I'd like to use a surrogate\n> instead:\n>\n> RuntimeTypeModel.Default.Add(typeof(Guid), true).SetSurrogate(typeof(GuidSurrogate));\n>\n> however, I get this runtime exception:\n>\n> System.ArgumentException: 'Data of this type has inbuilt behaviour, and\n> cannot be added to a model in this way: System.Guid'\n>\n> Is there any way to get around this?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/292>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKfaYB60r8IuQ4QdTioS9SorXg86ks5sUAdRgaJpZM4OqnLZ>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319694028",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-319694028",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 319694028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTY5NDAyOA==",
        "user": {
            "login": "rushfrisby",
            "id": 574729,
            "node_id": "MDQ6VXNlcjU3NDcyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rushfrisby",
            "html_url": "https://github.com/rushfrisby",
            "followers_url": "https://api.github.com/users/rushfrisby/followers",
            "following_url": "https://api.github.com/users/rushfrisby/following{/other_user}",
            "gists_url": "https://api.github.com/users/rushfrisby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rushfrisby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rushfrisby/subscriptions",
            "organizations_url": "https://api.github.com/users/rushfrisby/orgs",
            "repos_url": "https://api.github.com/users/rushfrisby/repos",
            "events_url": "https://api.github.com/users/rushfrisby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rushfrisby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T14:43:12Z",
        "updated_at": "2017-08-02T14:43:12Z",
        "author_association": "NONE",
        "body": "The way you registered surrogates is correct however your class has a `DateTimeOffset?` property and your surrogate has no operators for converting between the two. Your surrogate only has operators for `DateTimeOffset` which is a different _type_.\r\n\r\nSure you can serialize the value as a string. I used long and the unix time value because the output is smaller than the string representation and faster than converting to/from a string."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319706009",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-319706009",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 319706009,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTcwNjAwOQ==",
        "user": {
            "login": "odysseus1973",
            "id": 7000262,
            "node_id": "MDQ6VXNlcjcwMDAyNjI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7000262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odysseus1973",
            "html_url": "https://github.com/odysseus1973",
            "followers_url": "https://api.github.com/users/odysseus1973/followers",
            "following_url": "https://api.github.com/users/odysseus1973/following{/other_user}",
            "gists_url": "https://api.github.com/users/odysseus1973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odysseus1973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odysseus1973/subscriptions",
            "organizations_url": "https://api.github.com/users/odysseus1973/orgs",
            "repos_url": "https://api.github.com/users/odysseus1973/repos",
            "events_url": "https://api.github.com/users/odysseus1973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odysseus1973/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T15:22:46Z",
        "updated_at": "2017-08-02T16:02:18Z",
        "author_association": "NONE",
        "body": "Thanks for answer! I specifically did not delete the commented lines in code block in my question, I tried it, but without success. How does converting to UnixTime support the time zone?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319733225",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-319733225",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 319733225,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTczMzIyNQ==",
        "user": {
            "login": "rushfrisby",
            "id": 574729,
            "node_id": "MDQ6VXNlcjU3NDcyOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/574729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rushfrisby",
            "html_url": "https://github.com/rushfrisby",
            "followers_url": "https://api.github.com/users/rushfrisby/followers",
            "following_url": "https://api.github.com/users/rushfrisby/following{/other_user}",
            "gists_url": "https://api.github.com/users/rushfrisby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rushfrisby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rushfrisby/subscriptions",
            "organizations_url": "https://api.github.com/users/rushfrisby/orgs",
            "repos_url": "https://api.github.com/users/rushfrisby/repos",
            "events_url": "https://api.github.com/users/rushfrisby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rushfrisby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T16:56:07Z",
        "updated_at": "2017-08-02T16:56:07Z",
        "author_association": "NONE",
        "body": "By definition it takes into account the time zone since unix time starts at 1/1/1970 00:00:00 (UTC)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319779635",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319779635",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319779635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc3OTYzNQ==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T19:52:38Z",
        "updated_at": "2017-08-02T19:52:38Z",
        "author_association": "NONE",
        "body": "@mgravell I was able to repro the issue with a simple console app and pinned the issue down to a custom implementation of IDictionary<Tkey, TValue>. When serialized with 2.1.0, deserializing after upgrading to v 2.3.1 throws the above error. \r\nI will email you the sample console app at marc.gravell@gmail.com"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319783048",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319783048",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319783048,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4MzA0OA==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T20:06:37Z",
        "updated_at": "2017-08-02T20:06:37Z",
        "author_association": "NONE",
        "body": "having difficulty with email - so created a repo for you to check out the code - https://github.com/newton3/protobuf-2.3.1-error"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319785448",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319785448",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319785448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4NTQ0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T20:16:20Z",
        "updated_at": "2017-08-02T20:16:20Z",
        "author_association": "OWNER",
        "body": "thanks; will look momentarily - as a temporary workaround (without even\nchecking): try adding [ProtoMap(DisableMap=true)] to the afflicted member\n\nOn 2 Aug 2017 9:06 p.m., \"Abhishek\" <notifications@github.com> wrote:\n\n> having difficulty with email - so created a repo for you to check out the\n> code - https://github.com/newton3/protobuf-2.3.1-error\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319783048>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsA2SImziRsgnJ1GMidmlxjYr_xO1ks5sUNbNgaJpZM4Nm4Ke>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/319786270",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-319786270",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 319786270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTc4NjI3MA==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-02T20:19:17Z",
        "updated_at": "2017-08-02T20:19:17Z",
        "author_association": "NONE",
        "body": "Thanks for your quick response.. that does solve the issue!\r\nWill wait for your complete diagnosis."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320017180",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320017180",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 320017180,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDAxNzE4MA==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-03T16:13:56Z",
        "updated_at": "2017-08-03T16:13:56Z",
        "author_association": "NONE",
        "body": "@mgravell is there any workaround to apply globally or at the type level? the Dictionary is  being used at a number of places and it is a huge change to find and fix all the members. Are you going to open a new issue to track this ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320017684",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320017684",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 320017684,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDAxNzY4NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-03T16:15:49Z",
        "updated_at": "2017-08-03T16:15:49Z",
        "author_association": "OWNER",
        "body": "I was hoping to look at it last night, but family stuff happened. I hope to\nhave a fix for this deployed very soon. No there is no global \"disable\nmaps\" switch right now.\n\nOn 3 Aug 2017 5:13 p.m., \"Abhishek\" <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell> is there any workaround to apply\n> globally or at the type level? the Dictionary is being used at a number of\n> places and it is a huge change to find and fix all the members. Are you\n> going to open a new issue to track this ?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320017180>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDtrDDm3CuYicH1yMAQu7l4XyYSOks5sUfHFgaJpZM4Nm4Ke>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320279618",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320279618",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 320279618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI3OTYxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-04T15:32:19Z",
        "updated_at": "2017-08-04T15:32:19Z",
        "author_association": "OWNER",
        "body": "K; cause has been identified and patch created; I'm just running the\nregression tests. Do I have your permission to use the code from your repro\nrepo to add to the test suite?\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320279956",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320279956",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 320279956,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI3OTk1Ng==",
        "user": {
            "login": "newton3",
            "id": 13262173,
            "node_id": "MDQ6VXNlcjEzMjYyMTcz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13262173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/newton3",
            "html_url": "https://github.com/newton3",
            "followers_url": "https://api.github.com/users/newton3/followers",
            "following_url": "https://api.github.com/users/newton3/following{/other_user}",
            "gists_url": "https://api.github.com/users/newton3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/newton3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/newton3/subscriptions",
            "organizations_url": "https://api.github.com/users/newton3/orgs",
            "repos_url": "https://api.github.com/users/newton3/repos",
            "events_url": "https://api.github.com/users/newton3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/newton3/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-04T15:33:41Z",
        "updated_at": "2017-08-04T15:33:41Z",
        "author_association": "NONE",
        "body": "yes, thank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320284773",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320284773",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/256",
        "id": 320284773,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI4NDc3Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-04T15:53:19Z",
        "updated_at": "2017-08-04T15:53:19Z",
        "author_association": "OWNER",
        "body": "Nuget is pushed: https://www.nuget.org/packages/protobuf-net/2.3.2\n\nRelease notes should auto-update in a few minutes:\nhttps://mgravell.github.io/protobuf-net/releasenotes\n\nOn 4 August 2017 at 16:33, Abhishek <notifications@github.com> wrote:\n\n> yes, thank you!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/256#issuecomment-320279956>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCRtjfDvgcS1tK91Y1hU1nyWHCknks5sUznWgaJpZM4Nm4Ke>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320509132",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320509132",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 320509132,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUwOTEzMg==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-06T14:06:54Z",
        "updated_at": "2017-08-06T14:06:54Z",
        "author_association": "NONE",
        "body": "@mgravell \r\nI've improved the code for ProtoInherit please help me to review https://github.com/mgravell/protobuf-net/compare/master...chrishaly:master, if it's ok I will create a pull request. Or else please give me some advise."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320518038",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320518038",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 320518038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUxODAzOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-06T16:44:26Z",
        "updated_at": "2017-08-06T16:44:26Z",
        "author_association": "OWNER",
        "body": "will happily review, but would ideally like some words first - i.e. how is\nit modelling this at the serialization format layer? what are the rules?\nKinda like the info in this answer:\nhttps://stackoverflow.com/a/45162348/23354\n\nOn 6 Aug 2017 3:06 p.m., \"Chris Huang\" <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell>\n> I've improved the code for ProtoInherit please help me to review\n> master...chrishaly:master\n> <https://github.com/mgravell/protobuf-net/compare/master...chrishaly:master>,\n> if it's ok I will create a pull request. Or else please give me some advise.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320509132>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsAkdRxxALHZqDt8kxaiX94OzIQyuks5sVch_gaJpZM4OcOHr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320568371",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320568371",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 320568371,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU2ODM3MQ==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-07T04:52:58Z",
        "updated_at": "2017-08-07T04:52:58Z",
        "author_association": "NONE",
        "body": "* the ProtoInherit is used on SubType, which treat BaseType as a (virtual) Field\r\n* Field number of BaseType suggest to be 1, in .NET just support single inheritace\r\n* just keep in concrete class fieldNumber of ProtoInherit not duplicate with fields & ProtoInclude's fieldNumber, no need to think about field number in BaseType or it's SubType.\r\nusage as following, MessageChild is equals to MessageChildB\r\n``` csharp\r\n        [ProtoContract]\r\n        public class MessageBase\r\n        {\r\n            [ProtoMember(1)]\r\n            public int Id { get; set; }\r\n        }\r\n\r\n        [ProtoContract]\r\n        [ProtoInherit(1)] //fieldNumber_inherit\r\n        //[ProtoInclude(fieldNumber_include_x)] //if exist\r\n        public class MessageChild : MessageBase\r\n        {\r\n            [ProtoMember(2)] //fieldfieldNumber_include_x\r\n            public string Name { get; set; }\r\n        }\r\n\r\n        [ProtoContract]\r\n        public class MessageChildB\r\n        {\r\n            [ProtoMember(1)]\r\n            public MessageBase Base { get; set; }\r\n\r\n            [ProtoMember(2)]\r\n            public string Name { get; set; }\r\n        }\r\n```\r\nabout fieldNumber it said that fieldNumber_inherit, fieldNumber_include_x, fieldfieldNumber_include_x must be unique as above.\r\n\r\nin terms of proto2 syntax:\r\n``` proto\r\nmessage MessageBase {\r\n    optional int32 Id = 1;\r\n}\r\nmessage MessageChild {\r\n    optional MessageBase _Base = 1;\r\n    optional string Name = 2;\r\n}\r\nmessage MessageChild {\r\n    optional MessageBase Base = 1;\r\n    optional string Name = 2;\r\n}\r\n```\r\n\r\nin terms of proto3 syntax:\r\n``` proto\r\nsyntax = \"proto3\";\r\n\r\nmessage MessageBase {\r\n    int32 Id = 1;\r\n}\r\nmessage MessageChild {\r\n    MessageBase _Base = 1;\r\n    string Name = 2;\r\n}\r\nmessage MessageChildB {\r\n    MessageBase Base = 1;\r\n    string Name = 2;\r\n}\r\n```\r\noneof is not sutable for ProtoInherit."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320577171",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-320577171",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 320577171,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU3NzE3MQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-07T06:10:21Z",
        "updated_at": "2017-08-07T06:10:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "Bad idea? :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320590892",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/294#issuecomment-320590892",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/294",
        "id": 320590892,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU5MDg5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-07T07:34:35Z",
        "updated_at": "2017-08-07T07:34:35Z",
        "author_association": "OWNER",
        "body": "I haven't written a single line of code there. All I've done is read the\nspec and think about options. So there is nothing to play with *right now*.\n\nOn 7 Aug 2017 8:15 a.m., \"\u6124\u6012\u7684TryCatch\" <notifications@github.com> wrote:\n\n> [image: 12]\n> <https://user-images.githubusercontent.com/9330061/29015990-fc52725c-7b82-11e7-9679-01a03c496c5a.png>\n>\n> I see the V3 version plan to support GRPC and whether GRPC can be\n> supported in advance\uff1f\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/294>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsErfz2nVRFF75I4Y-31EauxUgSTpks5sVrmsgaJpZM4OvEsZ>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320591706",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-320591706",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 320591706,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU5MTcwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-07T07:38:52Z",
        "updated_at": "2017-08-07T07:38:52Z",
        "author_association": "OWNER",
        "body": "No judgement implied. I've simply been up to my eyeballs (busy), with barely enough time for critical bug fixes. Will get to it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/320592923",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320592923",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 320592923,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU5MjkyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-07T07:45:22Z",
        "updated_at": "2017-08-07T07:45:22Z",
        "author_association": "OWNER",
        "body": "right; now with that layout, there are certain restrictions and limitations\nthat are imposed, in particular relating to polymorphism - you basically\nneed to know the exact concrete type in order to deserialize, which is the\nopposite of the LSP / regular inheritance.\n\nI'm not trying to labor the point but I want to be really really clear in\nmy mind: what is the target scenario here? When would this be more\nappealing than the existing inheritance approach?\n\nOn 7 Aug 2017 5:52 a.m., \"Chris Huang\" <notifications@github.com> wrote:\n\n>\n>    - the ProtoInherit is used on SubType, which treat BaseType as a\n>    (virtual) Field\n>    - Field number of BaseType suggest to be 1, in .NET just support\n>    single inheritace\n>    - just keep in concrete class fieldNumber of ProtoInherit not\n>    duplicate with fields & ProtoInclude's fieldNumber, no need to think about\n>    field number in BaseType or it's SubType.\n>    usage as following, MessageChild is equals to MessageChildB\n>\n>         [ProtoContract]\n>         public class MessageBase\n>         {\n>             [ProtoMember(1)]\n>             public int Id { get; set; }\n>         }\n>\n>         [ProtoContract]\n>         [ProtoInherit(1)] //fieldNumber_inherit\n>         //[ProtoInclude(fieldNumber_include_x)] //if exist\n>         public class MessageChild : MessageBase\n>         {\n>             [ProtoMember(2)] //fieldfieldNumber_include_x\n>             public string Name { get; set; }\n>         }\n>\n>         [ProtoContract]\n>         public class MessageChildB\n>         {\n>             [ProtoMember(1)]\n>             public MessageBase Base { get; set; }\n>\n>             [ProtoMember(2)]\n>             public string Name { get; set; }\n>         }\n>\n> about fieldNumber it said that fieldNumber_inherit, fieldNumber_include_x,\n> fieldfieldNumber_include_x must be unique as above.\n>\n> in terms of proto2 syntax:\n>\n> message MessageBase {\n>     optional int32 Id = 1;\n> }message MessageChild {\n>     optional MessageBase _Base = 1;\n>     optional string Name = 2;\n> }message MessageChild {\n>     optional MessageBase Base = 1;\n>     optional string Name = 2;\n> }\n>\n> in terms of proto3 syntax:\n>\n> syntax = \"proto3\";\n> message MessageBase {\n>     int32 Id = 1;\n> }message MessageChild {\n>     MessageBase _Base = 1;\n>     string Name = 2;\n> }message MessageChildB {\n>     MessageBase Base = 1;\n>     string Name = 2;\n> }\n>\n> oneof is not sutable for ProtoInherit.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/284#issuecomment-320568371>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsINQp3eemnc89P1sifHIlzb8aTulks5sVpgqgaJpZM4OcOHr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321187099",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/296#issuecomment-321187099",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/296",
        "id": 321187099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE4NzA5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-09T08:18:21Z",
        "updated_at": "2017-08-09T08:18:21Z",
        "author_association": "OWNER",
        "body": "In the C#, I assume that is a System.DateTime, not your own DateTime message? In which case indeed: the way that protobuf-net will encode that System.DateTime is not the same as your DateTime message in the .proto\r\n\r\nGood news: fixable.\r\n\r\nOptions:\r\n\r\n- if you need to keep the DateTime from your .proto, you can do that but you'll need to create a .NET type that looks like that - presumably simply by running your .proto through protogen (https://protogen.marcgravell.com is the easiest way to do this)\r\n- alternatively, use `google.protobuf.Timestamp`, the \"well known\" mechanism to express date/time info - protobuf-net supports this, including protogen (you'll need to import \"google/timestamp.proto\") and code-first (use DataFormat.WellKnown on that property); note that this option replaces the DateTime you've defined in your .proto and will change the data - and the change needs to be shared between all callers\r\n\r\nOther options exist, but those are the simplest"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321187910",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/296#issuecomment-321187910",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/296",
        "id": 321187910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE4NzkxMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-09T08:21:52Z",
        "updated_at": "2017-08-09T08:21:52Z",
        "author_association": "OWNER",
        "body": "Note: if you have existing protobuf-net data that was serialized with the class shown, and you want to deserialize that in another client - then: it gets harder. Until relatively recently there was no \"well known\" format for dates/times, so protobuf-net invented one. Unfortunately the representation it used is not the one that got chosen, and is awkward to use from other clients. There is a .proto for it, though - see bcl.proto / DateTime: https://github.com/mgravell/protobuf-net/blob/master/src/Tools/bcl.proto\r\n\r\nIf possible, when using cross-platform clients, I suggest moving to the new \"well known\" formats for dates/times, but: this is fundamentally incompatible with any existing data stored using the bcl.proto approach."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321477178",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/297#issuecomment-321477178",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/297",
        "id": 321477178,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ3NzE3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-10T07:45:23Z",
        "updated_at": "2017-08-10T07:45:23Z",
        "author_association": "OWNER",
        "body": "thats very odd; I will need to take a look, but that \"actual\" indeed looks\nvery unlikely\n\nOn 10 Aug 2017 8:13 a.m., \"mizuno-gsinet\" <notifications@github.com> wrote:\n\n> I have encountered the following problem:\n>\n> using System.Collections.Generic;using ProtoBuf;using ProtoBuf.Meta;\n> namespace ProtobufNetTest\n> {\n>     [ProtoContract(IgnoreListHandling = true)]\n>     public class Inner : List<int>\n>     {\n>         [ProtoMember(1)]\n>         public int Int { get; set; }\n>     }\n>\n>     [ProtoContract]\n>     public class Outer\n>     {\n>         [ProtoMember(1)]\n>         public bool Bool { get; set; }\n>\n>         public Inner Inner { get; set; }\n>     }\n>\n>     public class Program\n>     {\n>         public static void Main(string[] args)\n>         {\n>             var typeModel = TypeModel.Create();\n>             typeModel.UseImplicitZeroDefaults = false;\n>\n>             typeModel.Add(typeof(Outer), true)\n>                 .AddField(2, \"Inner\");\n>             System.Diagnostics.Trace.WriteLine(typeModel.GetSchema(typeof(Outer), ProtoSyntax.Proto3));\n>         }\n>     }\n> }\n>\n> Expected output:\n>\n> syntax = \"proto3\";\n> package EFTest;\n>\n> message Inner {\n>    int32 Int = 1;\n> }\n> message Outer {\n>    bool Bool = 1;\n>    Inner Inner = 2;\n> }\n>\n> Actual output:\n>\n> syntax = \"proto3\";\n> package EFTest;\n>\n> message Outer {\n>    bool Bool = 1;\n>    repeated int32 Inner = 2 [packed = false];\n> }\n>\n> Of course, this is not my actual usage, but I really miss this behavior.\n> Am I missing some points?\n>\n> Thank you.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/297>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPSg0TBjkN7Mw0IehmpvKie3VB4Bks5sWq21gaJpZM4OzCEd>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321477531",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/297#issuecomment-321477531",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/297",
        "id": 321477531,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ3NzUzMQ==",
        "user": {
            "login": "mizuno-gsinet",
            "id": 29035331,
            "node_id": "MDQ6VXNlcjI5MDM1MzMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29035331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizuno-gsinet",
            "html_url": "https://github.com/mizuno-gsinet",
            "followers_url": "https://api.github.com/users/mizuno-gsinet/followers",
            "following_url": "https://api.github.com/users/mizuno-gsinet/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizuno-gsinet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizuno-gsinet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizuno-gsinet/subscriptions",
            "organizations_url": "https://api.github.com/users/mizuno-gsinet/orgs",
            "repos_url": "https://api.github.com/users/mizuno-gsinet/repos",
            "events_url": "https://api.github.com/users/mizuno-gsinet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizuno-gsinet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-10T07:47:02Z",
        "updated_at": "2017-08-10T07:47:02Z",
        "author_association": "NONE",
        "body": "@mgravell Thank you. [This](https://stackoverflow.com/questions/42600663/protobuf-net-addfield-ignores-ignorelisthandling) SO question seems relevant."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321486287",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/295#issuecomment-321486287",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/295",
        "id": 321486287,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ4NjI4Nw==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-10T08:27:05Z",
        "updated_at": "2017-08-10T08:27:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "The corresponding passing test is [here](https://github.com/mgravell/protobuf-net/blob/59b83356149a6df5027631421e2d6e03c8708725/src/Examples/Issues/SO14436606.cs)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321490566",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/295#issuecomment-321490566",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/295",
        "id": 321490566,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ5MDU2Ng==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-10T08:46:13Z",
        "updated_at": "2017-08-10T08:46:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think you missed setting AsReference for Items."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321791601",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/295#issuecomment-321791601",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/295",
        "id": 321791601,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTc5MTYwMQ==",
        "user": {
            "login": "Serj8500",
            "id": 29704028,
            "node_id": "MDQ6VXNlcjI5NzA0MDI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/29704028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Serj8500",
            "html_url": "https://github.com/Serj8500",
            "followers_url": "https://api.github.com/users/Serj8500/followers",
            "following_url": "https://api.github.com/users/Serj8500/following{/other_user}",
            "gists_url": "https://api.github.com/users/Serj8500/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Serj8500/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Serj8500/subscriptions",
            "organizations_url": "https://api.github.com/users/Serj8500/orgs",
            "repos_url": "https://api.github.com/users/Serj8500/repos",
            "events_url": "https://api.github.com/users/Serj8500/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Serj8500/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-11T11:46:39Z",
        "updated_at": "2017-08-11T11:46:39Z",
        "author_association": "NONE",
        "body": "Hi Lucian,\r\n\r\nThank you for your response! \r\n\r\nIt seems that before 2.3.0 everything worked fine without setting AsReference=true for Items and Marc in his code in the [original discussion](https://stackoverflow.com/questions/14436606/) in the ExecuteHackedViaSurrogate() directly specifies: \r\n\r\n`// or just remove AsReference on Items`\r\n`model[typeof(B)][2].AsReference = false;`\r\n\r\nAm I right that since 2.3.0 there is no need to use SetSurrogate and substitute KeyValuePair with a custom RefPair in order to avoid duplicates of the same object referenced by different keys on deserializing? And now it's enough just to specify AsReference=true for the dictionary itself?\r\n\r\nBest Regards,\r\nSergey.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321793591",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/295#issuecomment-321793591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/295",
        "id": 321793591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTc5MzU5MQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-11T11:54:42Z",
        "updated_at": "2017-08-11T11:54:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just by reading the code I'd say [this](https://github.com/mgravell/protobuf-net/blob/59b83356149a6df5027631421e2d6e03c8708725/src/Examples/Issues/SO14436606.cs#L218) suggests you're correct."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321805134",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/295#issuecomment-321805134",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/295",
        "id": 321805134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTgwNTEzNA==",
        "user": {
            "login": "Serj8500",
            "id": 29704028,
            "node_id": "MDQ6VXNlcjI5NzA0MDI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/29704028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Serj8500",
            "html_url": "https://github.com/Serj8500",
            "followers_url": "https://api.github.com/users/Serj8500/followers",
            "following_url": "https://api.github.com/users/Serj8500/following{/other_user}",
            "gists_url": "https://api.github.com/users/Serj8500/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Serj8500/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Serj8500/subscriptions",
            "organizations_url": "https://api.github.com/users/Serj8500/orgs",
            "repos_url": "https://api.github.com/users/Serj8500/repos",
            "events_url": "https://api.github.com/users/Serj8500/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Serj8500/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-11T12:56:13Z",
        "updated_at": "2017-08-11T12:56:13Z",
        "author_association": "NONE",
        "body": "This is great! Maybe it makes sense to specify somewhere in the release notes this change then? Just to avoid confusion of somebody else...\r\n\r\nAnyway thank you Lucian for the clarification and Marc and the rest team for the library itself and the new cool feature! =)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/321890948",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/298#issuecomment-321890948",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/298",
        "id": 321890948,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTg5MDk0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-11T18:49:18Z",
        "updated_at": "2017-08-11T18:49:18Z",
        "author_association": "OWNER",
        "body": "Always. There isn't a specific build for them because the library doesn't\nneed any 4.5.2 etc runtime features. It should already install just fine\nand work just fine.\n\nIf you are seeing a problem please let me know (with details).\n\nOn 11 Aug 2017 12:04 p.m., \"Rahul Kate\" <notifications@github.com> wrote:\n\n> When support for Dot.Net framework 4.5.2/4.6 available in protobuf-net\n> library?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/298>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsAP2iqfMFOZy3HgkwWYc-IF16_3_ks5sXDVFgaJpZM4O0hQf>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/322280121",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/299#issuecomment-322280121",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/299",
        "id": 322280121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjI4MDEyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-14T19:06:02Z",
        "updated_at": "2017-08-14T19:06:02Z",
        "author_association": "OWNER",
        "body": "K, where did you get the protogen that you're using? Is this the ancient\nGoogle download? Or have you build the current code from source?\n\nIf the latter: it should simply work - interface is much like protoc and it\nshould JustWorkTM. If you don't want to build from source, the tool is\navailable for online usage at protogen.marcgravell.com - the work to\npackage and deploy protogen as a convenient tool is still on the pending\nlist.\n\nOn 14 Aug 2017 3:10 p.m., \"kongbu0621\" <notifications@github.com> wrote:\n\n> How to generate *.cs for *.proto by protoGen.exe, version is 2.3.3?\n>\n> There is a System.BadImageFormatException when protoGen.exe is run. so I\n> can't generate *.cs for *.proto, version is 2.3.3\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/299>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsK9rzD2YAmNKSuldHecqT8n1EFsgks5sYFVsgaJpZM4O2a0o>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/322447434",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/284#issuecomment-322447434",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/284",
        "id": 322447434,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjQ0NzQzNA==",
        "user": {
            "login": "chrishaly",
            "id": 10261119,
            "node_id": "MDQ6VXNlcjEwMjYxMTE5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10261119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrishaly",
            "html_url": "https://github.com/chrishaly",
            "followers_url": "https://api.github.com/users/chrishaly/followers",
            "following_url": "https://api.github.com/users/chrishaly/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrishaly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrishaly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrishaly/subscriptions",
            "organizations_url": "https://api.github.com/users/chrishaly/orgs",
            "repos_url": "https://api.github.com/users/chrishaly/repos",
            "events_url": "https://api.github.com/users/chrishaly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrishaly/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-15T11:55:15Z",
        "updated_at": "2017-08-15T11:55:15Z",
        "author_association": "NONE",
        "body": "protobuf usually used to transport data from end to end, the data is indistinguishable whole. and except bytes content of protobuf, there usually have some other filed to mark what's the type is. such as in RPC extra data at least function name will represent, function name awared the request type is also awared.\r\nthe actual packet may be like {funcationName: \"GetProduct\", RequestContent: \"bytes data\"}.\r\n\r\nif your ProtoInclude we still should know the exact concrete type. Even if it's not need to know the exact concrete type type base type must aware, so we transported the base type why not directly transport the exact type.\r\n\r\nSo I think what the exact type is not a problem.\r\n\r\n\r\nThe scenario of ProtoInherit such as: \r\nbase type is provider by other team, we are don't have permission to modify them.\r\nwhat's we provided is class library there's no controllable entry to do AddSubType to user's TypeModel.\r\nwhen write the concrete child type just mark it's base type not need to do some extra configuration.\r\n\r\nProtoInherit used on concrete type what is transparent to it's base type. if the concrete type will be remove just delete the class file, no need to do extra work.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/323945741",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/300#issuecomment-323945741",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/300",
        "id": 323945741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzk0NTc0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-22T07:42:27Z",
        "updated_at": "2017-08-22T07:42:27Z",
        "author_association": "OWNER",
        "body": "What am I looking at here? (The text)\n\nRe recursion: child properties / list elements will be onward calls. If you\nhave a recursive model, the code itself will usually spot that and complain\nloudly (it starts tracking after a set depth)\n\nOn 21 Aug 2017 8:29 p.m., \"Sergey Morenko\" <notifications@github.com> wrote:\n\n> I've getting stack overflow exceptions and can not figure out what is\n> wrong with the data mode, so added logs to TypeSerializer into public\n> void Write(object value, ProtoWriter dest) method and logged all object\n> ids (I thought, should be some circles during the serialization, but all\n> looks fine)\n>\n>  CXR:903:531:5988.34:46:D  3\n>  CXR:903:531:5989.1:47:D  3\n>  CXR:903:431:5988:51:D  3\n>  CXR:903:131:5991.44:1333:D  3\n>  CXR:903:131:5991.55:1334:D  3\n>  CXR:903:131:5993.08:1328:D  3\n>  CXR:903:131:5994.88:1392:D  3\n>  CXR:903:131:5996.48:1358:D  3\n>  CXR:903:131:5997.33:1365:D  3\n>  CXR:903:131:5998.1:1688:D  3\n>  CXR:903:131:5999.11:1687:D  3\n>  CXR:903:131:5999.9:1364:D  3\n>  CXR:903:131:6000.64:4262:D  3\n>  CXR:903:131:6001.52:4263:D  3\n>  CXR:903:131:6003.16:1651:D  3\n>  CXR:903:131:6004.42:1366:D  3\n>  CXR:903:131:6004.94:1367:D  3\n>  CXR:903:9031:6004.67:9268:D  3\n>  CXR:903:9031:6002.67:9267:D  3\n>  CXR:903:9031:6000.73:62:D  3\n>  CXR:903:9031:5998.73:66:D  3\n>  CXR:903:9031:5996.39:9236:D  3\n>  CXR:903:9031:5994.41:9239:D  3\n>  CXR:903:9031:5992.81:9252:D  3\n>  CXR:903:531:5991.78:50:D  3\n>  CXR:903:531:5993.31:54:D  3\n>  CXR:903:531:5994.46:57:D  3\n>  CXR:903:531:5995.22:58:D  3\n>  CXR:903:531:5996.37:59:D  3\n>  CXR:903:9031:5997.47:9657:D  3\n>  CXR:903:531:5997.9:60:D  3\n>  CXR:903:531:5999.43:63:D  3\n>  CXR:903:9031:5999.74:64:D  3\n>  CXR:903:531:6000.96:65:D  3\n>  CXR:903:531:6001.93:38:D  3\n>  CXR:903:531:6001.93:38:D:CPG-04B  3\n>  CXR:903:531:6002.69:61:D  3\n>  CXR:903:531:6003.89:67:D  3\n>  CXR:903:531:6005.1:69:D  3\n>  CXR:903:531:6005.75:71:D  3\n>  CXR:903:531:6005.82:72:D  3\n>  CXR:903:531:6005.89:73:D  3\n>  CXR:903:531:6005.96:74:D  3\n>  CXR:903:231:6005.81:2034:D  3\n>  CXR:903:231:6005.35:2033:D  3\n>  CXR:903:231:6004.88:2038:D  3\n>  CXR:903:231:6004.41:2039:D  3\n>  CXR:903:231:6003.87:2040:D  3\n>  CXR:903:231:6003.25:2037:D  3\n>  CXR:903:231:6001.46:79:D  3\n>  CXR:903:1031:5999.86:210:D  3\n>  CXR:903:1031:6000.76:213:D  3\n>  CXR:903:1031:6000.96:214:D  3\n>  CXR:903:1031:6001.16:215:D  3\n>  CXR:903:1031:6001.36:216:D  3\n>  CXR:903:1031:6001.56:217:D  3\n>  CXR:903:1031:6001.76:211:D  3\n>  CXR:903:1031:6001.96:212:D  3\n>  BLKL:BCEAO-3:D  4\n>  BCEAO-3  3\n>  BLKL:BCEAO-3:U  4\n>  CXR:903:1031:5999.86:210  3\n>  TPS:903:1031:5999.86:210  6\n>  CXR:903:131:5998.1:1688  3\n>  TPS:903:131:5998.1:1688  6\n>  CXR:903:9031:5996.39:9236  3\n> etc\n>\n> a bit strange while each item min by three but as per log there're each\n> after another\n>\n> 2017-08-21 14:38:41,956 DEBUG [ProtoBuf.Serializers.TypeSerializer 13] - CarrierDownlink Id: CXR:903:131:5993.08:1328:D\n> 2017-08-21 14:38:41,956 DEBUG [ProtoBuf.Serializers.TypeSerializer 13] - CarrierDownlink Id: CXR:903:131:5993.08:1328:D\n> 2017-08-21 14:38:41,975 DEBUG [ProtoBuf.Serializers.TypeSerializer 13] - CarrierDownlink Id: CXR:903:131:5993.08:1328:D\n>\n> Is ther're any any recursion calls?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/300>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBIFnGRacuy97iPPSs19_u7Mv2-uks5sadqagaJpZM4O9u29>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325156186",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325156186",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325156186,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTE1NjE4Ng==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-26T19:09:17Z",
        "updated_at": "2017-08-26T19:09:17Z",
        "author_association": "NONE",
        "body": "In case it helps, you can find the test harness I put together [**here**](https://github.com/Singh400/ProtoBuf-Net-Test-Harness).\r\n\r\nCheers,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325170901",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/226#issuecomment-325170901",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/226",
        "id": 325170901,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTE3MDkwMQ==",
        "user": {
            "login": "paraboxx",
            "id": 6633947,
            "node_id": "MDQ6VXNlcjY2MzM5NDc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6633947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paraboxx",
            "html_url": "https://github.com/paraboxx",
            "followers_url": "https://api.github.com/users/paraboxx/followers",
            "following_url": "https://api.github.com/users/paraboxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/paraboxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paraboxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paraboxx/subscriptions",
            "organizations_url": "https://api.github.com/users/paraboxx/orgs",
            "repos_url": "https://api.github.com/users/paraboxx/repos",
            "events_url": "https://api.github.com/users/paraboxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paraboxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-27T01:15:44Z",
        "updated_at": "2017-08-27T01:15:44Z",
        "author_association": "NONE",
        "body": "The purpose of DateTimeOffset is to preserve TimeZone information so it's possible to see at white Offset the timestamp was generated. By convertig to unixtime this information is lost."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325208496",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325208496",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325208496,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTIwODQ5Ng==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-27T16:20:55Z",
        "updated_at": "2017-08-27T16:20:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Singh400 We've been running protobuf in production for a while and experienced similar issues. We found there was a PR with a tweak to the bufferpool implementation which we forked and refactored to our liking which had a significant impact on LOH fragmentation.\r\n\r\nWe ran it side-by-side on different servers initially and got the following results.\r\n\r\nThis is the original buffer pool:\r\n![originalbufferpool](https://user-images.githubusercontent.com/978048/29751869-86362d60-8b4b-11e7-901f-c75b0792b8db.png)\r\n\r\nThis is the tweaked pool that stores larger arrays:\r\n![improvedbufferpool](https://user-images.githubusercontent.com/978048/29751879-aa9dc190-8b4b-11e7-9c0b-b886d6373eb5.png)\r\n\r\nYou can see the flatness of the LOH size as the yellow line. When we have bursts of load (for example 04:00) you can see the previous behaviour causing a large amount of LOH allocation whereas the new pool is flat. The max is 1.84GB on the original implementation yet ~ 251MB on the new. \r\n\r\nI've put our version of the bufferpool in a branch here (https://github.com/mintsoft/protobuf-net/blob/bufferpool/src/protobuf-net/BufferPool.cs), it's based heavily on (https://github.com/mgravell/protobuf-net/pull/33) however we have removed the OOM handling as we don't need it and are significantly less likely to hit any OOM condition on 64 bit machines.\r\n\r\nI'd suggest trying that branch and see if the behaviour improves?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325216098",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325216098",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325216098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTIxNjA5OA==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-27T18:35:28Z",
        "updated_at": "2017-08-27T18:35:28Z",
        "author_association": "NONE",
        "body": "@mintsoft Wow, nice! Just pulled in your code very quickly into my [**test harness**](https://github.com/Singh400/ProtoBuf-Net-Test-Harness) and ran a couple of quick iterations:-\r\n\r\nIterations|WithStockProtoBuf (MB)|WithCachedPool (MB)\r\n------------ | ------------- | -------------\r\n10000|8.8|0.9\r\n50000|39|4.3\r\n100000|80|8.7\r\n200000|160|17\r\n300000|321|34\r\n\r\nAs you can see a massive reduction LOH allocations, quick napkin maths says around ~90% fewer LOH allocations.\r\n\r\nQuick screenshot of dotTrace on the last test:-\r\n\r\n![withstockprotobufnet_vs_withcachedpool](https://user-images.githubusercontent.com/1906778/29752872-ec7df3a2-8b5d-11e7-9be4-239a59b06675.png)\r\n\r\nWithStockProtoBuf is on the left, and WithCachedPool is on the right.\r\n\r\nI was concerned that a change to the `BufferPool.cs` might result in different output from ProtoBuf. But a quick SHA1 of each output *.bin file reveals identical SHA1 hashes.\r\n\r\nCheers,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325335460",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325335460",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325335460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTMzNTQ2MA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-28T12:06:17Z",
        "updated_at": "2017-08-28T12:06:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "Another possible [solution](https://github.com/Microsoft/Microsoft.IO.RecyclableMemoryStream)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325425642",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325425642",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325425642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTQyNTY0Mg==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-28T17:49:42Z",
        "updated_at": "2017-08-28T17:49:42Z",
        "author_association": "NONE",
        "body": "@lbargaoanu That looks pretty interesting. I did find System.Buffers.ArrayPool and just branched a version of protobuf-net that is backed by System.Buffers.ArrayPool. It shows the same ~90% reduction in LOH allocations as the version mentioned by @mintsoft.\r\n\r\n![withstockprotobufnet_vs_witharraypool](https://user-images.githubusercontent.com/1906778/29785987-65f1cb78-8c21-11e7-8c98-5203baefb932.png)\r\n\r\nIf I get time, I might spike out another implementation using  Microsoft.IO.RecyclableMemoryStream.\r\n\r\nCheers,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/325900428",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-325900428",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 325900428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTkwMDQyOA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-30T06:57:21Z",
        "updated_at": "2017-08-30T06:57:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell Now I know there's a benefit that's not just limited to us, are you open to a PR of that branch to enhance the BufferPool implementation?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/326310753",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-326310753",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 326310753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjMxMDc1Mw==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-31T14:21:45Z",
        "updated_at": "2017-08-31T14:36:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell This can be fixed by ignoring the keys for type objects when [reading](https://github.com/mgravell/protobuf-net/compare/master...lbargaoanu:Isuue304#diff-9c424e79ea018611691fd08f9b3135e7). All the tests pass, but this might just mean that more tests are needed :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/326347144",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-326347144",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 326347144,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM0NzE0NA==",
        "user": {
            "login": "kirbatious",
            "id": 7012396,
            "node_id": "MDQ6VXNlcjcwMTIzOTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7012396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kirbatious",
            "html_url": "https://github.com/kirbatious",
            "followers_url": "https://api.github.com/users/kirbatious/followers",
            "following_url": "https://api.github.com/users/kirbatious/following{/other_user}",
            "gists_url": "https://api.github.com/users/kirbatious/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kirbatious/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kirbatious/subscriptions",
            "organizations_url": "https://api.github.com/users/kirbatious/orgs",
            "repos_url": "https://api.github.com/users/kirbatious/repos",
            "events_url": "https://api.github.com/users/kirbatious/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kirbatious/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-31T16:16:11Z",
        "updated_at": "2017-08-31T16:16:11Z",
        "author_association": "NONE",
        "body": "Hey @lbargaoanu thanks for replying! I actually tried doing exactly what you've done (i.e. added my test to my local copy of protobuf) and I could see that the problem was related to the keyed object stuff, but I certainly didn't consider that just deleting all that code might fix it! Surely it's there for a reason? Hopefully @mgravell knows! "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/327032591",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-327032591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 327032591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzAzMjU5MQ==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-04T21:56:16Z",
        "updated_at": "2017-09-04T21:56:16Z",
        "author_association": "NONE",
        "body": "@mgravell Any thoughts on this and potential solutions? It seems like the branch by @mintsoft does solve this particular problem."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/327712162",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/305#issuecomment-327712162",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/305",
        "id": 327712162,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzcxMjE2Mg==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-07T07:25:27Z",
        "updated_at": "2017-09-07T07:25:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Try [SupportNull](https://github.com/mgravell/protobuf-net/search?q=supportnull&type=Code&utf8=%E2%9C%93)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328456496",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328456496",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328456496,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ1NjQ5Ng==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T08:26:47Z",
        "updated_at": "2017-09-11T08:26:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "I don't see it with the latest. A repro would help. Make a gist that we can execute and see fail."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328480796",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328480796",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328480796,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ4MDc5Ng==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T09:54:53Z",
        "updated_at": "2017-09-11T09:58:39Z",
        "author_association": "NONE",
        "body": "Here is a simplified gist showing the issue:\r\n\r\nhttps://gist.github.com/FreeFlyingEnchilada/37b8b4e0223e92b60f237b070347ad77\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328493871",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328493871",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328493871,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ5Mzg3MQ==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T10:51:06Z",
        "updated_at": "2017-09-11T10:51:24Z",
        "author_association": "NONE",
        "body": "Emphasizing that the issue is as suspected, reversing the order that \"SomeProperty\" and \"Tags\" are added to the object schema (from the above gist) results in the issue disappearing. Is there any practical scenario where the user would prefer properties, which typically mutate fields, be initialized prior to fields?\r\n\r\nSeems the logical order would be static fields, private fields, public fields, and then similarly for properties."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328496100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328496100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328496100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ5NjEwMA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T11:02:04Z",
        "updated_at": "2017-09-11T11:02:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "It seems to me like _you_ specify the order and Protobuf should comply."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328528195",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328528195",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328528195,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODUyODE5NQ==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T13:26:07Z",
        "updated_at": "2017-09-11T13:26:07Z",
        "author_association": "NONE",
        "body": "Yeah, that's the thing I'm not clear on. Is this a part of the Protobuf specification or a part of the implementation? If it's a part of the standard (*as in the annoying empty list -> null*) then meh, but it seems to unnecessarily leak implementation details into usage that can result in inexplicable crashes. In cases where the schema is built programmatically (as opposed to manual annotations) it can create the extremely bizarre behavior such that the order of declaration of fields/properties can change the behavior of the serializer. That I think is extremely undesirable.\r\n\r\nSimilarly even just updating the dictionary as opposed to calling specifically .add would also resolve this issue, though I can understand the desire to use .add for more clearly deterministic behavior. Crashing is probably better than deserializing to a valid but unexpected state."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328530815",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328530815",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328530815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODUzMDgxNQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T13:35:20Z",
        "updated_at": "2017-09-11T13:35:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "It's part of your own code. You choose the order. I guess the idea is to give you control over the wire format. Consider that another implementation might be on the other end. Then clearly you want an explicit order. @mgravell might have a better answer for you."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328534860",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328534860",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328534860,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODUzNDg2MA==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T13:49:52Z",
        "updated_at": "2017-09-11T13:49:52Z",
        "author_association": "NONE",
        "body": "The behavior of the underlying serializer, and it crashing, is most certainly not a part of my own code. The current situation is such that changing the order of declaration of properties/fields in a class can crash the serializer in one case and result in perfect serialization in the other. This is a very nasty leak of implementation details.\r\n\r\nThis behavior is either caused by an issue in this particular implementation of protocol buffers, or it is caused by the specification itself. In the former case, this is something that should be fixed. In the latter case, this is something I should be expected to simply work around.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328544346",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328544346",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328544346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU0NDM0Ng==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T14:20:58Z",
        "updated_at": "2017-09-11T14:20:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "Well, the order is the problem, and you have control over that. There is nothing to fix in my view."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328553641",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328553641",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328553641,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU1MzY0MQ==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T14:49:21Z",
        "updated_at": "2017-09-11T14:54:39Z",
        "author_association": "NONE",
        "body": "Imagine we have two objects in some sort of pseudo code:\r\n\r\n\ttype t1\r\n\t{\r\n\t\t[SerializeOrder 1]\r\n\t\tProperty p {get {...} set {...} }\r\n\r\n\t\t[SerializeOrder 2]\r\n\t\tDictionary d\r\n\t}\r\n\r\n\ttype t2\r\n\t{\r\n\t\t[SerializeOrder 2]\r\n\t\tProperty p {get {...} set {...} }\r\n\r\n\t\t[SerializeOrder 1]\r\n\t\tDictionary d\r\n\t}\r\n\r\nYou are telling me you believe it is reasonable behavior for the serializer to work perfectly for one type and crash for the other? If the standard clearly forces this behavior upon the implementation (as in the case of serializing empty lists and null identically) then that's unfortunate, but it is certainly something that, excepting outstanding circumstances, I don't believe you can say is nothing to fix."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328554375",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328554375",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328554375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODU1NDM3NQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-11T14:51:43Z",
        "updated_at": "2017-09-11T14:51:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Maybe @mgravell will see it your way. I don't :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328756805",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328756805",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328756805,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODc1NjgwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T06:52:49Z",
        "updated_at": "2017-09-12T06:52:49Z",
        "author_association": "OWNER",
        "body": "Hey all.\n\nIf you use the latest build, \"map\" behavior is assumed by default when\npossible (to match proto3) - this means that dictionaries replace rather\nthan add. You can override this if needed, but: it would seem a simple\nsolution.\n\nOn 11 Sep 2017 3:51 p.m., \"Lucian Bargaoanu\" <notifications@github.com>\nwrote:\n\n> Maybe @mgravell <https://github.com/mgravell> will see it your way. I\n> don't :)\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328554375>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBG9pl30itlgf4hefA2wEr6Vmta8ks5shUkAgaJpZM4PSxnA>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328767100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328767100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328767100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODc2NzEwMA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T07:36:33Z",
        "updated_at": "2017-09-12T07:36:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell I guess what you mean is that the code needs some setting to get the replace behavior, because it seems to me it fails with the latest."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328770074",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-328770074",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 328770074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODc3MDA3NA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T07:48:00Z",
        "updated_at": "2017-09-12T07:48:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Found it :)\r\n    \r\n    type.AddField(2, \"Tags\").OverwriteList = true;"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328926335",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-328926335",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 328926335,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODkyNjMzNQ==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T17:33:07Z",
        "updated_at": "2017-09-12T17:33:07Z",
        "author_association": "NONE",
        "body": "I have been using @mintsoft branch in production for over a week now, and I have seen the fragmentation issue severely reduced.\r\n\r\n@mgravell I acknowledge that there at 166 open issues; but I would greatly appreciate it if we could come up with a solution to the fragmentation of the LOH and get the fix released onto NuGet so that the entire protobuf-net community can benefit.\r\n\r\nMany thanks,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328928714",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-328928714",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 328928714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODkyODcxNA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T17:42:12Z",
        "updated_at": "2017-09-12T17:42:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "Most of those issues are not closed, rather than open :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/328960174",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/95#issuecomment-328960174",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/95",
        "id": 328960174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyODk2MDE3NA==",
        "user": {
            "login": "masnider",
            "id": 10968331,
            "node_id": "MDQ6VXNlcjEwOTY4MzMx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/10968331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/masnider",
            "html_url": "https://github.com/masnider",
            "followers_url": "https://api.github.com/users/masnider/followers",
            "following_url": "https://api.github.com/users/masnider/following{/other_user}",
            "gists_url": "https://api.github.com/users/masnider/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/masnider/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/masnider/subscriptions",
            "organizations_url": "https://api.github.com/users/masnider/orgs",
            "repos_url": "https://api.github.com/users/masnider/repos",
            "events_url": "https://api.github.com/users/masnider/events{/privacy}",
            "received_events_url": "https://api.github.com/users/masnider/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-12T19:33:03Z",
        "updated_at": "2017-09-12T19:36:53Z",
        "author_association": "NONE",
        "body": "I'm getting this as well, though on Serialize. Also, why is System.xml even needed here? \r\n\r\nIn my case, adding the System.Xml.ReaderWriter nuget package appears to fix the issue, but I'm still confused as to why this is necessary in the first place, just conceptually :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/329094307",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/306#issuecomment-329094307",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/306",
        "id": 329094307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTA5NDMwNw==",
        "user": {
            "login": "MindGamesRussell",
            "id": 30259368,
            "node_id": "MDQ6VXNlcjMwMjU5MzY4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30259368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MindGamesRussell",
            "html_url": "https://github.com/MindGamesRussell",
            "followers_url": "https://api.github.com/users/MindGamesRussell/followers",
            "following_url": "https://api.github.com/users/MindGamesRussell/following{/other_user}",
            "gists_url": "https://api.github.com/users/MindGamesRussell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MindGamesRussell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MindGamesRussell/subscriptions",
            "organizations_url": "https://api.github.com/users/MindGamesRussell/orgs",
            "repos_url": "https://api.github.com/users/MindGamesRussell/repos",
            "events_url": "https://api.github.com/users/MindGamesRussell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MindGamesRussell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-13T08:19:54Z",
        "updated_at": "2017-09-13T08:20:07Z",
        "author_association": "NONE",
        "body": "I agree this seems like a workable solution even moreso since the functionality is optional. However, this does not currently seem to be the default behavior (in this scenario) as of 2.3.2."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/329377558",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/51#issuecomment-329377558",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/51",
        "id": 329377558,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTM3NzU1OA==",
        "user": {
            "login": "Kylar",
            "id": 343473,
            "node_id": "MDQ6VXNlcjM0MzQ3Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/343473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kylar",
            "html_url": "https://github.com/Kylar",
            "followers_url": "https://api.github.com/users/Kylar/followers",
            "following_url": "https://api.github.com/users/Kylar/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kylar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kylar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kylar/subscriptions",
            "organizations_url": "https://api.github.com/users/Kylar/orgs",
            "repos_url": "https://api.github.com/users/Kylar/repos",
            "events_url": "https://api.github.com/users/Kylar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kylar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-14T05:30:47Z",
        "updated_at": "2017-09-14T06:45:03Z",
        "author_association": "NONE",
        "body": "Just adding the source code that is causing this issue:\r\n\r\n`BufferPool.ResizeAndFlushLeft`\r\n\r\n```c#\r\n// try doubling, else match\r\nint newLength = buffer.Length * 2;\r\nif (newLength < toFitAtLeastBytes) newLength = toFitAtLeastBytes;\r\n```\r\n\r\nWhen `buffer.Length * 2` overflows, `newLength` is negative so the condition is true and `newLength` is assigned `toFitAtLeastBytes`, which is only a few bytes larger than the previous size. So for every piece of data to be written after the buffer reaches ~1GB, it is allocating and copying 1GB."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/329394194",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/51#issuecomment-329394194",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/51",
        "id": 329394194,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTM5NDE5NA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-14T07:11:20Z",
        "updated_at": "2017-09-14T07:12:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "@p4fg Have you tried a fork that maintains a resized bufferpool? Try https://github.com/mintsoft/protobuf-net/tree/bufferpool it might behave better. That said, if you *need* a 1GB buffer, it will keep and maintain a 1GB buffer for the lifetime of the application so there may be a performance (memory footprint) hit there"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/329560405",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-329560405",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 329560405,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU2MDQwNQ==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-14T17:55:58Z",
        "updated_at": "2017-09-14T17:55:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Singh400 In that spirit I've put a PR here: https://github.com/mgravell/protobuf-net/pull/307 "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/330145103",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/51#issuecomment-330145103",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/51",
        "id": 330145103,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDE0NTEwMw==",
        "user": {
            "login": "p4fg",
            "id": 2240012,
            "node_id": "MDQ6VXNlcjIyNDAwMTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2240012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p4fg",
            "html_url": "https://github.com/p4fg",
            "followers_url": "https://api.github.com/users/p4fg/followers",
            "following_url": "https://api.github.com/users/p4fg/following{/other_user}",
            "gists_url": "https://api.github.com/users/p4fg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/p4fg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/p4fg/subscriptions",
            "organizations_url": "https://api.github.com/users/p4fg/orgs",
            "repos_url": "https://api.github.com/users/p4fg/repos",
            "events_url": "https://api.github.com/users/p4fg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/p4fg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-18T07:22:37Z",
        "updated_at": "2017-09-18T07:22:37Z",
        "author_association": "NONE",
        "body": "@mintsoft No, we worked around the problem (years ago).. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/330685316",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-330685316",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 330685316,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDY4NTMxNg==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-19T21:56:03Z",
        "updated_at": "2017-09-19T21:56:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Singh400 I've also released that fork to NuGet: https://www.nuget.org/packages/protobuf-net.Pool/ I might expand on the pooling features to allow more control around the initial sizes and number of buffers in the pool. I think it's also key to include monitoring of the pool somehow, I'll probably integrate ETW into the allocations"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/330795738",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-330795738",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 330795738,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDc5NTczOA==",
        "user": {
            "login": "kirbatious",
            "id": 7012396,
            "node_id": "MDQ6VXNlcjcwMTIzOTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7012396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kirbatious",
            "html_url": "https://github.com/kirbatious",
            "followers_url": "https://api.github.com/users/kirbatious/followers",
            "following_url": "https://api.github.com/users/kirbatious/following{/other_user}",
            "gists_url": "https://api.github.com/users/kirbatious/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kirbatious/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kirbatious/subscriptions",
            "organizations_url": "https://api.github.com/users/kirbatious/orgs",
            "repos_url": "https://api.github.com/users/kirbatious/repos",
            "events_url": "https://api.github.com/users/kirbatious/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kirbatious/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-20T09:20:38Z",
        "updated_at": "2017-09-20T09:20:38Z",
        "author_association": "NONE",
        "body": "@lbargaoanu Is there anything I can do to help see whether your suggested fix can make it into the master codebase? I could take and deploy your fork but I'd rather stay with the official releases to avoid future pain!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/332462845",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-332462845",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 332462845,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjQ2Mjg0NQ==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-09-27T09:22:55Z",
        "updated_at": "2017-09-27T09:22:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "I don't think so. @mgravell will decide eventually what exactly need to be done here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/334303533",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-334303533",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 334303533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMwMzUzMw==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-04T22:06:37Z",
        "updated_at": "2017-10-04T22:06:37Z",
        "author_association": "NONE",
        "body": "Any thoughts on this @mgravell or the PR by @mintsoft?\r\n\r\nCheers,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/334439356",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-334439356",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 334439356,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQzOTM1Ng==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-05T11:38:34Z",
        "updated_at": "2017-10-05T11:38:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Singh400 I'd switch to using https://www.nuget.org/packages/protobuf-net.Pool/ if I were you, I don't know if it'll be an interim solution or what though. \r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/334682246",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/309#issuecomment-334682246",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/309",
        "id": 334682246,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDY4MjI0Ng==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-06T07:39:52Z",
        "updated_at": "2017-10-06T07:39:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "What happens is that items are added one by one, and the initial capacity is not set from the length of the source array. So the default list algorithm kicks in, which probably doubles the list capacity, or smth like that. That can easily cause the capacity to be larger than the max, even for arrays smaller than max. The fix would be to set the initial capacity of the destination list to the length of the source collection. Or even better, for arrays, to simply allocate an array of the required length."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/334714698",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/309#issuecomment-334714698",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/309",
        "id": 334714698,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDcxNDY5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-06T10:09:34Z",
        "updated_at": "2017-10-06T10:09:34Z",
        "author_association": "OWNER",
        "body": "At the moment it *essentially* uses list add here; however, for fixed size data like `float`, *if* the data is using \"packed\" encoding (which isn't the default, but which you should *really* use here - it would be much more efficient), then it is possible to pre-compute the array length. This is part of the optimizations that are planned for the \"when we get better codegen\" work, but: right now this isn't implemented."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/336893654",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/312#issuecomment-336893654",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/312",
        "id": 336893654,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg5MzY1NA==",
        "user": {
            "login": "ilCosmico",
            "id": 8678145,
            "node_id": "MDQ6VXNlcjg2NzgxNDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8678145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilCosmico",
            "html_url": "https://github.com/ilCosmico",
            "followers_url": "https://api.github.com/users/ilCosmico/followers",
            "following_url": "https://api.github.com/users/ilCosmico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilCosmico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilCosmico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilCosmico/subscriptions",
            "organizations_url": "https://api.github.com/users/ilCosmico/orgs",
            "repos_url": "https://api.github.com/users/ilCosmico/repos",
            "events_url": "https://api.github.com/users/ilCosmico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilCosmico/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-16T13:53:33Z",
        "updated_at": "2017-10-16T13:53:33Z",
        "author_association": "NONE",
        "body": "Never mind, I see now that it needs the latest c# version"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/337307843",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/313#issuecomment-337307843",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/313",
        "id": 337307843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzMwNzg0Mw==",
        "user": {
            "login": "BryantL",
            "id": 14291122,
            "node_id": "MDQ6VXNlcjE0MjkxMTIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14291122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BryantL",
            "html_url": "https://github.com/BryantL",
            "followers_url": "https://api.github.com/users/BryantL/followers",
            "following_url": "https://api.github.com/users/BryantL/following{/other_user}",
            "gists_url": "https://api.github.com/users/BryantL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BryantL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BryantL/subscriptions",
            "organizations_url": "https://api.github.com/users/BryantL/orgs",
            "repos_url": "https://api.github.com/users/BryantL/repos",
            "events_url": "https://api.github.com/users/BryantL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BryantL/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-17T17:34:01Z",
        "updated_at": "2017-10-17T17:34:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "Further to this, if I turn auto compilation off:\r\n```\r\nRuntimeTypeModel.Default.AutoCompile = false;\r\n```\r\n\r\nThe a more descriptive/useful error is generated:\r\n```\r\nSystem.InvalidOperationException: This operation cannot be performed on a default instance of ImmutableArray<T>.  Consider initializing the array, or checking the ImmutableArray<T>.IsDefault property.\r\n   at System.Collections.Immutable.ImmutableArray`1.ThrowInvalidOperationIfNotInitialized()\r\n   at System.Collections.Immutable.ImmutableArray`1.System.Collections.ICollection.get_Count()\r\n   at ProtoBuf.Serializers.ImmutableCollectionDecorator.Read(Object value, ProtoReader source)\r\n   at ProtoBuf.Serializers.FieldDecorator.Read(Object value, ProtoReader source)\r\n   at ProtoBuf.Serializers.TypeSerializer.Read(Object value, ProtoReader source)\r\n   at ProtoBuf.Meta.RuntimeTypeModel.Deserialize(Int32 key, Object value, ProtoReader source)\r\n   at ProtoBuf.Meta.TypeModel.DeserializeCore(ProtoReader reader, Type type, Object value, Boolean noAutoCreate)\r\n   at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context)\r\n   at ProtoBuf.Serializer.Deserialize[T](Stream source)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/337309184",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/313#issuecomment-337309184",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/313",
        "id": 337309184,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzMwOTE4NA==",
        "user": {
            "login": "BryantL",
            "id": 14291122,
            "node_id": "MDQ6VXNlcjE0MjkxMTIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14291122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BryantL",
            "html_url": "https://github.com/BryantL",
            "followers_url": "https://api.github.com/users/BryantL/followers",
            "following_url": "https://api.github.com/users/BryantL/following{/other_user}",
            "gists_url": "https://api.github.com/users/BryantL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BryantL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BryantL/subscriptions",
            "organizations_url": "https://api.github.com/users/BryantL/orgs",
            "repos_url": "https://api.github.com/users/BryantL/repos",
            "events_url": "https://api.github.com/users/BryantL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BryantL/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-17T17:38:40Z",
        "updated_at": "2017-10-17T20:47:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "As a workaround I have found that supplying a default empty immutable array in either the default constructor (and removing  `SkipConstructor = true`) or a method attributed with `ProtoBeforeDeserialization` stops the error occurring.\r\n\r\nIt would be good to have the issue resolved directly without the workarounds though :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338393663",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338393663",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338393663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM5MzY2Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-21T13:14:28Z",
        "updated_at": "2017-10-21T13:14:28Z",
        "author_association": "OWNER",
        "body": "2.3.2 already targets 2.0\n\ncan you be more specific about what you're seeing?\n\nOn 21 Oct 2017 11:05 a.m., \"sophiepeithos\" <notifications@github.com> wrote:\n\n> there are many Unity users who want to use proto3 but can't upgrade their\n> mono compiler.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/314>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOjD0jNcskdapikWeFpn7_D3x3_1ks5sucIAgaJpZM4QBgyf>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338394874",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338394874",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338394874,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM5NDg3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-21T13:34:30Z",
        "updated_at": "2017-10-21T13:34:30Z",
        "author_association": "OWNER",
        "body": "It is possible you mean the language version, not the .net version. If so,\nplease indicate what language version is available to you. Is it really\nonly C# 2.0?\n\nOn 21 Oct 2017 2:14 p.m., \"Marc Gravell\" <marc.gravell@gmail.com> wrote:\n\n> 2.3.2 already targets 2.0\n>\n> can you be more specific about what you're seeing?\n>\n> On 21 Oct 2017 11:05 a.m., \"sophiepeithos\" <notifications@github.com>\n> wrote:\n>\n>> there are many Unity users who want to use proto3 but can't upgrade their\n>> mono compiler.\n>>\n>> \u2014\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/314>, or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsOjD0jNcskdapikWeFpn7_D3x3_1ks5sucIAgaJpZM4QBgyf>\n>> .\n>>\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338420445",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338420445",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338420445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQyMDQ0NQ==",
        "user": {
            "login": "sophiepeithos",
            "id": 1758796,
            "node_id": "MDQ6VXNlcjE3NTg3OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1758796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiepeithos",
            "html_url": "https://github.com/sophiepeithos",
            "followers_url": "https://api.github.com/users/sophiepeithos/followers",
            "following_url": "https://api.github.com/users/sophiepeithos/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiepeithos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiepeithos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiepeithos/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiepeithos/orgs",
            "repos_url": "https://api.github.com/users/sophiepeithos/repos",
            "events_url": "https://api.github.com/users/sophiepeithos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiepeithos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-21T17:51:45Z",
        "updated_at": "2017-10-21T17:51:45Z",
        "author_association": "NONE",
        "body": "protogen generates code like this\r\n`public string Query { get; set; } = \"\";`\r\nthen unity will complain error CS1519: Unexpected symbol `=' in class, struct, or interface member declaration"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338426134",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338426134",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338426134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQyNjEzNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-21T19:19:22Z",
        "updated_at": "2017-10-21T19:19:22Z",
        "author_association": "OWNER",
        "body": "Right; so it is definitely a language version issue. What is the exact\ncompiler (including version) in play here? Presumably mcs, but what version?\n\nOn 21 Oct 2017 6:51 p.m., \"sophiepeithos\" <notifications@github.com> wrote:\n\n> protogen generates code like this\n> public string Query { get; set; } = \"\";\n> then unity will complain error CS1519: Unexpected symbol `=' in class,\n> struct, or interface member declaration\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338420445>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsA0VVb8k4T6MiBY6PJvmbXFV2PS7ks5sui8xgaJpZM4QBgyf>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338444027",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-338444027",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 338444027,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0NDAyNw==",
        "user": {
            "login": "yaakov-h",
            "id": 426009,
            "node_id": "MDQ6VXNlcjQyNjAwOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/426009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaakov-h",
            "html_url": "https://github.com/yaakov-h",
            "followers_url": "https://api.github.com/users/yaakov-h/followers",
            "following_url": "https://api.github.com/users/yaakov-h/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaakov-h/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaakov-h/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaakov-h/subscriptions",
            "organizations_url": "https://api.github.com/users/yaakov-h/orgs",
            "repos_url": "https://api.github.com/users/yaakov-h/repos",
            "events_url": "https://api.github.com/users/yaakov-h/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaakov-h/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-22T01:30:33Z",
        "updated_at": "2017-10-22T01:30:33Z",
        "author_association": "NONE",
        "body": "@mgravell any progress in this area, or near-future plans?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338453484",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338453484",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338453484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ1MzQ4NA==",
        "user": {
            "login": "sophiepeithos",
            "id": 1758796,
            "node_id": "MDQ6VXNlcjE3NTg3OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1758796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiepeithos",
            "html_url": "https://github.com/sophiepeithos",
            "followers_url": "https://api.github.com/users/sophiepeithos/followers",
            "following_url": "https://api.github.com/users/sophiepeithos/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiepeithos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiepeithos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiepeithos/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiepeithos/orgs",
            "repos_url": "https://api.github.com/users/sophiepeithos/repos",
            "events_url": "https://api.github.com/users/sophiepeithos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiepeithos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-22T05:47:12Z",
        "updated_at": "2017-10-22T05:47:12Z",
        "author_association": "NONE",
        "body": "ok, so I managed to solve this problem by pass -sdk:2 to mcs.\r\nThen I can't get precompile to compile, I have to get precompile from r668."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338462223",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338462223",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338462223,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ2MjIyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-22T09:00:35Z",
        "updated_at": "2017-10-22T09:00:35Z",
        "author_association": "OWNER",
        "body": "I've been trying to lean heavily on MS folks to support improved build-time\ncodgen tools as a replacement for the old prevent tooling in protobuf-net.\nIt is very hard to support or work with that tooling. I don't have great\nanswers there, especially since the main utility it uses for most of the\nevil bits (IKVM) has been abandoned by the author.\n\nLong term we need to replace that tooling with a different approach.\n\nOn 22 Oct 2017 6:47 a.m., \"sophiepeithos\" <notifications@github.com> wrote:\n\n> ok, so I managed to solve this problem by pass -sdk:2 to mcs.\n> Then I can't get precompile to compile, I have to get precompile from r668.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338453484>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFFK7eCc5IMLE8K2gSlS56Sow4hoks5sutbggaJpZM4QBgyf>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338466287",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338466287",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338466287,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ2NjI4Nw==",
        "user": {
            "login": "sophiepeithos",
            "id": 1758796,
            "node_id": "MDQ6VXNlcjE3NTg3OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1758796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiepeithos",
            "html_url": "https://github.com/sophiepeithos",
            "followers_url": "https://api.github.com/users/sophiepeithos/followers",
            "following_url": "https://api.github.com/users/sophiepeithos/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiepeithos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiepeithos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiepeithos/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiepeithos/orgs",
            "repos_url": "https://api.github.com/users/sophiepeithos/repos",
            "events_url": "https://api.github.com/users/sophiepeithos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiepeithos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-22T10:12:50Z",
        "updated_at": "2017-10-22T10:12:50Z",
        "author_association": "NONE",
        "body": "Is use precompile from r668 to generate serialization and deserialization code going to work with the code generated by protogen?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338478277",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338478277",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338478277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ3ODI3Nw==",
        "user": {
            "login": "sophiepeithos",
            "id": 1758796,
            "node_id": "MDQ6VXNlcjE3NTg3OTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1758796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sophiepeithos",
            "html_url": "https://github.com/sophiepeithos",
            "followers_url": "https://api.github.com/users/sophiepeithos/followers",
            "following_url": "https://api.github.com/users/sophiepeithos/following{/other_user}",
            "gists_url": "https://api.github.com/users/sophiepeithos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sophiepeithos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sophiepeithos/subscriptions",
            "organizations_url": "https://api.github.com/users/sophiepeithos/orgs",
            "repos_url": "https://api.github.com/users/sophiepeithos/repos",
            "events_url": "https://api.github.com/users/sophiepeithos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sophiepeithos/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-22T13:41:20Z",
        "updated_at": "2017-10-22T13:52:01Z",
        "author_association": "NONE",
        "body": "ok\uff0cusing the precompile from r668 seems ok on windows, I can successfully serialize and deserialize proto3 map.\r\nbut It throw an exception when running precompile on macos:\r\nhuis-MacBook-Pro:precompile hui$ mono precompile.exe Model.dll -o:1.dll -t:a\r\nWARNING: The runtime version supported by this application is unavailable.\r\nUsing default runtime: v4.0.30319\r\nprotobuf-net pre-compiler\r\nNo framework specified; defaulting to 4.0.30319.42000\r\nResolved /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5/mscorlib.dll\r\nResolved /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5/System.dll\r\nResolved protobuf-net.dll\r\nAdding MessageContainingMapCalledEntry...\r\nMember 'ProtoBuf.ProtoMapAttribute' is a missing member and does not support the requested operation.\r\n  at IKVM.Reflection.MissingType.get_Attributes () [0x00006] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.Type.get_IsInterface () [0x00000] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.Type.IsAssignableFrom (IKVM.Reflection.Type type) [0x000c4] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.CustomAttributeData.GetCustomAttributesImpl (System.Collections.Generic.List`1[T] list, IKVM.Reflection.Module module, System.Int32 token, IKVM.Reflection.Type attributeType) [0x00063] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.CustomAttributeData.GetCustomAttributesImpl (System.Collections.Generic.List`1[T] list, IKVM.Reflection.MemberInfo member, IKVM.Reflection.Type attributeType) [0x00039] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.CustomAttributeData.__GetCustomAttributes (IKVM.Reflection.MemberInfo member, IKVM.Reflection.Type attributeType, System.Boolean inherit) [0x00031] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at IKVM.Reflection.MemberInfo.IsDefined (IKVM.Reflection.Type attributeType, System.Boolean inherit) [0x00000] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 \r\n  at ProtoBuf.Meta.MetaType.ApplyDefaultBehaviour () [0x004c0] in <3cd6a73ffeae488b98fe6fa28875c5e3>:0 \r\n  at ProtoBuf.Meta.RuntimeTypeModel.Add (IKVM.Reflection.Type type, System.Boolean applyDefaultBehaviour) [0x000eb] in <3cd6a73ffeae488b98fe6fa28875c5e3>:0 \r\n  at ProtoBuf.Precompile.PreCompileContext.Execute () [0x002a7] in <dc2388999df64e489ff273a6b981447e>:0 \r\n  at ProtoBuf.Precompile.Program.Main (System.String[] args) [0x00057] in <dc2388999df64e489ff273a6b981447e>:0 \r\n\r\nsorry about the bad formatting"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338584852",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338584852",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/314",
        "id": 338584852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODU4NDg1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-23T08:27:52Z",
        "updated_at": "2017-10-23T08:27:52Z",
        "author_association": "OWNER",
        "body": "dammit; fixing that would require a *lot* of work to make the current\ncodebase compatible with IKVM. But long term, that's not the direction we\ncan continue to go, since it a: is brittle, and b: is a dead-end (IKVM is\ndead). I was *really* hoping to spend that time moving to a different\nmechanism (solving the future needs) instead of doing that work (which just\nprolongs the pain).\n\nNot sure of the best move here; I need to catch up with MS on the codegen\nstory and think.\n\nI wonder if the best option *right now* might be to essentially implement\nthe \"new\" codegen stuff via the new protogen (not the old protogen),\nessentially making it possible to emit everything in one step when\nprocessing the .proto schema. Hopefully in a way that lets me reuse that\ncode later :)\n\nThat's my preferred option. The \"precompile\" hack is... a massive PITA for\neveryone.\n\nLet me think on that.\n\nOn 22 October 2017 at 14:41, sophiepeithos <notifications@github.com> wrote:\n\n> ok\uff0cusing the precompile from r668 seems ok on windows, I can successfully\n> serialization and deserialization proto3 map.\n> but It throw an exception when running precompile on macos:\n> huis-MacBook-Pro:precompile hui$ mono precompile.exe Model.dll -o:1.dll\n> -t:a WARNING: The runtime version supported by this application is\n> unavailable. Using default runtime: v4.0.30319 protobuf-net pre-compiler No\n> framework specified; defaulting to 4.0.30319.42000 Resolved\n> /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5/mscorlib.dll\n> Resolved /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5/System.dll\n> Resolved protobuf-net.dll Adding MessageContainingMapCalledEntry...\n> Member 'ProtoBuf.ProtoMapAttribute' is a missing member and does not\n> support the requested operation. at IKVM.Reflection.MissingType.get_Attributes\n> () [0x00006] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 at\n> IKVM.Reflection.Type.get_IsInterface () [0x00000] in <\n> 523ab91bcfd44fcaaadcaa2aa7737e44>:0 at IKVM.Reflection.Type.IsAssignableFrom\n> (IKVM.Reflection.Type type) [0x000c4] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0\n> at IKVM.Reflection.CustomAttributeData.GetCustomAttributesImpl\n> (System.Collections.Generic.List1[T] list, IKVM.Reflection.Module module,\n> System.Int32 token, IKVM.Reflection.Type attributeType) [0x00063] in <\n> 523ab91bcfd44fcaaadcaa2aa7737e44>:0\n> at IKVM.Reflection.CustomAttributeData.GetCustomAttributesImpl\n> (System.Collections.Generic.List1[T] list, IKVM.Reflection.MemberInfo\n> member, IKVM.Reflection.Type attributeType) [0x00039] in <\n> 523ab91bcfd44fcaaadcaa2aa7737e44>:0 at IKVM.Reflection.\n> CustomAttributeData.__GetCustomAttributes (IKVM.Reflection.MemberInfo\n> member, IKVM.Reflection.Type attributeType, System.Boolean inherit)\n> [0x00031] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0 at\n> IKVM.Reflection.MemberInfo.IsDefined (IKVM.Reflection.Type attributeType,\n> System.Boolean inherit) [0x00000] in <523ab91bcfd44fcaaadcaa2aa7737e44>:0\n> at ProtoBuf.Meta.MetaType.ApplyDefaultBehaviour () [0x004c0] in <\n> 3cd6a73ffeae488b98fe6fa28875c5e3>:0 at ProtoBuf.Meta.RuntimeTypeModel.Add\n> (IKVM.Reflection.Type type, System.Boolean applyDefaultBehaviour) [0x000eb]\n> in <3cd6a73ffeae488b98fe6fa28875c5e3>:0 at ProtoBuf.Precompile.PreCompileContext.Execute\n> () [0x002a7] in <dc2388999df64e489ff273a6b981447e>:0 at\n> ProtoBuf.Precompile.Program.Main (System.String[] args) [0x00057] in <\n> dc2388999df64e489ff273a6b981447e>:0\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/314#issuecomment-338478277>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFYcHUzFnCgUVSL8W6_2pAPN9xKRks5su0YBgaJpZM4QBgyf>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338594452",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/47#issuecomment-338594452",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/47",
        "id": 338594452,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODU5NDQ1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-23T09:04:03Z",
        "updated_at": "2017-10-23T09:08:32Z",
        "author_association": "OWNER",
        "body": "@yaakov-h  the schema overhaul needed for this is complete [as of 2.3.0](http://blog.marcgravell.com/2017/06/protobuf-net-gets-proto3-support.html); \"oneof\" support is in the code-generator and library; example: https://protogen.marcgravell.com/#g01989f8da1f4ce8ab358756115478c37\r\n\r\nBasically: this is all done. Marking as closed."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/338598408",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/54#issuecomment-338598408",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/54",
        "id": 338598408,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzODU5ODQwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-23T09:18:05Z",
        "updated_at": "2017-10-23T09:18:05Z",
        "author_association": "OWNER",
        "body": "all done in 2.3.0"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/340398854",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340398854",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/315",
        "id": 340398854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDM5ODg1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-30T10:07:19Z",
        "updated_at": "2017-10-30T10:07:19Z",
        "author_association": "OWNER",
        "body": "1: and what problem would that solve for me?\n\n2: I can't advise on unity since I don't unity. From what I hear, it should\nwork OK\n\n3: that's fair, but the problem is getting the time\n\nOn 30 Oct 2017 8:27 a.m., \"LIUYANLIN\" <notifications@github.com> wrote:\n\n1.I want you to use cmake to build the project\n2.where is \"Unity\" folder. I saw this folder on other forums. or how to do\nit in unity?\n3.Can you have a more detailed tutorial?\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/315>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsMm_y4Tns8Ln384pxhSuSpl3ETIKks5sxYiKgaJpZM4QK0iq>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/340423762",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340423762",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/315",
        "id": 340423762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQyMzc2Mg==",
        "user": {
            "login": "liuyanlin",
            "id": 5396582,
            "node_id": "MDQ6VXNlcjUzOTY1ODI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5396582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuyanlin",
            "html_url": "https://github.com/liuyanlin",
            "followers_url": "https://api.github.com/users/liuyanlin/followers",
            "following_url": "https://api.github.com/users/liuyanlin/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuyanlin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuyanlin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuyanlin/subscriptions",
            "organizations_url": "https://api.github.com/users/liuyanlin/orgs",
            "repos_url": "https://api.github.com/users/liuyanlin/repos",
            "events_url": "https://api.github.com/users/liuyanlin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuyanlin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-30T12:00:51Z",
        "updated_at": "2017-10-30T12:00:51Z",
        "author_association": "NONE",
        "body": "1.It's more user friendly, vs only supports upward compatibility, but now many people are still using 2015 or old version, and your project uses 2017."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/340433070",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340433070",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/315",
        "id": 340433070,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQzMzA3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-30T12:45:02Z",
        "updated_at": "2017-10-30T12:45:02Z",
        "author_association": "OWNER",
        "body": "You should also be able to build via \"dotnet build\" if you don't want 2017.\nUltimately, the project tooling that's there is there to allow me to build\nthe packages for the things I need (mainly for nuget). I don't have those\nadditional requirements, nor do I have the tools that are needed installed.\nIf there's a case for offering additional build options, I think it is\nneeded for somebody who understands, needs, and uses those tools to propose\nthem. I could suggest something, but there's no way for me to know if that\nactually solves anything.\n\nOn 30 October 2017 at 12:00, LIUYANLIN <notifications@github.com> wrote:\n\n> 1.It's more user friendly, vs only supports upward compatibility, but now\n> many people are still using 2015 or old version, and your project uses 2017.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340423762>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGDHJ2k48T1joKXFm6P70x2-PtQWks5sxbpzgaJpZM4QK0iq>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/340644770",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340644770",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/315",
        "id": 340644770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY0NDc3MA==",
        "user": {
            "login": "liuyanlin",
            "id": 5396582,
            "node_id": "MDQ6VXNlcjUzOTY1ODI=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5396582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuyanlin",
            "html_url": "https://github.com/liuyanlin",
            "followers_url": "https://api.github.com/users/liuyanlin/followers",
            "following_url": "https://api.github.com/users/liuyanlin/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuyanlin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuyanlin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuyanlin/subscriptions",
            "organizations_url": "https://api.github.com/users/liuyanlin/orgs",
            "repos_url": "https://api.github.com/users/liuyanlin/repos",
            "events_url": "https://api.github.com/users/liuyanlin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuyanlin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-31T02:51:56Z",
        "updated_at": "2017-10-31T02:51:56Z",
        "author_association": "NONE",
        "body": "ok~ and have a last question. \r\ncan i replace protoc.exe in protobuf-net with any version of google's protoc.exe?\r\nWill prtobuf-net be affected by version of google protobuf?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/340693712",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340693712",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/315",
        "id": 340693712,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY5MzcxMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-10-31T08:31:39Z",
        "updated_at": "2017-10-31T08:31:39Z",
        "author_association": "OWNER",
        "body": "if you mean in the 668 code, it should be fine - iirc it scans the local\npath before anything else, so just place it side by\nside\n\nIn the current \"head\" there is no protoc, except for the website code to\nallow other languages\n\nOn 31 Oct 2017 2:51 a.m., \"LIUYANLIN\" <notifications@github.com> wrote:\n\n> ok~ and have a last question.\n> can i replace protoc.exe in protobuf-net with any version of google's\n> protoc.exe?\n> Will prtobuf-net be affected by version of google protobuf?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/315#issuecomment-340644770>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOpostAizpfkZzLG53P_Qop407QEks5sxotNgaJpZM4QK0iq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/341388096",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/316#issuecomment-341388096",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/316",
        "id": 341388096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTM4ODA5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-02T11:04:50Z",
        "updated_at": "2017-11-02T11:04:50Z",
        "author_association": "OWNER",
        "body": "If you are just using the library (the dll, etc), then there is no\ndependency whatsoever on any google code.\n\nPartly, the wording is included as a courtesy and to make it very obvious\nthat the underlying protocol (\"protobuf\") that protobuf-net implements is a\ngoogle property.\n\nHowever, additionally: among the *additional tools* available in the\nprotobuf-net packages are copies of \"protoc\" and multiple google .proto\nfiles. Historically, \"protoc\" was used by the \"protogen\" tool, although\nthis is no longer the case (the \"protogen\" tool is now entirely managed\ncode with no dependency); however, the source code also includes the code\nfor https://protogen.marcgravell.com/ which again includes \"protoc\" as a\nconvenience for people working with multiple languages, and multiple .proto\nfiles (mostly by google) to allow people to make use of common \"import\"\nscenarios.\n\n\nDoes that help?\n\nOn 2 November 2017 at 09:53, Vincent Weevers <notifications@github.com>\nwrote:\n\n> The license\n> <https://github.com/mgravell/protobuf-net/blob/a978575b9e8bc281f7341237cace35220ef0ff35/Licence.txt>\n> says:\n>\n> The core Protocol Buffers technology is provided courtesy of Google.\n> At the time of writing, this is released under the BSD license.\n> Full details can be found here:\n> http://code.google.com/p/protobuf/\n>\n> This .NET implementation is Copyright 2008 Marc Gravell\n>\n> But as far as I can see, protobuf-net does not use any Google code or\n> libraries. If so, the first paragraph is not necessary (and somewhat\n> confusing). Can you please clarify why you included it? Thanks!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/316>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLDrWWZGBiNVJxfAoRiDw_XafUD6ks5syZEtgaJpZM4QPa-h>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/341390662",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/316#issuecomment-341390662",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/316",
        "id": 341390662,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTM5MDY2Mg==",
        "user": {
            "login": "vweevers",
            "id": 3055345,
            "node_id": "MDQ6VXNlcjMwNTUzNDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3055345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vweevers",
            "html_url": "https://github.com/vweevers",
            "followers_url": "https://api.github.com/users/vweevers/followers",
            "following_url": "https://api.github.com/users/vweevers/following{/other_user}",
            "gists_url": "https://api.github.com/users/vweevers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vweevers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vweevers/subscriptions",
            "organizations_url": "https://api.github.com/users/vweevers/orgs",
            "repos_url": "https://api.github.com/users/vweevers/repos",
            "events_url": "https://api.github.com/users/vweevers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vweevers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-02T11:16:24Z",
        "updated_at": "2017-11-02T11:16:24Z",
        "author_association": "NONE",
        "body": "It does! Thank you for the detailed explanation."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/342173832",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-342173832",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 342173832,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjE3MzgzMg==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-06T14:58:37Z",
        "updated_at": "2017-11-06T14:58:37Z",
        "author_association": "NONE",
        "body": "Turns out this works in `protobuf-net 2.2.1` but starts to throw in `protobuf-net 2.3.0`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/343791580",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/299#issuecomment-343791580",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/299",
        "id": 343791580,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc5MTU4MA==",
        "user": {
            "login": "zhaocy1217",
            "id": 29355179,
            "node_id": "MDQ6VXNlcjI5MzU1MTc5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/29355179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaocy1217",
            "html_url": "https://github.com/zhaocy1217",
            "followers_url": "https://api.github.com/users/zhaocy1217/followers",
            "following_url": "https://api.github.com/users/zhaocy1217/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaocy1217/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaocy1217/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaocy1217/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaocy1217/orgs",
            "repos_url": "https://api.github.com/users/zhaocy1217/repos",
            "events_url": "https://api.github.com/users/zhaocy1217/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaocy1217/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-13T02:14:54Z",
        "updated_at": "2017-11-13T02:14:54Z",
        "author_association": "NONE",
        "body": "you can try the following command in cmd.\r\nprotogen -i:ArmyConf.protodesc -o:ArmyConf.cs"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/344560361",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-344560361",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 344560361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDU2MDM2MQ==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-15T11:06:59Z",
        "updated_at": "2017-11-15T11:06:59Z",
        "author_association": "NONE",
        "body": "@mgravell Any thoughts?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/345276916",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/319#issuecomment-345276916",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/319",
        "id": 345276916,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3NjkxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-17T15:36:28Z",
        "updated_at": "2017-11-17T15:36:28Z",
        "author_association": "OWNER",
        "body": "right; this gets complex and there might not br great news. The \"assorted\"\nis stuff that has not been updated to the current build tools, so may not\nbe in an immediately buildable state. In the case of precompile, this is\npartly because the tool we use to hack around some platform limitations\n(IKVM) has been abandoned by the author. But also, it has always been\nsomewhat brittle and hacky. The library that is available for earlier\nbuilds seems incompatible with .net core etc, and frankly that simply isn't\nthe right tool to pursue going forward.\n\nLong term, the plan is to replace this tool with better build-like tooling\nperhaps using Roslyn, perhaps not. I've been chasing MS on improved build\ntime generation, and while folks see the need nothing has changed. The\nexperimental \"generators\" Roslyn spike is stalled.\n\nSo; right now I don't have good options for pre-generation, at least: not\nfor recent builds. If you're using an older build, then the old precompile\nexe should work.\n\nOther than that, I would need to dust off a lot of pieces to plumb\neverything together. It isn't something that I need day to day, which -\nbeing realistic - has influenced my prioritization. If I needed it for\nwork, it would be relatively easy to carve out some work time to get the\njob done - but otherwise, I'm kinda kept busy on other things.\n\nI am aware that this is a pain point - and I've seen various people talking\nabout unity in particular. Here again I am slightly hampered by not being a\nunity user. I don't know much about the platform limitations. What I guess\nI need to do is find the time to carve out some R+D time to set up a\nminimal unity project and try to see for myself what happens, and what I\ncan get working.\n\nWhat version(s) / platforms of unity are you hitting problems with? Just in\ncase it matters (I don't want to install latest and \"fix\" things, only to\nfind that my fixes don't work with the version folks are actually using)\n\nOn 17 Nov 2017 1:12 p.m., \"PeterLake2002\" <notifications@github.com> wrote:\n\nI know this question is kinds of stupid, but I have spent 10 hours on this,\nand still can't get it done, I seriously feel despair, please help.\nI download protobuf-net-2.3.2.zip, unzip it, and open\nprotobuf-net-2.3.2\\src\\protobuf-net.sln in Visual Studio 2017, choose Unity\n- Any CPU - protobuf-net and Build Solution.\nEverything is fine, but then I realize there is no precompile, is's in\nprotobuf-net-2.3.2\\assorted\\precompile, I am not sure what to do since I am\na noob.\nSo I right click on Solution - Add - Existing Project - choose\nprotobuf-net-2.3.2\\assorted\\precompile\\precompile.csproj to add precompile\nproject to current solution.\n<https://camo.githubusercontent.com/5432841c85398d2f19d04d920915ca5e3a8a5c6f/68747470733a2f2f692e696d6775722e636f6d2f6873315a5a51762e706e67>\n\nBut there are so many errors in protobuf-net-2.3.2\\assorted\\\nprecompile\\Program.cs\n\n<https://camo.githubusercontent.com/94b5e7c4ae5051eb91957dce5cdee1597f8ce31f/68747470733a2f2f692e696d6775722e636f6d2f426c7a74324e482e706e67>\nAfter I precompile project - right click References - Add Reference -\nProjects - choose protobuf-net, this error seems disappear\n\n<https://camo.githubusercontent.com/0f05ffa2f131803080181255eb2ac050d4a4b65c/68747470733a2f2f692e696d6775722e636f6d2f4967656f6e73552e706e67>\nI realize there is a protobuf-net-2.3.2\\src\\Tools\\IKVM.Reflection.dll,\nafter I add this dll to reference, error disappear\n\nand the last one\n<https://camo.githubusercontent.com/a3f055b877628e480446ea0b8832916a6a33e58e/68747470733a2f2f692e696d6775722e636f6d2f664f41646858412e706e67>\nI have no idea how to solve this, I am almost crazy, please help, please,\nplease, many thanks\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/319>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsD-LnworuKwXa-rBZ-IhPg6Q-1c0ks5s3YZXgaJpZM4QiBQF>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/345418011",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/319#issuecomment-345418011",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/319",
        "id": 345418011,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQxODAxMQ==",
        "user": {
            "login": "PeterLake2002",
            "id": 33752618,
            "node_id": "MDQ6VXNlcjMzNzUyNjE4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33752618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeterLake2002",
            "html_url": "https://github.com/PeterLake2002",
            "followers_url": "https://api.github.com/users/PeterLake2002/followers",
            "following_url": "https://api.github.com/users/PeterLake2002/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeterLake2002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeterLake2002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeterLake2002/subscriptions",
            "organizations_url": "https://api.github.com/users/PeterLake2002/orgs",
            "repos_url": "https://api.github.com/users/PeterLake2002/repos",
            "events_url": "https://api.github.com/users/PeterLake2002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeterLake2002/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-18T04:41:42Z",
        "updated_at": "2017-11-18T04:41:42Z",
        "author_association": "NONE",
        "body": "Thanks for your reply.\r\nI am using Unity 2017.2.0  in Windows 10.\r\nAll version of Unity available here: [http://unity3d.com/unity/download/archive](http://unity3d.com/unity/download/archive)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/346858815",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/321#issuecomment-346858815",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/321",
        "id": 346858815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg1ODgxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-24T16:01:14Z",
        "updated_at": "2017-11-24T16:01:14Z",
        "author_association": "OWNER",
        "body": "which protogen is this? it was rewritten for 2.3.0, and the extension\nsupport is one of the differences\n\nOn 24 Nov 2017 2:38 p.m., \"Marques da Silva\" <notifications@github.com>\nwrote:\n\n> This issue was discussed initially in the stackoverflow\n> <https://stackoverflow.com/questions/47424568/do-protobuf-net-supports-protobuf-extensions>\n> .\n>\n> I have a base.proto with a set of messages that can be extensible using\n> protobuff extensions, then I have a comm.proto that extends some of the\n> messages defined in base.proto.\n>\n> I used ProtoGen to generate base.cs and comm.cs files but I am not able to\n> access the extension fields added by comm.cs.\n>\n> Is this supported or I have to pass some extra parameter to ProtoGen?\n>\n> *My environment:*\n>\n> dotnet --info\n>\n> .NET Command Line Tools (2.0.3)\n>\n> Product Information:\n>  Version:            2.0.3\n>  Commit SHA-1 hash:  eb1d5ee318\n>\n> Runtime Environment:\n>  OS Name:     Mac OS X\n>  OS Version:  10.12\n>  OS Platform: Darwin\n>  RID:         osx.10.12-x64\n>  Base Path:   /usr/local/share/dotnet/sdk/2.0.3/\n>\n> Microsoft .NET Core Shared Framework Host\n>\n>   Version  : 2.0.3\n>   Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\n>\n> *Trying to build the project with*\n>\n> DOTNET_RUNTIME_ID=osx.10.12-x64 dotnet build -f netstandard1.3 -c Release\n>\n> *Mono version*\n>\n> Mono JIT compiler version 5.4.1.6 (2017-06/1f4613aa1ac Wed Oct 18 09:31:57 EDT 2017)\n> Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\n> \tTLS:           normal\n> \tSIGSEGV:       altstack\n> \tNotification:  kqueue\n> \tArchitecture:  amd64\n> \tDisabled:      none\n> \tMisc:          softdebug\n> \tLLVM:          yes(3.6.0svn-mono-master/8b1520c8aae)\n> \tGC:            sgen (concurrent by default)\n>\n> Unity Version: 5.6.4p2 (not relevant because I am trying to build outside\n> of unity)\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/321>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNZavMuLY47Oai2sQaY6477AivhDks5s5tTogaJpZM4Qp5fn>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/346893553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/321#issuecomment-346893553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/321",
        "id": 346893553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg5MzU1Mw==",
        "user": {
            "login": "posilva",
            "id": 1260664,
            "node_id": "MDQ6VXNlcjEyNjA2NjQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1260664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/posilva",
            "html_url": "https://github.com/posilva",
            "followers_url": "https://api.github.com/users/posilva/followers",
            "following_url": "https://api.github.com/users/posilva/following{/other_user}",
            "gists_url": "https://api.github.com/users/posilva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/posilva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/posilva/subscriptions",
            "organizations_url": "https://api.github.com/users/posilva/orgs",
            "repos_url": "https://api.github.com/users/posilva/repos",
            "events_url": "https://api.github.com/users/posilva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/posilva/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-24T20:38:40Z",
        "updated_at": "2017-11-24T20:38:40Z",
        "author_association": "NONE",
        "body": "Because I was not able to compile the version 2.3.2 I gave a shot with this project https://github.com/floatinghotpot/protogen and I was able to generate .cs files from proto with the bundled protogen.exe but the Extensions were not properly generate. I tried to follow your suggestions but I wasn\u2019t able to build 2.3.2 in my MacOS. I was able to generate protobuf-net.dll but not protogen because I got 625 errors related with Protobufnet.Reflection project. \r\n\r\nI think the generated dll is missing some Metadata part that is needed by the Reflection project. I have posted the errors on SO post.\r\n\r\nI really would like to give a try on protobuf net but I already spent so much time and I do not have any more ideas except generate the proto for c++ and do a wrapper in c# to be able to use it in Unity.\r\n\r\nYou have been very nice and helpful and if you have any thoughts how to fix this build issue using my environment I would be very glad to confirm that It works and create a tutorial around our finds and provide a Mono version to the community."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/347085769",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/320#issuecomment-347085769",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/320",
        "id": 347085769,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA4NTc2OQ==",
        "user": {
            "login": "RockChia",
            "id": 4409889,
            "node_id": "MDQ6VXNlcjQ0MDk4ODk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4409889?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RockChia",
            "html_url": "https://github.com/RockChia",
            "followers_url": "https://api.github.com/users/RockChia/followers",
            "following_url": "https://api.github.com/users/RockChia/following{/other_user}",
            "gists_url": "https://api.github.com/users/RockChia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RockChia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RockChia/subscriptions",
            "organizations_url": "https://api.github.com/users/RockChia/orgs",
            "repos_url": "https://api.github.com/users/RockChia/repos",
            "events_url": "https://api.github.com/users/RockChia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RockChia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-27T05:54:11Z",
        "updated_at": "2017-11-27T05:54:11Z",
        "author_association": "NONE",
        "body": "I confirmed that  protobuf-net-2.3.2 does not support xamarion.iso 11.2, becuase when I diassembly the System.Reflection.Emit.Lightweight.dll I found the code:\r\n`public DynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)\r\n{\r\n\tthrow new PlatformNotSupportedException();\r\n}`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348711028",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711028",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348711028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMTAyOA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T18:35:19Z",
        "updated_at": "2017-12-02T18:35:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Interesting, in what conditions did this manifest @Thecentury ? I'm wondering if this is the cause of some LOH buffering issues I've worked around in https://github.com/mgravell/protobuf-net/pull/307"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348711423",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711423",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348711423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMTQyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T18:41:50Z",
        "updated_at": "2017-12-02T18:41:50Z",
        "author_association": "OWNER",
        "body": "presumably any very large buffer size - anythibg bwtween 1GiB and 2GiB\nshould do it. Not quite sure on the purpose of the constant though - it\nseems like we could skip that and go direct to the target size.\n\nFYI, I'm doing some design work on some core changes that would\nsignificantly remove the need for any in-flight buffer here, which would\nmake this problem go away in the future while also significantly reducing\nmemory usage for deep models, but this fix looks a great step for today.\n\n\nOn 2 Dec 2017 6:35 p.m., \"Rob Emery\" <notifications@github.com> wrote:\n\nInteresting, in what conditions did this manifest @Thecentury\n<https://github.com/thecentury> ? I'm wondering if this is the cause of\nsome LOH buffering issues I've worked around in #307\n<https://github.com/mgravell/protobuf-net/pull/307>\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711028>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsAlKXOq1V6zNQSfrjkHxlY0idXatks5s8ZhogaJpZM4QzQvV>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348711501",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711501",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348711501,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMTUwMQ==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T18:42:58Z",
        "updated_at": "2017-12-02T18:43:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "The following code reproduces the issue:\r\n\r\n```csharp\r\nclass Program\r\n    {\r\n        static void Main( string[] args )\r\n        {\r\n            var ms = new MemoryStream();\r\n\r\n            var type2 = new Type2\r\n            {\r\n                MyProperty = 2,\r\n                X = Enumerable.Range( 0, 1 ).Select( i => new MyType\r\n                {\r\n                    Strings = Enumerable.Range( 0, 20 ).Select( x => CreateString( 100_000_000 ) ).ToList(),\r\n                    Ints = new int[1_000]\r\n                } ).ToList()\r\n            };\r\n\r\n            Serializer.Serialize( ms, type2 );\r\n\r\n            ms.Position = 0;\r\n        }\r\n\r\n        public static string CreateString( int length )\r\n        {\r\n            return new string( new char[length] );\r\n        }\r\n    }\r\n\r\n    [ProtoContract]\r\n    public class Type2\r\n    {\r\n        [ProtoMember( 1 )]\r\n        public int MyProperty { get; set; }\r\n\r\n\r\n        [ProtoMember( 2 )]\r\n        public List<MyType> X { get; set; }\r\n    }\r\n\r\n    [ProtoContract]\r\n    public class MyType\r\n    {\r\n        [ProtoMember( 1 )]\r\n        public List<string> Strings { get; set; }\r\n\r\n        [ProtoMember( 2 )]\r\n        public int[] Ints { get; set; }\r\n    }\r\n```\r\n\r\nAt some moment, in method BufferPool.ResizeAndFlushLeft buffer.Length becames larger than Int32.MaxValue / 2, so multiplying it by 2 causes int overflow and produces negative newLength value. In this case, newLength becomes toFitAtLeastBytes and ResizeAndFlushLeft will be called many times with slightly bigger toFitAtLeastBytes values."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348711639",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711639",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348711639,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMTYzOQ==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T18:45:37Z",
        "updated_at": "2017-12-02T18:45:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "Current code already goes in this case to target size (toFitAtLeastBytes), but this causes linear buffer growth instead of previous exponential.\r\n\r\nThis causes our app to serialize quite big object for 10 hours :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348711962",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711962",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348711962,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMTk2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T18:51:31Z",
        "updated_at": "2017-12-02T18:51:31Z",
        "author_association": "OWNER",
        "body": "not necessarily a topic for this chain, but I'd love to understand your\nmodel - size / depth / etc. It sounds like a seriously non-trivial beast -\nexactly the kind of thing I'm trying to optimize for in the rework of the\ncore.\n\nOn 2 Dec 2017 6:45 p.m., \"Mikhail Brinchuk\" <notifications@github.com>\nwrote:\n\n> Current code already goes in this case to target size (toFitAtLeastBytes),\n> but this causes linear buffer growth instead of previous exponential.\n>\n> This causes our app to serialize quite big object for 10 hours :)\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348711639>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsESRLgoahQhh1A9wJ0ZJaNJgyjCyks5s8ZrSgaJpZM4QzQvV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348713122",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348713122",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348713122,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMzEyMg==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T19:11:03Z",
        "updated_at": "2017-12-02T19:15:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Our object that serializes for huge amounts of time (several hours) consists of around 1000 nested objects that hold strings with total length 3.5*10^9. All this hours its memory consumtion looks like a saw - byte array buffers with constantly growing size are allocated and then become abandoned when they become too small to hold data part that is currently being serialized.\r\n\r\n![consoletests exe_9544 properties 2017-12-02 22 13 57](https://user-images.githubusercontent.com/3943804/33518920-410b2b78-d7ae-11e7-9116-58edffe952e6.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348713812",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348713812",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348713812,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMzgxMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T19:22:31Z",
        "updated_at": "2017-12-02T19:22:31Z",
        "author_association": "OWNER",
        "body": "Serious question: how private is your model? I mean for non-public non-repo\npurposes to improve things. I'm looking for scenarios to use while\nvalidating / testing the core changes, and I suspect we can improve that a\nlot. Maybe that's an off-board discussion, though. If you are interested,\nI'm at marc.gravell@gmail.com\n\nOn 2 Dec 2017 7:11 p.m., \"Mikhail Brinchuk\" <notifications@github.com>\nwrote:\n\n> Our object that serializes for huge amounts of time (several hours)\n> consists of around 1000 nested objects that hold strings with total length\n> 3.5*10^9. All this hours its memory consumtion looks like a saw - byte\n> array buffers with constantly growing size are allocated and then become\n> abandoned when they become too small to hold data part that is currently\n> being serialized.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348713122>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJV8U7GaQ_VRQqdXB8SaXzDDJsyiks5s8aDIgaJpZM4QzQvV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348713852",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348713852",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348713852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxMzg1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T19:23:03Z",
        "updated_at": "2017-12-02T19:23:03Z",
        "author_association": "OWNER",
        "body": "also: change looks good; will merge when I can validate locally\n\nOn 2 Dec 2017 7:11 p.m., \"Mikhail Brinchuk\" <notifications@github.com>\nwrote:\n\n> Our object that serializes for huge amounts of time (several hours)\n> consists of around 1000 nested objects that hold strings with total length\n> 3.5*10^9. All this hours its memory consumtion looks like a saw - byte\n> array buffers with constantly growing size are allocated and then become\n> abandoned when they become too small to hold data part that is currently\n> being serialized.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348713122>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJV8U7GaQ_VRQqdXB8SaXzDDJsyiks5s8aDIgaJpZM4QzQvV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348716145",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348716145",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348716145,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxNjE0NQ==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T20:00:58Z",
        "updated_at": "2017-12-02T20:00:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell Marc, on Monday I'll create a repository with our model and our data."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348722594",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348722594",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348722594,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcyMjU5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T21:48:50Z",
        "updated_at": "2017-12-02T21:48:50Z",
        "author_association": "OWNER",
        "body": "Wow, that's awesome and much more than I was expecting. Essentially my\npoint here is: if you're hitting problems wherefore buffering *this much*,\nthen a: you're perfect for the changes I've been playing with for V3, and\nb: you're already in the danger zone where OOM is neither impossible nor\nunlikely.\n\nOn 2 Dec 2017 8:01 p.m., \"Mikhail Brinchuk\" <notifications@github.com>\nwrote:\n\n> @mgravell <https://github.com/mgravell> Marc, on Monday I'll create a\n> repository with our model and our data.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348716145>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsMqGAhtT5ScJlJS0e1UGQwmJ7Bx_ks5s8ax7gaJpZM4QzQvV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348725246",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348725246",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348725246,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcyNTI0Ng==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-02T22:36:39Z",
        "updated_at": "2017-12-02T22:36:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Current code already goes in this case to target size (toFitAtLeastBytes), but this causes linear buffer growth instead of previous exponential.\r\n\r\n@Thecentury Presumably you *wouldn't* want these large buffers cached? They're single use (presumably rarely)?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348753586",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348753586",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348753586,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc1MzU4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-03T10:08:38Z",
        "updated_at": "2017-12-03T10:08:38Z",
        "author_association": "OWNER",
        "body": "I think it makes sense to not add special treatment either way there. It\ncan already end up with large buffers in some cases with of without this\nchange. So if that's a problem we should fix that separately. Which is one\nof the things V3 will change.\n\nOn 2 Dec 2017 10:36 p.m., \"Rob Emery\" <notifications@github.com> wrote:\n\nCurrent code already goes in this case to target size (toFitAtLeastBytes),\nbut this causes linear buffer growth instead of previous exponential.\n\nPresumably you *wouldn't* want these large buffers cached? They're single\nuse (presumably rarely)?\n\n\u2014\nYou are receiving this because you were mentioned.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348725246>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsOIxiy7KXkAhvBIK1HS4iBdXVo0Vks5s8dD4gaJpZM4QzQvV>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348811823",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348811823",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348811823,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgxMTgyMw==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-03T20:28:11Z",
        "updated_at": "2017-12-03T20:28:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I think it makes sense to not add special treatment either way there. It can already end up with large buffers in some cases with of without this change. So if that's a problem we should fix that separately. Which is one of the things V3 will change.\r\n\r\nThis is true, however I'm thinking that the regular allocation of such massive buffers would be problematic; whereas the caching of the buffers to reduce fragmentation would result in incredibly poor performance for other usages of the buffers during the lifetime of the pool."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348812113",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348812113",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348812113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgxMjExMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-03T20:32:14Z",
        "updated_at": "2017-12-03T20:32:14Z",
        "author_association": "OWNER",
        "body": "Having a small number of large buffers usually soeant have that much impact\non perf. The bigger problem is a large number of small non-collectable\nbuffers, forcing unsuccessful GEN-2 GC over-and-over. That doesn't really\napply here. A few LOH objects isn't *usually* a cause for concern -\n*unless* the user is genuinely out of memory at the time, which is\nincreasingly rare.\n\nOn 3 Dec 2017 8:28 p.m., \"Rob Emery\" <notifications@github.com> wrote:\n\n> I think it makes sense to not add special treatment either way there. It\n> can already end up with large buffers in some cases with of without this\n> change. So if that's a problem we should fix that separately. Which is one\n> of the things V3 will change.\n>\n> This is true, However I'm thinking that the regular allocation of such\n> massive buffers would be problematic; whereas the caching of the buffers to\n> reduce fragmentation would result in incredibly poor performance for other\n> usages of the buffers during the lifetime of the pool.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348811823>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDWMgAOmKmPwzfDC2s6Rc1vytPv0ks5s8wRcgaJpZM4QzQvV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348814298",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348814298",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348814298,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgxNDI5OA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-03T21:02:48Z",
        "updated_at": "2017-12-03T21:02:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Having a small number of large buffers usually soeant have that much impact on perf\r\n\r\nInteresting, I would have expected that zeroing out buffers of that kind of size would have been a killer!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348832514",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348832514",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348832514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODgzMjUxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T00:16:11Z",
        "updated_at": "2017-12-04T00:16:11Z",
        "author_association": "OWNER",
        "body": "It takes about 150ms to wipe a 1.5GiB vector on my laptop which is indeed a\nlittle slower than I'd like, but if you're dealing with that kind of size\nyou're probably already dealing with much slower cycles. There *is* a\npathological edge case where you do the expensive work once and then pay\nfor it over and over, and maybe that can be tweaked. Not sure if it\nwarrants fixing urgently though, vs fixing the need to use a buffer in the\nfirst place.\n\nOn 3 December 2017 at 21:02, Rob Emery <notifications@github.com> wrote:\n\n> Having a small number of large buffers usually soeant have that much\n> impact on perf\n> Interesting, I would have expected that zeroing out buffers of that kind\n> of size would have been a killer!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348814298>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCi4_TqSNQD_ds_ITh9bJxzMqE9Rks5s8wx5gaJpZM4QzQvV>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348884029",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/311#issuecomment-348884029",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/311",
        "id": 348884029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODg4NDAyOQ==",
        "user": {
            "login": "ilCosmico",
            "id": 8678145,
            "node_id": "MDQ6VXNlcjg2NzgxNDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8678145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilCosmico",
            "html_url": "https://github.com/ilCosmico",
            "followers_url": "https://api.github.com/users/ilCosmico/followers",
            "following_url": "https://api.github.com/users/ilCosmico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilCosmico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilCosmico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilCosmico/subscriptions",
            "organizations_url": "https://api.github.com/users/ilCosmico/orgs",
            "repos_url": "https://api.github.com/users/ilCosmico/repos",
            "events_url": "https://api.github.com/users/ilCosmico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilCosmico/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T07:46:03Z",
        "updated_at": "2017-12-04T07:46:03Z",
        "author_association": "NONE",
        "body": "Any comments on this, yet?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348887230",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/311#issuecomment-348887230",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/311",
        "id": 348887230,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODg4NzIzMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T08:02:36Z",
        "updated_at": "2017-12-04T08:02:36Z",
        "author_association": "OWNER",
        "body": "Yes, that should fix it. The lack of that sanity check isn't critical -\nfrankly it could probably be behind a #if DEBUG too.\n\nOn 16 Oct 2017 1:33 p.m., \"ilCosmico\" <notifications@github.com> wrote:\n\n> Trying to build the protobuf-net 2.3.2 with FEAT_SAFE conditional symbol\n> but removing \"Allow unsafe code\" option in the project, I get some errors\n> for DiscriminatedUnion objects in their static constructors.\n> Can I just add add them under the conditional symbol?\n>\n> E.g.\n>\n> `\n> #if !FEAT_SAFE\n>\n>     unsafe static DiscriminatedUnion64Object()\n>     {\n>         if (sizeof(DateTime) > 8) throw new InvalidOperationException(nameof(DateTime) + \" was unexpectedly too big for \" + nameof(DiscriminatedUnion64Object));\n>         if (sizeof(TimeSpan) > 8) throw new InvalidOperationException(nameof(TimeSpan) + \" was unexpectedly too big for \" + nameof(DiscriminatedUnion64Object));\n>     }\n>\n> #endif\n> `\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/311>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPnwxHchxfbGAXc-ARr_Ibvl8_rwks5ss002gaJpZM4P6jR4>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348960995",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-348960995",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 348960995,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODk2MDk5NQ==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T13:24:39Z",
        "updated_at": "2017-12-04T13:26:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell Marc, here is the repository with types from our application and sample data: https://github.com/Thecentury/LongProtobufSerialization.\r\nTypes and data were cleaned off to remove private details, but I hope this won't be a problem.\r\nData is in data.zip archive in the root of repo, you've to unzip it to bin/debug folder.\r\n\r\nWith default version of protobuf-net from nuget, I was unable to get the end of serialization (I suppose, it'd take several hours). With patched library, serialization completes in several seconds."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/348981727",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/311#issuecomment-348981727",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/311",
        "id": 348981727,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODk4MTcyNw==",
        "user": {
            "login": "ilCosmico",
            "id": 8678145,
            "node_id": "MDQ6VXNlcjg2NzgxNDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8678145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilCosmico",
            "html_url": "https://github.com/ilCosmico",
            "followers_url": "https://api.github.com/users/ilCosmico/followers",
            "following_url": "https://api.github.com/users/ilCosmico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilCosmico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilCosmico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilCosmico/subscriptions",
            "organizations_url": "https://api.github.com/users/ilCosmico/orgs",
            "repos_url": "https://api.github.com/users/ilCosmico/repos",
            "events_url": "https://api.github.com/users/ilCosmico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilCosmico/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T14:42:51Z",
        "updated_at": "2017-12-04T14:42:51Z",
        "author_association": "NONE",
        "body": "Thanks Marc!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349044992",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/323#issuecomment-349044992",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/323",
        "id": 349044992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTA0NDk5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T17:50:21Z",
        "updated_at": "2017-12-04T17:50:21Z",
        "author_association": "OWNER",
        "body": "Property initializers aren't directly visible as metadata (just like code\nin constructors isn't).\n\nIf you're using non-default defaults, then add a [DefaultValue(-1)] (or\nwhatever) attribute so the library knows what you're doing.\n\nalternatively, you can disable implicit zero defaults completely. But\nadding the attribute would be my recommended option.\n\nOn 4 Dec 2017 3:25 p.m., \"Yiyong Lin\" <notifications@github.com> wrote:\n\n> public class A\n> {\n> ProtoMember(1)\n> public int a {get; set;} = -1;\n> ProtoMember(2)\n> public List b{get; set;} = new List() {\"bb\"};\n> }\n>\n> var a = new A() {a = 0; b = null};\n> var data = Serialize(a);\n> var b = Deserialize(data);\n>\n> Then we can see that b.a == -1 and b.b == {\"bb\"}.\n> This is wrong\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/323>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsH4586hV7J9KFjhFRNcuJ2SulWnVks5s9A7kgaJpZM4Q00vy>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349046043",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/323#issuecomment-349046043",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/323",
        "id": 349046043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTA0NjA0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T17:53:21Z",
        "updated_at": "2017-12-04T17:53:21Z",
        "author_association": "OWNER",
        "body": "note also that lists work differently - and there is no mechanism in the\nprotobuf wire format to specify \"empty\", \"null\", \"clear\" or anything like\nthat.\n\nTo handle lists in the way you want is not trivial. Frankly I would not\nrecommend having non-empty lists (during construction) in this case. They\ndon't map very well to what the protobuf format can describe.\n\nOn 4 Dec 2017 3:25 p.m., \"Yiyong Lin\" <notifications@github.com> wrote:\n\n> public class A\n> {\n> ProtoMember(1)\n> public int a {get; set;} = -1;\n> ProtoMember(2)\n> public List b{get; set;} = new List() {\"bb\"};\n> }\n>\n> var a = new A() {a = 0; b = null};\n> var data = Serialize(a);\n> var b = Deserialize(data);\n>\n> Then we can see that b.a == -1 and b.b == {\"bb\"}.\n> This is wrong\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/323>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsH4586hV7J9KFjhFRNcuJ2SulWnVks5s9A7kgaJpZM4Q00vy>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349139016",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-349139016",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 349139016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTEzOTAxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T23:14:58Z",
        "updated_at": "2017-12-04T23:14:58Z",
        "author_association": "OWNER",
        "body": "Repro; that's a *very* impressive fix for a few lines of code. Much appreciated. I'm going to keep hold of the sample for v3 work - very interesting example."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349140989",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-349140989",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 349140989,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE0MDk4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-04T23:23:18Z",
        "updated_at": "2017-12-04T23:23:18Z",
        "author_association": "OWNER",
        "body": "https://www.nuget.org/packages/protobuf-net/2.3.3 is released"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349226721",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/324#issuecomment-349226721",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/324",
        "id": 349226721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIyNjcyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:05:50Z",
        "updated_at": "2017-12-05T08:05:50Z",
        "author_association": "OWNER",
        "body": "No, it doesn't and there is no plan to fully do so. Note that in many\ncases, switching the \"remoting format\" is enough to make it tolerable (but\nnot exactly blazing):\nhttps://msdn.microsoft.com/en-us/library/system.data.dataset.remotingformat(v=vs.110).aspx\n\nOn 5 Dec 2017 12:40 a.m., \"amphiware-alex\" <notifications@github.com> wrote:\n\n> Does protobuf-net supports System.Data DataTable out of the box ?\n>\n> It seems like \"protobuf-net-data\" supports it, but i don't think anyone is\n> updating it..\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/324>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsA-Vk21Mu4UYy-CeUF3ZLB9pnH6Uks5s9JDigaJpZM4Q1jPb>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349226972",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/323#issuecomment-349226972",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/323",
        "id": 349226972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIyNjk3Mg==",
        "user": {
            "login": "yiylin",
            "id": 15103725,
            "node_id": "MDQ6VXNlcjE1MTAzNzI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15103725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yiylin",
            "html_url": "https://github.com/yiylin",
            "followers_url": "https://api.github.com/users/yiylin/followers",
            "following_url": "https://api.github.com/users/yiylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yiylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yiylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yiylin/subscriptions",
            "organizations_url": "https://api.github.com/users/yiylin/orgs",
            "repos_url": "https://api.github.com/users/yiylin/repos",
            "events_url": "https://api.github.com/users/yiylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yiylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:06:58Z",
        "updated_at": "2017-12-05T08:06:58Z",
        "author_association": "NONE",
        "body": "thanks for your reply. \"DefaultValue\" works"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349227051",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/323#issuecomment-349227051",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/323",
        "id": 349227051,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIyNzA1MQ==",
        "user": {
            "login": "yiylin",
            "id": 15103725,
            "node_id": "MDQ6VXNlcjE1MTAzNzI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15103725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yiylin",
            "html_url": "https://github.com/yiylin",
            "followers_url": "https://api.github.com/users/yiylin/followers",
            "following_url": "https://api.github.com/users/yiylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yiylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yiylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yiylin/subscriptions",
            "organizations_url": "https://api.github.com/users/yiylin/orgs",
            "repos_url": "https://api.github.com/users/yiylin/repos",
            "events_url": "https://api.github.com/users/yiylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yiylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:07:21Z",
        "updated_at": "2017-12-05T08:07:21Z",
        "author_association": "NONE",
        "body": "Will you add this case to the document?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349230458",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349230458",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/325",
        "id": 349230458,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzMDQ1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:23:38Z",
        "updated_at": "2017-12-05T08:23:38Z",
        "author_association": "OWNER",
        "body": "By default protobuf-net works as a tree serializer, not a graph serializer.\nIndeed, anything graph-related offered by protobuf-net is an\nimplementation-specific customisation that doesn't follow an agreed\nconvention (because there is no agreed convention on object tracking) - so\nyou may struggle to deserialize the data with any other library.\n\nHowever: you could try adding AsReferenceDefault=true to the\n[ProtoContract] of A.\n\n\n\nOn 5 Dec 2017 8:17 a.m., \"Yiyong Lin\" <notifications@github.com> wrote:\n\n> [ProtoContract]\n> public class A\n> {\n> [ProtoMember(1)]\n> public string data {get; set;}\n> }\n>\n> [ProtoContract]\n> public class B\n> {\n> [ProtoMember(1)]\n> public Dictionary<A,A> ADictionary {get; set;}\n> [ProtoMember(2)]\n> public List AList {get; set;}\n>\n> public void Init()\n> {\n> for (int i = 0; i < 5; ++i)\n> {\n> var data = new A() {data = \"ddd\"};\n> AList.Add(data);\n> ADictionary.Add(data,data);\n> }\n> }\n>\n> public void Test()\n> {\n> foreach(var item in AList)\n> {\n> if (!ADictionary.ContainsKey(item))\n> {\n> throw new Exception(\"xx\");\n> }\n> }\n> }\n> }\n>\n> In main class\n> var b = new B();\n> b.Init();\n> b.Test();\n> var c = Serialize b\n> var d = Deserialize c;\n> d.Test();\n>\n> In the code above, d.Test() will throw exception. So I think ADictionary\n> and AList has different instances. How can I make them to share the same\n> instance?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/325>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsG_hIQd0WHPkjhktqkARgp2Wd2q1ks5s9PwIgaJpZM4Q15TZ>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349233870",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349233870",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/325",
        "id": 349233870,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzMzg3MA==",
        "user": {
            "login": "yiylin",
            "id": 15103725,
            "node_id": "MDQ6VXNlcjE1MTAzNzI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15103725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yiylin",
            "html_url": "https://github.com/yiylin",
            "followers_url": "https://api.github.com/users/yiylin/followers",
            "following_url": "https://api.github.com/users/yiylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yiylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yiylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yiylin/subscriptions",
            "organizations_url": "https://api.github.com/users/yiylin/orgs",
            "repos_url": "https://api.github.com/users/yiylin/repos",
            "events_url": "https://api.github.com/users/yiylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yiylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:38:44Z",
        "updated_at": "2017-12-05T08:38:44Z",
        "author_association": "NONE",
        "body": "I prefer to add this AsReferenceDefault=true to all my classes. Will this make the serialize/deserialize performance slower ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349235312",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349235312",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/325",
        "id": 349235312,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzNTMxMg==",
        "user": {
            "login": "yiylin",
            "id": 15103725,
            "node_id": "MDQ6VXNlcjE1MTAzNzI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/15103725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yiylin",
            "html_url": "https://github.com/yiylin",
            "followers_url": "https://api.github.com/users/yiylin/followers",
            "following_url": "https://api.github.com/users/yiylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yiylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yiylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yiylin/subscriptions",
            "organizations_url": "https://api.github.com/users/yiylin/orgs",
            "repos_url": "https://api.github.com/users/yiylin/repos",
            "events_url": "https://api.github.com/users/yiylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yiylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:44:55Z",
        "updated_at": "2017-12-05T08:44:55Z",
        "author_association": "NONE",
        "body": "Sorry, this still can not solve this issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349235954",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349235954",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/325",
        "id": 349235954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzNTk1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:47:45Z",
        "updated_at": "2017-12-05T08:47:45Z",
        "author_association": "OWNER",
        "body": "The first thing to emphasize is that it will make it *incompatible* with\nother serializers. So if cross-platform is a concern: stop. If you don't\ncare about cross-platform, then: best to run your own tests. This involves\na level of object tracking throughout the engine and additional per-item\ntracking data. Not huge, but the impact / overhead will vary based on how\nmany objects are unique vs repeated.\n\nOn 5 Dec 2017 8:38 a.m., \"Yiyong Lin\" <notifications@github.com> wrote:\n\n> I prefer to add this AsReferenceDefault=true to all my classes. Will this\n> make the serialize/deserialize performance slower ?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349233870>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLWa2PhklHdB_unhQSiDyHgMa1amks5s9QEUgaJpZM4Q15TZ>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349235955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349235955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/325",
        "id": 349235955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzNTk1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:47:45Z",
        "updated_at": "2017-12-05T08:47:45Z",
        "author_association": "OWNER",
        "body": "the exact overhead of this will vary based on your exact usage - how many\nobjects are repeated vs unique. Emphasis: doing this will make your data\nincompatible with other protobuf libraries. Best to run your own tests on\nyour own data.\n\nOn 5 Dec 2017 8:38 a.m., \"Yiyong Lin\" <notifications@github.com> wrote:\n\n> I prefer to add this AsReferenceDefault=true to all my classes. Will this\n> make the serialize/deserialize performance slower ?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/325#issuecomment-349233870>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLWa2PhklHdB_unhQSiDyHgMa1amks5s9QEUgaJpZM4Q15TZ>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349236375",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/322#issuecomment-349236375",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/322",
        "id": 349236375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTIzNjM3NQ==",
        "user": {
            "login": "Thecentury",
            "id": 3943804,
            "node_id": "MDQ6VXNlcjM5NDM4MDQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3943804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thecentury",
            "html_url": "https://github.com/Thecentury",
            "followers_url": "https://api.github.com/users/Thecentury/followers",
            "following_url": "https://api.github.com/users/Thecentury/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thecentury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thecentury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thecentury/subscriptions",
            "organizations_url": "https://api.github.com/users/Thecentury/orgs",
            "repos_url": "https://api.github.com/users/Thecentury/repos",
            "events_url": "https://api.github.com/users/Thecentury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thecentury/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T08:49:30Z",
        "updated_at": "2017-12-05T08:49:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Marc, thank you very much for merging this pull-request and releasing updated package."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349375382",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/324#issuecomment-349375382",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/324",
        "id": 349375382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM3NTM4Mg==",
        "user": {
            "login": "amphiware-alex",
            "id": 19184711,
            "node_id": "MDQ6VXNlcjE5MTg0NzEx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19184711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amphiware-alex",
            "html_url": "https://github.com/amphiware-alex",
            "followers_url": "https://api.github.com/users/amphiware-alex/followers",
            "following_url": "https://api.github.com/users/amphiware-alex/following{/other_user}",
            "gists_url": "https://api.github.com/users/amphiware-alex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amphiware-alex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amphiware-alex/subscriptions",
            "organizations_url": "https://api.github.com/users/amphiware-alex/orgs",
            "repos_url": "https://api.github.com/users/amphiware-alex/repos",
            "events_url": "https://api.github.com/users/amphiware-alex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amphiware-alex/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-05T17:19:33Z",
        "updated_at": "2017-12-05T17:19:33Z",
        "author_association": "NONE",
        "body": "got it. Thanks !"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349657831",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/326#issuecomment-349657831",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/326",
        "id": 349657831,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTY1NzgzMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T14:36:49Z",
        "updated_at": "2017-12-06T14:36:49Z",
        "author_association": "OWNER",
        "body": "I'm OK with the utility method, but I think this would be more at home in `Serializer.NonGeneric` along with the other non-generic v1-style APIs. Any chance you could move it there?\r\n\r\n(note: what you want to do can already be done via the `RuntimeTypeModel` API, but I'm fine with adding the helper method for parity)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/349684782",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/326#issuecomment-349684782",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/326",
        "id": 349684782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTY4NDc4Mg==",
        "user": {
            "login": "daef",
            "id": 2098598,
            "node_id": "MDQ6VXNlcjIwOTg1OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2098598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daef",
            "html_url": "https://github.com/daef",
            "followers_url": "https://api.github.com/users/daef/followers",
            "following_url": "https://api.github.com/users/daef/following{/other_user}",
            "gists_url": "https://api.github.com/users/daef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daef/subscriptions",
            "organizations_url": "https://api.github.com/users/daef/orgs",
            "repos_url": "https://api.github.com/users/daef/repos",
            "events_url": "https://api.github.com/users/daef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daef/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-06T16:02:35Z",
        "updated_at": "2017-12-06T16:02:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "I thought I couldn't use RuntimeTypeModel because of MapType's visibility. Can I simply omit this lookup for 'the Type'?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350476553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/321#issuecomment-350476553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/321",
        "id": 350476553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ3NjU1Mw==",
        "user": {
            "login": "posilva",
            "id": 1260664,
            "node_id": "MDQ6VXNlcjEyNjA2NjQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1260664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/posilva",
            "html_url": "https://github.com/posilva",
            "followers_url": "https://api.github.com/users/posilva/followers",
            "following_url": "https://api.github.com/users/posilva/following{/other_user}",
            "gists_url": "https://api.github.com/users/posilva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/posilva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/posilva/subscriptions",
            "organizations_url": "https://api.github.com/users/posilva/orgs",
            "repos_url": "https://api.github.com/users/posilva/repos",
            "events_url": "https://api.github.com/users/posilva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/posilva/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-09T14:58:42Z",
        "updated_at": "2017-12-09T14:58:42Z",
        "author_association": "NONE",
        "body": "Hi,\r\n\r\nany news regarding this \"issue\", any help would be welcome, for now I just removed the extensions declaration in .Net version, while I am still using in Erlang server side.\r\n\r\nCheers,\r\n\r\nP.  "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350502208",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350502208",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350502208,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUwMjIwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-09T20:09:30Z",
        "updated_at": "2017-12-09T20:09:30Z",
        "author_association": "OWNER",
        "body": "That doesn't sound familiar. If there's something I can see to repro this,\nI'm all ears, but I'm not aware of a problem that would cause this. That\ndoesn't mean that there isn't one - it just means that I'm not aware if it.\n\nOn 9 Dec 2017 7:01 p.m., \"arthurvb\" <notifications@github.com> wrote:\n\n> I have a project with quite a big structure of protobuf-objects (including\n> inheritance). It always worked flawlessly. However now the project uses\n> .net standard with the latest protobuf nuget package it gives errors about\n> \"Duplicate field-number detected\" when calling \"Serializer.SerializeWithLengthPrefix\".\n> This was never the case and there is also no duplicate number. If I change\n> the number, it will complain about another (random?) duplicate field number.\n> I tested all nuget packages and since 2.1.0 they all got the error.\n>\n> What is also interesting is that if I, instead of using the nuget package,\n> include the latest version of the protobuf-net project in my solution and\n> refer to it as a project, I do not get the error. However, if I refer to\n> the compiled dll's, I do get the error.\n>\n> Maybe some of you have an idea what I am doing wrong.\n>\n> Thank you for your help,\n>\n> Arthur\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/327>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsK7flI7zFqyx6KwIQGtVP1c33oqSks5s-tkfgaJpZM4Q8NKU>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350519747",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350519747",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350519747,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUxOTc0Nw==",
        "user": {
            "login": "arthurvb",
            "id": 13233381,
            "node_id": "MDQ6VXNlcjEzMjMzMzgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13233381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvb",
            "html_url": "https://github.com/arthurvb",
            "followers_url": "https://api.github.com/users/arthurvb/followers",
            "following_url": "https://api.github.com/users/arthurvb/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvb/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvb/orgs",
            "repos_url": "https://api.github.com/users/arthurvb/repos",
            "events_url": "https://api.github.com/users/arthurvb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T02:06:16Z",
        "updated_at": "2017-12-10T02:06:16Z",
        "author_association": "NONE",
        "body": "Thank you for the quick reaction! I\u2019ll try to compare the dll of nuget package with the compiled one. Since this is my first .net core conversion, I suspect something went wrong with including the packages. But I am really surprised about the error. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350531188",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350531188",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350531188,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUzMTE4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T07:49:00Z",
        "updated_at": "2017-12-10T07:49:00Z",
        "author_association": "OWNER",
        "body": "I'm tempted to simply tweak the code to list the two member names when\nthrowing that exception. That would probably be a quick code change that\nwould make this scenario a lot clearer.\n\nOn 10 Dec 2017 2:06 a.m., \"arthurvb\" <notifications@github.com> wrote:\n\n> Thank you for the quick reaction! I\u2019ll try to compare the dll of nuget\n> package with the compiled one. Since this is my first .net core conversion,\n> I suspect something went wrong with including the packages. But I am really\n> surprised about the error.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350519747>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOAck9sKVU0UJ0a3jIYJM8bmZTzbks5s-zyYgaJpZM4Q8NKU>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350541743",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350541743",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350541743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0MTc0Mw==",
        "user": {
            "login": "arthurvb",
            "id": 13233381,
            "node_id": "MDQ6VXNlcjEzMjMzMzgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13233381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvb",
            "html_url": "https://github.com/arthurvb",
            "followers_url": "https://api.github.com/users/arthurvb/followers",
            "following_url": "https://api.github.com/users/arthurvb/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvb/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvb/orgs",
            "repos_url": "https://api.github.com/users/arthurvb/repos",
            "events_url": "https://api.github.com/users/arthurvb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T11:30:39Z",
        "updated_at": "2017-12-10T11:30:39Z",
        "author_association": "NONE",
        "body": "Seems to be difference between debug and release mode. Debug mode does not give the exception. The good thing is that I can at least reproduce both cases. I will try to add the membernames.."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350542164",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350542164",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350542164,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0MjE2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T11:38:30Z",
        "updated_at": "2017-12-10T11:38:30Z",
        "author_association": "OWNER",
        "body": "if you get stuck, I can try to look  later - busily digging people out of a\nsudden snow flurry at the moment  .\n\nOn 10 Dec 2017 11:30 a.m., \"arthurvb\" <notifications@github.com> wrote:\n\n> Seems to be difference between debug and release mode. Debug mode does not\n> give the exception. The good thing is that I can at least reproduce both\n> cases. I will try to add the membernames..\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350541743>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFB4Ueug0ZMPlYIhgNSu7AOX-2q5ks5s-8DggaJpZM4Q8NKU>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350543198",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350543198",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350543198,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0MzE5OA==",
        "user": {
            "login": "arthurvb",
            "id": 13233381,
            "node_id": "MDQ6VXNlcjEzMjMzMzgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13233381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvb",
            "html_url": "https://github.com/arthurvb",
            "followers_url": "https://api.github.com/users/arthurvb/followers",
            "following_url": "https://api.github.com/users/arthurvb/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvb/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvb/orgs",
            "repos_url": "https://api.github.com/users/arthurvb/repos",
            "events_url": "https://api.github.com/users/arthurvb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T11:57:20Z",
        "updated_at": "2017-12-10T11:57:20Z",
        "author_association": "NONE",
        "body": ":-) . No problem, I just hack something that print the names. \r\n\r\nI think I might have a clue.. In the code below: it complains with the following error:\r\n\r\n`System.InvalidOperationException : Duplicate field-number detected; 101 on:  MyClass. members: MyVarB, MyVarA, SomeProperty, fieldnumbers: 101, 101, 102`\r\n\r\nIn other words it complains about two properties that clearly have a different number (101 and 102). However, it also says that `SomeProperty` is a member with a fieldnumber. And although in this class it is not the case, it is defined in `MySuperClass` with `[ProtoMember(101)]` so this might be the problem.\r\n\r\n\r\n    [ProtoContract]\r\n    [SomeOtherAnnotation()]\r\n    public class MyClass : MySuperClass\r\n    {\r\n        private static readonly TypeInfo myTypeInfo = ConceptFactory.GetTypeInfo(typeof(MyClass));\r\n        protected override TypeInfo MyTypeInfo => myTypeInfo;\r\n        [ProtoMember(101)]\r\n        [SomeOtherAnnotation()]\r\n        public int? MyVarA { get; set; }\r\n\r\n        [ProtoMember(102)]\r\n        [SomeOtherAnnotation()]\r\n        public int? MyVarB { get; set; }\r\n\r\n        public override string SomeProperty\r\n        {\r\n            get\r\n            {\r\n                return \"Something\";\r\n            }\r\n\r\n            set\r\n            {\r\n                // cannot set\r\n            }\r\n        }\r\n    }\r\n    }"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350544085",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350544085",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350544085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0NDA4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T12:13:52Z",
        "updated_at": "2017-12-10T12:13:52Z",
        "author_association": "OWNER",
        "body": "Ah, right. Yes. If you want inheritance to treat the layers separately, you\nneed to use ProtoInclude on the base type. This changes the serialization\nformat, note, and is not compatible with data previously stored without\nthis.\n\nI'm not aware of any reason this should behave different between frameworks\nor between debug / release builds\n\nOn 10 Dec 2017 11:57 a.m., \"arthurvb\" <notifications@github.com> wrote:\n\n> :-) . No problem, I just hack something that print the names.\n>\n> I think I might have a clue.. In the code below: it complains with the\n> following error:\n>\n> System.InvalidOperationException : Duplicate field-number detected; 101\n> on: MyClass. members: MyVarB, MyVarA, SomeProperty, fieldnumbers: 101, 101,\n> 102\n>\n> In other words it complains about two properties that clearly have a\n> different number (101 and 102). However, it also says that SomeProperty\n> is a member with a fieldnumber. And although in this class it is not the\n> case, it is defined in MySuperClass with [ProtoMember(101)] so this might\n> be the problem.\n>\n> [ProtoContract]\n> [SomeOtherAnnotation()]\n> public class MyClass : MySuperClass\n> {\n>     private static readonly TypeInfo myTypeInfo = ConceptFactory.GetTypeInfo(typeof(MyClass));\n>     protected override TypeInfo MyTypeInfo => myTypeInfo;\n>     [ProtoMember(101)]\n>     [SomeOtherAnnotation()]\n>     public int? MyVarA { get; set; }\n>\n>     [ProtoMember(102)]\n>     [SomeOtherAnnotation()]\n>     public int? MyVarB { get; set; }\n>\n>     public override string SomeProperty\n>     {\n>         get\n>         {\n>             return \"Something\";\n>         }\n>\n>         set\n>         {\n>             // cannot set\n>         }\n>     }\n> }\n> }\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350543198>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsI-PoiIFJK3bmvOTX4HCScFry17pks5s-8cggaJpZM4Q8NKU>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350546000",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350546000",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350546000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0NjAwMA==",
        "user": {
            "login": "arthurvb",
            "id": 13233381,
            "node_id": "MDQ6VXNlcjEzMjMzMzgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13233381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvb",
            "html_url": "https://github.com/arthurvb",
            "followers_url": "https://api.github.com/users/arthurvb/followers",
            "following_url": "https://api.github.com/users/arthurvb/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvb/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvb/orgs",
            "repos_url": "https://api.github.com/users/arthurvb/repos",
            "events_url": "https://api.github.com/users/arthurvb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T12:47:00Z",
        "updated_at": "2017-12-10T12:47:00Z",
        "author_association": "NONE",
        "body": "There is actually a protoinclude in the basetype, so I do not know if this is the cause of the problem:\r\nThe base class looks a bit like this:\r\n\r\n    [ProtoContract]\r\n    [ProtoInclude(2, typeof(MyClassAnother))]\r\n    [ProtoInclude(3, typeof(MyClassOther))]\r\n    [ProtoInclude(4, typeof(MyClass))]\r\n    [SomeOtherAnnotation()]\r\n    public class MySuperClass : MySuperSuperClass\r\n    {\r\n         private static readonly TypeInfo myTypeInfo = ConceptFactory.GetTypeInfo(typeof(MyClass));\r\n         protected override TypeInfo MyTypeInfo => myTypeInfo;\r\n\r\n        [ProtoMember(101)]\r\n        [SomeOtherAnnotation()]\r\n        public virtual string SomeProperty { get; set; }\r\n    }\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350546593",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350546593",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350546593,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU0NjU5Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T12:56:19Z",
        "updated_at": "2017-12-10T12:56:19Z",
        "author_association": "OWNER",
        "body": "Sounds like a bug with it filtering, which is vexing. That's probably on me\nto fix - sorry :/\n\nOn 10 Dec 2017 12:47 p.m., \"arthurvb\" <notifications@github.com> wrote:\n\n> There is actually a protoinclude in the basetype, so I do not know if this\n> is the cause of the problem:\n> The base class looks a bit like this:\n>\n> [ProtoContract]\n> [ProtoInclude(2, typeof(MyClassAnother))]\n> [ProtoInclude(3, typeof(MyClassOther))]\n> [ProtoInclude(4, typeof(MyClass))]\n> [SomeOtherAnnotation()]\n> public class MySuperClass : MySuperSuperClass\n> {\n>      private static readonly TypeInfo myTypeInfo = ConceptFactory.GetTypeInfo(typeof(MyClass));\n>      protected override TypeInfo MyTypeInfo => myTypeInfo;\n>\n>     [ProtoMember(101)]\n>     [SomeOtherAnnotation()]\n>     public virtual string SomeProperty { get; set; }\n> }\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350546000>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsI3RMDXS3NmtXYEpOYiuHQpiWw6oks5s-9LEgaJpZM4Q8NKU>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350557115",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/328#issuecomment-350557115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/328",
        "id": 350557115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU1NzExNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T15:44:35Z",
        "updated_at": "2017-12-10T15:44:35Z",
        "author_association": "OWNER",
        "body": "that is subtle :) the difference is that the generic API doesn't work\ncorrectly when the type is \"object\", although I don't know why it is\nworking oddly here.\n\nThe fix, however, is simple: if you're using \" object\" for the root type,\nuse the Serializer.NonGeneric API - this exposes virtually the same\ninterface. Note that the SerializeWithLengthPrefix method takes an extra\nfieldNumber here, but it doesn't actually use it in the Fixed32 case, so\nsupply anything you like.\n\nOn 10 Dec 2017 2:43 p.m., \"nomadfighter\" <notifications@github.com> wrote:\n\n> simple proto:\n>\n> syntax = \"proto2\";\n>\n> package test;\n>\n> message Test\n> {\n>     optional int32 id = 1;\n>     optional string name = 2;\n>     optional string msg = 3;\n> }\n>\n> message Msg\n> {\n>     optional int32 id = 1;\n>     optional Test test = 2;\n> }\n>\n> message Total\n> {\n>     optional Msg msg = 1;\n> }\n>\n> the serialize code:\n>\n>     public static byte[] S1(out object obj)\n>     {\n>         var msg1 = new test.Msg();\n>         msg1.id = 0;\n>         var test = new Test();\n>         test.id = 1000;\n>         test.name = \"ddd\";\n>         test.msg = \"adfds\";\n>         msg1.test = test;\n>         //var total = new Total();\n>         //total.msg = msg1;\n>\n>         var total = Activator.CreateInstance(typeof(Total));\n>         var tp = typeof(Total);\n>         var pro = tp.GetProperty(\"msg\");\n>         pro.SetValue(total, msg1);\n>\n>         using (var ms = new MemoryStream())\n>         {\n>             Serializer.SerializeWithLengthPrefix(ms, total, PrefixStyle.Fixed32);\n>             ms.SetLength(ms.Position);\n>             obj = total;\n>             return ms.ToArray();\n>         }\n>     }\n>\n>     public static byte[] S2(out object obj)\n>     {\n>         var msg1 = new test.Msg();\n>         msg1.id = 0;\n>         var test = new Test();\n>         test.id = 1000;\n>         test.name = \"ddd\";\n>         test.msg = \"adfds\";\n>         msg1.test = test;\n>         var total = new Total();\n>         total.msg = msg1;\n>         /*\n>         var total = Activator.CreateInstance(typeof(Total));\n>         var tp = typeof(Total);\n>         var pro = tp.GetProperty(\"msg\");\n>         pro.SetValue(total, msg1);\n>         */\n>         using (var ms = new MemoryStream())\n>         {\n>             Serializer.SerializeWithLengthPrefix(ms, total, PrefixStyle.Fixed32);\n>             ms.SetLength(ms.Position);\n>             obj = total;\n>             return ms.ToArray();\n>         }\n>     }\n>\n> S1 return an array with 25 elements and S2 return with 23 elements.\n> S1[0:3] == S2[0:3]\n> S1[4:5] is new to S2\n> and S1[6:] == S2[4:]\n>\n> I'm confused and how to solve this problem?\n> thanks!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/328>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJ-i0HA486eCMm6FeVPS0Hhqk4-fks5s--4UgaJpZM4Q8g_I>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350578460",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/327#issuecomment-350578460",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/327",
        "id": 350578460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU3ODQ2MA==",
        "user": {
            "login": "arthurvb",
            "id": 13233381,
            "node_id": "MDQ6VXNlcjEzMjMzMzgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/13233381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvb",
            "html_url": "https://github.com/arthurvb",
            "followers_url": "https://api.github.com/users/arthurvb/followers",
            "following_url": "https://api.github.com/users/arthurvb/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvb/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvb/orgs",
            "repos_url": "https://api.github.com/users/arthurvb/repos",
            "events_url": "https://api.github.com/users/arthurvb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-10T20:19:12Z",
        "updated_at": "2017-12-10T20:19:12Z",
        "author_association": "NONE",
        "body": "If it helps for debugging, the errors are gone when I add `[ProtoIgnore]` to the property `SomeProperty` in `MyClass` ."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/350955271",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/329#issuecomment-350955271",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/329",
        "id": 350955271,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDk1NTI3MQ==",
        "user": {
            "login": "freewild",
            "id": 6415738,
            "node_id": "MDQ6VXNlcjY0MTU3Mzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6415738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freewild",
            "html_url": "https://github.com/freewild",
            "followers_url": "https://api.github.com/users/freewild/followers",
            "following_url": "https://api.github.com/users/freewild/following{/other_user}",
            "gists_url": "https://api.github.com/users/freewild/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freewild/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freewild/subscriptions",
            "organizations_url": "https://api.github.com/users/freewild/orgs",
            "repos_url": "https://api.github.com/users/freewild/repos",
            "events_url": "https://api.github.com/users/freewild/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freewild/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T06:11:47Z",
        "updated_at": "2017-12-12T06:11:47Z",
        "author_association": "NONE",
        "body": "seems duplicated"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351156816",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351156816",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351156816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE1NjgxNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T19:05:10Z",
        "updated_at": "2017-12-12T19:05:10Z",
        "author_association": "OWNER",
        "body": "Because the API that I would need to do a dictionary based check using\nreference semantics: didn't exist on those runtimes. If you have an\nalternative proposal, I'm all ears.\n\nOn 12 Dec 2017 4:59 p.m., \"Zverev Eugene\" <notifications@github.com> wrote:\n\nThe NetObjectCache is very humble in the matter of relying on the .NET ref\ntracking. I am not familiar with the CF limitations but why did you hit all\nthe PCL world the same way?\n\n#if CF || PORTABLE // CF has very limited proper object ref-tracking;\nso instead, we'll search it the hard way\n                index = list.IndexOfReference(value);\n#else\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/330>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsKs6kdph1MNnB-iOGbYQzaxCldQpks5s_rDjgaJpZM4Q_TRr>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351159920",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351159920",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351159920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE1OTkyMA==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T19:13:13Z",
        "updated_at": "2017-12-12T19:17:19Z",
        "author_association": "NONE",
        "body": "At this moment I am using generic ref tracking code you provided for the full .NET stack i.e. `Dictionary` strategy with the `ReferenceComparer.Default` for quite some PCL profiles (24, 32, 111, 158, 255) and it seems to work as intended.\r\n\r\nI mean for myself I just commented out the `|| PORTABLE` condition and it compiles and works fine with my PCL projects."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351174175",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351174175",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351174175,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE3NDE3NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T19:52:31Z",
        "updated_at": "2017-12-12T19:52:31Z",
        "author_association": "OWNER",
        "body": "feel free to do that :)\n\nthe vast multitude of PCL combinations and permutations is not my strong\nsuit\n\nOn 12 Dec 2017 7:13 p.m., \"Zverev Eugene\" <notifications@github.com> wrote:\n\n> At this moment I am using generic ref tracking code you provided for the\n> full .NET stack i.e. Dictionary strategy with the ReferenceComparer.Default\n> for quite some PCL profiles (24, 32, 111, 158, 255) and it seems to work as\n> intended.\n>\n> I mean for myself I just commented out the || PORTABLE condition and it\n> works fine with my PCL projects.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351159920>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBQUQ4nTMS7cbR7q79965TeVNMbDks5s_tBKgaJpZM4Q_TRr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351385770",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/331#issuecomment-351385770",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/331",
        "id": 351385770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTM4NTc3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T13:06:51Z",
        "updated_at": "2017-12-13T13:06:51Z",
        "author_association": "OWNER",
        "body": "I can add that back into the 2.3 code if it is still needed; basically the\nentire codegen pipe was rewritten from scratch.\n\nOn 13 Dec 2017 9:16 a.m., \"mnml_\" <notifications@github.com> wrote:\n\nThe new protogen doesn't seem to use the xslt stylesheets for code\ngeneration like the 'old' one in /assorted/. I can't find any references to\n'observable/INotifyPropertyChanged' outside the assorted dir.\n\nIs there still a way to generate observable classes from .proto files?\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/331>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsKH1rcinxjSGNHXsO3I5tFwy-Iqfks5s_5XcgaJpZM4RAOjU>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351386844",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351386844",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351386844,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTM4Njg0NA==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T13:11:41Z",
        "updated_at": "2017-12-13T13:11:41Z",
        "author_association": "NONE",
        "body": "As long as the `Dictionary` strategy with the `ReferenceComparer.Default` compiles fine in the PCL context, would you agree to change the `#if CF || PORTABLE` compiler condition into `#if CF` condition and a run-time option which would allow the client to opt-in for the `Dictionary` variant explicitly?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351397020",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/331#issuecomment-351397020",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/331",
        "id": 351397020,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTM5NzAyMA==",
        "user": {
            "login": "daef",
            "id": 2098598,
            "node_id": "MDQ6VXNlcjIwOTg1OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2098598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daef",
            "html_url": "https://github.com/daef",
            "followers_url": "https://api.github.com/users/daef/followers",
            "following_url": "https://api.github.com/users/daef/following{/other_user}",
            "gists_url": "https://api.github.com/users/daef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daef/subscriptions",
            "organizations_url": "https://api.github.com/users/daef/orgs",
            "repos_url": "https://api.github.com/users/daef/repos",
            "events_url": "https://api.github.com/users/daef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daef/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T13:53:13Z",
        "updated_at": "2017-12-13T13:53:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "That would be awesome."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351495018",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351495018",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351495018,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ5NTAxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T19:23:26Z",
        "updated_at": "2017-12-13T19:23:26Z",
        "author_association": "OWNER",
        "body": "if the reference comparer works as expected, I don't see a huge use for the\nruntime option to be honest. Is it ever expected not to work?\n\nOn 13 Dec 2017 1:11 p.m., \"Zverev Eugene\" <notifications@github.com> wrote:\n\n> As long as the Dictionary strategy with the ReferenceComparer.Default\n> compiles fine in the PCL context, would you agree to change the #if CF ||\n> PORTABLE compiler condition into #if CF condition and a run-time option\n> which would allow the client to opt-in for the Dictionary variant\n> explicitly?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351386844>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFQ6HU2NtmmCtQ_9ODV-OlRAlA6cks5s_80NgaJpZM4Q_TRr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/351736815",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/330#issuecomment-351736815",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/330",
        "id": 351736815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTczNjgxNQ==",
        "user": {
            "login": "ezverev",
            "id": 12703703,
            "node_id": "MDQ6VXNlcjEyNzAzNzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12703703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezverev",
            "html_url": "https://github.com/ezverev",
            "followers_url": "https://api.github.com/users/ezverev/followers",
            "following_url": "https://api.github.com/users/ezverev/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezverev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezverev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezverev/subscriptions",
            "organizations_url": "https://api.github.com/users/ezverev/orgs",
            "repos_url": "https://api.github.com/users/ezverev/repos",
            "events_url": "https://api.github.com/users/ezverev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezverev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-14T15:06:04Z",
        "updated_at": "2017-12-14T15:06:52Z",
        "author_association": "NONE",
        "body": "I do not think that removing this particular compiler condition would hurt anyone. And it will definitely make PCL users happier. \r\n\r\nI've met cases when a valid PCL was referenced by Windows Phone 8.1, compiled and debugged well but failed to pass the API utilization check which is mandatory when uploading the package to the store. \r\nThose cases have nothing to do with our case but they make me always doubt :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/352916635",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/334#issuecomment-352916635",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/334",
        "id": 352916635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjkxNjYzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-19T23:19:53Z",
        "updated_at": "2017-12-19T23:19:53Z",
        "author_association": "OWNER",
        "body": "Are you absolutely 100% sure that you're using protobuf-net? That sounds\nmore like the Google protobuf C# library.\n\nOn 19 December 2017 at 18:14, Chino Chang <notifications@github.com> wrote:\n\n> I've already got the proto files parsed with FileDescriptorProto.Parse,\n> how can I serialize or deserialize data with the MessageTypes (\n> DescriptorProto)?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/334>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNXyrxcDIQQtEPDYwgFuY-XxS4mgks5tB_0EgaJpZM4RHW39>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/352975282",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/334#issuecomment-352975282",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/334",
        "id": 352975282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjk3NTI4Mg==",
        "user": {
            "login": "kinosang",
            "id": 4987102,
            "node_id": "MDQ6VXNlcjQ5ODcxMDI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4987102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kinosang",
            "html_url": "https://github.com/kinosang",
            "followers_url": "https://api.github.com/users/kinosang/followers",
            "following_url": "https://api.github.com/users/kinosang/following{/other_user}",
            "gists_url": "https://api.github.com/users/kinosang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kinosang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kinosang/subscriptions",
            "organizations_url": "https://api.github.com/users/kinosang/orgs",
            "repos_url": "https://api.github.com/users/kinosang/repos",
            "events_url": "https://api.github.com/users/kinosang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kinosang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-20T06:17:28Z",
        "updated_at": "2017-12-20T06:17:28Z",
        "author_association": "NONE",
        "body": "@mgravell yep, also the `protobuf-net.Reflection`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/353012722",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/307#issuecomment-353012722",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/307",
        "id": 353012722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzAxMjcyMg==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-20T09:35:01Z",
        "updated_at": "2017-12-20T09:35:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell I've resolved the conflicts on this PR"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/353036199",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/334#issuecomment-353036199",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/334",
        "id": 353036199,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzAzNjE5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-20T11:15:31Z",
        "updated_at": "2017-12-20T11:15:31Z",
        "author_association": "OWNER",
        "body": "Oh, OK; that was totally me having a dumb moment. At the moment the engine only works with real types. It sounds like what you want is to have a type that exposes a flexible API essentially taking a type from a DescriptorProto (which maps to \"message\" etc). That doesn't currently exist in protobuf-net. It it something I have considered, but haven't had a need to design and develop etc so far.\r\n\r\nFor now, one potential alternative would be to run the C# emit code on the proto and generate types using runtime compilation (`CSharpCodeProvider` or Roslyn), but I don't have an example of that available."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/354195734",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/335#issuecomment-354195734",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/335",
        "id": 354195734,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDE5NTczNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-27T23:31:18Z",
        "updated_at": "2017-12-27T23:31:18Z",
        "author_association": "OWNER",
        "body": "Well shoot. No that wasn't an intentional change. I will need to assess\nimpact.\n\nOn 27 Dec 2017 7:03 p.m., \"Kenny Nygaard\" <notifications@github.com> wrote:\n\n> Run the following program against protobuf-net v2.2.X and v2.3.X:\n>\n> using ProtoBuf;\n> using System;\n> using System.Collections.Generic;\n> using System.IO;\n>\n> class Program\n> {\n>     static void Main(string[] args)\n>     {\n>         var c = new C();\n>         c.Dictionary = new Dictionary<int, string>() { { 0, null } };\n>\n>         C c2;\n>         using (var s = new MemoryStream())\n>         {\n>             Serializer.Serialize(s, c);\n>             s.Seek(0, SeekOrigin.Begin);\n>             c2 = Serializer.Deserialize<C>(s);\n>         }\n>\n>         if (c.Dictionary[0] == c2.Dictionary[0])\n>             Console.WriteLine(\"Same\");\n>         else\n>             Console.WriteLine(\"Different\");\n>     }\n> }\n>\n> [ProtoContract]\n> class C\n> {\n>     [ProtoMember(1)]\n>     public Dictionary<int, string> Dictionary { get; set; }\n> }\n>\n>\n> With v2.2.X you see Same.\n> With v2.3.X you see Different, because the value comes back as \"\" instead\n> of null.\n>\n> Was this an intentional breaking change, or is this a bug introduced in\n> v2.3.x?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/335>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJkiNAE59FP1wx9aoO-hpB8PM58Mks5tEpSIgaJpZM4RNvAj>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/354466742",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/337#issuecomment-354466742",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/337",
        "id": 354466742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDQ2Njc0Mg==",
        "user": {
            "login": "nik-nikols",
            "id": 34923051,
            "node_id": "MDQ6VXNlcjM0OTIzMDUx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34923051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nik-nikols",
            "html_url": "https://github.com/nik-nikols",
            "followers_url": "https://api.github.com/users/nik-nikols/followers",
            "following_url": "https://api.github.com/users/nik-nikols/following{/other_user}",
            "gists_url": "https://api.github.com/users/nik-nikols/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nik-nikols/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nik-nikols/subscriptions",
            "organizations_url": "https://api.github.com/users/nik-nikols/orgs",
            "repos_url": "https://api.github.com/users/nik-nikols/repos",
            "events_url": "https://api.github.com/users/nik-nikols/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nik-nikols/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-29T16:22:34Z",
        "updated_at": "2017-12-29T16:24:48Z",
        "author_association": "NONE",
        "body": "Here is a potential fix for MetaType class:\r\n\r\n```csharp\r\n...\r\n        \r\n        static Type GetBaseInterface(MetaType type)\r\n        {\r\n            IEnumerable<Type> implementedInterfaces =\r\n#if WINRT || COREFX\r\n            type.typeInfo.ImplementedInterfaces;\r\n#else\r\n            type.type.GetInterfaces();\r\n#endif\r\n\r\n            foreach (Type @interface in implementedInterfaces)\r\n            {\r\n#if WINRT || COREFX\r\n                foreach (ProtoIncludeAttribute  attrib in @interface.GetTypeInfo().GetCustomAttributes(typeof(ProtoIncludeAttribute), false))\r\n#else\r\n                foreach (ProtoIncludeAttribute attrib in @interface.GetCustomAttributes(typeof(ProtoIncludeAttribute), false))\r\n#endif\r\n                {\r\n                    if (attrib.KnownType.FullName.Equals(type.type.FullName))\r\n                    {\r\n                        return @interface;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        internal void ApplyDefaultBehaviour()\r\n        {\r\n            Type baseType = GetBaseType(this);\r\n            if (baseType != null && model.FindWithoutAdd(baseType) == null\r\n                && GetContractFamily(model, baseType, null) != MetaType.AttributeFamily.None)\r\n            {\r\n                model.FindOrAddAuto(baseType, true, false, false);\r\n            }\r\n            // add base interface if missing\r\n            baseType = GetBaseInterface(this);\r\n            if (baseType != null && model.FindWithoutAdd(baseType) == null\r\n                && GetContractFamily(model, baseType, null) != MetaType.AttributeFamily.None)\r\n            {\r\n                model.FindOrAddAuto(baseType, true, false, false);\r\n            }\r\n\r\n            AttributeMap[] typeAttribs = AttributeMap.Create(model, type, false);\r\n...\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/354493234",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/337#issuecomment-354493234",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/337",
        "id": 354493234,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDQ5MzIzNA==",
        "user": {
            "login": "nik-nikols",
            "id": 34923051,
            "node_id": "MDQ6VXNlcjM0OTIzMDUx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34923051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nik-nikols",
            "html_url": "https://github.com/nik-nikols",
            "followers_url": "https://api.github.com/users/nik-nikols/followers",
            "following_url": "https://api.github.com/users/nik-nikols/following{/other_user}",
            "gists_url": "https://api.github.com/users/nik-nikols/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nik-nikols/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nik-nikols/subscriptions",
            "organizations_url": "https://api.github.com/users/nik-nikols/orgs",
            "repos_url": "https://api.github.com/users/nik-nikols/repos",
            "events_url": "https://api.github.com/users/nik-nikols/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nik-nikols/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-29T19:54:57Z",
        "updated_at": "2017-12-29T19:55:38Z",
        "author_association": "NONE",
        "body": "Alternatively: leave ApplyDefaultBehaviour alone, but remove couple of lines in AddSubType (see lines commented out below):\r\n\r\n```csharp\r\n        public MetaType AddSubType(int fieldNumber, Type derivedType, DataFormat dataFormat)\r\n        {\r\n            if (derivedType == null) throw new ArgumentNullException(\"derivedType\");\r\n            if (fieldNumber < 1) throw new ArgumentOutOfRangeException(\"fieldNumber\");\r\n#if WINRT || COREFX || COREFX\r\n            if (!(typeInfo.IsClass || typeInfo.IsInterface) || typeInfo.IsSealed) {\r\n#else\r\n            if (!(type.IsClass || type.IsInterface) || type.IsSealed) {\r\n#endif\r\n                throw new InvalidOperationException(\"Sub-types can only be added to non-sealed classes\");\r\n            }\r\n            if (!IsValidSubType(derivedType))\r\n            {\r\n                throw new ArgumentException(derivedType.Name + \" is not a valid sub-type of \" + type.Name, \"derivedType\");\r\n            }\r\n            MetaType derivedMeta = model[derivedType];\r\n            ThrowIfFrozen();\r\n            //derivedMeta.ThrowIfFrozen();    // Remove this...\r\n            SubType subType = new SubType(fieldNumber, derivedMeta, dataFormat);\r\n            ThrowIfFrozen();\r\n\r\n            //derivedMeta.SetBaseType(this); // includes ThrowIfFrozen    // ... and that\r\n            if (subTypes == null) subTypes = new BasicList();\r\n            subTypes.Add(subType);\r\n            return this;\r\n        }\r\n\r\n\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/354565534",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/307#issuecomment-354565534",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/307",
        "id": 354565534,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU2NTUzNA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-30T20:04:23Z",
        "updated_at": "2017-12-30T20:04:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hiya @mgravell is there anything else I can do to help get this merged? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/355006787",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/332#issuecomment-355006787",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/332",
        "id": 355006787,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTAwNjc4Nw==",
        "user": {
            "login": "valentinmoscone",
            "id": 12706250,
            "node_id": "MDQ6VXNlcjEyNzA2MjUw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12706250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/valentinmoscone",
            "html_url": "https://github.com/valentinmoscone",
            "followers_url": "https://api.github.com/users/valentinmoscone/followers",
            "following_url": "https://api.github.com/users/valentinmoscone/following{/other_user}",
            "gists_url": "https://api.github.com/users/valentinmoscone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/valentinmoscone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/valentinmoscone/subscriptions",
            "organizations_url": "https://api.github.com/users/valentinmoscone/orgs",
            "repos_url": "https://api.github.com/users/valentinmoscone/repos",
            "events_url": "https://api.github.com/users/valentinmoscone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/valentinmoscone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-03T13:02:12Z",
        "updated_at": "2018-01-03T13:02:12Z",
        "author_association": "NONE",
        "body": "@RajDev84 Could you solve the error? I am getting the same error after adding new fields."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/355018081",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/332#issuecomment-355018081",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/332",
        "id": 355018081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTAxODA4MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-03T14:00:09Z",
        "updated_at": "2018-01-03T14:00:09Z",
        "author_association": "OWNER",
        "body": "Any code examples of what you're doing here? How to repro?\n\nOn 3 Jan 2018 1:02 p.m., \"valentinmoscone\" <notifications@github.com> wrote:\n\n> @RajDev84 <https://github.com/rajdev84> Could you solve the error? I am\n> getting the same error after adding new fields.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/332#issuecomment-355006787>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsG-Btz7Vs2gSu1DcApkrWL_EuK4Mks5tG3pVgaJpZM4RFN5u>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/355136979",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/63#issuecomment-355136979",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/63",
        "id": 355136979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTEzNjk3OQ==",
        "user": {
            "login": "Ian2020",
            "id": 7791246,
            "node_id": "MDQ6VXNlcjc3OTEyNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7791246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ian2020",
            "html_url": "https://github.com/Ian2020",
            "followers_url": "https://api.github.com/users/Ian2020/followers",
            "following_url": "https://api.github.com/users/Ian2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ian2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ian2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ian2020/subscriptions",
            "organizations_url": "https://api.github.com/users/Ian2020/orgs",
            "repos_url": "https://api.github.com/users/Ian2020/repos",
            "events_url": "https://api.github.com/users/Ian2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ian2020/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-03T21:48:13Z",
        "updated_at": "2018-01-03T21:48:13Z",
        "author_association": "NONE",
        "body": "Thanks @joeyciechanowicz for the workaround. I'm going to close this as I suspect we've all moved on from Silverlight now..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/355355488",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/308#issuecomment-355355488",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/308",
        "id": 355355488,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM1NTQ4OA==",
        "user": {
            "login": "tzachshabtay",
            "id": 1819001,
            "node_id": "MDQ6VXNlcjE4MTkwMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1819001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tzachshabtay",
            "html_url": "https://github.com/tzachshabtay",
            "followers_url": "https://api.github.com/users/tzachshabtay/followers",
            "following_url": "https://api.github.com/users/tzachshabtay/following{/other_user}",
            "gists_url": "https://api.github.com/users/tzachshabtay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tzachshabtay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tzachshabtay/subscriptions",
            "organizations_url": "https://api.github.com/users/tzachshabtay/orgs",
            "repos_url": "https://api.github.com/users/tzachshabtay/repos",
            "events_url": "https://api.github.com/users/tzachshabtay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tzachshabtay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-04T18:07:34Z",
        "updated_at": "2018-01-04T18:07:34Z",
        "author_association": "NONE",
        "body": "@mgravell I might be able to work on this and submit a PR, just want to make sure you're ok with the suggestion (and API).\r\nThanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/355388506",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/308#issuecomment-355388506",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/308",
        "id": 355388506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM4ODUwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-04T20:21:55Z",
        "updated_at": "2018-01-04T20:21:55Z",
        "author_association": "OWNER",
        "body": "If it can be booked in cleanly, by all means have a go. Just be careful to\nmake sure it works for both runtime reflection and il-emit cases.\n\nOn 4 Jan 2018 6:07 pm, \"tzachshabtay\" <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell> I might be able to work on this\n> and submit a PR, just want to make sure you're ok with the suggestion (and\n> API).\n> Thanks.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/308#issuecomment-355355488>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKDWnDT4SUIZY6wkK94Limh-I4rIks5tHRNmgaJpZM4PYd3W>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/356079417",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-356079417",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 356079417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjA3OTQxNw==",
        "user": {
            "login": "michalpenka",
            "id": 13472989,
            "node_id": "MDQ6VXNlcjEzNDcyOTg5",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13472989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michalpenka",
            "html_url": "https://github.com/michalpenka",
            "followers_url": "https://api.github.com/users/michalpenka/followers",
            "following_url": "https://api.github.com/users/michalpenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michalpenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michalpenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michalpenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michalpenka/orgs",
            "repos_url": "https://api.github.com/users/michalpenka/repos",
            "events_url": "https://api.github.com/users/michalpenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michalpenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-08T20:01:51Z",
        "updated_at": "2018-01-08T20:02:43Z",
        "author_association": "NONE",
        "body": "Marc, any status update on this one? It's kinda blocker for us at the moment. Thanks!\r\n  "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/356234663",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-356234663",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 356234663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjIzNDY2Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-09T09:51:52Z",
        "updated_at": "2018-01-09T09:51:52Z",
        "author_association": "OWNER",
        "body": "to handle it *autpmaticaly* would require core changes; nothing huge, but\njust a bit... messy.\n\nHow bit are your BitArrays here? I wonder if a workaround could be used\nlike:\n\n    public BitArray Foo {...}\n\n    [ProtoMember(n)]\n    public byte[] BitArraySerialized {\n        get {\n            var foo = Foo;\n            if(foo == null) return null;\n            int len = foo.Length / 8;\n            if(len == 0) return Array.Empty<byte>();\n\n            byte[] arr = new byte[len];\n            foo.CopyTo(arr);\n            return arr;\n        }\n        set {\n            if(value == null) Foo = null;\n            else Foo = new BitArray(value);\n        }\n    }\n\nHowever! this will only work well if your lengths are always an exact\nmultiple of 8. If they aren't, I can put a surrogate example together (it\nwill need a surrogate to convey the two parts); let me know!\n\nOn 8 January 2018 at 20:01, michalpenka <notifications@github.com> wrote:\n\n> Mark, any status update on this one? It's kinda blocker for us at the\n> moment. Thanks!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/206#issuecomment-356079417>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHLHgxR_2XBzM8XOkcZBeW7sn5Qqks5tInQvgaJpZM4LaDr0>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/356235037",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-356235037",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 356235037,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjIzNTAzNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-09T09:53:22Z",
        "updated_at": "2018-01-09T09:53:22Z",
        "author_association": "OWNER",
        "body": "note: if we made *core changes* to support it, then we could avoid the\nextra copy; not sure how big your arrays are in terms of whether that would\nmatter\n\nOn 9 January 2018 at 09:51, Marc Gravell <marc.gravell@gmail.com> wrote:\n\n> to handle it *autpmaticaly* would require core changes; nothing huge, but\n> just a bit... messy.\n>\n> How bit are your BitArrays here? I wonder if a workaround could be used\n> like:\n>\n>     public BitArray Foo {...}\n>\n>     [ProtoMember(n)]\n>     public byte[] BitArraySerialized {\n>         get {\n>             var foo = Foo;\n>             if(foo == null) return null;\n>             int len = foo.Length / 8;\n>             if(len == 0) return Array.Empty<byte>();\n>\n>             byte[] arr = new byte[len];\n>             foo.CopyTo(arr);\n>             return arr;\n>         }\n>         set {\n>             if(value == null) Foo = null;\n>             else Foo = new BitArray(value);\n>         }\n>     }\n>\n> However! this will only work well if your lengths are always an exact\n> multiple of 8. If they aren't, I can put a surrogate example together (it\n> will need a surrogate to convey the two parts); let me know!\n>\n> On 8 January 2018 at 20:01, michalpenka <notifications@github.com> wrote:\n>\n>> Mark, any status update on this one? It's kinda blocker for us at the\n>> moment. Thanks!\n>>\n>> \u2014\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/206#issuecomment-356079417>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsHLHgxR_2XBzM8XOkcZBeW7sn5Qqks5tInQvgaJpZM4LaDr0>\n>> .\n>>\n>\n>\n>\n> --\n> Regards,\n>\n> Marc\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/356754464",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/338#issuecomment-356754464",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/338",
        "id": 356754464,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njc1NDQ2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-10T22:11:56Z",
        "updated_at": "2018-01-10T22:11:56Z",
        "author_association": "OWNER",
        "body": "Google added a json encoded to their core protobuf tools around the time of\n\"proto3\", but protobuf-net does not currently implement that, and it isn't\non my list of things to consider - mostly because there are already a wide\nrange of excellent json tools available for .net that work with the same\ntype of types that protobuf-net works with. I usually use Jil or Json.Net\nwith the same types that I use with protobuf-net without any difficulty.\n\nSo: if your need is just \"have json\" - I would recommend either of those\nlibraries. If your need json in exactly the same layout that the google\nlibrary would emit: I can't advise on that.\n\nMarc\n\nOn 10 January 2018 at 12:59, WatsonSong <notifications@github.com> wrote:\n\n> I am writing a server side program support both the protobuf and restful\n> API, and I want to reuse my code.\n> Is there anyway just cast the protobuf struct into json directly?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/338>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJz24nreegU2k_mGWCXF5TrcvD_Aks5tJLQlgaJpZM4RZSFa>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/356802063",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/338#issuecomment-356802063",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/338",
        "id": 356802063,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgwMjA2Mw==",
        "user": {
            "login": "watsonsong",
            "id": 853396,
            "node_id": "MDQ6VXNlcjg1MzM5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/853396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/watsonsong",
            "html_url": "https://github.com/watsonsong",
            "followers_url": "https://api.github.com/users/watsonsong/followers",
            "following_url": "https://api.github.com/users/watsonsong/following{/other_user}",
            "gists_url": "https://api.github.com/users/watsonsong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/watsonsong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/watsonsong/subscriptions",
            "organizations_url": "https://api.github.com/users/watsonsong/orgs",
            "repos_url": "https://api.github.com/users/watsonsong/repos",
            "events_url": "https://api.github.com/users/watsonsong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/watsonsong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-11T02:11:35Z",
        "updated_at": "2018-01-11T02:11:35Z",
        "author_association": "NONE",
        "body": "If the json serialize is using reflection, I am worry the speed is slow. And other library has no meta-data of the protobuf structure. So what they see is just the c# class but no protobuf. So the field key name maybe the c# name, and the seralize maybe using reflection directly."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/357012471",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/339#issuecomment-357012471",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/339",
        "id": 357012471,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAxMjQ3MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-11T18:08:25Z",
        "updated_at": "2018-01-11T18:08:25Z",
        "author_association": "OWNER",
        "body": "What makes you think so? It looks good here:\nhttps://github.com/mgravell/protobuf-net/blob/master/src/Directory.build.props\n\nOn 11 Jan 2018 8:35 am, \"ViTuRaS\" <notifications@github.com> wrote:\n\n> It look like this repository is not up to date.\n> Where can I get the source for the current 2.3.3 version?\n>\n> Many thanks in advance.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/339>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKfv4GbNZYMpvaIkLVYYwtvJi1ePks5tJce4gaJpZM4Rae-F>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/357013189",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/339#issuecomment-357013189",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/339",
        "id": 357013189,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAxMzE4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-11T18:11:06Z",
        "updated_at": "2018-01-11T18:11:06Z",
        "author_association": "OWNER",
        "body": "Ah, if you mean that it isn't tagged here:\nhttps://github.com/mgravell/protobuf-net/releases - then I can fix that;\nbut: the HEAD of master is correct:\nhttps://github.com/mgravell/protobuf-net/commits/master\n\nOn 11 Jan 2018 8:35 am, \"ViTuRaS\" <notifications@github.com> wrote:\n\n> It look like this repository is not up to date.\n> Where can I get the source for the current 2.3.3 version?\n>\n> Many thanks in advance.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/339>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKfv4GbNZYMpvaIkLVYYwtvJi1ePks5tJce4gaJpZM4Rae-F>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/357014426",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/338#issuecomment-357014426",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/338",
        "id": 357014426,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAxNDQyNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-11T18:15:46Z",
        "updated_at": "2018-01-11T18:15:46Z",
        "author_association": "OWNER",
        "body": "Most serializer tools use advanced metaprogramming techniques. They do not\nuse basic reflection. This certainly applies for Jil and Json.Net - and\nindeed protobuf-net (the \"il\" in \"Jil\" is \"IL\", as-in MSIL, as-in runtime\nemit of IL opcodes to match your type).\n\nIf you care about the protobuf aspect, then what you already have is what\nprotobuf expects. You can't have your cake and eat it, so to speak.\n\nOn 11 Jan 2018 2:11 am, \"WatsonSong\" <notifications@github.com> wrote:\n\nIf the json serialize is using reflection, I am worry the speed is slow.\nAnd other library has no meta-data of the protobuf structure. So what they\nsee is just the c# class but no protobuf. So the field key name maybe the\nc# name, and the seralize maybe using reflection directly.\n\n\u2014\nYou are receiving this because you commented.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/338#issuecomment-356802063>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsMz5NZ060TGWB_W-z4cBX3HvGNPkks5tJW3XgaJpZM4RZSFa>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/357174383",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/339#issuecomment-357174383",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/339",
        "id": 357174383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzE3NDM4Mw==",
        "user": {
            "login": "ViTuRaS",
            "id": 13779606,
            "node_id": "MDQ6VXNlcjEzNzc5NjA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13779606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ViTuRaS",
            "html_url": "https://github.com/ViTuRaS",
            "followers_url": "https://api.github.com/users/ViTuRaS/followers",
            "following_url": "https://api.github.com/users/ViTuRaS/following{/other_user}",
            "gists_url": "https://api.github.com/users/ViTuRaS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ViTuRaS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ViTuRaS/subscriptions",
            "organizations_url": "https://api.github.com/users/ViTuRaS/orgs",
            "repos_url": "https://api.github.com/users/ViTuRaS/repos",
            "events_url": "https://api.github.com/users/ViTuRaS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ViTuRaS/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-12T08:30:08Z",
        "updated_at": "2018-01-12T08:30:08Z",
        "author_association": "NONE",
        "body": "Hi mgravell,\r\nyes, I was unsure because it was not tagged, but the HEAD looked highly promising.\r\nMany thanks for the info."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/357219424",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/339#issuecomment-357219424",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/339",
        "id": 357219424,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzIxOTQyNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-12T11:52:01Z",
        "updated_at": "2018-01-12T11:52:01Z",
        "author_association": "OWNER",
        "body": "It is now tagged\n\nOn 12 January 2018 at 08:30, ViTuRaS <notifications@github.com> wrote:\n\n> Hi mgravell,\n> yes, I was unsure because it was not tagged, but the HEAD looked highly\n> promising.\n> Many thanks for the info.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/339#issuecomment-357174383>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNEtPvluu88MC8e2jXPDNjmhkU0fks5tJxgQgaJpZM4Rae-F>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/358377289",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/340#issuecomment-358377289",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/340",
        "id": 358377289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODM3NzI4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-17T17:20:57Z",
        "updated_at": "2018-01-17T17:20:57Z",
        "author_association": "OWNER",
        "body": "You had me worried until I saw it was just the intellisense :) thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/358724559",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/341#issuecomment-358724559",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/341",
        "id": 358724559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODcyNDU1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-18T17:42:12Z",
        "updated_at": "2018-01-18T17:42:12Z",
        "author_association": "OWNER",
        "body": "I spoke to someone on stack overflow about this recently - presumably you?\n\nThe long and short of it is that is a bug and I need to fix it. I'll try to\nhave a look ASAP.\n\nOn 18 Jan 2018 4:34 pm, \"Andreas Eriksson\" <notifications@github.com> wrote:\n\n> I upgraded to version 2.3.3 from 2.0.0.668 and I now get an error when\n> serializing a class that contains a dictionary with a nullable type.\n>\n> [ProtoMember(17)]public Dictionary<String, bool?> Mapping { get; set; }\n>\n> ProtoBuf.ProtoException\n> HResult=0x80131500\n> Message=Data of this type has inbuilt behaviour, and cannot be added to a\n> model in this way: System.Nullable`1[[System.Boolean, mscorlib,\n> Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\n> (Griffeye.Domain.EntityCriteria.DigestSourceImportCriteria)\n> Source=protobuf-net\n> StackTrace:\n> at ProtoBuf.Meta.RuntimeTypeModel.GetKey(Type type, Boolean demand,\n> Boolean getBaseKey) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\RuntimeTypeModel.cs:line\n> 794\n> at ProtoBuf.Meta.TypeModel.GetKey(Type& type) in C:\\code\\protobuf-net\\src\\\n> protobuf-net\\Meta\\TypeModel.cs:line 1281\n> at ProtoBuf.Meta.TypeModel.SerializeCore(ProtoWriter writer, Object\n> value) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 192\n> at ProtoBuf.Meta.TypeModel.Serialize(Stream dest, Object value,\n> SerializationContext context) in C:\\code\\protobuf-net\\src\\\n> protobuf-net\\Meta\\TypeModel.cs:line 228\n> at ProtoBuf.Serializer.Serialize[T](Stream destination, T instance) in\n> C:\\code\\protobuf-net\\src\\protobuf-net\\Serializer.cs:line 106\n>\n> I have tried adding ProtoMap(DisableMap = true) but that did not help\n> either.\n>\n> Is there anything I need to do in the new version to get this to work?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/341>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsMCiAYALezYsMn5xHL4CS95CiJPPks5tL3KbgaJpZM4RjNPl>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/358819861",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/341#issuecomment-358819861",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/341",
        "id": 358819861,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODgxOTg2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-18T23:45:46Z",
        "updated_at": "2018-01-18T23:45:46Z",
        "author_association": "OWNER",
        "body": "fix pushed; running regression tests, should be fixed next deploy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/358827613",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/341#issuecomment-358827613",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/341",
        "id": 358827613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODgyNzYxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T00:27:14Z",
        "updated_at": "2018-01-19T00:27:14Z",
        "author_association": "OWNER",
        "body": "deployed: https://www.nuget.org/packages/protobuf-net/2.3.4"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/358889727",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/341#issuecomment-358889727",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/341",
        "id": 358889727,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODg4OTcyNw==",
        "user": {
            "login": "andreas-eriksson",
            "id": 4438107,
            "node_id": "MDQ6VXNlcjQ0MzgxMDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4438107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andreas-eriksson",
            "html_url": "https://github.com/andreas-eriksson",
            "followers_url": "https://api.github.com/users/andreas-eriksson/followers",
            "following_url": "https://api.github.com/users/andreas-eriksson/following{/other_user}",
            "gists_url": "https://api.github.com/users/andreas-eriksson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andreas-eriksson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andreas-eriksson/subscriptions",
            "organizations_url": "https://api.github.com/users/andreas-eriksson/orgs",
            "repos_url": "https://api.github.com/users/andreas-eriksson/repos",
            "events_url": "https://api.github.com/users/andreas-eriksson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andreas-eriksson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-19T07:40:44Z",
        "updated_at": "2018-01-19T07:40:44Z",
        "author_association": "NONE",
        "body": "Thanks Marc. It works perfectly.\r\n\r\nP.S. I did not create an issue on Stackoverflow but I did comment on this one.\r\nhttps://stackoverflow.com/questions/48009686/nullable-decimal-cant-be-added-to-model"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/359353798",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-359353798",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 359353798,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM1Mzc5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-22T08:22:56Z",
        "updated_at": "2018-01-22T08:22:56Z",
        "author_association": "OWNER",
        "body": "In principle: absolutely. It has been an annoying gap that I've meant to\nplug for ages. It would depend on the implementation and tests, of course :)\n\nOne caveat for consideration: there are two key scenarios for surrogates:\n\n- \"I control this object, but it is the wrong shape\"\n- \"I don't control this object\"\n\nAttributes work for the first but not the second. It is also possible in\nthe second case that the type is in a different assembly, so resolving by\nconvention can also be problematic. I'm not saying that any solution needs\nto solve the weirdest edge-case: we can use manual configuration for that.\nBut it should at least actively consider what scenarios it does and doesn't\nwork with.\n\nOn 22 Jan 2018 8:05 am, \"Fabien Molinet\" <notifications@github.com> wrote:\n\n> Hi Mark,\n>\n> Would you accept a PR that setups the surrogate either by attribute or by\n> convention?\n>\n> If it's by attribute, it could be defined on the original class, ie:\n>\n> [ProtoContract(surrogate: typeof(WhateverSurrogate)]public class Whatever\n>\n> Another idea would be to define it by naming convention, but I guess that\n> has a bigger performance impact:\n>\n> public class Whatever // it doesn't define anything\n>\n> [ProtoSurrogate(for: typeof(Whatever)]public class WhateverSurrogate\n>\n> If we have a class having the pattern {className}Surrogate, and if that\n> class defines a ProtoSurrogate attribute for that type, then it would be\n> automatically used.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/342>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBHF3db1-VR7r3IGtsp8d3EXnEO4ks5tNEFdgaJpZM4RmSsH>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/359355780",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-359355780",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 359355780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM1NTc4MA==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-22T08:33:09Z",
        "updated_at": "2018-01-22T08:33:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "To be honest, first proposal would be easier to implement.\r\nAs you said, this would only solve the use case, where you control the classes.\r\nI will try out that solution and it can be refined based on your feedback."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/359751215",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-359751215",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 359751215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc1MTIxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-23T10:43:35Z",
        "updated_at": "2018-01-23T10:44:35Z",
        "author_association": "OWNER",
        "body": "This isn't a .NET version thing - it is a C# version thing; newer C# compilers can target older .NET frameworks without difficulty.\r\n\r\nIf you're saying \"we should allow for down-level compilers as an option\"; we can consider that - but: how low do we go? should we support not using automatically implemented properties (C# 3), for example?\r\n\r\nI would also want to ask: is there a specific reason you can't use (or don't want to use) a more recent compiler? This might significantly influence the priority."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/359770966",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-359770966",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 359770966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc3MDk2Ng==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-23T12:08:43Z",
        "updated_at": "2018-01-23T12:17:54Z",
        "author_association": "NONE",
        "body": "I use protobuf-net in Unity 2017.03 and use .net 4. Because of APK size, I need to use low-level .Net. If it can support C# 3.5+, must be a good news.\r\n\r\nAre there any other people have the same problems\uff1f"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/359775729",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-359775729",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 359775729,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc3NTcyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-23T12:28:36Z",
        "updated_at": "2018-01-23T12:28:36Z",
        "author_association": "OWNER",
        "body": "k; so: what is the maximum language version supported by that? (not the .NET version - what matters is the C# version; there is no such thing as C# 3.5, for example)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360028280",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360028280",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360028280,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDAyODI4MA==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T05:50:55Z",
        "updated_at": "2018-01-24T06:20:41Z",
        "author_association": "NONE",
        "body": "According to [wikipedia](https://en.wikipedia.org/wiki/C_Sharp_(programming_language)#Versions), `.NET Framework 3.5` related to `C# 3.0`.\r\n\r\nIf C# 3.0 is too low, I think C# 4.0 is enough."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360046819",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360046819",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360046819,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDA0NjgxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T07:41:52Z",
        "updated_at": "2018-01-24T12:29:16Z",
        "author_association": "OWNER",
        "body": "They shipped together. That isn't the same thing at all, though. It is\r\nincorrect to say \"I'm targeting .net 3.5, therefore I can only use c# 3\". I\r\nhave libraries in use that target .net 2.0 but which use c# 7 features in\r\ntheir current source code. It ultimately comes down to the development\r\nenvironment that you are using, and what compiler that includes. If that is\r\nthe c# 3 compiler, then: fine.\r\n\r\nSorry if I'm sounding pedantic, but it is a very important distinction.\r\n\r\n(edit: removed email cruft)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360059134",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360059134",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360059134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDA1OTEzNA==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T08:39:56Z",
        "updated_at": "2018-01-24T08:48:01Z",
        "author_association": "NONE",
        "body": "I admire you for the rigorous programming.\r\n\r\nIf a library claims to support .NET Framework 4.0, for others, it means that it supports compiling with the C# 4 compiler or higher.\r\n\r\nWhat I need is that .cs file can supports compiling with the C# 4 compiler, if this is reasonable.\r\n\r\nFor Unity developers, everyone can choose to use many versions of .NET themselves, but given the size of the binary package, he may be wise to choose a higher version.\r\n\r\nI'm a Unity newbie and I'm not very familiar with how to set the C # compiler version, and I'll be actively trying to raise the compiler version if I can."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360110470",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360110470",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360110470,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExMDQ3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:05:48Z",
        "updated_at": "2018-01-24T12:48:42Z",
        "author_association": "OWNER",
        "body": "Are you using the online generator (https://protogen.marcgravell.com)? or have you compiled the standalone exe?\r\n\r\nIf you are using the online generator, you can try this *now*; at the moment it requires specification *inside* the proto file, but I need to change how it works because obviously a single \"langver\" isn't useful for x-plat purposes; so: **expect this to change**, but *for today at least*, you can add:\r\n\r\nand\r\n\r\n```\r\nimport \"protobuf-net/protogen.proto\";\r\noption (.protobuf_net.fileopt).langver = \"3\";\r\n```\r\n\r\nto a schema in the online version, and it should emit C# 3 compatible code. I'd be interested in your results - i.e. does it compile correctly for you. Note that the generator doesn't make any use of C# 4 or C# 5 features, so the only real question at the moment is \"C# 6 vs C# 3\".\r\n\r\nYou can see an example of this here: https://protogen.marcgravell.com/#gbc9d82f8397fa022286f15a2247f2d4c\r\n\r\n(which is just the default page, loading [this gist](https://gist.github.com/mgravell/bc9d82f8397fa022286f15a2247f2d4c))\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360111532",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360111532",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360111532,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExMTUzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:10:53Z",
        "updated_at": "2018-01-24T12:10:53Z",
        "author_association": "OWNER",
        "body": "Small disagreement on one thing though: I fundamentally disagree with the following statement:\r\n\r\n> If a library claims to support .NET Framework 4.0, for others, it means that it supports compiling with the C# 4 compiler or higher.\r\n\r\nI don't want to belabour the point, but: the language version and the C# version are IMO fundamentally disconnected. It isn't an unreasonable request to support earlier compiler versions - and as you can see: I'm not against that in any way. But: they are separate questions.\r\n\r\nFor most purposes, perhaps this is a moot point..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360111840",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360111840",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360111840,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExMTg0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:12:21Z",
        "updated_at": "2018-01-24T12:12:21Z",
        "author_association": "OWNER",
        "body": "Oh; if you **cannot** edit your existing .proto, I'd be interested in hearing that too - it means I need to add additional override flags to the web UI and console CLI. Again: let me know how you get on, and whether this is going to be problematic."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360116111",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360116111",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360116111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExNjExMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:31:23Z",
        "updated_at": "2018-01-24T12:31:23Z",
        "author_association": "OWNER",
        "body": "(if compiling from source: see ^^^, or the [langver](https://github.com/mgravell/protobuf-net/tree/langver) branch)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360117230",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360117230",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360117230,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExNzIzMA==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:35:53Z",
        "updated_at": "2018-01-24T12:35:53Z",
        "author_association": "NONE",
        "body": "My .proto file look like:\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage demo;\r\n\r\nmessage Error {\r\n    uint32 code = 1;\r\n    string text = 2;\r\n}\r\n\r\nmessage Server {\r\n    uint32 id = 1;\r\n    string addr = 2;\r\n}\r\n\r\nmessage ExampleResp {\r\n    Error err = 1;\r\n    repeated Server servers = 2;\r\n}\r\n```\r\n\r\n```C#\r\n// This file was generated by a tool; you should avoid making direct changes.\r\n// Consider using 'partial classes' to extend these types\r\n// Input: my.proto\r\n\r\n#pragma warning disable 1591, 0612, 3021\r\n\r\nnamespace Demo\r\n{\r\n\r\n    [global::ProtoBuf.ProtoContract()]\r\n    public partial class Error\r\n    {\r\n        [global::ProtoBuf.ProtoMember(1, Name = @\"code\")]\r\n        public uint Code { get; set; }\r\n\r\n        [global::ProtoBuf.ProtoMember(2, Name = @\"text\")]\r\n        [global::System.ComponentModel.DefaultValue(\"\")]\r\n        public string Text { get; set; } ~~= \"\";~~\r\n\r\n    }\r\n\r\n    [global::ProtoBuf.ProtoContract()]\r\n    public partial class Server\r\n    {\r\n        [global::ProtoBuf.ProtoMember(1, Name = @\"id\")]\r\n        public uint Id { get; set; }\r\n\r\n        [global::ProtoBuf.ProtoMember(2, Name = @\"addr\")]\r\n        [global::System.ComponentModel.DefaultValue(\"\")]\r\n        public string Addr { get; set; } ~~= \"\";~~\r\n\r\n    }\r\n\r\n    [global::ProtoBuf.ProtoContract()]\r\n    public partial class ExampleResp\r\n    {\r\n        [global::ProtoBuf.ProtoMember(1, Name = @\"err\")]\r\n        public Error Err { get; set; }\r\n\r\n        [global::ProtoBuf.ProtoMember(2, Name = @\"servers\")]\r\n        public global::System.Collections.Generic.List<Server> Servers { get; } ~~= new global::System.Collections.Generic.List<Server>();~~\r\n\r\n    }\r\n\r\n}\r\n\r\n#pragma warning restore 1591, 0612, 3021\r\n```\r\nThen I need to manually remove those code snippets enclosed in ~~.\r\n\r\nOther solutions are being explored."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360119972",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360119972",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360119972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDExOTk3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T12:47:06Z",
        "updated_at": "2018-01-24T12:47:52Z",
        "author_association": "OWNER",
        "body": "If I run your .proto through the new code, with the:\r\n\r\n```\r\nimport \"protobuf-net/protogen.proto\";\r\noption (.protobuf_net.fileopt).langver = \"3\";\r\n```\r\n\r\nthen I get:\r\n\r\n```\r\n        [global::ProtoBuf.ProtoMember(2, Name = @\"servers\")]\r\n        public global::System.Collections.Generic.List<Server> Servers { get; private set; }\r\n```\r\n\r\nwith:\r\n\r\n```\r\n        public ExampleResp()\r\n        {\r\n            Servers = new global::System.Collections.Generic.List<Server>();\r\n            OnConstructor();\r\n        }\r\n\r\n        partial void OnConstructor();\r\n```\r\n\r\nLikewise:\r\n\r\n```\r\n        [global::ProtoBuf.ProtoMember(2, Name = @\"addr\")]\r\n        [global::System.ComponentModel.DefaultValue(\"\")]\r\n        public string Addr { get; set; }\r\n```\r\n\r\nwith:\r\n\r\n```\r\n        public Server()\r\n        {\r\n            Addr = \"\";\r\n            OnConstructor();\r\n        }\r\n\r\n        partial void OnConstructor();\r\n```\r\n\r\n\r\nwhich ... looks good to me; so: does the change deployed fix the issue for you?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360127902",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360127902",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360127902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDEyNzkwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T13:12:55Z",
        "updated_at": "2018-01-24T13:12:55Z",
        "author_association": "OWNER",
        "body": "as a link: https://protogen.marcgravell.com/#g9b4aeb45b64049eb8d3933cbb97a955c"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360157824",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360157824",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360157824,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE1NzgyNA==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T14:46:49Z",
        "updated_at": "2018-01-24T14:46:49Z",
        "author_association": "NONE",
        "body": "Using the the online generator, everything looks well. However, x-plat issues are also a problem. I have enough time and patience to wait for the ultimate solution. If there is anything I can help, please let me know.\r\n\r\nI use a standalone exe to generate group files. At the same time, also use protoc to generate Go files for server side."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360189081",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360189081",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360189081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE4OTA4MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-24T16:22:42Z",
        "updated_at": "2018-01-24T16:22:42Z",
        "author_association": "OWNER",
        "body": "k; do you see it as an issue having the hints for this in the .proto? i.e. if this became:\r\n\r\n```\r\noption (.protobuf_net.fileopt).csharp_langver = \"3\";\r\n```\r\n\r\nwould that be usable for you? My main concern with `langver` as a name is simply: it doesn't make sense when it could target multiple platrforms. The above approach has precedent with `csharp_namespace` from Google's base code, etc."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360435559",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360435559",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360435559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQzNTU1OQ==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T11:07:42Z",
        "updated_at": "2018-01-25T11:14:17Z",
        "author_association": "NONE",
        "body": "protoc will still report `Option \"(.protobuf_net.fileopt)\" unknown` if only option is used. \r\n\r\nIf possible, I think it would be more appropriate to put langver on protogen startup parameters.\r\n\r\n```\r\nprotogen.exe --langver=3 --csharp_out=.  demo.proto\r\n```\r\n\r\nI'm not sure protogen supports generating other languages, which may not be appropriate if supported.\r\n\r\nOf course, if put the langver in .proto file, does not affect the use of protoc, it is ok so."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360460941",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360460941",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360460941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ2MDk0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T13:05:09Z",
        "updated_at": "2018-01-25T13:05:09Z",
        "author_association": "OWNER",
        "body": "Yes, it is entirely expected that you'd still have to use the import; I was mainly talking about the naming. I'll have a think about command-line options."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360471318",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360471318",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360471318,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3MTMxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T13:48:54Z",
        "updated_at": "2018-01-25T13:49:59Z",
        "author_association": "OWNER",
        "body": "k; I've pushed a change to the \"langver\" branch; if you pull from that, you should find that:\r\n\r\n```\r\n+langver=3.0\r\n```\r\n\r\nworks at the command-line. More generally, `+OPTION=VALUE` allows arbitrary custom options to be provided through to the code-generator, so we have a consistent API for adding any other future needs.\r\n\r\n(as opposed to `-`/`--` switches which mimic the google `protoc` CLI)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360476080",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/333#issuecomment-360476080",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/333",
        "id": 360476080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3NjA4MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:06:51Z",
        "updated_at": "2018-01-25T14:06:51Z",
        "author_association": "OWNER",
        "body": "I'm fine with the intent of this API, but I would prefer the public API surface to be expressed as \"positives\" rather than \"negatives\"; I'm going to merge, and tweak that.\r\n\r\nThanks for the input; nice."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360476850",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360476850",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360476850,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3Njg1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:09:50Z",
        "updated_at": "2018-01-25T14:09:50Z",
        "author_association": "OWNER",
        "body": "I've finally surfaced from what I was doing; I appreciate this was a little while ago, and that's on me - any chance of a unit test to explicitly show what it fixes? if that's not convenient, I can put one together based on #228"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360477420",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360477420",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360477420,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3NzQyMA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:11:59Z",
        "updated_at": "2018-01-25T14:11:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think I've already done that :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360477767",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/163#issuecomment-360477767",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/163",
        "id": 360477767,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3Nzc2Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:13:13Z",
        "updated_at": "2018-01-25T14:13:13Z",
        "author_association": "OWNER",
        "body": "This PR is no longer relevant; the protogen tooling was rewritten from scratch and no longer has a dependency on protoc. I *really* appreaciate the input, though."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360478553",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/149#issuecomment-360478553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/149",
        "id": 360478553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ3ODU1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:16:03Z",
        "updated_at": "2018-01-25T14:16:03Z",
        "author_association": "OWNER",
        "body": "This PR no longer applies; the code-gen tooling was completely rewritten."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360480628",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/186#issuecomment-360480628",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/186",
        "id": 360480628,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ4MDYyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:23:18Z",
        "updated_at": "2018-01-25T14:23:18Z",
        "author_association": "OWNER",
        "body": "Thanks; sorry for delay, but: merged!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360485199",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360485199",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360485199,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ4NTE5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T14:39:08Z",
        "updated_at": "2018-01-25T14:39:08Z",
        "author_association": "OWNER",
        "body": "So you have; apparently I fail at reading today. Sorry! Will look."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360492248",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360492248",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360492248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ5MjI0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T15:03:02Z",
        "updated_at": "2018-01-25T15:03:02Z",
        "author_association": "OWNER",
        "body": "in theory: should be good to merge; there's a slight \"gotcha\" in that behind the scenes I actually build for 2.0 and up, so I need to rework the LINQ bits, but I can probably take that.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360493573",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360493573",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360493573,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ5MzU3Mw==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T15:07:28Z",
        "updated_at": "2018-01-25T15:07:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry about that. But those #defines, like a cat on a hot tin roof :)..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360500586",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360500586",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360500586,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDUwMDU4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T15:28:52Z",
        "updated_at": "2018-01-25T15:29:02Z",
        "author_association": "OWNER",
        "body": "you're not wrong about that; that's the result of targeting (at various points) IKVM, Silverlight, WinRT, CF, *very early* versions of .NET Core, *current* .NET Core, and every version of .NET from 2.0 upwards. It got messy :) It needs to be nuked from orbit, I reckon."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360501738",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360501738",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360501738,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDUwMTczOA==",
        "user": {
            "login": "lbargaoanu",
            "id": 4517428,
            "node_id": "MDQ6VXNlcjQ1MTc0Mjg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4517428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbargaoanu",
            "html_url": "https://github.com/lbargaoanu",
            "followers_url": "https://api.github.com/users/lbargaoanu/followers",
            "following_url": "https://api.github.com/users/lbargaoanu/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbargaoanu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbargaoanu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbargaoanu/subscriptions",
            "organizations_url": "https://api.github.com/users/lbargaoanu/orgs",
            "repos_url": "https://api.github.com/users/lbargaoanu/repos",
            "events_url": "https://api.github.com/users/lbargaoanu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbargaoanu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T15:32:14Z",
        "updated_at": "2018-01-25T15:32:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "Amen :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360503115",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/291#issuecomment-360503115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/291",
        "id": 360503115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDUwMzExNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T15:36:27Z",
        "updated_at": "2018-01-25T15:36:27Z",
        "author_association": "OWNER",
        "body": "merged; thanks very much; I simply replaced the `Concat` / `SelectMany` with a nested loop."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360587554",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-360587554",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 360587554,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDU4NzU1NA==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T20:17:15Z",
        "updated_at": "2018-01-25T21:38:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell I added the functionality, it was rather easy but I may have forgotten things.\r\nI had a lot of trouble to build, and to restore packages, no clue if it's because I used VS 2017 community and an older version (15.4.4). Even now some stuff is really strange:\r\n![image](https://user-images.githubusercontent.com/5130190/35410299-462aea6c-0215-11e8-9602-4edbf6b0667f.png)\r\n\r\nThere is one unit test `ProtoBuf.unittest.Attribs.ProtoContractSurrogateTests` but I wasn't sure where to place the file, I can move it if you want. Do you need more tests?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360609225",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-360609225",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 360609225,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYwOTIyNQ==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T21:39:32Z",
        "updated_at": "2018-01-25T21:39:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "Btw I managed to rebase the commits"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360624289",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360624289",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360624289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYyNDI4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T22:37:53Z",
        "updated_at": "2018-01-25T22:37:53Z",
        "author_association": "OWNER",
        "body": "btw; `protogen` is now available as a download on https://protogen.marcgravell.com/ - you are of course entirely welcome to self-build if you prefer"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360624483",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360624483",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360624483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYyNDQ4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-25T22:38:43Z",
        "updated_at": "2018-01-25T22:38:43Z",
        "author_association": "OWNER",
        "body": "setting a vague and imprecise timer: I'm going to assume this is now resolved unless you get back to me in a few days"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/360816715",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/343#issuecomment-360816715",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/343",
        "id": 360816715,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDgxNjcxNQ==",
        "user": {
            "login": "huangqingcheng",
            "id": 5179057,
            "node_id": "MDQ6VXNlcjUxNzkwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5179057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangqingcheng",
            "html_url": "https://github.com/huangqingcheng",
            "followers_url": "https://api.github.com/users/huangqingcheng/followers",
            "following_url": "https://api.github.com/users/huangqingcheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangqingcheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangqingcheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangqingcheng/subscriptions",
            "organizations_url": "https://api.github.com/users/huangqingcheng/orgs",
            "repos_url": "https://api.github.com/users/huangqingcheng/repos",
            "events_url": "https://api.github.com/users/huangqingcheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangqingcheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-26T15:33:16Z",
        "updated_at": "2018-01-26T15:33:16Z",
        "author_association": "NONE",
        "body": "It works well now, nice."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/361017788",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/313#issuecomment-361017788",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/313",
        "id": 361017788,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTAxNzc4OA==",
        "user": {
            "login": "BryantL",
            "id": 14291122,
            "node_id": "MDQ6VXNlcjE0MjkxMTIy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14291122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BryantL",
            "html_url": "https://github.com/BryantL",
            "followers_url": "https://api.github.com/users/BryantL/followers",
            "following_url": "https://api.github.com/users/BryantL/following{/other_user}",
            "gists_url": "https://api.github.com/users/BryantL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BryantL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BryantL/subscriptions",
            "organizations_url": "https://api.github.com/users/BryantL/orgs",
            "repos_url": "https://api.github.com/users/BryantL/repos",
            "events_url": "https://api.github.com/users/BryantL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BryantL/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-27T21:46:51Z",
        "updated_at": "2018-01-27T21:58:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've finally had time to look into the issue in the code (beyond just the exception stack trace) and have submitted a pull request that I believe to be a complete fix :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/361239574",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/334#issuecomment-361239574",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/334",
        "id": 361239574,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTIzOTU3NA==",
        "user": {
            "login": "Disturbing",
            "id": 2367167,
            "node_id": "MDQ6VXNlcjIzNjcxNjc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2367167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disturbing",
            "html_url": "https://github.com/Disturbing",
            "followers_url": "https://api.github.com/users/Disturbing/followers",
            "following_url": "https://api.github.com/users/Disturbing/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disturbing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disturbing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disturbing/subscriptions",
            "organizations_url": "https://api.github.com/users/Disturbing/orgs",
            "repos_url": "https://api.github.com/users/Disturbing/repos",
            "events_url": "https://api.github.com/users/Disturbing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disturbing/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-29T13:06:35Z",
        "updated_at": "2018-01-29T13:06:35Z",
        "author_association": "NONE",
        "body": "Looking for a similar feature for DynamicMessage using the proto file during runtime.  Much better to have some sort of parsing tool versus compilaton - if you're interested in writing a spec, I'd be happy to implement."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/361297113",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/334#issuecomment-361297113",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/334",
        "id": 361297113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTI5NzExMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-01-29T16:14:44Z",
        "updated_at": "2018-01-29T16:14:44Z",
        "author_association": "OWNER",
        "body": "I think the first thing to think about - regardless of implementation details - is what would the API look like? For example, it *might* be able to do most of this today by simply loading the data into the `Extensible` base type (if it isn't `abstract`). If you're loading a .proto at runtime, your code presumably doesn't know the structure in advance - so: what does it look like? Would the existing \"extensible\" extension methods be sufficient? does it need name lookup.\r\n\r\nA full \"this is what I have and what I'd want to do\" example would be a good thing to flush through many of the issues. The actual design follows from what it needs to do."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/362339032",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/347#issuecomment-362339032",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/347",
        "id": 362339032,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMzOTAzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-01T17:22:20Z",
        "updated_at": "2018-02-01T17:22:20Z",
        "author_association": "OWNER",
        "body": "Sure, why not: https://www.nuget.org/packages/protobuf-net/2.3.6"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/362342347",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/348#issuecomment-362342347",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/348",
        "id": 362342347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjM0MjM0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-01T17:33:23Z",
        "updated_at": "2018-02-01T17:33:23Z",
        "author_association": "OWNER",
        "body": "I'm not aware of an issue in this area; do you have an example generated protobuf binary data (obviously with fake data that you don't mind sharing - I don't care what the values actually are) that I could use to try to repro?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/362537612",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/348#issuecomment-362537612",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/348",
        "id": 362537612,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjUzNzYxMg==",
        "user": {
            "login": "sailingson",
            "id": 17008425,
            "node_id": "MDQ6VXNlcjE3MDA4NDI1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17008425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sailingson",
            "html_url": "https://github.com/sailingson",
            "followers_url": "https://api.github.com/users/sailingson/followers",
            "following_url": "https://api.github.com/users/sailingson/following{/other_user}",
            "gists_url": "https://api.github.com/users/sailingson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sailingson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sailingson/subscriptions",
            "organizations_url": "https://api.github.com/users/sailingson/orgs",
            "repos_url": "https://api.github.com/users/sailingson/repos",
            "events_url": "https://api.github.com/users/sailingson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sailingson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-02T09:46:32Z",
        "updated_at": "2018-02-02T09:46:32Z",
        "author_association": "NONE",
        "body": "Hi Marc\n\nActually upon further investigation was my mistake,\n\nThanks for your prompt reply,\n\nAengus O Sullivan\n\n\nSoftCo News | SoftCo wins $20 million Finnish Government contract | Reducing Invoice-Processing Costs is 2017 Top Priority | We\u2019re growing. We\u2019re hiring. SoftCo creates 40 new jobs.\nContact SoftCo | Dublin: +353 (1) 294 2420 | Boston: +1 617-861-4397  | Manchester: +44 (121) 288 0768 | Helsinki: +358 (1) 941 4011 | Cork: +353 (21) 234 8206\nFollow SoftCo | LinkedIn | Twitter | YouTube\nSoftCo | Transforming Financial Processes | softco.com\nThis message (and any associated files) is intended only for the use of the individual or entity to which it is addressed and may contain information that is confidential, subject to copyright or constitutes a trade secret. If you are not the intended recipient you are hereby notified that any dissemination, copying or distribution of this message, or files associated with this message, is strictly prohibited. If you have received this message in error, please notify SoftCo immediately and delete it from your computer. Messages sent to and from us may be monitored. Internet communications cannot be guaranteed to be secure or error-free as information could be intercepted, corrupted, lost, destroyed, arrive late, incomplete, or contain viruses. Therefore, SoftCo does not accept responsibility for any errors or omissions that are present in this message, or any attachment, that may have arisen as a result of e-mail transmission. Any views or opinions presented are solely those of the author and do not necessarily represent those of the company.\n\n\u00a9 Copyright 2017 SoftCo | South County Business Park | Leopardstown | Dublin 18 | Registered in Ireland. Number 323118 | ISO 27001 certified company\nFrom: Marc Gravell [mailto:notifications@github.com]\nSent: 01 February 2018 17:33\nTo: mgravell/protobuf-net <protobuf-net@noreply.github.com>\nCc: Aengus O'Sullivan <Aengus.O'Sullivan@softco.com>; Author <author@noreply.github.com>\nSubject: Re: [mgravell/protobuf-net] Protobuf-net serialization, message within message - same field name - inner field passed as NULL (#348)\n\n\nI'm not aware of an issue in this area; do you have an example generated protobuf binary data (obviously with fake data that you don't mind sharing - I don't care what the values actually are) that I could use to try to repro?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/mgravell/protobuf-net/issues/348#issuecomment-362342347>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AQOHKXB6cd5k-S4YnsjYpdbeBmD2ZMsWks5tQfVngaJpZM4R1-T9>.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/362900566",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/349#issuecomment-362900566",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/349",
        "id": 362900566,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkwMDU2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-04T11:42:51Z",
        "updated_at": "2018-02-04T11:42:51Z",
        "author_association": "OWNER",
        "body": "Set AsReference on Person's ProtoContractAttribute to true. Note that this\nchanges the shape of your data and will make it hard to work with x-plat.\nBasically, this isn't a feature that exists in the underlying protocol, but\nprotobuf-net fakes it.\n\nOn 4 Feb 2018 11:33 am, \"Roberto Prevato\" <notifications@github.com> wrote:\n\n> Hi,\n> Is there an option to maintain object references during serialization?\n>\n> Like in the following example: I would like the reference\n> charlie.BestFriend to be maintained to charlie.Friends[0] even in the\n> clone obtained using serialization:\n>\n> using ProtoBuf;using System.Collections.Generic;using System.IO;\n> namespace ProtoBufferStudy\n> {\n>     [ProtoContract]\n>     public class Person\n>     {\n>         [ProtoMember(1)]\n>         public string Name { get; set; }\n>\n>         [ProtoMember(4)]\n>         public List<Person> Friends { get; set; }\n>\n>         [ProtoMember(3)]\n>         public Person BestFriend { get; set; }\n>     }\n>\n>     public class Program\n>     {\n>         static void Main(string[] args)\n>         {\n>             var charlie = new Person\n>             {\n>                 Name = \"Charlie\",\n>                 Friends = new List<Person> {\n>                     new Person { Name = \"Linus\" },\n>                     new Person { Name = \"Patty\" },\n>                     new Person { Name = \"Lucy\" }\n>                 }\n>             };\n>\n>             charlie.BestFriend = charlie.Friends[0];\n>\n>             Person clone;\n>             using (var s = new MemoryStream())\n>             {\n>                 Serializer.Serialize(s, charlie);\n>                 s.Seek(0, SeekOrigin.Begin);\n>                 clone = Serializer.Deserialize<Person>(s);\n>             }\n>\n>             var referenceEqual = ReferenceEquals(clone.BestFriend, clone.Friends[0]);\n>             // referenceEqual is false, the reference is lost during serialization\n>         }\n>     }\n> }\n>\n> The same situation applies to Dictionary, and I noticed that circular\n> references are not supported. Regular .NET serialization supports this, and\n> I am wondering whether there is an option to use ProtoBuf.NET in a similar\n> fashion.\n>\n> PS. Thanks for the wonderful work you made with this library!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/349>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJBIRaogt9p5zdh6gIOrM9wzsgWzks5tRZWbgaJpZM4R4iUY>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/362912766",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/349#issuecomment-362912766",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/349",
        "id": 362912766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkxMjc2Ng==",
        "user": {
            "login": "RobertoPrevato",
            "id": 2576032,
            "node_id": "MDQ6VXNlcjI1NzYwMzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2576032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobertoPrevato",
            "html_url": "https://github.com/RobertoPrevato",
            "followers_url": "https://api.github.com/users/RobertoPrevato/followers",
            "following_url": "https://api.github.com/users/RobertoPrevato/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobertoPrevato/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobertoPrevato/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobertoPrevato/subscriptions",
            "organizations_url": "https://api.github.com/users/RobertoPrevato/orgs",
            "repos_url": "https://api.github.com/users/RobertoPrevato/repos",
            "events_url": "https://api.github.com/users/RobertoPrevato/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobertoPrevato/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-04T15:00:45Z",
        "updated_at": "2018-02-04T15:01:17Z",
        "author_association": "NONE",
        "body": "Thank you, for responding so quickly and dedicate time!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/363384413",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/350#issuecomment-363384413",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/350",
        "id": 363384413,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzM4NDQxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-06T10:47:33Z",
        "updated_at": "2018-02-06T10:47:33Z",
        "author_association": "OWNER",
        "body": "> but there are JIT exceptions on iOS!\r\n\r\nCan you be more specific?\r\n\r\nAlso: what is the starting point for your model? is it currently code-first? (i.e. annotated types) or contract-first (a .proto schema)?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/363691700",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/351#issuecomment-363691700",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/351",
        "id": 363691700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY5MTcwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-07T08:20:47Z",
        "updated_at": "2018-02-07T08:20:47Z",
        "author_association": "OWNER",
        "body": "The precompile tool is a huge hack based on ILVM-emit. Partly because IKVM\nhas been discontinued, and partly because of additional framework /\nlanguage reasons - I am pretty convinced that it is simply not a viable\napproach moving forward.\n\nI do not have a netstandard 2 version of that tool currently, nor is it on\nmy immediate roadmap to try to hack it into working. In the 3.* timescale,\nthe plan is to replace it instead with compile-time code emit (not IL\nemit). One part of the prep-work for this was finishing the .proto code\nemit - which was completely rewritten for 2.3.0 to use fully managed code.\n\nSo; right now, the plan is: create entire new tooling for this requirement\nin 3.0; presumably using some combination of the schema emit code and\nRoslyn analysis. This does not exist today, and is dependent on my\navailability to implement.\n\nIt would be useful to understand whether your starting point is c# or\n.proto schemas,for prioritisation purposes.\n\nOn 7 Feb 2018 3:31 am, \"bruce lee\" <notifications@github.com> wrote:\n\n> ......\\Precompile\\precompile.exe DataProtoBuf.dll\n> -o:..\\DataProtobufSerializer.dll -t:DataProtobufSerializer\n> protobuf-net pre-compiler\n> Detected framework: .NETCoreApp\\v2.0\n> Framework not found: .NETCoreApp\\v2.0\n> Available frameworks are:\n> .NETPortable\\v4.6\n> .NETPortable\\v4.6\\Profile\\Profile84\n> .NETPortable\\v4.6\\Profile\\Profile44\n> .NETPortable\\v4.6\\Profile\\Profile32\n> .NETPortable\\v4.6\\Profile\\Profile31\n> .NETPortable\\v4.6\\Profile\\Profile157\n> .NETPortable\\v4.6\\Profile\\Profile151\n> .NETPortable\\v4.5\n> .NETPortable\\v4.5\\Profile\\Profile78\n> .NETPortable\\v4.5\\Profile\\Profile75\n> .NETPortable\\v4.5\\Profile\\Profile7\n> .NETPortable\\v4.5\\Profile\\Profile49\n> .NETPortable\\v4.5\\Profile\\Profile259\n> .NETPortable\\v4.5\\Profile\\Profile111\n> .NETPortable\\v4.0\n> .NETPortable\\v4.0\\Profile\\Profile96\n> .NETPortable\\v4.0\\Profile\\Profile95\n> .NETPortable\\v4.0\\Profile\\Profile92\n> .NETPortable\\v4.0\\Profile\\Profile88\n> .NETPortable\\v4.0\\Profile\\Profile6\n> .NETPortable\\v4.0\\Profile\\Profile5\n> .NETPortable\\v4.0\\Profile\\Profile47\n> .NETPortable\\v4.0\\Profile\\Profile46\n> .NETPortable\\v4.0\\Profile\\Profile42\n> .NETPortable\\v4.0\\Profile\\Profile41\n> .NETPortable\\v4.0\\Profile\\Profile4\n> .NETPortable\\v4.0\\Profile\\Profile37\n> .NETPortable\\v4.0\\Profile\\Profile36\n> .NETPortable\\v4.0\\Profile\\Profile344\n> .NETPortable\\v4.0\\Profile\\Profile336\n> .NETPortable\\v4.0\\Profile\\Profile328\n> .NETPortable\\v4.0\\Profile\\Profile3\n> .NETPortable\\v4.0\\Profile\\Profile255\n> .NETPortable\\v4.0\\Profile\\Profile240\n> .NETPortable\\v4.0\\Profile\\Profile24\n> .NETPortable\\v4.0\\Profile\\Profile23\n> .NETPortable\\v4.0\\Profile\\Profile225\n> .NETPortable\\v4.0\\Profile\\Profile2\n> .NETPortable\\v4.0\\Profile\\Profile19\n> .NETPortable\\v4.0\\Profile\\Profile18\n> .NETPortable\\v4.0\\Profile\\Profile158\n> .NETPortable\\v4.0\\Profile\\Profile154\n> .NETPortable\\v4.0\\Profile\\Profile147\n> .NETPortable\\v4.0\\Profile\\Profile143\n> .NETPortable\\v4.0\\Profile\\Profile14\n> .NETPortable\\v4.0\\Profile\\Profile136\n> .NETPortable\\v4.0\\Profile\\Profile131\n> .NETPortable\\v4.0\\Profile\\Profile104\n> .NETPortable\\v4.0\\Profile\\Profile102\n> .NETPortable\\v4.0\\Profile\\Profile1\n> .NETFramework\\v4.6.1\n> .NETFramework\\v4.6\n> .NETFramework\\v4.5.2\n> .NETFramework\\v4.5.1\n> .NETFramework\\v4.5\n> .NETFramework\\v4.0\n> .NETFramework\\v4.0\\Profile\\Client\n> .NETFramework\\v3.5\\Profile\\Unity Web v3.5\n> .NETFramework\\v3.5\\Profile\\Unity Subset v3.5\n> .NETFramework\\v3.5\\Profile\\Unity Micro v3.5\n> .NETFramework\\v3.5\\Profile\\Unity Full v3.5\n> .NETFramework\\v3.5\\Profile\\Client\n> .NETCore\\v4.5\n>\n> i want to know , how to get a new precompile which support .netStandard2.0\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/351>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJSUGIfXaT84VIJLBFPj2nlGJg-Nks5tSRkggaJpZM4R8Fxy>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/363725672",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/352#issuecomment-363725672",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/352",
        "id": 363725672,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzcyNTY3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-07T10:30:13Z",
        "updated_at": "2018-02-07T10:30:45Z",
        "author_association": "OWNER",
        "body": "Is this the old protogen (available from r668), or the new protogen completely rewritten for 2.3.0? What exact version of prototobuf-net/protogen are you using? (you didn't say in the question; note: this is not the same as the libprotoc version - that is the Google generator, which isn't used - at least, not from 2.3.0 onwards).\r\n\r\nIs the protogen here built from source? or is it downloaded from the online generator? Note that the 2.3.0 version currently targets net40 and netcoreapp1.1 - so: which of those builds is it that you're using? \r\n\r\nMy problem here is that I don't own a Mac, so it is very hard for me to test this scenario. In theory it should be fine - the code in 2.3.0 is now 100% managed.\r\n\r\nIf you just want to get code output, you are welcome to use https://protogen.marcgravell.com/ while we investigate what is going on here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/363728233",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/352#issuecomment-363728233",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/352",
        "id": 363728233,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzcyODIzMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-07T10:38:38Z",
        "updated_at": "2018-02-07T10:38:38Z",
        "author_association": "OWNER",
        "body": "Ah, looking more at the output, I can see that it seems to be invoking `protoc`, so I can presume that this is the old r668 protogen. If I'm right about that: then please try using the new tooling; it is available as a download on the site I posted above, if you need a command-line version (the zip contains both the net40 and netcoreapp1.1 builds)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/363779417",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/352#issuecomment-363779417",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/352",
        "id": 363779417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc3OTQxNw==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-07T14:08:12Z",
        "updated_at": "2018-02-07T14:08:12Z",
        "author_association": "NONE",
        "body": "en, thanks very much, successfully using new tools."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/364016634",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/351#issuecomment-364016634",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/351",
        "id": 364016634,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDAxNjYzNA==",
        "user": {
            "login": "rainbowlee",
            "id": 7885929,
            "node_id": "MDQ6VXNlcjc4ODU5Mjk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7885929?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainbowlee",
            "html_url": "https://github.com/rainbowlee",
            "followers_url": "https://api.github.com/users/rainbowlee/followers",
            "following_url": "https://api.github.com/users/rainbowlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainbowlee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainbowlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainbowlee/subscriptions",
            "organizations_url": "https://api.github.com/users/rainbowlee/orgs",
            "repos_url": "https://api.github.com/users/rainbowlee/repos",
            "events_url": "https://api.github.com/users/rainbowlee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainbowlee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-08T06:36:34Z",
        "updated_at": "2018-02-08T06:36:34Z",
        "author_association": "NONE",
        "body": "thanks for the answer.\r\n\r\nsame old code in my project used the *Serializer.dlls.\r\n\r\ni tries to replace the code by use the protobuff.Serializer's method\r\n\"public static object Deserialize(Type type, Stream source);\". \r\n\r\nnow , i can compile the project.  i will test it in a few days"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/364675351",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-364675351",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 364675351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY3NTM1MQ==",
        "user": {
            "login": "sergey-litvinov",
            "id": 890564,
            "node_id": "MDQ6VXNlcjg5MDU2NA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/890564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sergey-litvinov",
            "html_url": "https://github.com/sergey-litvinov",
            "followers_url": "https://api.github.com/users/sergey-litvinov/followers",
            "following_url": "https://api.github.com/users/sergey-litvinov/following{/other_user}",
            "gists_url": "https://api.github.com/users/sergey-litvinov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sergey-litvinov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sergey-litvinov/subscriptions",
            "organizations_url": "https://api.github.com/users/sergey-litvinov/orgs",
            "repos_url": "https://api.github.com/users/sergey-litvinov/repos",
            "events_url": "https://api.github.com/users/sergey-litvinov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sergey-litvinov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-10T17:46:10Z",
        "updated_at": "2018-02-10T17:46:10Z",
        "author_association": "NONE",
        "body": "I would also interested in that change as LOH usage is pretty high in our case"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/366334902",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/355#issuecomment-366334902",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/355",
        "id": 366334902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjMzNDkwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-16T19:27:54Z",
        "updated_at": "2018-02-16T19:27:54Z",
        "author_association": "OWNER",
        "body": "What would be the type system behind that? Meaning: how would the caller\ninteract with that?\n\nAre you looking for a codegen tool? Or are you looking for runtime\nsupported types not known ahead of time?\n\nIf the first: please see https://protogen.marcgravell.com which also\nincludes the command-line tool as a download. The core of this tool is also\navailable as a library download on NuGet (protobuf-net.Reflection) and can\nbe consumed from managed code.\n\nIf the second: that doesn't exist today, and would require coding.\n\nOn 16 Feb 2018 1:16 pm, \"Steve Hipwell\" <notifications@github.com> wrote:\n\n> We can generate a *proto* file from RuntimeTypeModel.GetSchema() and it\n> would be really useful to have a method that allowed a *proto* file to\n> generate the RunTimeTypeModel.\n>\n> My suggestion would be something like:\n>\n> var myModel = RuntimeTypeModel.CreateFromSchema(@\"C:\\tmp\\MyType.proto\");myModel.AddFromSchema(@\"C:\\tmp\\MySecondType.proto\");\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/355>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsL_tYugOFHkf3-YoxX9L7CFuqT0oks5tVX_AgaJpZM4SIUT_>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/366617770",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/355#issuecomment-366617770",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/355",
        "id": 366617770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjYxNzc3MA==",
        "user": {
            "login": "stevehipwell",
            "id": 6552347,
            "node_id": "MDQ6VXNlcjY1NTIzNDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/6552347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevehipwell",
            "html_url": "https://github.com/stevehipwell",
            "followers_url": "https://api.github.com/users/stevehipwell/followers",
            "following_url": "https://api.github.com/users/stevehipwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevehipwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevehipwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevehipwell/subscriptions",
            "organizations_url": "https://api.github.com/users/stevehipwell/orgs",
            "repos_url": "https://api.github.com/users/stevehipwell/repos",
            "events_url": "https://api.github.com/users/stevehipwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevehipwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-19T08:24:40Z",
        "updated_at": "2018-02-19T08:24:40Z",
        "author_association": "NONE",
        "body": "I was thinking of runtime support for types not known ahead of time. In a system where the data model is not controlled by the caller, for example in a plugin, a proto file could define the contract rather than  having to build up the *RuntimeTypeModel* in code."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367594694",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/356#issuecomment-367594694",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/356",
        "id": 367594694,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzU5NDY5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-22T07:48:26Z",
        "updated_at": "2018-02-22T07:48:26Z",
        "author_association": "OWNER",
        "body": "Thanks. Seems fine."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367736482",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367736482",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 367736482,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzczNjQ4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-22T16:26:02Z",
        "updated_at": "2018-02-22T16:26:02Z",
        "author_association": "OWNER",
        "body": "Can you be specific about what framework you are using? On most runtimes,\nthe IL-emit should mean that there is never any object code without reason\n\nOn 22 Feb 2018 1:37 pm, \"williamkmlau\" <notifications@github.com> wrote:\n\n> Hi mgravell,\n>\n> I'm having issues with garbage allocations using protobuf-net.\n> The value type serializers have an Read(object) which causes boxing on all\n> value types.\n> Which is causing 17B of allocation for every single integer or float.\n> Is there any solution or work around for this?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/358>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsM9TEv2OnrE9P3ysEZevECAh6Ddyks5tXW1_gaJpZM4SPUrz>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367817514",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/359#issuecomment-367817514",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/359",
        "id": 367817514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgxNzUxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-22T20:50:25Z",
        "updated_at": "2018-02-22T20:50:25Z",
        "author_association": "OWNER",
        "body": "K; as a test: if you start from the main code (not your changes): in the\nprotobuf-net.csproj, locate the target frameworks element and remove net20\nand net35. I strongly suspect that will allow it to build.\n\nOn 22 Feb 2018 7:19 pm, \"tzachshabtay\" <notifications@github.com> wrote:\n\nHi, I'm trying to compile protobuf-net (pulled version today from master)\non Ubuntu 16.04 LTS 64bit, using MonoDevelop 7.3.3 (build 5).\n\nI'm getting a bunch of errors like:\n\nPackage System.Reflection.Emit 4.3.0 is not compatible with net20\n(.NETFramework,Version=v2.0). Package System.Reflection.Emit 4.3.0\nsupports:\n  - monoandroid10 (MonoAndroid,Version=v1.0)\n  - monotouch10 (MonoTouch,Version=v1.0)\n  - net45 (.NETFramework,Version=v4.5)\n  - netcore50 (.NETCore,Version=v5.0)\n  - netstandard1.1 (.NETStandard,Version=v1.1)\n  - netstandard1.3 (.NETStandard,Version=v1.3)\n  - xamarinios10 (Xamarin.iOS,Version=v1.0)\n  - xamarinmac20 (Xamarin.Mac,Version=v2.0)\n  - xamarintvos10 (Xamarin.TVOS,Version=v1.0)\n  - xamarinwatchos10 (Xamarin.WatchOS,Version=v1.0)\n\nIf I target protobuf-net (and protobuf-net.text) to dotnet 4.6 those errors\ngo away, and then I'm left with this single error on restore:\n\nProject protobuf-net is not compatible with netcoreapp1.1\n(.NETCoreApp,Version=v1.1). Project protobuf-net supports: net46\n(.NETFramework,Version=v4.6)\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/359>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsBQ8NNh8npJIBcaw5lOZ9Foyb_L5ks5tXb2ygaJpZM4SP10c>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367821354",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/357#issuecomment-367821354",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/357",
        "id": 367821354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgyMTM1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-22T21:03:42Z",
        "updated_at": "2018-02-22T21:03:42Z",
        "author_association": "OWNER",
        "body": "Sure, that would work. However, there's also a \"prepare\" method in\nSerializer that should do all the emit work for you. But actually running a\nclone also does the JIT work, so is more thorough.\n\nOn 22 Feb 2018 10:17 am, \"Fabien Molinet\" <notifications@github.com> wrote:\n\n> Hi Marc,\n>\n> I have a very simple question: protobuf emits some IL to\n> deserialize/serialize types.\n> So the first hit is then slower than the following ones.\n>\n> We would like to \"warm-up\" protobuf so there's nothing to emit later on.\n> For that purpose I think we can simply DeepClone our objects, isn't it?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/357>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEXyana-xteHwVtIk1B7V5miT89Vks5tXT7AgaJpZM4SPDiG>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367833956",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/359#issuecomment-367833956",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/359",
        "id": 367833956,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgzMzk1Ng==",
        "user": {
            "login": "tzachshabtay",
            "id": 1819001,
            "node_id": "MDQ6VXNlcjE4MTkwMDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1819001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tzachshabtay",
            "html_url": "https://github.com/tzachshabtay",
            "followers_url": "https://api.github.com/users/tzachshabtay/followers",
            "following_url": "https://api.github.com/users/tzachshabtay/following{/other_user}",
            "gists_url": "https://api.github.com/users/tzachshabtay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tzachshabtay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tzachshabtay/subscriptions",
            "organizations_url": "https://api.github.com/users/tzachshabtay/orgs",
            "repos_url": "https://api.github.com/users/tzachshabtay/repos",
            "events_url": "https://api.github.com/users/tzachshabtay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tzachshabtay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-22T21:49:19Z",
        "updated_at": "2018-02-22T21:49:19Z",
        "author_association": "NONE",
        "body": "I removed net20 and net35, got the same errors, only with \"not compatible with net40\".\r\nThen I removed net40 and got the same errors for netstandard 1.0, then I removed netstandard 1.0 and only then it compiled.\r\n\r\nAt that point protobuf-net.Test.csproj still returned the same errors only with \"net452\". I changed it from \"net452\" to \"net46\" (and also had to remove \"net40\" from protobuf-net.Reflection.csproj), at that point I got new compiler errors, a lot of errors in this form:\r\n\r\n```\r\ngit/protobuf-net/src/protobuf-net.Test/Serializers/NilSerializer.cs(34,34): Error CS0122: 'IProtoSerializer' is inaccessible due to its protection level (CS0122) (protobuf-net.Test)\r\n```\r\n\r\nI'm guessing there's some kind of magic to make protobuf-net.Test.csproj a friend assembly of protobuf-net which doesn't work on MonoDevelop?\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367884187",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367884187",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 367884187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg4NDE4Nw==",
        "user": {
            "login": "williamkmlau",
            "id": 34730446,
            "node_id": "MDQ6VXNlcjM0NzMwNDQ2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/34730446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/williamkmlau",
            "html_url": "https://github.com/williamkmlau",
            "followers_url": "https://api.github.com/users/williamkmlau/followers",
            "following_url": "https://api.github.com/users/williamkmlau/following{/other_user}",
            "gists_url": "https://api.github.com/users/williamkmlau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/williamkmlau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/williamkmlau/subscriptions",
            "organizations_url": "https://api.github.com/users/williamkmlau/orgs",
            "repos_url": "https://api.github.com/users/williamkmlau/repos",
            "events_url": "https://api.github.com/users/williamkmlau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/williamkmlau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T01:49:08Z",
        "updated_at": "2018-02-23T01:49:08Z",
        "author_association": "NONE",
        "body": "Sorry should have provided more details, I am using protobuf-net in Unity game engine.\r\nWhich I don't think allows System.Reflection.Emit."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367890795",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367890795",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 367890795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg5MDc5NQ==",
        "user": {
            "login": "williamkmlau",
            "id": 34730446,
            "node_id": "MDQ6VXNlcjM0NzMwNDQ2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/34730446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/williamkmlau",
            "html_url": "https://github.com/williamkmlau",
            "followers_url": "https://api.github.com/users/williamkmlau/followers",
            "following_url": "https://api.github.com/users/williamkmlau/following{/other_user}",
            "gists_url": "https://api.github.com/users/williamkmlau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/williamkmlau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/williamkmlau/subscriptions",
            "organizations_url": "https://api.github.com/users/williamkmlau/orgs",
            "repos_url": "https://api.github.com/users/williamkmlau/repos",
            "events_url": "https://api.github.com/users/williamkmlau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/williamkmlau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T02:28:59Z",
        "updated_at": "2018-02-23T02:28:59Z",
        "author_association": "NONE",
        "body": "Would precompiling the (de)serializers solve this problem?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367935742",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367935742",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 367935742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzkzNTc0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T07:53:10Z",
        "updated_at": "2018-02-23T07:53:10Z",
        "author_association": "OWNER",
        "body": "Indeed, unity is more restrictive. There is a precompile tool in some of\nthe older builds, but it is not very friendly, is not up to date with 2.3+,\nand is not very supportable - plus the tool it depends on has been\ndiscontinued (IKVM). The plan is to replace all of that tooling with\nbuild-time c# emit, via a combination of Roslyn code analysis and .proto\nschema processing. A large part of the latter was done for 2.3, but I\nhaven't completed the other work yet - ultimately, it is a hobby project\nthat I need to find time for in my own spare time. As such, I don't have a\nhard ETA, although I'd like to ship it the first half of 2018.\n\nOn 23 Feb 2018 2:29 am, \"williamkmlau\" <notifications@github.com> wrote:\n\n> Would precompiling the (de)serializers solve this problem?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367890795>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsN18n7ZTf29FqAHt2N3vnstbixQ3ks5tXiJrgaJpZM4SPUrz>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367936239",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/359#issuecomment-367936239",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/359",
        "id": 367936239,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzkzNjIzOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T07:55:45Z",
        "updated_at": "2018-02-23T07:55:45Z",
        "author_association": "OWNER",
        "body": "OK; I'll have to see about spinning up a VM to play with this on.\n\nOn 22 Feb 2018 9:49 pm, \"tzachshabtay\" <notifications@github.com> wrote:\n\n> I removed net20 and net35, got the same errors, only with \"not compatible\n> with net40\".\n> Then I removed net40 and got the same errors for netstandard 1.0, then I\n> removed netstandard 1.0 and only then it compiled.\n>\n> At that point protobuf-net.Test.csproj still returned the same errors only\n> with \"net452\". I changed it from \"net452\" to \"net46\" (and also had to\n> remove \"net40\" from protobuf-net.Reflection.csproj), at that point I got\n> new compiler errors, a lot of errors in this form:\n>\n> git/protobuf-net/src/protobuf-net.Test/Serializers/NilSerializer.cs(34,34): Error CS0122: 'IProtoSerializer' is inaccessible due to its protection level (CS0122) (protobuf-net.Test)\n>\n> I'm guessing there's some kind of magic to make protobuf-net.Test.csproj a\n> friend assembly of protobuf-net which doesn't work on MonoDevelop?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/359#issuecomment-367833956>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEV02go9bCP5oED3j1X8jvYlZqvBks5tXeDfgaJpZM4SP10c>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367941332",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367941332",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 367941332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk0MTMzMg==",
        "user": {
            "login": "williamkmlau",
            "id": 34730446,
            "node_id": "MDQ6VXNlcjM0NzMwNDQ2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/34730446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/williamkmlau",
            "html_url": "https://github.com/williamkmlau",
            "followers_url": "https://api.github.com/users/williamkmlau/followers",
            "following_url": "https://api.github.com/users/williamkmlau/following{/other_user}",
            "gists_url": "https://api.github.com/users/williamkmlau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/williamkmlau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/williamkmlau/subscriptions",
            "organizations_url": "https://api.github.com/users/williamkmlau/orgs",
            "repos_url": "https://api.github.com/users/williamkmlau/repos",
            "events_url": "https://api.github.com/users/williamkmlau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/williamkmlau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T08:21:52Z",
        "updated_at": "2018-02-23T08:21:52Z",
        "author_association": "NONE",
        "body": "Does the Compile() function in the RuntimeTypeModel still work though? I could just build my own program to call the Compile function after adding the correct serializing types to the model."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/367972322",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/357#issuecomment-367972322",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/357",
        "id": 367972322,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk3MjMyMg==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T10:33:22Z",
        "updated_at": "2018-02-23T10:33:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks a lot Marc. I'll continue that way then"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368086657",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/358#issuecomment-368086657",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/358",
        "id": 368086657,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA4NjY1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T17:51:10Z",
        "updated_at": "2018-02-23T17:51:10Z",
        "author_association": "OWNER",
        "body": "In all seriousness: I don't know, because I'm not a Unity user. Different\nframeworks support different features, but if reflection emit isn't\navailable there, there may not be much the code can do to optimize until I\nget the Roslyn analysis code done.\n\nOn 23 Feb 2018 8:21 am, \"williamkmlau\" <notifications@github.com> wrote:\n\n> Does the Compile() function in the RuntimeTypeModel still work though? I\n> could just build my own program to call the Compile function after adding\n> the correct serializing types to the model.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/358#issuecomment-367941332>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsI79_dnhw0Jt7aWFo2F9KXArSfTCks5tXnUggaJpZM4SPUrz>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368119379",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368119379",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368119379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODExOTM3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-23T19:47:28Z",
        "updated_at": "2018-02-23T19:47:28Z",
        "author_association": "OWNER",
        "body": "This isn't a scenario I've looked at, and my advice would usually be:\ncreate a DTO type with the serializer types and serialize that.\n\nHowever, all of the \"well known types\" that you've mentioned are\nimplemented as messages (not as primitives), so I suspect that they would\nwork fine with protobuf-net's surrogate concept. Are you seeing a specific\nissue when using that API?\n\n\nOn 23 Feb 2018 8:26 am, \"AndreaCuneo\" <notifications@github.com> wrote:\n\nI'm looking into using protobuf.NET between C# channels binding to Nodatime\ntypes.\nAre you aware of any support for Nodatime types?\n\nFor complex types like ZonedDateTime or OffsetDateTime, I should be able to\nuse create Surrogates just fine.\n\nFor \"basic\" types, I'd like to \"map\" directly to Proto V3 types but I\ndidn't find how to do so. Can you please advise if possible what is the\nbest way?\n\nFor example, if I've an external schema with a Timestamp value, I'd like to\nbe able to deserialize it in an object with a property of type Instant.\n\nWellKnownTypes map:\nInstant => Timestamp\nLocalDateTime => Timestamp\nDuration => Duration\nLocalTime => TimeOfDay\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/360>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsJclIQTx7-jl00XIrJBcH9HatotAks5tXnY3gaJpZM4SQiJk>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368236105",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/361#issuecomment-368236105",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/361",
        "id": 368236105,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIzNjEwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-24T15:30:22Z",
        "updated_at": "2018-02-24T15:30:22Z",
        "author_association": "OWNER",
        "body": "Additional thought: I wonder if this previously worked if the \"allow\nparable types\" option was enabled, and if so: does this change break that?\n\nOn 24 Feb 2018 1:56 pm, \"Yaroslav V Tatarenko\" <notifications@github.com>\nwrote:\n\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/mgravell/protobuf-net/pull/361\n> Commit Summary\n>\n>    - Add DateTimeOffset serializer\n>\n> File Changes\n>\n>    - *M* src/protobuf-net/BclHelpers.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-0> (69)\n>    - *M* src/protobuf-net/DiscriminatedUnion.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-1> (10)\n>    - *M* src/protobuf-net/Helpers.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-2> (13)\n>    - *M* src/protobuf-net/Meta/TypeModel.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-3> (2)\n>    - *M* src/protobuf-net/Meta/ValueMember.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-4> (4)\n>    - *A* src/protobuf-net/Serializers/DateTimeOffsetSerializer.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-5> (52)\n>    - *M* src/protobuf-net/Serializers/DefaultValueDecorator.cs\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-6> (7)\n>    - *M* src/protobuf-net/protobuf-net.csproj\n>    <https://github.com/mgravell/protobuf-net/pull/361/files#diff-7> (3)\n>\n> Patch Links:\n>\n>    - https://github.com/mgravell/protobuf-net/pull/361.patch\n>    - https://github.com/mgravell/protobuf-net/pull/361.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/361>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBxlHQbyjIEetaTgQZFoPCNDDQ6Nks5tYBUbgaJpZM4SR5nk>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368485493",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368485493",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368485493,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODQ4NTQ5Mw==",
        "user": {
            "login": "AndreaCuneo",
            "id": 5227688,
            "node_id": "MDQ6VXNlcjUyMjc2ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5227688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AndreaCuneo",
            "html_url": "https://github.com/AndreaCuneo",
            "followers_url": "https://api.github.com/users/AndreaCuneo/followers",
            "following_url": "https://api.github.com/users/AndreaCuneo/following{/other_user}",
            "gists_url": "https://api.github.com/users/AndreaCuneo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AndreaCuneo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AndreaCuneo/subscriptions",
            "organizations_url": "https://api.github.com/users/AndreaCuneo/orgs",
            "repos_url": "https://api.github.com/users/AndreaCuneo/repos",
            "events_url": "https://api.github.com/users/AndreaCuneo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AndreaCuneo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-26T12:31:48Z",
        "updated_at": "2018-02-26T12:31:48Z",
        "author_association": "NONE",
        "body": "I've not yet found any problem. I'm in the investigation phase and I was looking into your library to see if it supports my scenario heavily dependent of Nodatime.\r\n\r\nIf I get you correctly, I should define a Surrogate for an Nodatime.Instant and map to a Timestamp, creating a Timestamp surrogate contract like the one [here](https://github.com/mgravell/protobuf-net/blob/master/src/protobuf-net.Test/Schemas/WellKnownTypes.cs).\r\n\r\nAssuming I've a Dto class like\r\n```\r\n    [ProtoContract(Name=\"Timeserie\")]\r\n    public class Timeserie\r\n    {\r\n        [ProtoMember(1, Name = @\"t\")]\r\n        public Instant T {get;set;}\r\n        [ProtoMember(1, Name = @\"v\")]\r\n        public double V {get;set;}\r\n    }\r\n```\r\n\r\nSo, something like this. And it would match a proto with a nested Timestamp message.\r\n\r\n```\r\n        [ProtoContract(Name=\"Timestamp\")]\r\n        public class InstantSurrogate\r\n        {\r\n          public InstantSurrogate(Instant dto)\r\n          {\r\n            //omit\r\n          }\r\n\r\n          [ProtoMember(1, Name = @\"seconds\")]\r\n          public long Seconds { get; set; }\r\n\r\n          [ProtoMember(2, Name = @\"nanos\")]\r\n          public int Nanos { get; set; }\r\n\r\n          [...]\r\n        }\r\n```\r\n\r\nBut I'm quite sure I cannot achieve that the Serializer.GetProto<Timeserie> call to return something like this, or am I wrong?\r\n```\r\npackage MyPackage;\r\nimport \"google/protobuf/timestamp.proto\";\r\n\r\nmessage Timeserie {\r\n   .google.protobuf.Timestamp t = 1;\r\n   .double v = 2\r\n}\r\n```\r\n\r\nI'm quite sure I can do that adding a Surrogate for Timeserie but that would be troublesome. If I understand correctly the library, what I'm trying to do would be possible adding some IProtoSerializer but I do not find any extension point to do so. Also using surrogates requires a conversion and with hundreds of thousands of small elements that is going to add up a lot, while using a IProtoSerializer would solve this.\r\n\r\n```\r\n        [ProtoContract(Name=\"Timeserie\")]\r\n        public class TimeserieSurrogate\r\n        {\r\n          public TimeserieSurrogate(Timeserie dto)\r\n          {\r\n            //omit\r\n          }\r\n\r\n          [ProtoMember(1, Name = @\"t\", DataFormat = DataFormat.WellKnown)]\r\n          public Datetime T { get; set; }\r\n\r\n          [ProtoMember(2, Name = @\"v\")]\r\n          public double V { get; set; }\r\n\r\n          [...]\r\n        }\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368515940",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368515940",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368515940,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODUxNTk0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-26T14:13:20Z",
        "updated_at": "2018-02-26T14:13:20Z",
        "author_association": "OWNER",
        "body": "> But I'm quite sure I cannot achieve that the Serializer.GetProto call to return something like this, or am I wrong?\r\n\r\nYou're right there. There isn't currently a feature to support that - especially the extra `import`; that simply doesn't exist right now. The code *does* know about `.google.protobuf.Timestamp`, but only for a `DateTime` that specifies `DataFormat.WellKnown`.\r\n\r\n>  understand correctly the library, what I'm trying to do would be possible adding some IProtoSerializer \r\n\r\nThat also doesn't exist right now, although that is the main deliverable for 3.0 - since we need that API to underpin optional build-time code-gen (for AOT plaforms)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368520706",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368520706",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368520706,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODUyMDcwNg==",
        "user": {
            "login": "AndreaCuneo",
            "id": 5227688,
            "node_id": "MDQ6VXNlcjUyMjc2ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5227688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AndreaCuneo",
            "html_url": "https://github.com/AndreaCuneo",
            "followers_url": "https://api.github.com/users/AndreaCuneo/followers",
            "following_url": "https://api.github.com/users/AndreaCuneo/following{/other_user}",
            "gists_url": "https://api.github.com/users/AndreaCuneo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AndreaCuneo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AndreaCuneo/subscriptions",
            "organizations_url": "https://api.github.com/users/AndreaCuneo/orgs",
            "repos_url": "https://api.github.com/users/AndreaCuneo/repos",
            "events_url": "https://api.github.com/users/AndreaCuneo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AndreaCuneo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-26T14:29:34Z",
        "updated_at": "2018-02-26T14:29:57Z",
        "author_association": "NONE",
        "body": "Thanks for the insights.\r\n\r\nI know is a difficult question, but do you happen to have any timeline (or wild guess) for v3.0? :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368537215",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368537215",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368537215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODUzNzIxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-26T15:19:38Z",
        "updated_at": "2018-02-26T15:19:38Z",
        "author_association": "OWNER",
        "body": "\"on my list\" is the best I have right now; to put it into context, I have a *lot* of different plates to spin, and almost all of them come out of my own free time - not my \"work\" time. *Right now*, I think the most important thing I can focus on is the \"Pipelines\" work (new IO API for .NET), since this is important to *virtually all* of my libraries (including protobuf-net), and it is at a critical stage with Microsoft; hence: that is getting a lot of my available time at the moment. I *really do* want to get the 3.0 stuff in pretty soon, though - it has a huge potential especially on AOT etc.\r\n\r\nI have *considered* doing just the `IProtoSerializer` API for an earlier 2.5 release *without* any of the actual codegen pieces for AOT; however, I'm slightly cautious that if I'm not careful, I might end up missing some required parts of that API. I *think* I know what is needed - I'm not ruling it out if it is useful."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/368834292",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/360#issuecomment-368834292",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/360",
        "id": 368834292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODgzNDI5Mg==",
        "user": {
            "login": "AndreaCuneo",
            "id": 5227688,
            "node_id": "MDQ6VXNlcjUyMjc2ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5227688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AndreaCuneo",
            "html_url": "https://github.com/AndreaCuneo",
            "followers_url": "https://api.github.com/users/AndreaCuneo/followers",
            "following_url": "https://api.github.com/users/AndreaCuneo/following{/other_user}",
            "gists_url": "https://api.github.com/users/AndreaCuneo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AndreaCuneo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AndreaCuneo/subscriptions",
            "organizations_url": "https://api.github.com/users/AndreaCuneo/orgs",
            "repos_url": "https://api.github.com/users/AndreaCuneo/repos",
            "events_url": "https://api.github.com/users/AndreaCuneo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AndreaCuneo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-02-27T11:02:11Z",
        "updated_at": "2018-02-27T11:02:11Z",
        "author_association": "NONE",
        "body": "Ok.  Thanks for all the time taken answering me. \r\n\r\nIf I can be of any help with 2.5, I can try help if you guide me through needed changes.\r\nBut my AOT platforms knowledge and experience is nil, unfortunately."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/369427165",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/362#issuecomment-369427165",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/362",
        "id": 369427165,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQyNzE2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-01T00:04:02Z",
        "updated_at": "2018-03-01T00:04:02Z",
        "author_association": "OWNER",
        "body": "To be honest it is very hard to talk about specific performance scenarios\nwithout a very concrete example. There are possibly a few tweaks and custom\noptions that might help on some cases, but it depends a lot on the shape of\nthe data and the complexity of the type model. I'd be happy to lend an eye,\nbut it is not easy to do so without code.\n\n\n\n\nOn 28 Feb 2018 8:14 pm, \"Fabien Molinet\" <notifications@github.com> wrote:\n\nHi Marc,\n\nWe have a WPF app which needs to start as fast as possible.\nWhen the app starts it deserializes a rather big file 3,5M which contains\naround 40k objects. There is no nesting, it's flat. Using protobuf the\ndeserialization takes 600ms.\n\nDo you have any tips to share to make this faster? Or in your opinion\nthat's already rather fast?\n(BTW I compared protobuf with ZeroFormatter and for our use case protobuf\nis definitely faster for deserializing while being easier to use \ud83d\udc4d)\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/362>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsDwc7xmlK0Ln41-nh11C-Z-xcggdks5tZbOhgaJpZM4SXRYd>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/369489562",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/362#issuecomment-369489562",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/362",
        "id": 369489562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQ4OTU2Mg==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-01T06:36:45Z",
        "updated_at": "2018-03-01T06:36:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "Unfortunately I cannot paste it here for legal reasons but I can give some detail about its shape:\r\n- the class has 35 properties having ProtoMember defined with the order, we haven't spent time to \"align things\", I have no clue if changing this order would help\r\n- each property setter does additional work (like comparing the value, raising NotifyPropertyChanged if that's the case, ...)\r\n- we have a lot of redundant information: lot of strings are really the same\r\n\r\nSome ideas I have to make deserialization faster, but I haven't tried yet:\r\n- use the precompiler but that seems to be broken #319 (I agree with you having Roslyn code generators would really be great)\r\n- put ProtoMember attributes on fields instead of the properties (this way we avoid the additional setters work)\r\n- Put AsReference=true for our string ProtoMembers, this way we can eventually avoid the Intern cost while deserializing? (since it's already done)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/369506554",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/362#issuecomment-369506554",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/362",
        "id": 369506554,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTUwNjU1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-01T07:54:16Z",
        "updated_at": "2018-03-01T07:54:16Z",
        "author_association": "OWNER",
        "body": "Yes, switching the attributes to the fields may help if your setters are\nrelatively expensive.\n\nThe engine already includes a contextual string interner when\ndeserializing, although this is more designed to save memory at the *cost*\nof CPU - you could try *disabling* this via\nRuntimeTypeModel.Default.InternStrings = false;\n\nI would advise *against* the AsReference thing, but it should work and is\nworth a try.\n\nIf many of the repeated strings are predictable to the point of being\nrepresentable as enums: prefer enums.\n\nIf you have negative integers, try to avoid the default encoding for that\nfield - \"zigzag\" or \"fixed\" is fine.\n\nIf you have DateTime/TimeSpan - try using the new \"well known\" encoding. In\naddition to being simpler this will be cross-platform friendly.\n\nThe order of fields doesn't matter, and alignment isn't a thing in protobuf.\n\nIf any of the properties are primitive arrays (int[] etc) you might get\nsome joy from enabling \"packed\" encoding.\n\nIf you can't share code here but would be able to share it off-list, my\nemail is very easily available (on my Stack Overflow profile for example).\n\n\nOn 1 Mar 2018 6:36 am, \"Fabien Molinet\" <notifications@github.com> wrote:\n\nUnfortunately I cannot paste it here for legal reasons but I can give some\ndetail about its shape:\n\n   - the class has 35 properties having ProtoMember defined with the order,\n   we haven't spent time to \"align things\", I have no clue if changing this\n   order would help\n   - each property setter does additional work (like comparing the value,\n   raising NotifyPropertyChanged if that's the case, ...)\n   - we have a lot of redundant information: lot of strings are really the\n   same\n\nSome ideas I was having to make deserialization faster, but I haven't tried\nyet:\n\n   - use the precompiler but that seems to be broken #319\n   <https://github.com/mgravell/protobuf-net/issues/319> (I agree with you\n   having Roslyn code generators would really be great)\n   - put ProtoMember attributes on fields instead of the properties (this\n   way we avoid the additional setters work)\n   - Put AsReference=true for our string ProtoMembers, this way we can\n   eventually avoid the Intern cost while deserializing? (since it's already\n   done)\n\n\u2014\nYou are receiving this because you commented.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/362#issuecomment-369489562>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsIPcYjONhvvAsowZSzHYyYJpGrzKks5tZ5b9gaJpZM4SXRYd>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/370178685",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-370178685",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 370178685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE3ODY4NQ==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-03T20:48:54Z",
        "updated_at": "2018-03-03T20:48:54Z",
        "author_association": "NONE",
        "body": "Hi All,\r\n\r\nThanks to this [**StackOverflow question**](https://stackoverflow.com/q/48358142). We have now eliminated LOH allocations via ProtoBuf. N.B; It looks like the `[ProtoContract(IsGroup = true)]` is ignored if your usage relies on inheritance, instead you need to instruct the `RuntimeTypeModel` to treat sub-types as `DataFormat.Group`. Personally we have done both to cover our bases. Some quick stats on the difference using my [**test harness**](https://github.com/Singh400/ProtoBuf-Net-Test-Harness):-\r\n\r\nBefore `[ProtoContract(IsGroup = true)]` and `DataFormat.Group`: LOH size is **321 MB** for 300,000 iterations\r\n\r\nAfter `[ProtoContract(IsGroup = true)]` and `DataFormat.Group`: LOH size is **2.3 MB** for 300,000 iterations\r\n\r\n@sergey-litvinov @mintsoft tagging you guys because you have experienced the same problem.\r\n\r\nThanks,\r\nIndy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/370181710",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-370181710",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 370181710,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE4MTcxMA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-03T21:35:53Z",
        "updated_at": "2018-03-03T21:35:53Z",
        "author_association": "CONTRIBUTOR",
        "body": ">  It looks like the [ProtoContract(IsGroup = true)] is ignored if your usage relies on inheritance, instead you need to instruct the RuntimeTypeModel to treat sub-types as DataFormat.Group\r\n\r\nThat's interesting, we played with Groups before creating .Pool and they didn't seem to make any difference;  I wonder if that bug is what prevented them from having any benefit for us."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/371161632",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/363#issuecomment-371161632",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/363",
        "id": 371161632,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE2MTYzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-07T14:48:06Z",
        "updated_at": "2018-03-07T14:48:06Z",
        "author_association": "OWNER",
        "body": "By default, protobuf-net uses \"proto3\"-like semantics, which is - as you say - implicit zero defaults. I see use have a `bool Has*` pattern for \"things that should be set\" - protobuf-net won't use that, but it *will* use the .NET idiomatic `bool ShouldSerialize*()` pattern. So if you had:\r\n\r\n    public bool ShouldSerializeFoo() => HasFoo; // can also be private\r\n\r\nthen protobuf-net will know what you mean. You could also have just used a `public int? Foo {get;set;}` and protobuf-net would interpret a non-null value as \"has a value\".\r\n\r\nFinally, note that the protogen tool (also [available online](https://protogen.marcgravell.com)) should emit code that works in the expected way for the .proto."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/371161972",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/363#issuecomment-371161972",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/363",
        "id": 371161972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTE2MTk3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-07T14:49:01Z",
        "updated_at": "2018-03-07T14:49:01Z",
        "author_association": "OWNER",
        "body": "Additionally, there's also a `UseImplicitZeroDefaults` option that you can disable, but in your case it would be better to use the knowledge that you already have about which values have explicit values."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/371406826",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/363#issuecomment-371406826",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/363",
        "id": 371406826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQwNjgyNg==",
        "user": {
            "login": "rouen-sk",
            "id": 7676825,
            "node_id": "MDQ6VXNlcjc2NzY4MjU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7676825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rouen-sk",
            "html_url": "https://github.com/rouen-sk",
            "followers_url": "https://api.github.com/users/rouen-sk/followers",
            "following_url": "https://api.github.com/users/rouen-sk/following{/other_user}",
            "gists_url": "https://api.github.com/users/rouen-sk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rouen-sk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rouen-sk/subscriptions",
            "organizations_url": "https://api.github.com/users/rouen-sk/orgs",
            "repos_url": "https://api.github.com/users/rouen-sk/repos",
            "events_url": "https://api.github.com/users/rouen-sk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rouen-sk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-08T07:45:38Z",
        "updated_at": "2018-03-08T07:45:38Z",
        "author_association": "NONE",
        "body": "Great, I did not know about `ShouldSerialize`. Problem solved, thank you. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372020574",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/159#issuecomment-372020574",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/159",
        "id": 372020574,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAyMDU3NA==",
        "user": {
            "login": "wjdavis5",
            "id": 2580575,
            "node_id": "MDQ6VXNlcjI1ODA1NzU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2580575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjdavis5",
            "html_url": "https://github.com/wjdavis5",
            "followers_url": "https://api.github.com/users/wjdavis5/followers",
            "following_url": "https://api.github.com/users/wjdavis5/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjdavis5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjdavis5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjdavis5/subscriptions",
            "organizations_url": "https://api.github.com/users/wjdavis5/orgs",
            "repos_url": "https://api.github.com/users/wjdavis5/repos",
            "events_url": "https://api.github.com/users/wjdavis5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjdavis5/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-10T10:45:19Z",
        "updated_at": "2018-03-10T10:45:19Z",
        "author_association": "NONE",
        "body": "This is supported now.\r\n\r\nhttps://www.nuget.org/packages/protobuf-net/"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372294344",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372294344",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372294344,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI5NDM0NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T12:33:45Z",
        "updated_at": "2018-03-12T12:33:45Z",
        "author_association": "OWNER",
        "body": "iOS doesn't support runtime emit. There is a build that should run -\nessentially compiling without the inbuilt compiler (or IKVM), using regular\nruntime reflection, but it is slower. The plan is to replace a lot of this\nwith build-time emit, but I'm still working through the requirements for\nthat, since it involves hooking into the build pipeline.\n\nOn 12 Mar 2018 11:28 am, \"danerduo87\" <notifications@github.com> wrote:\n\n> Can not get it work on IOS device(works pefectly on windows && mac), seems\n> caused by \"System.Reflection.Emit\". I tried compiling a FEAT_IKVM version\n> ,but got hundreds of errors.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/367>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsACONtoAMonATu9JzXjTaeJYGHo_ks5tdlvRgaJpZM4SmeYq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372392094",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372392094",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372392094,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjM5MjA5NA==",
        "user": {
            "login": "jesopo",
            "id": 11245819,
            "node_id": "MDQ6VXNlcjExMjQ1ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11245819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jesopo",
            "html_url": "https://github.com/jesopo",
            "followers_url": "https://api.github.com/users/jesopo/followers",
            "following_url": "https://api.github.com/users/jesopo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jesopo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jesopo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jesopo/subscriptions",
            "organizations_url": "https://api.github.com/users/jesopo/orgs",
            "repos_url": "https://api.github.com/users/jesopo/repos",
            "events_url": "https://api.github.com/users/jesopo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jesopo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T17:21:49Z",
        "updated_at": "2018-03-12T17:22:17Z",
        "author_association": "NONE",
        "body": "Can you point me to the \"build that should run\"?\r\n\r\nAlso, I've seen you say that the precompile code doesn't work with recent protobuf-net builds, is this still the case?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372416442",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372416442",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372416442,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQxNjQ0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T18:31:18Z",
        "updated_at": "2018-03-12T18:31:18Z",
        "author_association": "OWNER",
        "body": "I was under the impression that xamarin/iOS could consume netstandard1.0 -\nwhich already disables all the compiler code etc. If iOS needs a more\nspecific build, then that *should* be possible fairly simply by cloning the\nnetstandard 1.0 configuration and adding a more specific TFM.\n\nFor most purposes: I'm blind here. I'm not an iOS developer, and I lack\n*any* Apple hardware for build / testing purposes. I'm more than happy\nto.work with people to help achieve the desired outcome, but I simply can't\ndo it by myself without it being blind hope, which I don't like doing.\n\nOn 12 Mar 2018 5:21 pm, \"jesopo\" <notifications@github.com> wrote:\n\n> Can you point me to the \"build that should run\"?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372392094>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHCmvYAJOrXeGoowSs_6uDI5NMwqks5tdq6ugaJpZM4SmeYq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372425433",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372425433",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372425433,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQyNTQzMw==",
        "user": {
            "login": "jesopo",
            "id": 11245819,
            "node_id": "MDQ6VXNlcjExMjQ1ODE5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11245819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jesopo",
            "html_url": "https://github.com/jesopo",
            "followers_url": "https://api.github.com/users/jesopo/followers",
            "following_url": "https://api.github.com/users/jesopo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jesopo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jesopo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jesopo/subscriptions",
            "organizations_url": "https://api.github.com/users/jesopo/orgs",
            "repos_url": "https://api.github.com/users/jesopo/repos",
            "events_url": "https://api.github.com/users/jesopo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jesopo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T18:58:48Z",
        "updated_at": "2018-03-12T18:58:48Z",
        "author_association": "NONE",
        "body": "Setting it to use netstandard1.0 did the trick; can't there just be a property or such to disable the compiler code on any of the TFMs?\r\n\r\n(many thanks, btw)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372428321",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372428321",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372428321,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQyODMyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T19:08:17Z",
        "updated_at": "2018-03-12T19:08:17Z",
        "author_association": "OWNER",
        "body": "Possibly, yes, that is another way of approaching this. This actually\nalready exists in the debug builds and *possibly* release (I can't\nremember) - there's an AutoCompile option on RuntimeTypeModel that you\ncould try disabling.\n\nOn 12 Mar 2018 6:58 pm, \"jesopo\" <notifications@github.com> wrote:\n\n> Setting it to use netstandard1.0 did the trick; can't there just be a\n> property or such to disable the compiler code on any of the TFMs?\n>\n> (many thanks, btw)\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372425433>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsN9XEpgxsWsntzNQ_qGsncKRinw-ks5tdsVogaJpZM4SmeYq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372429651",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372429651",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372429651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQyOTY1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T19:12:47Z",
        "updated_at": "2018-03-12T19:12:47Z",
        "author_association": "OWNER",
        "body": "Another thing we could try is feature discovery: i.e. at startup: *try*\ncompiling something, and if it explodes: disable the IL compiler. All\npossible ideas.\n\nOn 12 Mar 2018 7:08 pm, \"Marc Gravell\" <marc.gravell@gmail.com> wrote:\n\n> Possibly, yes, that is another way of approaching this. This actually\n> already exists in the debug builds and *possibly* release (I can't\n> remember) - there's an AutoCompile option on RuntimeTypeModel that you\n> could try disabling.\n>\n> On 12 Mar 2018 6:58 pm, \"jesopo\" <notifications@github.com> wrote:\n>\n>> Setting it to use netstandard1.0 did the trick; can't there just be a\n>> property or such to disable the compiler code on any of the TFMs?\n>>\n>> (many thanks, btw)\n>>\n>> \u2014\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372425433>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsN9XEpgxsWsntzNQ_qGsncKRinw-ks5tdsVogaJpZM4SmeYq>\n>> .\n>>\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372479475",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/368#issuecomment-372479475",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/368",
        "id": 372479475,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3OTQ3NQ==",
        "user": {
            "login": "richardschneider",
            "id": 631061,
            "node_id": "MDQ6VXNlcjYzMTA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/631061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richardschneider",
            "html_url": "https://github.com/richardschneider",
            "followers_url": "https://api.github.com/users/richardschneider/followers",
            "following_url": "https://api.github.com/users/richardschneider/following{/other_user}",
            "gists_url": "https://api.github.com/users/richardschneider/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richardschneider/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richardschneider/subscriptions",
            "organizations_url": "https://api.github.com/users/richardschneider/orgs",
            "repos_url": "https://api.github.com/users/richardschneider/repos",
            "events_url": "https://api.github.com/users/richardschneider/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richardschneider/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T22:09:34Z",
        "updated_at": "2018-03-12T22:09:34Z",
        "author_association": "NONE",
        "body": "Here's a test case.  `SomeData` fails.\r\n\r\n```csharp\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing ProtoBuf;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Ipfs.Engine\r\n{\r\n    [ProtoContract]\r\n    class M1\r\n    {\r\n        [ProtoMember(1, IsRequired = false)]\r\n        public byte[] Data;\r\n    }\r\n\r\n    [ProtoContract]\r\n    class M2\r\n    {\r\n        [ProtoMember(1, IsRequired = false)]\r\n        public ArraySegment<byte>? Data;\r\n    }\r\n\r\n    [TestClass]\r\n    public class ProtobufTest\r\n    {\r\n        [TestMethod]\r\n        public void NullData()\r\n        {\r\n            var m1 = new M1();\r\n            var ms1 = new MemoryStream();\r\n            Serializer.Serialize<M1>(ms1, m1);\r\n            var bytes1 = ms1.ToArray();\r\n\r\n            var m2 = new M2();\r\n            var ms2 = new MemoryStream();\r\n            Serializer.Serialize<M2>(ms2, m2);\r\n            var bytes2 = ms2.ToArray();\r\n\r\n            CollectionAssert.AreEqual(bytes1, bytes2);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void SomeData()\r\n        {\r\n            var data = new byte[] { 10, 11, 12 };\r\n            var m1 = new M1 { Data = data };\r\n            var ms1 = new MemoryStream();\r\n            Serializer.Serialize<M1>(ms1, m1);\r\n            var bytes1 = ms1.ToArray();\r\n\r\n            var m2 = new M2 { Data = new ArraySegment<byte>(data) };\r\n            var ms2 = new MemoryStream();\r\n            Serializer.Serialize<M2>(ms2, m2);\r\n            var bytes2 = ms2.ToArray();\r\n\r\n            CollectionAssert.AreEqual(bytes1, bytes2);\r\n        }\r\n    }\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372498818",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/368#issuecomment-372498818",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/368",
        "id": 372498818,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ5ODgxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-12T23:43:32Z",
        "updated_at": "2018-03-12T23:43:32Z",
        "author_association": "OWNER",
        "body": "Yes, this is possible - it just hasn't been done to date. Note that getting it to optimize *when serializing* is easy. Getting it to be smart *when deserializing* is much harder - the default implementation would be: array per instance, and it is hard to think how to get around that.\r\n\r\nAdditional things to consider around the same time: `Memory<T>`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372504309",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/368#issuecomment-372504309",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/368",
        "id": 372504309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUwNDMwOQ==",
        "user": {
            "login": "richardschneider",
            "id": 631061,
            "node_id": "MDQ6VXNlcjYzMTA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/631061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richardschneider",
            "html_url": "https://github.com/richardschneider",
            "followers_url": "https://api.github.com/users/richardschneider/followers",
            "following_url": "https://api.github.com/users/richardschneider/following{/other_user}",
            "gists_url": "https://api.github.com/users/richardschneider/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richardschneider/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richardschneider/subscriptions",
            "organizations_url": "https://api.github.com/users/richardschneider/orgs",
            "repos_url": "https://api.github.com/users/richardschneider/repos",
            "events_url": "https://api.github.com/users/richardschneider/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richardschneider/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T00:15:51Z",
        "updated_at": "2018-03-13T00:15:51Z",
        "author_association": "NONE",
        "body": "I'm happy to make a PR if you point me to the right classes.\r\n\r\nLet's start with a simple implementation:\r\n- serialize, basically array logic but with an offset and count\r\n- deserialize, same as array but wrap an ArraySegment<byte> around it\r\n\r\nIs `Memory/Span<T>` real?  I thought it was coming in a later release."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372520759",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/364#issuecomment-372520759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/364",
        "id": 372520759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUyMDc1OQ==",
        "user": {
            "login": "yourFinger",
            "id": 10068876,
            "node_id": "MDQ6VXNlcjEwMDY4ODc2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10068876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yourFinger",
            "html_url": "https://github.com/yourFinger",
            "followers_url": "https://api.github.com/users/yourFinger/followers",
            "following_url": "https://api.github.com/users/yourFinger/following{/other_user}",
            "gists_url": "https://api.github.com/users/yourFinger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yourFinger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yourFinger/subscriptions",
            "organizations_url": "https://api.github.com/users/yourFinger/orgs",
            "repos_url": "https://api.github.com/users/yourFinger/repos",
            "events_url": "https://api.github.com/users/yourFinger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yourFinger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T01:58:31Z",
        "updated_at": "2018-03-13T01:58:31Z",
        "author_association": "NONE",
        "body": "@mgravell "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372582306",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/367#issuecomment-372582306",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/367",
        "id": 372582306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU4MjMwNg==",
        "user": {
            "login": "danerduo87",
            "id": 9209445,
            "node_id": "MDQ6VXNlcjkyMDk0NDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9209445?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danerduo87",
            "html_url": "https://github.com/danerduo87",
            "followers_url": "https://api.github.com/users/danerduo87/followers",
            "following_url": "https://api.github.com/users/danerduo87/following{/other_user}",
            "gists_url": "https://api.github.com/users/danerduo87/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danerduo87/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danerduo87/subscriptions",
            "organizations_url": "https://api.github.com/users/danerduo87/orgs",
            "repos_url": "https://api.github.com/users/danerduo87/repos",
            "events_url": "https://api.github.com/users/danerduo87/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danerduo87/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T08:18:08Z",
        "updated_at": "2018-03-13T08:29:18Z",
        "author_association": "NONE",
        "body": "Hi all,  build without the \"FEAT_COMPILER\" makes the unity ios project working.  In my case, I  parsed the .proto schema file to a FileDescriptorSet object for further use,  I do not test if it works fine with the original way(means export proto as .cs code)\r\n\r\nEdit: remove the \"FEAT_COMPILER\" will disable the \"AutoCompile\"  related features as @mgravell  said."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372627710",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/369#issuecomment-372627710",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/369",
        "id": 372627710,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYyNzcxMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T11:03:14Z",
        "updated_at": "2018-03-13T11:03:14Z",
        "author_association": "OWNER",
        "body": "Yikes. It wasn't my intention for people to start touching `protobuf-net.Protogen`, and I've unlisted it. That is me preparing to deploy it as a \"global tool\", which isn't available until .NET Core SDK 2.1 ships. This will allow convenient command-line ad-hoc usage. If we want something that ships as a tool, we can probably do that, but I don't know the best way to package it. That's something I need to look into."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372629778",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/369#issuecomment-372629778",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/369",
        "id": 372629778,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYyOTc3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T11:11:25Z",
        "updated_at": "2018-03-13T11:11:25Z",
        "author_association": "OWNER",
        "body": "You *should* have seen:\r\n\r\n```\r\nInstall-Package : Package 'protobuf-net.Protogen 1.0.3-alpha1' has a package type 'DotnetTool' that is not supported by project '{your project}'.\r\n```\r\n\r\ndid that not happen?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/372635985",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/369#issuecomment-372635985",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/369",
        "id": 372635985,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYzNTk4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-13T11:37:37Z",
        "updated_at": "2018-03-13T11:37:37Z",
        "author_association": "OWNER",
        "body": "I have a huge blindness when it comes to msbuild, .targets, nuspec, etc. If you have suggestions on how this should be packaged to be useful: I'm all ears."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/373374485",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/370#issuecomment-373374485",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/370",
        "id": 373374485,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM3NDQ4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-15T13:25:38Z",
        "updated_at": "2018-03-15T13:25:38Z",
        "author_association": "OWNER",
        "body": "\"Make sure the people involved in the project want to join the .NET Foundation\"\r\n\r\nI'm asserting that I'm the primary contributor with responsibility for *virtually all* of the code. I'm OK with this."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/373377808",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/370#issuecomment-373377808",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/370",
        "id": 373377808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM3NzgwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-15T13:36:49Z",
        "updated_at": "2018-03-15T13:36:49Z",
        "author_association": "OWNER",
        "body": "\"Make sure the project has a clear understanding about how it accepts contributions and the process\r\nit follows when selecting new committers to the project.\"\r\n\r\nI'm the only person with commit; PRs are used as contribution - formal CLA here has been inconsistent and imperfect"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374513381",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/371#issuecomment-374513381",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/371",
        "id": 374513381,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUxMzM4MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T08:26:47Z",
        "updated_at": "2018-03-20T08:26:47Z",
        "author_association": "OWNER",
        "body": "The setters are private simply because in most cases: there is no need to\nreassign lists/collections. Do you have an example of where you want to do\nthis? It could conceivable be an option / toggle.\n\nInterfaces are trickier, as the generated code needs to be code that works\nOK with the library, and right now that would be unreliable. Mostly, when\npeople use codegen they want it to emit types. Again, a concrete scenario /\nexample would help me understand your context here.\n\nWhich version of protogen are you using? The recent builds? Or the ancient\nr668 build? Both have mechanisms to customize the code, but they are very\ndifferent.\n\n\n\nOn 20 Mar 2018 7:24 am, \"Clinton Mead\" <notifications@github.com> wrote:\n\n> Hi Marc\n>\n> Again, great library, finding it quite useful.\n>\n> Regarding protogen.exe, is there any reason for the setters for repeated\n> members (which in C# are lists) to be private in the generated classes? Is\n> there a way to make generate the code so these setters are public?\n>\n> Also, is there a way to get protogen.exe to generate interfaces for the\n> generated classes and make those classes implement the interface? This\n> would allow me to progressively introduce protogen style classes into the\n> project.\n>\n> Thanks again.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/371>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHoCWvnOXV2bIcEqF0iahKKVUvCnks5tgK6xgaJpZM4SxaPM>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374515316",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/371#issuecomment-374515316",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/371",
        "id": 374515316,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUxNTMxNg==",
        "user": {
            "login": "clintonmead",
            "id": 22866845,
            "node_id": "MDQ6VXNlcjIyODY2ODQ1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22866845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clintonmead",
            "html_url": "https://github.com/clintonmead",
            "followers_url": "https://api.github.com/users/clintonmead/followers",
            "following_url": "https://api.github.com/users/clintonmead/following{/other_user}",
            "gists_url": "https://api.github.com/users/clintonmead/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clintonmead/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clintonmead/subscriptions",
            "organizations_url": "https://api.github.com/users/clintonmead/orgs",
            "repos_url": "https://api.github.com/users/clintonmead/repos",
            "events_url": "https://api.github.com/users/clintonmead/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clintonmead/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T08:34:59Z",
        "updated_at": "2018-03-20T08:34:59Z",
        "author_association": "NONE",
        "body": "I\u2019m using the version of \u2018protogen\u2019 from this [now dead link https://protogen.marcgravell.com/](https://protogen.marcgravell.com/). Perhaps I should clone this repository and build a recent one yes?\r\n\r\nAlso sorry I added a few questions to this issue but is there anyway to generate the \u2018.proto\u2019 files from the C# annotated class files instead of the other way around which I\u2019m currently doing?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374518769",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374518769",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 374518769,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUxODc2OQ==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T08:48:20Z",
        "updated_at": "2018-03-20T08:48:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell if you need anything else from my side let me know. I'm happy to add tests or whatever you need"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374519986",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/371#issuecomment-374519986",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/371",
        "id": 374519986,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUxOTk4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T08:52:53Z",
        "updated_at": "2018-03-20T08:52:53Z",
        "author_association": "OWNER",
        "body": "Sorry the site is down - my azure credits ran out, and seeing as I make\nzero money from this, I chose to wait for my next cycle rather than pay a\ntopup. It should be back in the next day or two.\n\nIf you have a recent build, that should be fine - there have been lots of\nrecent commits, but they're unlikely to impact you.\n\nFor generating .proto from classes: Serializer.GetProto\n\n\nOn 20 Mar 2018 8:35 am, \"Clinton Mead\" <notifications@github.com> wrote:\n\nI\u2019m using the version of \u2018protogen\u2019 from this now dead link\nhttps://protogen.marcgravell.com/ <https://protogen.marcgravell.com/>.\nPerhaps I should clone this repository and build a recent one yes?\n\nAlso sorry I added a few questions to this issue but is there anyway to\ngenerate the \u2018.proto\u2019 files from the C# annotated class files instead of\nthe other way around which I\u2019m currently doing?\n\n\u2014\nYou are receiving this because you commented.\n\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/issues/371#issuecomment-374515316>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsD1Xf6ReuKw49JNluyd3QxY9FH7Pks5tgL8zgaJpZM4SxaPM>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374528208",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374528208",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 374528208,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUyODIwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T09:22:07Z",
        "updated_at": "2018-03-20T09:22:07Z",
        "author_association": "OWNER",
        "body": "Sorry, I dropped the ball. Looks good, and I'm happy to merge as is - my only thought is: there are two key surrogate scenarios:\r\n\r\n- you control the primary type, but it is the wrong shape for the serializer\r\n- you don't control the primary type\r\n\r\nThis fix addresses the first bullet - but doesn't address the second. I wonder if there is a second requirement here, and I'm *not* proposing that it is your problem to do as part of this PR, but I'd be interested in your thoughts. Basically, I wonder if the direction should be reversed, so that it is more like:\r\n\r\n    [ProtoContract(..., SurrogateFor = typeof(SomeOtherType))]\r\n\r\nThe \"discovery\" for this obviously works very differently, as you then have to do assembly-level type crawls, or even multi-assembly type crawls (since the type you don't control is likely to be in a different assembly).\r\n\r\nAny thoughts?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374528419",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374528419",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 374528419,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUyODQxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T09:22:48Z",
        "updated_at": "2018-03-20T09:22:48Z",
        "author_association": "OWNER",
        "body": "(merged, btw; but I'm still interested in your thoughts)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374539209",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/362#issuecomment-374539209",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/362",
        "id": 374539209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDUzOTIwOQ==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T09:59:05Z",
        "updated_at": "2018-03-20T09:59:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry I replied quite late.\r\nBasically we achieved good performances with your tips, especially relying on fields rather than properties.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374847761",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374847761",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 374847761,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDg0Nzc2MQ==",
        "user": {
            "login": "molinch",
            "id": 5130190,
            "node_id": "MDQ6VXNlcjUxMzAxOTA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5130190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/molinch",
            "html_url": "https://github.com/molinch",
            "followers_url": "https://api.github.com/users/molinch/followers",
            "following_url": "https://api.github.com/users/molinch/following{/other_user}",
            "gists_url": "https://api.github.com/users/molinch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/molinch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/molinch/subscriptions",
            "organizations_url": "https://api.github.com/users/molinch/orgs",
            "repos_url": "https://api.github.com/users/molinch/repos",
            "events_url": "https://api.github.com/users/molinch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/molinch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-21T06:57:44Z",
        "updated_at": "2018-03-21T06:57:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "I thought about the second scenario, and I do think it is a valid scenario, a different one but really something that could happen.\r\n\r\nIt is way more challenging I guess it would require a kind of cache per assembly, for discovered ProtoContract with SurrogateFor defined. Since assemblies can be dynamically loaded, or you wouldn't consider that scenario?\r\n\r\nWouldn't it be slow? Going over all classes of all loaded assemblies.\r\nI don't know if this is possible: to have a special attribute in the assembly's manifest, then only the relevant assemblies could be scanned."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/374862100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374862100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 374862100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDg2MjEwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-21T08:22:24Z",
        "updated_at": "2018-03-21T08:22:24Z",
        "author_association": "OWNER",
        "body": "Indeed, something like [assembly:HazSurrogates] (ignore naming) would allow\nthe check to happen at the assembly level without loading all the types for\nthe assembly. And *almost always*, the root object will be user-owned, so\nit is probably a reasonable step. I could double-up with a runtime\n\"ScanForSurrogates(Assembly)\" method for explicit usage.\n\nMore my problem than yours - I'll have a think. Thanks for the PR: good\nstuff.\n\nOn 21 Mar 2018 6:57 am, \"Fabien Molinet\" <notifications@github.com> wrote:\n\n> I thought about the second scenario, and I do think it is a valid\n> scenario, a different one but really something that could happen.\n>\n> It is way more challenging I guess it would require a kind of cache per\n> assembly, for discovered ProtoContract with SurrogateFor defined. Since\n> assemblies can be dynamically loaded, or you wouldn't consider that\n> scenario?\n>\n> Wouldn't it be slow? Going over all classes of all loaded assemblies.\n> I don't know if this is possible: to have a special attribute in the\n> assembly's manifest, then only the relevant assemblies could be scanned.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/342#issuecomment-374847761>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKlpKnZU_nDZj9Ca3t84yLf6SXR5ks5tgfnrgaJpZM4RmSsH>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375677589",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375677589",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375677589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY3NzU4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T14:11:47Z",
        "updated_at": "2018-03-23T14:11:47Z",
        "author_association": "OWNER",
        "body": "As a *relatively* minor point - `sint32` is zig-zag encoded, so you'd need `DataFormat = DataFormat.ZigZag` on those members to decode them to the right value; or more simply - just run your schema through https://protogen.marcgravell.com to get suitable C#.\r\n\r\nNow; as to your question; we can *also* run your hex through https://protogen.marcgravell.com/decode - and if we look at field 6 (which starts at the first 0x30), the hex payload is 80-B7-8B-82-10 - which is either 4299348864 (direct) or 2149674432 (zigzag), but either way: it is more that 32-bits wide (32-bits having limit  2147483647), so: assuming you're seeing (like me) an arithmetic overflow: yes, that is expected. You've asked it to squeeze 33 bits of data into a 32 bit field.\r\n\r\nCan you tell me how you constructed this payload? should it be using `sint64`, for example?\r\n\r\nIt gets more extreme - if you look at field 7, the value is either -1776810782810646 or 9222483631463370485 - which definitely isn't going to fit into 32 bits."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375680828",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375680828",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375680828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY4MDgyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T14:22:11Z",
        "updated_at": "2018-03-23T14:22:11Z",
        "author_association": "OWNER",
        "body": "To give an illustration of field 6; the 0x30 is 110000, so: field 110 = 6, wire-type 000 = varint; the payload is  80 B7 8B 82 10\r\n\r\n```\r\n80    10000000\r\nB7    10110111\r\n8B    10001011\r\n82    10000010\r\n10    00010000\r\n```\r\n\r\nThe MSB is \"continuation\", leaving 7 bits data - and varint is  least significant group first; this means the actual contents are: 0010000 0000010 0001011 0110111 0000000, which would be more familiarly written as: 00000001 00000000 01000010 11011011 10000000 - so: 33 bits wide, and a 32-bit field. It looks like the website you used has simply dropped the most significant bit. Personally I would say that rejecting the data is more correct here.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375690960",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/373#issuecomment-375690960",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/373",
        "id": 375690960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY5MDk2MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T14:53:54Z",
        "updated_at": "2018-03-23T14:53:54Z",
        "author_association": "OWNER",
        "body": "That sounds like a problem, indeed. I *think* I understand the issue, but do you have a minimal repro? If not, I can probably simulate it here (but: I just wanted to be 100% sure I understand the exact scenario)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375722294",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/373#issuecomment-375722294",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/373",
        "id": 375722294,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcyMjI5NA==",
        "user": {
            "login": "rob2212",
            "id": 33323303,
            "node_id": "MDQ6VXNlcjMzMzIzMzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/33323303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rob2212",
            "html_url": "https://github.com/rob2212",
            "followers_url": "https://api.github.com/users/rob2212/followers",
            "following_url": "https://api.github.com/users/rob2212/following{/other_user}",
            "gists_url": "https://api.github.com/users/rob2212/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rob2212/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rob2212/subscriptions",
            "organizations_url": "https://api.github.com/users/rob2212/orgs",
            "repos_url": "https://api.github.com/users/rob2212/repos",
            "events_url": "https://api.github.com/users/rob2212/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rob2212/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T16:26:26Z",
        "updated_at": "2018-03-23T16:54:24Z",
        "author_association": "NONE",
        "body": "Thanks for the fast replay. Unfortunately, I cannot upload some running application, because my code has a lot dependencies to other assemblies. I can only paste my method:\r\n\r\n```\r\npublic void Deserialize(object instance, object data)\r\n\t\t{\t\t\t\r\n\t\t\tusing (MemoryStream ms = new MemoryStream((byte[])data))\r\n\t\t\t{\r\n\t\t\t\tobject result = this.serializer.Deserialize(ms, instance, instance.GetType());\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\n this.serializer is a TypeModel instance\r\n\r\nI use RuntimeTypeModel to create a serialization schema at run-time so my classes cannot get Protobuf-Attributes. So I register all public properties a members to be serialized, also for classes which are replaced by a surrogate."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375739752",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375739752",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375739752,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTczOTc1Mg==",
        "user": {
            "login": "Mfron-42",
            "id": 20790704,
            "node_id": "MDQ6VXNlcjIwNzkwNzA0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20790704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mfron-42",
            "html_url": "https://github.com/Mfron-42",
            "followers_url": "https://api.github.com/users/Mfron-42/followers",
            "following_url": "https://api.github.com/users/Mfron-42/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mfron-42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mfron-42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mfron-42/subscriptions",
            "organizations_url": "https://api.github.com/users/Mfron-42/orgs",
            "repos_url": "https://api.github.com/users/Mfron-42/repos",
            "events_url": "https://api.github.com/users/Mfron-42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mfron-42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T17:21:36Z",
        "updated_at": "2018-03-23T17:27:08Z",
        "author_association": "NONE",
        "body": "Wow wow wow calme down genius im just starting with protobuf, i found this paquet and im trying to get the class, so, start slowly for me.\r\n\r\nBefore all, thx verry much for help/astuces and links.\r\n\r\nYep i think its int32 everywhere and not sint32\r\n\r\ni came to this by -> https://github.com/jmendeth/protobuf-inspector\r\n\r\n```\r\n   1 <varint> = 646914919\r\n   2 <varint> = 646914919\r\n   3 <varint> = 167468\r\n   4 <varint> = 129\r\n   5 <chunk> = message:\r\n       1 <varint> = -5 (18446744073709551611)\r\n       2 <varint> = 0\r\n       3 <varint> = 0\r\n   6 <varint> = 4299348864\r\n   7 <varint> = 18444967262926740970\r\n   8 <chunk> = message(10 <varint> = 0, 19 <varint> = 0)\r\n   9 <varint> = 11\r\n   10 <varint> = 185204801\r\n   11 <chunk> = message:\r\n       1 <varint> = 0\r\n       2 <varint> = -1 (18446744073709551615)\r\n       3 <chunk> = message:\r\n           1 <varint> = 0\r\n           2 <varint> = -1 (18446744073709551615)\r\n           3 <varint> = 0\r\n       4 <varint> = -1 (18446744073709551615)\r\n       5 <varint> = 0\r\n```\r\n\r\nI dont think the structure found by https://protogen.marcgravell.com/decode fit the data that i expect"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375742315",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375742315",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375742315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTc0MjMxNQ==",
        "user": {
            "login": "Mfron-42",
            "id": 20790704,
            "node_id": "MDQ6VXNlcjIwNzkwNzA0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20790704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mfron-42",
            "html_url": "https://github.com/Mfron-42",
            "followers_url": "https://api.github.com/users/Mfron-42/followers",
            "following_url": "https://api.github.com/users/Mfron-42/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mfron-42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mfron-42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mfron-42/subscriptions",
            "organizations_url": "https://api.github.com/users/Mfron-42/orgs",
            "repos_url": "https://api.github.com/users/Mfron-42/repos",
            "events_url": "https://api.github.com/users/Mfron-42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mfron-42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T17:29:33Z",
        "updated_at": "2018-03-23T17:29:33Z",
        "author_association": "NONE",
        "body": "@mgravell I think you can understand that i do not have the original class.\r\n\r\nBut yep there is surely some int64 but i dont know how to find the classe from the packet. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375773717",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375773717",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375773717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTc3MzcxNw==",
        "user": {
            "login": "Mfron-42",
            "id": 20790704,
            "node_id": "MDQ6VXNlcjIwNzkwNzA0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/20790704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mfron-42",
            "html_url": "https://github.com/Mfron-42",
            "followers_url": "https://api.github.com/users/Mfron-42/followers",
            "following_url": "https://api.github.com/users/Mfron-42/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mfron-42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mfron-42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mfron-42/subscriptions",
            "organizations_url": "https://api.github.com/users/Mfron-42/orgs",
            "repos_url": "https://api.github.com/users/Mfron-42/repos",
            "events_url": "https://api.github.com/users/Mfron-42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mfron-42/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T19:24:52Z",
        "updated_at": "2018-03-23T19:24:52Z",
        "author_association": "NONE",
        "body": "I found my solution"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375792892",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/372#issuecomment-375792892",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/372",
        "id": 375792892,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTc5Mjg5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-23T20:43:42Z",
        "updated_at": "2018-03-23T20:43:42Z",
        "author_association": "OWNER",
        "body": "I just got back from ... things. I'm interpreting this as all sorted. If I'm wrong let me know and I can reopen it. If you have any other questions, just let me know.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/375849807",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/324#issuecomment-375849807",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/324",
        "id": 375849807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg0OTgwNw==",
        "user": {
            "login": "dotarj",
            "id": 452825,
            "node_id": "MDQ6VXNlcjQ1MjgyNQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/452825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dotarj",
            "html_url": "https://github.com/dotarj",
            "followers_url": "https://api.github.com/users/dotarj/followers",
            "following_url": "https://api.github.com/users/dotarj/following{/other_user}",
            "gists_url": "https://api.github.com/users/dotarj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dotarj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dotarj/subscriptions",
            "organizations_url": "https://api.github.com/users/dotarj/orgs",
            "repos_url": "https://api.github.com/users/dotarj/repos",
            "events_url": "https://api.github.com/users/dotarj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dotarj/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-24T06:06:34Z",
        "updated_at": "2018-03-24T06:06:34Z",
        "author_association": "NONE",
        "body": "Hi @amphiware-alex, I took over maintenance of protobuf-net-data last week. A new version supporting .NET Standard 2.0 has just been released. Please let me know if you have any questions about protobuf-net-data."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/376510453",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/373#issuecomment-376510453",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/373",
        "id": 376510453,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjUxMDQ1Mw==",
        "user": {
            "login": "rob2212",
            "id": 33323303,
            "node_id": "MDQ6VXNlcjMzMzIzMzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/33323303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rob2212",
            "html_url": "https://github.com/rob2212",
            "followers_url": "https://api.github.com/users/rob2212/followers",
            "following_url": "https://api.github.com/users/rob2212/following{/other_user}",
            "gists_url": "https://api.github.com/users/rob2212/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rob2212/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rob2212/subscriptions",
            "organizations_url": "https://api.github.com/users/rob2212/orgs",
            "repos_url": "https://api.github.com/users/rob2212/repos",
            "events_url": "https://api.github.com/users/rob2212/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rob2212/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-27T12:42:20Z",
        "updated_at": "2018-03-27T12:42:20Z",
        "author_association": "NONE",
        "body": "Hello Marc,\r\n\r\nI've created a small sample application for re-production.\r\n\r\nregards,\r\n[Console.Issue373.zip](https://github.com/mgravell/protobuf-net/files/1851999/Console.Issue373.zip)\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/376557538",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/373#issuecomment-376557538",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/373",
        "id": 376557538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU1NzUzOA==",
        "user": {
            "login": "rob2212",
            "id": 33323303,
            "node_id": "MDQ6VXNlcjMzMzIzMzAz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/33323303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rob2212",
            "html_url": "https://github.com/rob2212",
            "followers_url": "https://api.github.com/users/rob2212/followers",
            "following_url": "https://api.github.com/users/rob2212/following{/other_user}",
            "gists_url": "https://api.github.com/users/rob2212/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rob2212/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rob2212/subscriptions",
            "organizations_url": "https://api.github.com/users/rob2212/orgs",
            "repos_url": "https://api.github.com/users/rob2212/repos",
            "events_url": "https://api.github.com/users/rob2212/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rob2212/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-27T14:59:38Z",
        "updated_at": "2018-03-27T14:59:38Z",
        "author_association": "NONE",
        "body": "By creating the example, I've also noticed another possible problem. Should the input parameter of the Deserialize method not rather be passed as 'ref'? It will currently not work for structs, right?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/376558976",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/373#issuecomment-376558976",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/373",
        "id": 376558976,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU1ODk3Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-27T15:03:29Z",
        "updated_at": "2018-03-27T15:03:29Z",
        "author_association": "OWNER",
        "body": "It won't be an in-place overwrite, but it should still work. The main\ndifference there will be the overhead of a stack copy, unless we're talking\nabout different things.\n\nThe work I'm adding for \"v next\" will be introducing a new external\nserializer API, and *for that* it will be \"ref\", but: it shouldn't actually\ncause a blocker in most cases.\n\nOn 27 March 2018 at 15:59, rob2212 <notifications@github.com> wrote:\n\n> By creating the example, I've also noticed another possible problem.\n> Should the input parameter of the Deserialize method not rather be passed\n> as 'ref'? It will currently not work for structs, right?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/373#issuecomment-376557538>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJhsRxIsxDhX1Rz-hkdKHimlCJo7ks5tilPagaJpZM4S41Az>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/376809622",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/374#issuecomment-376809622",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/374",
        "id": 376809622,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjgwOTYyMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-28T08:46:01Z",
        "updated_at": "2018-03-28T08:46:01Z",
        "author_association": "OWNER",
        "body": "Fair enough; sorry about that, and thanks for the fix"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377047014",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/301#issuecomment-377047014",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/301",
        "id": 377047014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA0NzAxNA==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-28T21:42:11Z",
        "updated_at": "2018-03-28T21:42:11Z",
        "author_association": "NONE",
        "body": "I'm gonna go ahead and close this issue. The TL;DR is if you care about memory then use groups."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377137471",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/376#issuecomment-377137471",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/376",
        "id": 377137471,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzEzNzQ3MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T06:38:48Z",
        "updated_at": "2018-03-29T06:38:48Z",
        "author_association": "OWNER",
        "body": "Is it a \"tree\" model? Or a \"graph\" model?\n\nMeaning: is this relationship always in one direction? Can somebody be\ntheir own ancestor?\n\nOr more specifically: do you need to track *references*, or is it enough to\nstore the *data*.\n\nOn Thu, 29 Mar 2018, 00:48 amphiware-alex, <notifications@github.com> wrote:\n\n> I have a self reference situation that I'm not sure how to handle it.\n>\n> The last member \"Friends\" is a List of Person. In this case, what should i\n> make it work ?\n>\n> [ProtoContract]\n> class Person {\n> [ProtoMember(1)]\n> public int Id {get;set;}\n> [ProtoMember(2)]\n> public string Name {get;set;}\n> [ProtoMember(3)]\n> public Address Address {get;set;}\n> [ProtoMember(4)]\n> public List Friends {get; set; }\n> }\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/376>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsAxA2-rQdiLDtay9AVohdGa_K37Tks5tjCFggaJpZM4S_icr>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377179454",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/335#issuecomment-377179454",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/335",
        "id": 377179454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzE3OTQ1NA==",
        "user": {
            "login": "hindikaynen",
            "id": 1931388,
            "node_id": "MDQ6VXNlcjE5MzEzODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1931388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hindikaynen",
            "html_url": "https://github.com/hindikaynen",
            "followers_url": "https://api.github.com/users/hindikaynen/followers",
            "following_url": "https://api.github.com/users/hindikaynen/following{/other_user}",
            "gists_url": "https://api.github.com/users/hindikaynen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hindikaynen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hindikaynen/subscriptions",
            "organizations_url": "https://api.github.com/users/hindikaynen/orgs",
            "repos_url": "https://api.github.com/users/hindikaynen/repos",
            "events_url": "https://api.github.com/users/hindikaynen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hindikaynen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T09:33:01Z",
        "updated_at": "2018-03-29T09:33:01Z",
        "author_association": "NONE",
        "body": "Breaks funtionality in our project. We use the null-value as an indicator of unset value and the empty string as a real value."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377198294",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/335#issuecomment-377198294",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/335",
        "id": 377198294,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzE5ODI5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T10:51:37Z",
        "updated_at": "2018-03-29T10:51:37Z",
        "author_association": "OWNER",
        "body": "@hindikaynen  does adding `[ProtoMap(DisableMap = true)]` help at all?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377211377",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/335#issuecomment-377211377",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/335",
        "id": 377211377,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIxMTM3Nw==",
        "user": {
            "login": "hindikaynen",
            "id": 1931388,
            "node_id": "MDQ6VXNlcjE5MzEzODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1931388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hindikaynen",
            "html_url": "https://github.com/hindikaynen",
            "followers_url": "https://api.github.com/users/hindikaynen/followers",
            "following_url": "https://api.github.com/users/hindikaynen/following{/other_user}",
            "gists_url": "https://api.github.com/users/hindikaynen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hindikaynen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hindikaynen/subscriptions",
            "organizations_url": "https://api.github.com/users/hindikaynen/orgs",
            "repos_url": "https://api.github.com/users/hindikaynen/repos",
            "events_url": "https://api.github.com/users/hindikaynen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hindikaynen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T11:53:20Z",
        "updated_at": "2018-03-29T11:53:20Z",
        "author_association": "NONE",
        "body": "It does help, thank you for the answer. Anyway, it looks like a breaking change."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377269976",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/376#issuecomment-377269976",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/376",
        "id": 377269976,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzI2OTk3Ng==",
        "user": {
            "login": "amphiware-alex",
            "id": 19184711,
            "node_id": "MDQ6VXNlcjE5MTg0NzEx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19184711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amphiware-alex",
            "html_url": "https://github.com/amphiware-alex",
            "followers_url": "https://api.github.com/users/amphiware-alex/followers",
            "following_url": "https://api.github.com/users/amphiware-alex/following{/other_user}",
            "gists_url": "https://api.github.com/users/amphiware-alex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amphiware-alex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amphiware-alex/subscriptions",
            "organizations_url": "https://api.github.com/users/amphiware-alex/orgs",
            "repos_url": "https://api.github.com/users/amphiware-alex/repos",
            "events_url": "https://api.github.com/users/amphiware-alex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amphiware-alex/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T15:18:33Z",
        "updated_at": "2018-03-29T15:56:17Z",
        "author_association": "NONE",
        "body": "It's a tree model with only one direction. It could have multiple generation though. ( A root could have children, grand-children, and on and on )\r\n\r\nNot sure about the difference between the reference/data. My gut feeling is that i only need data, but i could be wrong. Please let me know both solution if possible. \r\n\r\nThank you\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377316483",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/376#issuecomment-377316483",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/376",
        "id": 377316483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzMxNjQ4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T17:45:37Z",
        "updated_at": "2018-03-29T17:45:37Z",
        "author_association": "OWNER",
        "body": "Then it should just work. Are you seeing a problem? If so: specifically what?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/377331738",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/376#issuecomment-377331738",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/376",
        "id": 377331738,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzMzMTczOA==",
        "user": {
            "login": "amphiware-alex",
            "id": 19184711,
            "node_id": "MDQ6VXNlcjE5MTg0NzEx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/19184711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amphiware-alex",
            "html_url": "https://github.com/amphiware-alex",
            "followers_url": "https://api.github.com/users/amphiware-alex/followers",
            "following_url": "https://api.github.com/users/amphiware-alex/following{/other_user}",
            "gists_url": "https://api.github.com/users/amphiware-alex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amphiware-alex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amphiware-alex/subscriptions",
            "organizations_url": "https://api.github.com/users/amphiware-alex/orgs",
            "repos_url": "https://api.github.com/users/amphiware-alex/repos",
            "events_url": "https://api.github.com/users/amphiware-alex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amphiware-alex/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-29T18:36:30Z",
        "updated_at": "2018-03-29T18:36:30Z",
        "author_association": "NONE",
        "body": "I think i got it figured out. was doing something stupid. \r\nThanks for your timely response. I do appreciate it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/378827946",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/297#issuecomment-378827946",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/297",
        "id": 378827946,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODgyNzk0Ng==",
        "user": {
            "login": "mizuno-gsinet",
            "id": 29035331,
            "node_id": "MDQ6VXNlcjI5MDM1MzMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/29035331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizuno-gsinet",
            "html_url": "https://github.com/mizuno-gsinet",
            "followers_url": "https://api.github.com/users/mizuno-gsinet/followers",
            "following_url": "https://api.github.com/users/mizuno-gsinet/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizuno-gsinet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizuno-gsinet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizuno-gsinet/subscriptions",
            "organizations_url": "https://api.github.com/users/mizuno-gsinet/orgs",
            "repos_url": "https://api.github.com/users/mizuno-gsinet/repos",
            "events_url": "https://api.github.com/users/mizuno-gsinet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizuno-gsinet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T05:54:58Z",
        "updated_at": "2018-04-05T05:54:58Z",
        "author_association": "NONE",
        "body": "@mgravell Any updates?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/378859546",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/297#issuecomment-378859546",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/297",
        "id": 378859546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODg1OTU0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T08:29:51Z",
        "updated_at": "2018-04-05T08:29:51Z",
        "author_association": "OWNER",
        "body": "I haven't had chance to look at this yet, no\n\nOn 5 April 2018 at 06:54, mizuno-gsinet <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell> Any updates?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/297#issuecomment-378827946>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD6hKE2j9tmfquorYjAdcV7IRYUfks5tlbGygaJpZM4OzCEd>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381159045",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/377#issuecomment-381159045",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/377",
        "id": 381159045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE1OTA0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-13T14:47:12Z",
        "updated_at": "2018-04-13T14:47:12Z",
        "author_association": "OWNER",
        "body": "that's a great question - we could presumably add some lightweight shim\nthat knows the id in advance or has direct access to the underlying strategy\n\nright now: no, but we should absolutely add something that allows you to\nstash that somewhere handy for efficient re-use\n\nMy \"spare\" (hah) time is tied up preparing a session for redisconf at the\nmoment, but this doesn't sound like a large change, so shouldn't be hard to\nadd when I get a moment.\n\nOn 13 April 2018 at 14:56, szehetner <notifications@github.com> wrote:\n\n> While profiling my system I found that a large part of the total\n> serialization/deserialization time is spent in the TypeModel.GetKey method.\n> Ranging from ~10% for larger types up to ~40% for smaller types. The reason\n> for that is that I have a few hundred different types in the default\n> RuntimeModel and GetKey does a linear search in BasicList to find the right\n> MetaType.\n>\n> Right now I'm using a workaround to create (and cache) a new RuntimeModel\n> per type (for a few known types at least), which then has a short type list\n> and fast lookup, but this doesn't feel like the right approach. Ideally\n> there would be a way to avoid that MetaType lookup altogether.\n>\n> I know I can get the MetaType via RuntimeTypeModel.Add, but I couldn't\n> find a way to invoke the serializer with that MetaType directly (like e.g.\n> RuntimeTypeModel.Serialize does it), as all the relevant methods are\n> internal. I know all types upfront after startup, so I could map\n> Type->MetaType myself (e.g. in a simple dictionary or just store the\n> MetaType instances wherever the serializer is called).\n>\n> Is there a way to do this currently? Or would anything speak against just\n> adding a few public Serialize/Deserialize methods on MetaType directly?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/377>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLqffdxTJF6RUYBovNZJgyI8DEx9ks5toK5wgaJpZM4TTffN>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381322152",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381322152",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/378",
        "id": 381322152,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMyMjE1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-14T11:18:48Z",
        "updated_at": "2018-04-14T11:18:48Z",
        "author_association": "OWNER",
        "body": "Thank you, that's a nice piece of work. Can I confirm that you're happy to\nfreely contribute and donate the PR into the project license? (I really\nneed to get a CLA bot!)\n\nOn 13 Apr 2018 10:19 pm, \"szehetner\" <notifications@github.com> wrote:\n\nProtoWriter.DemandSpace is called in every Write* method and would profit\nfrom being inlined. Currently it is too big, but by extracting the less\ncommon path into a seperate method it can now be inlined (tested with\nRyuJIT on .Net Framework 4.7.1). The perf gain is actually more than I\nwould have expected (~46ms instead of ~51ms for serializing 100 000 simple\nobjects). Benchmark code can be found here:\nhttps://gist.github.com/szehetner/6c11a0545f0600c1c5ae5cd23527a1d2\n\nThe real world gain would probably be less as the benchmark code never\nneeds to flush or resize, but should still be worthwile.\n------------------------------\nYou can view, comment on, or merge this pull request online at:\n\n  https://github.com/mgravell/protobuf-net/pull/378\nCommit Summary\n\n   - Enable inlining of ProtoWriter.DemandSpace\n\nFile Changes\n\n   - *M* src/protobuf-net/ProtoWriter.cs\n   <https://github.com/mgravell/protobuf-net/pull/378/files#diff-0> (21)\n\nPatch Links:\n\n   - https://github.com/mgravell/protobuf-net/pull/378.patch\n   - https://github.com/mgravell/protobuf-net/pull/378.diff\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n<https://github.com/mgravell/protobuf-net/pull/378>, or mute the thread\n<https://github.com/notifications/unsubscribe-auth/AABDsH13zdPfL3r4ejHLPpwNwQYW-7uDks5toRZOgaJpZM4TUb4P>\n.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381324116",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381324116",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/378",
        "id": 381324116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMyNDExNg==",
        "user": {
            "login": "szehetner",
            "id": 32911487,
            "node_id": "MDQ6VXNlcjMyOTExNDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32911487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szehetner",
            "html_url": "https://github.com/szehetner",
            "followers_url": "https://api.github.com/users/szehetner/followers",
            "following_url": "https://api.github.com/users/szehetner/following{/other_user}",
            "gists_url": "https://api.github.com/users/szehetner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szehetner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szehetner/subscriptions",
            "organizations_url": "https://api.github.com/users/szehetner/orgs",
            "repos_url": "https://api.github.com/users/szehetner/repos",
            "events_url": "https://api.github.com/users/szehetner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szehetner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-14T11:57:43Z",
        "updated_at": "2018-04-14T11:57:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes sure, you can use it under whatever license you like.\n\nMarc Gravell <notifications@github.com> schrieb am Sa., 14. Apr. 2018,\n13:19:\n\n> Thank you, that's a nice piece of work. Can I confirm that you're happy to\n> freely contribute and donate the PR into the project license? (I really\n> need to get a CLA bot!)\n>\n> On 13 Apr 2018 10:19 pm, \"szehetner\" <notifications@github.com> wrote:\n>\n> ProtoWriter.DemandSpace is called in every Write* method and would profit\n> from being inlined. Currently it is too big, but by extracting the less\n> common path into a seperate method it can now be inlined (tested with\n> RyuJIT on .Net Framework 4.7.1). The perf gain is actually more than I\n> would have expected (~46ms instead of ~51ms for serializing 100 000 simple\n> objects). Benchmark code can be found here:\n> https://gist.github.com/szehetner/6c11a0545f0600c1c5ae5cd23527a1d2\n>\n> The real world gain would probably be less as the benchmark code never\n> needs to flush or resize, but should still be worthwile.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n> https://github.com/mgravell/protobuf-net/pull/378\n> Commit Summary\n>\n> - Enable inlining of ProtoWriter.DemandSpace\n>\n> File Changes\n>\n> - *M* src/protobuf-net/ProtoWriter.cs\n> <https://github.com/mgravell/protobuf-net/pull/378/files#diff-0> (21)\n>\n> Patch Links:\n>\n> - https://github.com/mgravell/protobuf-net/pull/378.patch\n> - https://github.com/mgravell/protobuf-net/pull/378.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/378>, or mute the thread\n> <\n> https://github.com/notifications/unsubscribe-auth/AABDsH13zdPfL3r4ejHLPpwNwQYW-7uDks5toRZOgaJpZM4TUb4P\n> >\n> .\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381322152>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AfYwfxTUQ89s-bdalb_EhCzUQrSuqsOaks5todslgaJpZM4TUb4P>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381325215",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381325215",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/378",
        "id": 381325215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMyNTIxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-14T12:18:34Z",
        "updated_at": "2018-04-14T12:18:34Z",
        "author_association": "OWNER",
        "body": "Thanks. I'll have a proper look ASAP, but: excited about this, cheers.\n\nOn Sat, 14 Apr 2018, 12:57 szehetner, <notifications@github.com> wrote:\n\n> Yes sure, you can use it under whatever license you like.\n>\n> Marc Gravell <notifications@github.com> schrieb am Sa., 14. Apr. 2018,\n> 13:19:\n>\n> > Thank you, that's a nice piece of work. Can I confirm that you're happy\n> to\n> > freely contribute and donate the PR into the project license? (I really\n> > need to get a CLA bot!)\n> >\n> > On 13 Apr 2018 10:19 pm, \"szehetner\" <notifications@github.com> wrote:\n> >\n> > ProtoWriter.DemandSpace is called in every Write* method and would profit\n> > from being inlined. Currently it is too big, but by extracting the less\n> > common path into a seperate method it can now be inlined (tested with\n> > RyuJIT on .Net Framework 4.7.1). The perf gain is actually more than I\n> > would have expected (~46ms instead of ~51ms for serializing 100 000\n> simple\n> > objects). Benchmark code can be found here:\n> > https://gist.github.com/szehetner/6c11a0545f0600c1c5ae5cd23527a1d2\n> >\n> > The real world gain would probably be less as the benchmark code never\n> > needs to flush or resize, but should still be worthwile.\n> > ------------------------------\n> > You can view, comment on, or merge this pull request online at:\n> >\n> > https://github.com/mgravell/protobuf-net/pull/378\n> > Commit Summary\n> >\n> > - Enable inlining of ProtoWriter.DemandSpace\n> >\n> > File Changes\n> >\n> > - *M* src/protobuf-net/ProtoWriter.cs\n> > <https://github.com/mgravell/protobuf-net/pull/378/files#diff-0> (21)\n> >\n> > Patch Links:\n> >\n> > - https://github.com/mgravell/protobuf-net/pull/378.patch\n> > - https://github.com/mgravell/protobuf-net/pull/378.diff\n> >\n> > \u2014\n> > You are receiving this because you are subscribed to this thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/mgravell/protobuf-net/pull/378>, or mute the thread\n> > <\n> >\n> https://github.com/notifications/unsubscribe-auth/AABDsH13zdPfL3r4ejHLPpwNwQYW-7uDks5toRZOgaJpZM4TUb4P\n> > >\n> > .\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <\n> https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381322152>,\n> > or mute the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/AfYwfxTUQ89s-bdalb_EhCzUQrSuqsOaks5todslgaJpZM4TUb4P\n> >\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/378#issuecomment-381324116>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLPxizDZvQDybLWeUswHRJksLZbLks5toeQ5gaJpZM4TUb4P>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381713533",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/379#issuecomment-381713533",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/379",
        "id": 381713533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTcxMzUzMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-16T19:02:07Z",
        "updated_at": "2018-04-16T19:02:07Z",
        "author_association": "OWNER",
        "body": "Well that's curious! Could you try adding [ProtoMap(DisableMap=true)] just\nto see if that avoids it as a workaround?\n\nOn Mon, 16 Apr 2018, 19:20 bdelayen, <notifications@github.com> wrote:\n\n> [ProtoContract] public class LaClasse { [ProtoMember(1)] public\n> Dictionary<int, (DateTime, DateTime)> LeDic = new Dictionary<int,\n> (DateTime, DateTime)>(); }\n>\n>     `[Fact]\n>     public void WeirdTest()\n>     {\n>         var original = new LaClasse();\n>         original.LeDic.Add(10, (DateTime.MaxValue, DateTime.Now));\n>\n>         using (var ms = new MemoryStream())\n>         {\n>             Serializer.Serialize(ms, original);\n>             ms.Position = 0;\n>             var clone = Serializer.Deserialize<LaClasse>(ms);\n>\n>             Console.WriteLine(original.LeDic[10].Item2);\n>             Assert.Equal(original.LeDic[10], clone.LeDic[10]);\n>         }\n>     }`\n>\n> When using the latest git version of protobuf-net, this test works when\n> the library is built in debug, but it doesn't when built in release mode.\n>\n> This is the error, when using a release build (or the published nugets):\n> System.InvalidOperationException : It was not possible to prepare a\n> serializer for: ProtoBuf.unittest.Serializers.DateTimeTests+LaClasse ----\n> System.NotSupportedException : Type cannot be represented as a default\n> value: System.ValueTuple'2[[System.DateTime, mscorlib, Version=4.0.0.0,\n> Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.DateTime,\n> mscorlib, Version=4.0.0.0, Culture=neutral,\n> PublicKeyToken=b77a5c561934e089]]\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/379>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOEnUPgUTay-O03nVnMGvjgnDBQrks5tpODygaJpZM4TXBZ5>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381716853",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/379#issuecomment-381716853",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/379",
        "id": 381716853,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTcxNjg1Mw==",
        "user": {
            "login": "bdelayen",
            "id": 23526674,
            "node_id": "MDQ6VXNlcjIzNTI2Njc0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/23526674?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdelayen",
            "html_url": "https://github.com/bdelayen",
            "followers_url": "https://api.github.com/users/bdelayen/followers",
            "following_url": "https://api.github.com/users/bdelayen/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdelayen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdelayen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdelayen/subscriptions",
            "organizations_url": "https://api.github.com/users/bdelayen/orgs",
            "repos_url": "https://api.github.com/users/bdelayen/repos",
            "events_url": "https://api.github.com/users/bdelayen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdelayen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-16T19:12:59Z",
        "updated_at": "2018-04-16T19:12:59Z",
        "author_association": "NONE",
        "body": "It worked ! And it looks better than changing my code to use a class instead of a Tuple.\r\n\r\nThis is the GetProto<> from the Debug DLL (so still using a map)\r\n`syntax = \"proto2\";\r\nimport \"protobuf-net/bcl.proto\"; // schema for protobuf-net's handling of core .NET types\r\n\r\nmessage LaClasse {\r\n   map<int32,ValueTuple_DateTime_DateTime> LeDic = 1;\r\n}\r\nmessage ValueTuple_DateTime_DateTime {\r\n   optional _bcl_DateTime Item1 = 1;\r\n   optional _bcl_DateTime Item2 = 2;\r\n}\r\n`\r\n\r\nAnd this is the one with the release build + no map\r\n\r\n`syntax = \"proto2\";\r\nimport \"protobuf-net/bcl.proto\"; // schema for protobuf-net's handling of core .NET types\r\n\r\nmessage KeyValuePair_Int32_ValueTuple_DateTime_DateTime {\r\n   optional int32 Key = 1;\r\n   optional ValueTuple_DateTime_DateTime Value = 2;\r\n}\r\nmessage LaClasse {\r\n   repeated KeyValuePair_Int32_ValueTuple_DateTime_DateTime LeDic = 1;\r\n}\r\nmessage ValueTuple_DateTime_DateTime {\r\n   optional _bcl_DateTime Item1 = 1;\r\n   optional _bcl_DateTime Item2 = 2;\r\n}\r\n`\r\n\r\nThanks a lot !\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381723348",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/379#issuecomment-381723348",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/379",
        "id": 381723348,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTcyMzM0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-16T19:36:44Z",
        "updated_at": "2018-04-16T19:36:44Z",
        "author_association": "OWNER",
        "body": "k; please don't close this - there is definitely a bug that needs fixing\n\nOn 16 April 2018 at 20:13, bdelayen <notifications@github.com> wrote:\n\n> It worked ! And it looks better than changing my code to use a class\n> instead of a Tuple.\n>\n> This is the GetProto<> from the Debug DLL (so still using a map)\n> `syntax = \"proto2\";\n> import \"protobuf-net/bcl.proto\"; // schema for protobuf-net's handling of\n> core .NET types\n>\n> message LaClasse {\n> map<int32,ValueTuple_DateTime_DateTime> LeDic = 1;\n> }\n> message ValueTuple_DateTime_DateTime {\n> optional _bcl_DateTime Item1 = 1;\n> optional _bcl_DateTime Item2 = 2;\n> }\n> `\n>\n> And this is the one with the release build + no map\n>\n> `syntax = \"proto2\";\n> import \"protobuf-net/bcl.proto\"; // schema for protobuf-net's handling of\n> core .NET types\n>\n> message KeyValuePair_Int32_ValueTuple_DateTime_DateTime {\n> optional int32 Key = 1;\n> optional ValueTuple_DateTime_DateTime Value = 2;\n> }\n> message LaClasse {\n> repeated KeyValuePair_Int32_ValueTuple_DateTime_DateTime LeDic = 1;\n> }\n> message ValueTuple_DateTime_DateTime {\n> optional _bcl_DateTime Item1 = 1;\n> optional _bcl_DateTime Item2 = 2;\n> }\n> `\n>\n> Thanks a lot !\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/379#issuecomment-381716853>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNtEuCKrSVmWrny16OwRwm9zqcyZks5tpO08gaJpZM4TXBZ5>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/381989749",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/379#issuecomment-381989749",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/379",
        "id": 381989749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTk4OTc0OQ==",
        "user": {
            "login": "ltrzesniewski",
            "id": 7913492,
            "node_id": "MDQ6VXNlcjc5MTM0OTI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7913492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltrzesniewski",
            "html_url": "https://github.com/ltrzesniewski",
            "followers_url": "https://api.github.com/users/ltrzesniewski/followers",
            "following_url": "https://api.github.com/users/ltrzesniewski/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltrzesniewski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltrzesniewski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltrzesniewski/subscriptions",
            "organizations_url": "https://api.github.com/users/ltrzesniewski/orgs",
            "repos_url": "https://api.github.com/users/ltrzesniewski/repos",
            "events_url": "https://api.github.com/users/ltrzesniewski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltrzesniewski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-17T13:20:54Z",
        "updated_at": "2018-04-17T13:20:54Z",
        "author_association": "NONE",
        "body": "I've just updated protobuf-net and I'm getting the same error. \r\n\r\nI'm using a dictionary with a custom struct value rather than a `ValueTuple`, and it gives the same error message. I don't think it matters very much, but I'm mentioning this in case protobuf-net special-cases value structs (I don't know if it does special-casing for tuples of more than 7 elements to flatten their structure).\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/382048782",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/379#issuecomment-382048782",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/379",
        "id": 382048782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjA0ODc4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-17T16:05:18Z",
        "updated_at": "2018-04-17T16:05:18Z",
        "author_association": "OWNER",
        "body": "thanks; and as it happens: no, it doesn't do flattening of `ValueTuple<...>` - if you have 30 properties, there will be some inner messages for the `.Rest` members."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/382668640",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/22#issuecomment-382668640",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/22",
        "id": 382668640,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjY2ODY0MA==",
        "user": {
            "login": "superyyl",
            "id": 1296024,
            "node_id": "MDQ6VXNlcjEyOTYwMjQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1296024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superyyl",
            "html_url": "https://github.com/superyyl",
            "followers_url": "https://api.github.com/users/superyyl/followers",
            "following_url": "https://api.github.com/users/superyyl/following{/other_user}",
            "gists_url": "https://api.github.com/users/superyyl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superyyl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superyyl/subscriptions",
            "organizations_url": "https://api.github.com/users/superyyl/orgs",
            "repos_url": "https://api.github.com/users/superyyl/repos",
            "events_url": "https://api.github.com/users/superyyl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superyyl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-19T09:19:37Z",
        "updated_at": "2018-04-19T09:19:37Z",
        "author_association": "NONE",
        "body": "same problem"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/382709696",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/22#issuecomment-382709696",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/22",
        "id": 382709696,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcwOTY5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-19T12:06:10Z",
        "updated_at": "2018-04-19T12:06:10Z",
        "author_association": "OWNER",
        "body": "protogen has been completely rewritten in this timeframe. Are you (especially @superyyl, from the bump) talking about the *old* protogen, or the *new* protogen?\r\n\r\nIf you're talking about the old; that isn't going to get fixed, frankly; that code is toast.\r\n\r\nThe new protogen is available online or as a download from here: https://protogen.marcgravell.com/"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/383700282",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-383700282",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 383700282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzcwMDI4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-23T19:49:38Z",
        "updated_at": "2018-04-23T19:49:38Z",
        "author_association": "OWNER",
        "body": "Well that's curious. Unfortunately I do not currently have any iOS\nhardware, so I haven't seen this. I can try to have a look from the\nstacktrace, though, so thanks for that.\n\nNote: when I get back from redisconf, I plan to push forward with the\nbuild-time work specifically aimed at vastly improving the experience on\nAOT platforms like UWP or iOS by removing any attempt at il-emit. I won't\nlet that stop me from trying to fix the immediate issue, though!\n\nOn Mon, 23 Apr 2018, 14:01 delradie, <notifications@github.com> wrote:\n\n> We have a .net standard 2 library that is shared between projects on\n> multiple platforms (UWP, Xamarin.Android, Xamarin.ios) which references the\n> protobuf-net nugget v2.3.7\n>\n> On IOS only, when we download the serialised data and put it through\n> ProtoBuf.Serializer.Deserialize we receive the following exception, but\n> only on the first attempt. If the section of code allows for retrys then\n> the second attempt succeeds:\n>\n> Deserialiser code:\n>\n> public static TData DeserializeData<TData>(string settings) { byte[] b =\n> Convert.FromBase64String(settings); using (var stream = new\n> MemoryStream(b)) { stream.Seek(0, SeekOrigin.Begin); return\n> Serializer.Deserialize<TData>(stream); } }\n>\n> Received error:\n>\n> {System.InvalidOperationException: It was not possible to prepare a\n> serializer for:\n> Mercato.KnowledgeKube.PortableContracts.Definitions.Branding --->\n> System.PlatformNotSupportedException: Operation is not supported on this\n> platform. at System.Reflection.Emit.DynamicMethod..ctor (System.String\n> name, System.Type returnType, System.Type[] parameterTypes, System.Type\n> owner, System.Boolean skipVisibility) [0x00006] in\n> <7d10211390c5435e8d1f5d0674572de2>:0 at\n> ProtoBuf.Compiler.CompilerContext..ctor (System.Type associatedType,\n> System.Boolean isWriter, System.Boolean isStatic, ProtoBuf.Meta.TypeModel\n> model, System.Type inputType) [0x000cb] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Compiler.CompilerContext.BuildSerializer\n> (ProtoBuf.Serializers.IProtoSerializer head, ProtoBuf.Meta.TypeModel model)\n> [0x00007] in <52cb477be558428086f38d6ecd3d3e83>:0 --- End of inner\n> exception stack trace --- at\n> ProtoBuf.Compiler.CompilerContext.BuildSerializer\n> (ProtoBuf.Serializers.IProtoSerializer head, ProtoBuf.Meta.TypeModel model)\n> [0x0008b] in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Serializers.CompiledSerializer..ctor\n> (ProtoBuf.Serializers.IProtoTypeSerializer head, ProtoBuf.Meta.TypeModel\n> model) [0x0000d] in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Serializers.CompiledSerializer.Wrap\n> (ProtoBuf.Serializers.IProtoTypeSerializer head, ProtoBuf.Meta.TypeModel\n> model) [0x0000a] in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.MetaType.CompileInPlace () [0x00007] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.MetaType.get_Serializer () [0x00041] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.RuntimeTypeModel.Deserialize (System.Int32 key, System.Object\n> value, ProtoBuf.ProtoReader source) [0x0000c] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType (ProtoBuf.ProtoReader\n> reader, ProtoBuf.DataFormat format, System.Int32 tag, System.Type type,\n> System.Object& value, System.Boolean skipOtherFields, System.Boolean\n> asListItem, System.Boolean autoCreate, System.Boolean insideList,\n> System.Object parentListOrType) [0x00142] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.TryDeserializeList (ProtoBuf.Meta.TypeModel model,\n> ProtoBuf.ProtoReader reader, ProtoBuf.DataFormat format, System.Int32 tag,\n> System.Type listType, System.Type itemType, System.Object& value) [0x000b0]\n> in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType (ProtoBuf.ProtoReader\n> reader, ProtoBuf.DataFormat format, System.Int32 tag, System.Type type,\n> System.Object& value, System.Boolean skipOtherFields, System.Boolean\n> asListItem, System.Boolean autoCreate, System.Boolean insideList,\n> System.Object parentListOrType) [0x000a2] in\n> <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.DeserializeCore (ProtoBuf.ProtoReader reader,\n> System.Type type, System.Object value, System.Boolean noAutoCreate)\n> [0x0001f] in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.Deserialize (System.IO.Stream source, System.Object\n> value, System.Type type, ProtoBuf.SerializationContext context) [0x00022]\n> in <52cb477be558428086f38d6ecd3d3e83>:0 at\n> ProtoBuf.Meta.TypeModel.Deserialize (System.IO.Stream source, System.Object\n> value, System.Type type) [0x00000] in <52cb477be558428086f38d6ecd3d3e83>:0\n> at ProtoBuf.Serializer.Deserialize[T] (System.IO.Stream source) [0x00005]\n> in <52cb477be558428086f38d6ecd3d3e83>:0\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/381>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPzPK3n54-BNUGILHg7a2Fewgh5sks5trdCVgaJpZM4Tf2T8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/383741341",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-383741341",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 383741341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzc0MTM0MQ==",
        "user": {
            "login": "delradie",
            "id": 890421,
            "node_id": "MDQ6VXNlcjg5MDQyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/890421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delradie",
            "html_url": "https://github.com/delradie",
            "followers_url": "https://api.github.com/users/delradie/followers",
            "following_url": "https://api.github.com/users/delradie/following{/other_user}",
            "gists_url": "https://api.github.com/users/delradie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delradie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delradie/subscriptions",
            "organizations_url": "https://api.github.com/users/delradie/orgs",
            "repos_url": "https://api.github.com/users/delradie/repos",
            "events_url": "https://api.github.com/users/delradie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delradie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-23T22:20:16Z",
        "updated_at": "2018-04-23T22:20:16Z",
        "author_association": "NONE",
        "body": "Many thanks. It seems to be an issue with the combination of netstandard 2 and IOS. As a temporary workaround I've dropped the library that references protobuf down to standard 1.6 and it _seems_ to be OK, though I haven't fully exercised it yet"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/383801069",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-383801069",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 383801069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzgwMTA2OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-24T04:39:20Z",
        "updated_at": "2018-04-24T04:39:20Z",
        "author_association": "OWNER",
        "body": "iOS pretends to implement net standard 2.0? Yeah, I can see why that would\ncause problems! I'll see if I can add better runtime feature detection\n(basically: try something simple first).\n\nOn Mon, 23 Apr 2018, 23:20 delradie, <notifications@github.com> wrote:\n\n> Many thanks. It seems to be an issue with the combination of netstandard 2\n> and IOS. As a temporary workaround I've dropped the library that references\n> protobuf down to standard 1.6 and it *seems* to be OK, though I haven't\n> fully exercised it yet\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/381#issuecomment-383741341>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJbt9RR0Dmb1nStr_nkLm8v8EVt3ks5trlOggaJpZM4Tf2T8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384207419",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384207419",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384207419,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDIwNzQxOQ==",
        "user": {
            "login": "delradie",
            "id": 890421,
            "node_id": "MDQ6VXNlcjg5MDQyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/890421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delradie",
            "html_url": "https://github.com/delradie",
            "followers_url": "https://api.github.com/users/delradie/followers",
            "following_url": "https://api.github.com/users/delradie/following{/other_user}",
            "gists_url": "https://api.github.com/users/delradie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delradie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delradie/subscriptions",
            "organizations_url": "https://api.github.com/users/delradie/orgs",
            "repos_url": "https://api.github.com/users/delradie/repos",
            "events_url": "https://api.github.com/users/delradie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delradie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-25T08:37:53Z",
        "updated_at": "2018-04-25T08:37:53Z",
        "author_association": "NONE",
        "body": "Just to update, the switch down to lower version of netstandard HASN'T removed the problem. For some reason the contracts it was breaking on right at the start of processing are now working, but it still breaks in the same way on other contracts (from the same assembly) later in the code."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384242319",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384242319",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384242319,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI0MjMxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-25T10:36:44Z",
        "updated_at": "2018-04-25T10:36:44Z",
        "author_association": "OWNER",
        "body": "Which lower version are you targeting? IIRC it is only 1.0 that actually\nomits the API; you might want to try targeting 1.0\n\nOn Wed, 25 Apr 2018, 01:37 delradie, <notifications@github.com> wrote:\n\n> Just to update, the switch down to lower version of netstandard HASN'T\n> removed the problem. For some reason the contracts it was breaking on right\n> at the start of processing are now working, but it still breaks in the same\n> way on other contracts (from the same assembly) later in the code.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384207419>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsORrTSVGLzJBwKPLrNkUhAjx-eZ7ks5tsDXkgaJpZM4Tf2T8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384255118",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384255118",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384255118,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1NTExOA==",
        "user": {
            "login": "delradie",
            "id": 890421,
            "node_id": "MDQ6VXNlcjg5MDQyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/890421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delradie",
            "html_url": "https://github.com/delradie",
            "followers_url": "https://api.github.com/users/delradie/followers",
            "following_url": "https://api.github.com/users/delradie/following{/other_user}",
            "gists_url": "https://api.github.com/users/delradie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delradie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delradie/subscriptions",
            "organizations_url": "https://api.github.com/users/delradie/orgs",
            "repos_url": "https://api.github.com/users/delradie/repos",
            "events_url": "https://api.github.com/users/delradie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delradie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-25T11:32:18Z",
        "updated_at": "2018-04-25T11:32:18Z",
        "author_association": "NONE",
        "body": "With netstandard 1.6 we saw the same behaviour as 2.0. The behaviour I described above, where it was still breaking, just not on the first contracts it hit, was with 1.0.\r\n\r\nOnce I'm clear of a couple of other bits of work I'm going to rebuild the IOS solution with protobuf integrated through source rather nugget and try and get a better understanding of what's going on. I'll keep you posted"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384256111",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384256111",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384256111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1NjExMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-25T11:36:27Z",
        "updated_at": "2018-04-25T11:36:27Z",
        "author_association": "OWNER",
        "body": "That's odd; the 1.0 code doesn't have access to emit, AFAIK...\n\nOn Wed, 25 Apr 2018, 04:32 delradie, <notifications@github.com> wrote:\n\n> With netstandard 1.6 we saw the same behaviour as 2.0. The behaviour I\n> described above, where it was still breaking, just not on the first\n> contracts it hit, was with 1.0.\n>\n> Once I'm clear of a couple of other bits of work I'm going to rebuild the\n> IOS solution with protobuf integrated through source rather nugget and try\n> and get a better understanding of what's going on. I'll keep you posted\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384255118>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFOGHu3hvJ0s360tdbJcGvzrscf-ks5tsF7CgaJpZM4Tf2T8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384256348",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384256348",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384256348,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1NjM0OA==",
        "user": {
            "login": "delradie",
            "id": 890421,
            "node_id": "MDQ6VXNlcjg5MDQyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/890421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delradie",
            "html_url": "https://github.com/delradie",
            "followers_url": "https://api.github.com/users/delradie/followers",
            "following_url": "https://api.github.com/users/delradie/following{/other_user}",
            "gists_url": "https://api.github.com/users/delradie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delradie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delradie/subscriptions",
            "organizations_url": "https://api.github.com/users/delradie/orgs",
            "repos_url": "https://api.github.com/users/delradie/repos",
            "events_url": "https://api.github.com/users/delradie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delradie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-25T11:37:26Z",
        "updated_at": "2018-04-25T11:37:26Z",
        "author_association": "NONE",
        "body": "I will confess to being fairly new to the netstandard world, so I'm not ruling out that I've set some property wrong on one of the projects so it's not actually running in the way I thing it is"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384573803",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-384573803",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 384573803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDU3MzgwMw==",
        "user": {
            "login": "delradie",
            "id": 890421,
            "node_id": "MDQ6VXNlcjg5MDQyMQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/890421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delradie",
            "html_url": "https://github.com/delradie",
            "followers_url": "https://api.github.com/users/delradie/followers",
            "following_url": "https://api.github.com/users/delradie/following{/other_user}",
            "gists_url": "https://api.github.com/users/delradie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delradie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delradie/subscriptions",
            "organizations_url": "https://api.github.com/users/delradie/orgs",
            "repos_url": "https://api.github.com/users/delradie/repos",
            "events_url": "https://api.github.com/users/delradie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delradie/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-26T09:23:59Z",
        "updated_at": "2018-04-26T09:23:59Z",
        "author_association": "NONE",
        "body": "OK, I've spun up our code with protobuf integrated as code rather than a nugget reference and everything looks to be looking good on IOS with both netstandard 1.1 (I checked and it was 1.1 not 1.0 we were using due to the requirements of some other libraries we are using) and 2.0.\r\n\r\nDo you know when you are likely to be pushing up a new version to Nuget, maybe at least an experimental? I'll work round this for now though, now we have a working answer"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/384769914",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-384769914",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 384769914,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc2OTkxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-26T19:56:48Z",
        "updated_at": "2018-04-26T19:56:48Z",
        "author_association": "OWNER",
        "body": "My understanding is that this is now redundant in proto3, because of how\nthe decision is made as to whether to serialize data. In proto2, there was\na difference between \"the data wasn't set and the default was zero\" and\n\"the data was set to zero specifically\". In proto3 this is no longer the\ncase, so it isn't useful to ask \"was this specified\".\n\nHave I misunderstood the question?\n\nOn Thu, 26 Apr 2018, 09:37 sailingson, <notifications@github.com> wrote:\n\n> Can I ask a question ? ( Not sure if this is an issue or I just need\n> clarification )\n>\n> Using protobuf-net project here, c# classes are generated from proto 2\n> syntax .proto files which do not include the \"fieldSpecified\" Boolean for\n> fields which are optional in the proto message.\n>\n> I understand proto 3 syntax does not include optional fields, but\n> shouldn't proto 2 optional feature be included as before ?\n>\n> I am concerned that this will break compatibility with my project where\n> the same .proto files are used on the java side and on the c# side. I\n> thought I would be able to continue using the proto 2 messages unchanged,\n> and introduce proto 3 messages as required.\n>\n> Thanks for your help,\n> Aengus\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/382>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsK18fUoB4uFh4skSi-talI_fm1aOks5tsfe2gaJpZM4Tl35t>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/385033024",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/383#issuecomment-385033024",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/383",
        "id": 385033024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAzMzAyNA==",
        "user": {
            "login": "vpaulino",
            "id": 859157,
            "node_id": "MDQ6VXNlcjg1OTE1Nw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/859157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vpaulino",
            "html_url": "https://github.com/vpaulino",
            "followers_url": "https://api.github.com/users/vpaulino/followers",
            "following_url": "https://api.github.com/users/vpaulino/following{/other_user}",
            "gists_url": "https://api.github.com/users/vpaulino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vpaulino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vpaulino/subscriptions",
            "organizations_url": "https://api.github.com/users/vpaulino/orgs",
            "repos_url": "https://api.github.com/users/vpaulino/repos",
            "events_url": "https://api.github.com/users/vpaulino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vpaulino/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-27T17:04:26Z",
        "updated_at": "2018-04-27T17:04:26Z",
        "author_association": "NONE",
        "body": "I Figured out... I was not using the attribute ProtoInclude.  Was it supposed to work with KnownType attribute too ? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/385603200",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/22#issuecomment-385603200",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/22",
        "id": 385603200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTYwMzIwMA==",
        "user": {
            "login": "superyyl",
            "id": 1296024,
            "node_id": "MDQ6VXNlcjEyOTYwMjQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1296024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superyyl",
            "html_url": "https://github.com/superyyl",
            "followers_url": "https://api.github.com/users/superyyl/followers",
            "following_url": "https://api.github.com/users/superyyl/following{/other_user}",
            "gists_url": "https://api.github.com/users/superyyl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superyyl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superyyl/subscriptions",
            "organizations_url": "https://api.github.com/users/superyyl/orgs",
            "repos_url": "https://api.github.com/users/superyyl/repos",
            "events_url": "https://api.github.com/users/superyyl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superyyl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-01T05:34:28Z",
        "updated_at": "2018-05-01T05:34:28Z",
        "author_association": "NONE",
        "body": "I use *.proto instead one by one, and resolved the problem."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/385931759",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/384#issuecomment-385931759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/384",
        "id": 385931759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTkzMTc1OQ==",
        "user": {
            "login": "zhenbeiju",
            "id": 2240331,
            "node_id": "MDQ6VXNlcjIyNDAzMzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2240331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhenbeiju",
            "html_url": "https://github.com/zhenbeiju",
            "followers_url": "https://api.github.com/users/zhenbeiju/followers",
            "following_url": "https://api.github.com/users/zhenbeiju/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhenbeiju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhenbeiju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhenbeiju/subscriptions",
            "organizations_url": "https://api.github.com/users/zhenbeiju/orgs",
            "repos_url": "https://api.github.com/users/zhenbeiju/repos",
            "events_url": "https://api.github.com/users/zhenbeiju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhenbeiju/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-02T10:20:10Z",
        "updated_at": "2018-05-02T10:20:10Z",
        "author_association": "NONE",
        "body": "I use this  in unity, only not work in ios"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/385962261",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/384#issuecomment-385962261",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/384",
        "id": 385962261,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk2MjI2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-02T12:33:53Z",
        "updated_at": "2018-05-02T12:33:53Z",
        "author_association": "OWNER",
        "body": "Is there some example type where this is happening? or does happen for all\nmodels?\n\nOn 2 May 2018 at 11:20, zhanglin <notifications@github.com> wrote:\n\n> I use this in unity, only not work in ios\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/384#issuecomment-385931759>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJ5gSeyEeXbTHzvbPPRduI7lscW0ks5tuYhcgaJpZM4TvMlB>\n> .\n>\n\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/386937864",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/384#issuecomment-386937864",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/384",
        "id": 386937864,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjkzNzg2NA==",
        "user": {
            "login": "zhenbeiju",
            "id": 2240331,
            "node_id": "MDQ6VXNlcjIyNDAzMzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2240331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhenbeiju",
            "html_url": "https://github.com/zhenbeiju",
            "followers_url": "https://api.github.com/users/zhenbeiju/followers",
            "following_url": "https://api.github.com/users/zhenbeiju/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhenbeiju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhenbeiju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhenbeiju/subscriptions",
            "organizations_url": "https://api.github.com/users/zhenbeiju/orgs",
            "repos_url": "https://api.github.com/users/zhenbeiju/repos",
            "events_url": "https://api.github.com/users/zhenbeiju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhenbeiju/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-07T02:06:29Z",
        "updated_at": "2018-05-07T02:06:29Z",
        "author_association": "NONE",
        "body": "looks  like happen on  all models,\r\nthis is  origin proto file content \r\n ```\r\nsyntax = \"proto3\";\r\npackage Dolphin.Protocol;\r\noption go_package = \"../module/userModule\";\r\n\r\nmessage User_Login_Request {\r\n    string username = 1;\r\n    string password = 2;\r\n}\r\n```\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/388591145",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388591145",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 388591145,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODU5MTE0NQ==",
        "user": {
            "login": "microknights",
            "id": 10939851,
            "node_id": "MDQ6VXNlcjEwOTM5ODUx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10939851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/microknights",
            "html_url": "https://github.com/microknights",
            "followers_url": "https://api.github.com/users/microknights/followers",
            "following_url": "https://api.github.com/users/microknights/following{/other_user}",
            "gists_url": "https://api.github.com/users/microknights/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/microknights/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/microknights/subscriptions",
            "organizations_url": "https://api.github.com/users/microknights/orgs",
            "repos_url": "https://api.github.com/users/microknights/repos",
            "events_url": "https://api.github.com/users/microknights/events{/privacy}",
            "received_events_url": "https://api.github.com/users/microknights/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-12T23:52:59Z",
        "updated_at": "2018-05-12T23:52:59Z",
        "author_association": "NONE",
        "body": "I get the exact same error on iOS (simulator ios 11.3). \r\n\r\nThe serializer is working on android with a .net core 2.0 (v2.1.200) backend (windows). The objects being serialized is placed in a .net standard 2.0 library and i'm using protobuf-net v.2.3.7\r\n\r\nIf more info is needed, just ask."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/388592073",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388592073",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 388592073,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODU5MjA3Mw==",
        "user": {
            "login": "microknights",
            "id": 10939851,
            "node_id": "MDQ6VXNlcjEwOTM5ODUx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10939851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/microknights",
            "html_url": "https://github.com/microknights",
            "followers_url": "https://api.github.com/users/microknights/followers",
            "following_url": "https://api.github.com/users/microknights/following{/other_user}",
            "gists_url": "https://api.github.com/users/microknights/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/microknights/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/microknights/subscriptions",
            "organizations_url": "https://api.github.com/users/microknights/orgs",
            "repos_url": "https://api.github.com/users/microknights/repos",
            "events_url": "https://api.github.com/users/microknights/events{/privacy}",
            "received_events_url": "https://api.github.com/users/microknights/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-13T00:14:24Z",
        "updated_at": "2018-05-13T00:14:24Z",
        "author_association": "NONE",
        "body": "The trace of inner exception is:\r\n```\r\n  at System.Reflection.Emit.DynamicMethod..ctor (System.String name, System.Type returnType, System.Type[] parameterTypes, System.Type owner, System.Boolean skipVisibility) [0x00006] in <52ecf0ed996f4cd598c50223305dbece>:0 \r\n  at ProtoBuf.Compiler.CompilerContext..ctor (System.Type associatedType, System.Boolean isWriter, System.Boolean isStatic, ProtoBuf.Meta.TypeModel model, System.Type inputType) [0x000cb] in <52cb477be558428086f38d6ecd3d3e83>:0 \r\n  at ProtoBuf.Compiler.CompilerContext.BuildSerializer (ProtoBuf.Serializers.IProtoSerializer head, ProtoBuf.Meta.TypeModel model) [0x00007] in <52cb477be558428086f38d6ecd3d3e83>:0 \r\n```\r\nand source of exception is: `System.Reflection.Emit.Lightweight`.\r\n\r\nI have nuget `System.Reflection.Emit v4.3.0` in my iOS project."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/388626021",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388626021",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 388626021,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODYyNjAyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-13T13:15:09Z",
        "updated_at": "2018-05-13T13:15:09Z",
        "author_association": "OWNER",
        "body": "K, I'll try to hack a fix for this later today; it will be purely\nspeculative based on the sulymptoms, as I lack the hardware to test it\ndirectly. I'll try to release it as preview build on NuGet.\n\nOn Sun, 13 May 2018, 01:14 Frank L\u00f8vendahl Nielsen, <\nnotifications@github.com> wrote:\n\n> The trace of inner exception is:\n>\n>   at System.Reflection.Emit.DynamicMethod..ctor (System.String name, System.Type returnType, System.Type[] parameterTypes, System.Type owner, System.Boolean skipVisibility) [0x00006] in <52ecf0ed996f4cd598c50223305dbece>:0\n>   at ProtoBuf.Compiler.CompilerContext..ctor (System.Type associatedType, System.Boolean isWriter, System.Boolean isStatic, ProtoBuf.Meta.TypeModel model, System.Type inputType) [0x000cb] in <52cb477be558428086f38d6ecd3d3e83>:0\n>   at ProtoBuf.Compiler.CompilerContext.BuildSerializer (ProtoBuf.Serializers.IProtoSerializer head, ProtoBuf.Meta.TypeModel model) [0x00007] in <52cb477be558428086f38d6ecd3d3e83>:0\n>\n> and source of exception is: System.Reflection.Emit.Lightweight.\n>\n> I have nuget System.Reflection.Emit v4.3.0 in my iOS project.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388592073>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNNBY5rkqzi8hvUx5QhgpeXVtLjaks5tx3rggaJpZM4Tf2T8>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/388655928",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388655928",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 388655928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY1NTkyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-13T21:05:26Z",
        "updated_at": "2018-05-13T21:05:26Z",
        "author_association": "OWNER",
        "body": "2.3.8-alpha1 has just [gone to nuget](https://www.nuget.org/packages/protobuf-net/2.3.8-alpha1); will update release notes etc in a moment"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/388940930",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/381#issuecomment-388940930",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/381",
        "id": 388940930,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk0MDkzMA==",
        "user": {
            "login": "microknights",
            "id": 10939851,
            "node_id": "MDQ6VXNlcjEwOTM5ODUx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10939851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/microknights",
            "html_url": "https://github.com/microknights",
            "followers_url": "https://api.github.com/users/microknights/followers",
            "following_url": "https://api.github.com/users/microknights/following{/other_user}",
            "gists_url": "https://api.github.com/users/microknights/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/microknights/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/microknights/subscriptions",
            "organizations_url": "https://api.github.com/users/microknights/orgs",
            "repos_url": "https://api.github.com/users/microknights/repos",
            "events_url": "https://api.github.com/users/microknights/events{/privacy}",
            "received_events_url": "https://api.github.com/users/microknights/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-14T19:52:02Z",
        "updated_at": "2018-05-14T19:52:02Z",
        "author_association": "NONE",
        "body": "Just tested 2.3.8-alpha1 and so far everything seems working.\r\n\r\nBig kudos for fast support, and overall work on this project "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389584921",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389584921",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389584921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU4NDkyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T16:37:27Z",
        "updated_at": "2018-05-16T16:37:27Z",
        "author_association": "OWNER",
        "body": "Do you have a minimal example of the setup here? I suspect the detail\nmatters. I'm not aware of a break here, but would need to see the scenario\nmore.\n\nOn Wed, 16 May 2018, 16:53 Reymmer, <notifications@github.com> wrote:\n\n> I encountered an annoying problem when trying to use protobuf-net in a\n> Xamarin.UWP project referencing protobuf-net as a .NET Standard library and\n> exchanging data with a Server in .NET Framework; i couldn't deserialize my\n> ProtoContract object properly.\n> What I have is :\n>\n>    - A Packet class containing a DynamicType field (object[])\n>    - A ContentWrapperBase class and a ContentWrapper (a surrogate) to\n>    wrap primitives as dynamic types in the aforementioned dynamic-type object\n>    array.\n>\n> However when deserializing server-wise I couldn't because protobuf-net\n> didn't know how to handle ContentWrapper<byte[]> (which it totally knew how\n> to handle) and it seems to me that the given byte type is not the same in\n> .NET Standard (referenced in a different assembly, hence a different\n> AssemblyQualifiedName). Is there a fix to that ?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/387>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFGIuRTNXIjZeH1y-osm3eckn3IDks5tzEtegaJpZM4UBlK0>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389628897",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389628897",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389628897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYyODg5Nw==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T18:57:55Z",
        "updated_at": "2018-05-16T19:09:09Z",
        "author_association": "NONE",
        "body": "Sure,\r\nhere is a picture of the error message:\r\n![protobuf-error](https://user-images.githubusercontent.com/39340671/40137664-37ba115a-594b-11e8-9140-abb2146429ea.PNG)\r\n\r\nThe full error message and stack trace is:\r\n```\r\nProtoBuf.ProtoException\r\n  HResult=0x80131500\r\n  Message=Unable to resolve type: Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (you can use the TypeModel.DynamicTypeFormatting event to provide a custom mapping)\r\n  Source=protobuf-net\r\n  Arborescence des appels de proc\u00e9dure(stacktrace)\u00a0:\r\n   at ProtoBuf.BclHelpers.ReadNetObject(Object value, ProtoReader source, Int32 key, Type type, NetObjectOptions options) in C:\\code\\protobuf-net\\src\\protobuf-net\\BclHelpers.cs:line 589\r\n   at ProtoBuf.Meta.TypeModel.DeserializeCore(ProtoReader reader, Type type, Object value, Boolean noAutoCreate) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 749\r\n   at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 607\r\n   at ProtoBuf.Serializer.Deserialize[T](Stream source) in C:\\code\\protobuf-net\\src\\protobuf-net\\Serializer.cs:line 84\r\n   at Akila.Framework.Network.ProtobufSerialization.DeserializePacket(Stream from) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Serialization.cs:line 154\r\n   at Akila.Framework.Network.Serialization.DeserializePacket(Stream from) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Serialization.cs:line 83\r\n   at Akila.Framework.Network.Client.__UnpackIncomingPacket() in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 1126\r\n   at Akila.Framework.Network.Client.__ProcessRcv(Int32 read) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 1010\r\n   at Akila.Framework.Network.Client.__DataReceived(IAsyncResult socket) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 905\r\n   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Net.ContextAwareResult.Complete(IntPtr userToken)\r\n   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)\r\n   at System.Net.Sockets.BaseOverlappedAsyncResult.CompletionPortCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)\r\n   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)\r\n```\r\n\r\nHere is a bit of code in the Packet class showing the dynamic contents serialized as content wrappers:\r\n![protobuf-pkcode](https://user-images.githubusercontent.com/39340671/40137770-7a9d5c66-594b-11e8-9eea-2f16bfb284c8.PNG)\r\n\r\nAnd here is the class declaration of ContentWrapper<T>, ContentWrapper base has nothing special except an object Property used to retrieve the T value as an object when deserializing.\r\n![protobuf-cwrapper](https://user-images.githubusercontent.com/39340671/40137820-9aada1c8-594b-11e8-9909-b093864f0aba.PNG)\r\n\r\nThe code is almost exactly the same in .NET Standard and .NET Framework, but as you can see when receiving the serialized data (the screen shows the server on .NET Framework) from .NET Standard, the byte[] type is referenced in System.Private.CoreLib, which I think is different from the normal one.\r\n\r\nAs far as the scenario goes, the project is the network extension of a framework and is aimed at providing a baseline to exchange structured data clusters, bind them to actions & events, etc.\r\nDue to the structure of the project itself, I can't know the types sent in advance in the contents of a packet. For this specific scenario giving me the error, the connection is being setup as encrypted and I'm sending a PGP public key. The contents of the packet (and thus those of the aforementioned object array) will be:\r\n\r\n- a byte array, the PGP public key\r\n- a DateTime acting as a timestamp to know when the key was factorized\r\n- another byte array, the key fingerprint to ensure matching\r\nIt seems the problem is on the first byte array."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389631646",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389631646",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389631646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYzMTY0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T19:07:14Z",
        "updated_at": "2018-05-16T19:07:14Z",
        "author_association": "OWNER",
        "body": "do you have any of that as code? images are great for getting the gist, but\nit is a lot of work to transcribe so I can try to repro\n\nOn Wed, 16 May 2018 at 19:57, Reymmer <notifications@github.com> wrote:\n\n> Sure,\n> here is a picture of the error message:\n> [image: protobuf-error]\n> <https://user-images.githubusercontent.com/39340671/40137664-37ba115a-594b-11e8-9140-abb2146429ea.PNG>\n>\n> The full error message and stack trace is:\n>\n> ProtoBuf.ProtoException\n>   HResult=0x80131500\n>   Message=Unable to resolve type: Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (you can use the TypeModel.DynamicTypeFormatting event to provide a custom mapping)\n>   Source=protobuf-net\n>   Arborescence des appels de proc\u00e9dure(stacktrace) :\n>    at ProtoBuf.BclHelpers.ReadNetObject(Object value, ProtoReader source, Int32 key, Type type, NetObjectOptions options) in C:\\code\\protobuf-net\\src\\protobuf-net\\BclHelpers.cs:line 589\n>    at ProtoBuf.Meta.TypeModel.DeserializeCore(ProtoReader reader, Type type, Object value, Boolean noAutoCreate) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 749\n>    at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 607\n>    at ProtoBuf.Serializer.Deserialize[T](Stream source) in C:\\code\\protobuf-net\\src\\protobuf-net\\Serializer.cs:line 84\n>    at Akila.Framework.Network.ProtobufSerialization.DeserializePacket(Stream from) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Serialization.cs:line 154\n>    at Akila.Framework.Network.Serialization.DeserializePacket(Stream from) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Serialization.cs:line 83\n>    at Akila.Framework.Network.Client.__UnpackIncomingPacket() in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 1126\n>    at Akila.Framework.Network.Client.__ProcessRcv(Int32 read) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 1010\n>    at Akila.Framework.Network.Client.__DataReceived(IAsyncResult socket) in F:\\Bibliotheques\\Documents\\Akila\\akila_temp\\Framework.Desktop\\Network\\Client.cs:line 905\n>    at System.Net.LazyAsyncResult.Complete(IntPtr userToken)\n>    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n>    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n>    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n>    at System.Net.ContextAwareResult.Complete(IntPtr userToken)\n>    at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)\n>    at System.Net.Sockets.BaseOverlappedAsyncResult.CompletionPortCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)\n>    at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)\n>\n> Here is a bit of code in the Packet class showing the dynamic contents\n> serialized as content wrappers:\n> [image: protobuf-pkcode]\n> <https://user-images.githubusercontent.com/39340671/40137770-7a9d5c66-594b-11e8-9eea-2f16bfb284c8.PNG>\n>\n> And here is the class declaration of ContentWrapper, ContentWrapper base\n> has nothing special except an object Property used to retrieve the T value\n> as an object when deserializing.\n> [image: protobuf-cwrapper]\n> <https://user-images.githubusercontent.com/39340671/40137820-9aada1c8-594b-11e8-9909-b093864f0aba.PNG>\n>\n> The code is almost exactly the same in .NET Standard and .NET Framework,\n> but as you can see when receiving the serialized data (the screen shows the\n> server on .NET Framework) from .NET Standard, the byte[] type is referenced\n> in System.Private.CoreLib, which I think is different from the normal one.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389628897>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHnzEKJ8ta9UHmQFPVhYiIIzAEJ-ks5tzHazgaJpZM4UBlK0>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389632699",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389632699",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389632699,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYzMjY5OQ==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T19:10:49Z",
        "updated_at": "2018-05-16T19:10:49Z",
        "author_association": "NONE",
        "body": "What do you need ? One or two files are ok but if you need more I'll send it privately.\r\n\r\nPS: Edited to add an short explanation and the scenario description"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389637180",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389637180",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389637180,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTYzNzE4MA==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T19:26:27Z",
        "updated_at": "2018-05-16T19:31:41Z",
        "author_association": "NONE",
        "body": "Here is the Packet.cs file. That's all you should need to reproduce the issue, remove all references\r\nto other files and just put ContentWrappers in __innerContents_ and serialize it from .NET Standard + deserialize from .NET Framework. \r\nYou can use ContentWrapperBase.Wrap to wrap a primitive, like that with byte arrays : `ContentWrapperBase.Wrap(typeof(byte[]), new byte[]{0,1,2,3,4,5}, out bool _)` or more simply `ContentWrapperBase.Wrap(new byte[]{0,1,2,3,4,5})` and it will return you a _ContentWrapper<byte[]>_.\r\n\r\nBy the way if you know how to factor that if tree without reflection I'm all ears\r\n[Packet.zip](https://github.com/mgravell/protobuf-net/files/2010524/Packet.zip)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/389688158",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-389688158",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 389688158,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY4ODE1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-16T22:38:45Z",
        "updated_at": "2018-05-16T22:38:45Z",
        "author_association": "OWNER",
        "body": "thanks, that should help - I will try to repro"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390333115",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390333115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390333115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDMzMzExNQ==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-18T21:09:29Z",
        "updated_at": "2018-05-18T21:10:03Z",
        "author_association": "NONE",
        "body": "I just checked and the assembly qualified name of ContentWrapper<byte> is as follows server-side (.NET Framework):\r\n```Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null```\r\n\r\n The _Byte_ type is referenced in **mscorlib** whereas it is referenced in **System.Private.CoreLib** with .NET Standard. The fix is simple, use another identifier as the assembly qualified name or add an option to protobuf-net to either use the _AssemblyQualifiedName_ or a less-specific but more versatile method (_FullName_ won't work because the generic type will use the _AssemblyQualifiedName_). Or bind the two types somehow?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390499575",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-390499575",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 390499575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ5OTU3NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-20T17:56:28Z",
        "updated_at": "2018-05-20T17:56:28Z",
        "author_association": "OWNER",
        "body": "Is this UWP? If so: there's a prerelease binary available on nuget; can you\ntry that?\n\nOn Sun, 20 May 2018, 18:21 Lersubem, <notifications@github.com> wrote:\n\n> The error code says:\n> MissingMethodException: Method 'DynamicMethod..ctor(string, Type, Type[],\n> Type, bool)' from assembly 'System.Reflection.Emit.Lightweight' was not\n> included in compilation, but was referenced in CompilerContext..ctor(Type,\n> bool, bool, TypeModel, Type). There may have been a missing assembly, or a\n> dependency on a more recent Windows SDK release.\n> this happens only when testing the app in Release but not in Debug\n> I am using the latest stable Universal Windows Application SDK and testing\n> on Desktop\n> Can you guys help me?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/388>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEJ8JQyZCwjKQ1gncbZUuzinK6tUks5t0aYcgaJpZM4UGJmy>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390761914",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/389#issuecomment-390761914",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/389",
        "id": 390761914,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc2MTkxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T19:48:05Z",
        "updated_at": "2018-05-21T19:48:05Z",
        "author_association": "OWNER",
        "body": "Each expectee T would need to be specified separately via an additional\n\"ProtoInclude\". Otherwise, there is no mechanism for it to know what data\nit will be deserializing at runtime. Does it work if you add a ProtoInclude\nfor typeof(Packet<ulong>) etc?\n\nOn Mon, 21 May 2018, 18:30 Reymmer, <notifications@github.com> wrote:\n\n> Hi,\n> I have my class structure like this:\n>\n> Packet\n> |-TPacket<T> : Packet\n> |--IntPacket : TPacket<int>\n> |--StringPacket : TPacket<string>\n> etc...\n>\n> I solved the closed generics issue using this thread\n> https://stackoverflow.com/questions/9408133/protobuf-net-protoinclude-generic-type-subclass?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\n> and added ProtoInclude(typeof(TPacket<int>)) on the *Packet* class, as\n> well as ProtoInclude(typeof(IntPacket)) on *TPacket* and for all other\n> subtypes of *TPacket*.\n> However I also need to be able to serialize *TPacket* using any other\n> type as T, for example there is no *ULongPacket* but I need to be able to\n> do *TPacket*. How do i define this in the protoinclude ?\n> Using ProtoInclude(typeof(TPacket<>)) gives me an error when preparing\n> the serializer.\n>\n> Thanks\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/389>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNAgeBS8WXNUQomgBADYnKogaPuaks5t0vm6gaJpZM4UHV-z>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390767015",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/390#issuecomment-390767015",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/390",
        "id": 390767015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc2NzAxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T20:07:57Z",
        "updated_at": "2018-05-21T20:07:57Z",
        "author_association": "OWNER",
        "body": "Can you help me by providing some examples of when it will.behave\ndifferently now? I acknowledge that due to this being Program.cs it isn't\nreally convenient to show via a unit test, but just some clear examples\nwould really help review this.\n\nOn Mon, 21 May 2018, 20:58 RansomVO, <notifications@github.com> wrote:\n\n> This allows the easy use of \"***.proto\" from the cwd.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/mgravell/protobuf-net/pull/390\n> Commit Summary\n>\n>    - Allow relative paths in parameters --proto_path and --csharp_out.\n>\n> File Changes\n>\n>    - *M* src/protogen/Program.cs\n>    <https://github.com/mgravell/protobuf-net/pull/390/files#diff-0> (12)\n>\n> Patch Links:\n>\n>    - https://github.com/mgravell/protobuf-net/pull/390.patch\n>    - https://github.com/mgravell/protobuf-net/pull/390.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/390>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNiPe3wRQfvvT-Vg3LL9_U_S4cLSks5t0xxigaJpZM4UHiDK>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390774872",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/390#issuecomment-390774872",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/390",
        "id": 390774872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc3NDg3Mg==",
        "user": {
            "login": "RansomVO",
            "id": 30580736,
            "node_id": "MDQ6VXNlcjMwNTgwNzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30580736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RansomVO",
            "html_url": "https://github.com/RansomVO",
            "followers_url": "https://api.github.com/users/RansomVO/followers",
            "following_url": "https://api.github.com/users/RansomVO/following{/other_user}",
            "gists_url": "https://api.github.com/users/RansomVO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RansomVO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RansomVO/subscriptions",
            "organizations_url": "https://api.github.com/users/RansomVO/orgs",
            "repos_url": "https://api.github.com/users/RansomVO/repos",
            "events_url": "https://api.github.com/users/RansomVO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RansomVO/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T20:37:18Z",
        "updated_at": "2018-05-21T20:38:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "For example, I am working on a project in the cloud, which ends up with different paths on two of the machines I use. (D:\\rvanorman\\OneDrive\\... on one machine and C:\\ranso\\OneDrive on another.) The project is going to reference a set of just over 400 .proto files that are in a hierachy of 33 folders. And these .proto files are expected to change multiple times a year.\r\n\r\nI wanted to create a .cmd file that would easily generate all of the code I needed, regardless of which machine I was on. With these changes, I can do:\r\n    `protogen.exe --proto_path=.  --csharp_out=..\\Templates\\ **\\*.proto`\r\n\r\nPreviously, the \"`.`\" or \"`..`\" at the start of each of the parameters caused the following issues:\r\n-  'new URI()' would throw a UriFormatException because it is not an absolute path.\r\n- If `UriKind.RelativeOrAbsolute` was added, then `.Scheme` on the next line threw an exception.\r\n- If a check for `IsAbsoluteUri` was just added to the `if` on `.Scheme` then `fromUri.MakeRelativeUri(toUri)` threw an exception.\r\n\r\nWith the proposed changes, the Uri constructed is checked to see if it `IsAbsoluteUri`, and if it is not it tries to create an absolute path by combining the cwd and the path.\r\nIf for some reason that fails, the user is no worse off than before.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390775984",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/390#issuecomment-390775984",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/390",
        "id": 390775984,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc3NTk4NA==",
        "user": {
            "login": "RansomVO",
            "id": 30580736,
            "node_id": "MDQ6VXNlcjMwNTgwNzM2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/30580736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RansomVO",
            "html_url": "https://github.com/RansomVO",
            "followers_url": "https://api.github.com/users/RansomVO/followers",
            "following_url": "https://api.github.com/users/RansomVO/following{/other_user}",
            "gists_url": "https://api.github.com/users/RansomVO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RansomVO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RansomVO/subscriptions",
            "organizations_url": "https://api.github.com/users/RansomVO/orgs",
            "repos_url": "https://api.github.com/users/RansomVO/repos",
            "events_url": "https://api.github.com/users/RansomVO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RansomVO/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T20:41:23Z",
        "updated_at": "2018-05-21T20:41:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "NOTE: A unit test could be created:\r\n     `Program.MakeRelativePath(\".\", \"..\\Code\");`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390782690",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390782690",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390782690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc4MjY5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T21:05:52Z",
        "updated_at": "2018-05-21T21:05:52Z",
        "author_association": "OWNER",
        "body": "Apologies for the delay; my weekend turned out to be busier than I expected. I've tried to have a look locally, and I can't get `Akila.Framework` to resolve - I can't see that on nuget or similar - is that your private code? But; it sounds like the problem here is that the assembly-qualified-name is different for Akila between the two platforms. Normally protobuf-net doesn't deal with types, but by enabling the dynamic type option, it has stored the assembly qualified name in the output.\r\n\r\nIn that case, to quote from the bottom of the exception message in the screen-shot:\r\n\r\n> (you can use the TypeModel.DynamicTypeFormatting event to provide a custom mapping)\r\n\r\nThis might be done something like:\r\n\r\n        RuntimeTypeModel.Default.DynamicTypeFormatting += ParseTypeNames;\r\n\r\n        private static void ParseTypeNames(object sender, TypeFormatEventArgs args)\r\n        {\r\n            if (args.FormattedName == \"TheActualType, blah, get the full value by checking at debug\")\r\n                args.Type = typeof(TheActualType);\r\n        }\r\n\r\nThis API can be used in both directions by checking which of `FormattedName` and `Type` have values. Presumably the strings needed here are the ones from your post above.\r\n\r\nDoes that help at all? It is a little hard for me to do an end-to-end example without being able to build it, which I can't do without locating \"Akila\"."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390806147",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390806147",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390806147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgwNjE0Nw==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T22:50:18Z",
        "updated_at": "2018-05-21T22:50:18Z",
        "author_association": "NONE",
        "body": "Akila is indeed my private code but you shouldn't really need it (really, all as far as protobuf is concerned is serialize and send the packet as well as receiving it).\r\n\r\nThe problem indeed comes from the assembly qualified name, see my post right above yours.\r\nIt would seem your code allows for \"type binding\", meaning I would check formatted name and if it equals say the assembly qualified name of _ContentWrapper<byte>_ from .NET Standard, then I return _typeof(byte)_ ? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390806420",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/389#issuecomment-390806420",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/389",
        "id": 390806420,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgwNjQyMA==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T22:51:45Z",
        "updated_at": "2018-05-21T22:52:50Z",
        "author_association": "NONE",
        "body": "Yes it works with said ProtoInclude. However some types that I can't know in advance may be serialized and registering them at runtime is little to no option because it's a server-client configuration and the other side won't know about the type even if I add it dynamically on one end. Isn't it possible to embed the generic type ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390811806",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/389#issuecomment-390811806",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/389",
        "id": 390811806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgxMTgwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T23:21:02Z",
        "updated_at": "2018-05-21T23:21:02Z",
        "author_association": "OWNER",
        "body": "If they can't be known in advance or configured at runtime, then the\nlibrary isn't going to have a way of deserializing them. The \"any T\"\nscenario simply isn't a supported scenario, as it still needs to be encoded\nsomehow, and protocol buffers doesn't include type metadata. protobuf-net\nhas some functions to fake that *in some scenarios*, but unfortunately I\ndon't think this is one of them.\n\nOn Mon, 21 May 2018 at 23:51, Reymmer <notifications@github.com> wrote:\n\n> Yes it works with said ProtoInclude. However some types that I can't know\n> in advance may be serialized and registering them at runtime is little to\n> no option because it's a server-client configuration and the other side\n> won't know about the type even if I add it dynamically on one end.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/389#issuecomment-390806420>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFGwNgUkCMAr-Phcz5ki9k2qFFMSks5t00UCgaJpZM4UHV-z>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390812606",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390812606",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390812606,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgxMjYwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T23:24:09Z",
        "updated_at": "2018-05-21T23:24:09Z",
        "author_association": "OWNER",
        "body": ">  but you shouldn't really need it\r\n\r\nWell, I was trying to get a minimal repro of what you were seeing, was the point - to make sure we were discussing the same point. The code did help understand what was happening, at least.\r\n\r\n> and if it equals say the assembly qualified name of ContentWrapper from .NET Standard, then I return typeof(byte) ?\r\n\r\nyou should tell it the *type to use* - which almost certainly isn't `typeof(byte)`. As I understand it, there is a `ContentWrapper` type in both the .NET and .NET Core versions - they just don't share an assembly identity (the AQN doesn't match); is that correct?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390866909",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/389#issuecomment-390866909",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/389",
        "id": 390866909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg2NjkwOQ==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T05:25:16Z",
        "updated_at": "2018-05-22T05:25:16Z",
        "author_association": "NONE",
        "body": "Okay what I'm going to do is serialize it using BinaryFormatter if protobuf throws an exception when serializing. Thanks anyway"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390867755",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390867755",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390867755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg2Nzc1NQ==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T05:30:56Z",
        "updated_at": "2018-05-22T05:30:56Z",
        "author_association": "NONE",
        "body": "yes my bad I meant _typeof(ContentWrapper<byte>)_\r\nContentWrapper is custom class in my code and it shares the same AQN in both versions ; what differs was the assembly location of the embedded generic type (**System.Private.CoreLib** in .NET Standard and **mscorlib** in .NET Framework)\r\n\r\nSo basically it would be something like that :\r\n```\r\nRuntimeTypeModel.Default.DynamicTypeFormatting += (object _, TypeFormatEventArgs args) => \r\n    {\r\n        if (args.FormattedName == \"Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\")\r\n            args.Type = typeof(ContentWrapper<byte>);\r\n    };\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390901050",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390901050",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390901050,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkwMTA1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T08:08:15Z",
        "updated_at": "2018-05-22T08:08:15Z",
        "author_association": "OWNER",
        "body": "I think so, yes. However!\n\nReading this with context, I see the subtlety here that I missed earlier.\nOriginally, I thought it was your type that had moved. I see now that it is\n.NET Core itself that is to blame here.\n\nIn this case, it feels like this is something the library should shim over\ninternally without you noticing. And without everyone needing to add this\nevent hook.\n\nI will try to set up a local runnable repro and investigate.\n\nOn Tue, 22 May 2018, 06:30 Reymmer, <notifications@github.com> wrote:\n\n> yes my bad I meant *typeof(ContentWrapper)*\n> ContentWrapper is custom class in my code and it shares the same AQN in\n> both versions ; what differs was the assembly location of the embedded\n> generic type (*System.Private.CoreLib* in .NET Standard and *mscorlib* in\n> .NET Framework)\n>\n> So basically it would be something like that :\n>\n> RuntimeTypeModel.Default.DynamicTypeFormatting += (object _, TypeFormatEventArgs args) =>\n>     {\n>         if (args.FormattedName == \"Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\")\n>             args.Type = typeof(ContentWrapper<byte>);\n>     };\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390867755>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsIcromOZaebcWttITBnEjRwc4QvXks5t06KQgaJpZM4UBlK0>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390911752",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390911752",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390911752,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkxMTc1Mg==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T08:45:42Z",
        "updated_at": "2018-05-22T08:45:42Z",
        "author_association": "NONE",
        "body": "Okay, I'll wait for that then. How would you handle the fact that, say, in my case the \"faulty\" AQN is wrapped in another one ?\r\n\r\nBy the way if you need anything (code samples...) I can provide them in private."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390937263",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390937263",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390937263,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkzNzI2Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T10:09:51Z",
        "updated_at": "2018-05-22T10:09:51Z",
        "author_association": "OWNER",
        "body": ">  How would you handle the fact that, say, in my case the \"faulty\" AQN is\nwrapped in another one ?\n\nI haven't tried hacking it in yet; my initial hunch is that since it is\nonly the assembly part that changes, it should be a simple string operation.\n\nOn Tue, 22 May 2018 at 09:45, Reymmer <notifications@github.com> wrote:\n\n> Okay, I'll wait for that then. How would you handle the fact that, say, in\n> my case the \"faulty\" AQN is wrapped in another one ?\n>\n> By the way if you need anything (code samples...) I can provide them in\n> private.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390911752>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCyLugLRfdQICV0tCh8B0r-KjK7Bks5t09A7gaJpZM4UBlK0>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/390951805",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/387#issuecomment-390951805",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/387",
        "id": 390951805,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDk1MTgwNQ==",
        "user": {
            "login": "Reymmer",
            "id": 39340671,
            "node_id": "MDQ6VXNlcjM5MzQwNjcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39340671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Reymmer",
            "html_url": "https://github.com/Reymmer",
            "followers_url": "https://api.github.com/users/Reymmer/followers",
            "following_url": "https://api.github.com/users/Reymmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Reymmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Reymmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Reymmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Reymmer/orgs",
            "repos_url": "https://api.github.com/users/Reymmer/repos",
            "events_url": "https://api.github.com/users/Reymmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Reymmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T11:07:16Z",
        "updated_at": "2018-05-22T11:07:16Z",
        "author_association": "NONE",
        "body": "The AQN is as follows:\r\n```Akila.Framework.Network.Packets.ContentWrapper`1[[System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Framework.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null```\r\n\r\nYou can see here that the problem is that the bad AQN is the one of the embedded generic type. You would need to have a different behaviour for data sent from .NET Standard and received to .NET Framework (or the opposite)\r\n1) .NET \"raw\" (non-generic) types\r\n2) generic types which embed a .NET type, such as in my case\r\n\r\nIn the worst scenario you could even have a .NET type embedded in several layers of generic objects (think something like `ContentWrapper<ContentWrapper<byte>>`). You would then need to check:\r\n\r\n- if the type is a .NET raw type\r\n- or if it is a ProtoContract object AND a generic object and recursively check the generic types to then replace the assembly in the AQN\r\n\r\nThat's my 2 cents though, I'm not sure this is clear"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/391156748",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/335#issuecomment-391156748",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/335",
        "id": 391156748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1Njc0OA==",
        "user": {
            "login": "akatz0813",
            "id": 7572738,
            "node_id": "MDQ6VXNlcjc1NzI3Mzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7572738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akatz0813",
            "html_url": "https://github.com/akatz0813",
            "followers_url": "https://api.github.com/users/akatz0813/followers",
            "following_url": "https://api.github.com/users/akatz0813/following{/other_user}",
            "gists_url": "https://api.github.com/users/akatz0813/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akatz0813/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akatz0813/subscriptions",
            "organizations_url": "https://api.github.com/users/akatz0813/orgs",
            "repos_url": "https://api.github.com/users/akatz0813/repos",
            "events_url": "https://api.github.com/users/akatz0813/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akatz0813/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-22T22:08:43Z",
        "updated_at": "2018-05-24T11:40:47Z",
        "author_association": "NONE",
        "body": "@mgravell is this issue slated for an upcoming release?\r\n\r\nI was able to have a custom build that effectively applies DisableMap by default. Do you happen to know if the impact of globally disabling the new map functionality?   It does seem quite buggy to the point where it might make sense to have it disabled by default and enabled with config.  FWIW we ran into not only the null to empty string issue, but also failure when building in Release due to the auto complication. Disabling Maps by forcing vm.IsMap to false resolved these. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/391282193",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/391#issuecomment-391282193",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/391",
        "id": 391282193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI4MjE5Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-23T09:26:13Z",
        "updated_at": "2018-05-23T09:26:13Z",
        "author_association": "OWNER",
        "body": "I quite like this (it is also related to https://github.com/mgravell/protobuf-net/commit/b2e3921717d3fe22a2656bd6891203a56e04e8d3 which added type-level surrogate/attribute support). So; gets a \ud83d\udc4d conceptually. Will need some minor tweaks to implement, but shouldn't be too hard, I don't think."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/391287806",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/391#issuecomment-391287806",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/391",
        "id": 391287806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTI4NzgwNg==",
        "user": {
            "login": "prodigga",
            "id": 185220,
            "node_id": "MDQ6VXNlcjE4NTIyMA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/185220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodigga",
            "html_url": "https://github.com/prodigga",
            "followers_url": "https://api.github.com/users/prodigga/followers",
            "following_url": "https://api.github.com/users/prodigga/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodigga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodigga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodigga/subscriptions",
            "organizations_url": "https://api.github.com/users/prodigga/orgs",
            "repos_url": "https://api.github.com/users/prodigga/repos",
            "events_url": "https://api.github.com/users/prodigga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodigga/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-23T09:45:07Z",
        "updated_at": "2018-05-23T09:45:41Z",
        "author_association": "NONE",
        "body": "Sweet, will keep an eye on this and give feedback when/if it gets implemented :) thanks Marc"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/394957342",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-394957342",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 394957342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk1NzM0Mg==",
        "user": {
            "login": "Lersubem",
            "id": 31462935,
            "node_id": "MDQ6VXNlcjMxNDYyOTM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/31462935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lersubem",
            "html_url": "https://github.com/Lersubem",
            "followers_url": "https://api.github.com/users/Lersubem/followers",
            "following_url": "https://api.github.com/users/Lersubem/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lersubem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lersubem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lersubem/subscriptions",
            "organizations_url": "https://api.github.com/users/Lersubem/orgs",
            "repos_url": "https://api.github.com/users/Lersubem/repos",
            "events_url": "https://api.github.com/users/Lersubem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lersubem/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-06T06:39:44Z",
        "updated_at": "2018-06-06T06:40:04Z",
        "author_association": "NONE",
        "body": "Yes its UWP, I could build the project in release mode, when after launching the app i still get the same error\r\nPlz help me"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/394990792",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/236#issuecomment-394990792",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/236",
        "id": 394990792,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDk5MDc5Mg==",
        "user": {
            "login": "Lersubem",
            "id": 31462935,
            "node_id": "MDQ6VXNlcjMxNDYyOTM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/31462935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lersubem",
            "html_url": "https://github.com/Lersubem",
            "followers_url": "https://api.github.com/users/Lersubem/followers",
            "following_url": "https://api.github.com/users/Lersubem/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lersubem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lersubem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lersubem/subscriptions",
            "organizations_url": "https://api.github.com/users/Lersubem/orgs",
            "repos_url": "https://api.github.com/users/Lersubem/repos",
            "events_url": "https://api.github.com/users/Lersubem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lersubem/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-06T08:42:03Z",
        "updated_at": "2018-06-06T08:42:17Z",
        "author_association": "NONE",
        "body": "The same problem happen to me\r\nAnd i still dont know the solution"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395563492",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395563492",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395563492,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU2MzQ5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-07T21:00:59Z",
        "updated_at": "2018-06-07T21:00:59Z",
        "author_association": "OWNER",
        "body": "Sure! Can you try here? https://protogensite-preview.azurewebsites.net/ (includes 1.0.6 of the command line tooling if you're using that). Example usage (note query-string to pre-select): https://protogensite-preview.azurewebsites.net/?oneof=enum#ga15dc111d6e6d786bedd2552ef98af77\r\n\r\nNote this needs a library tweak for the discriminated union support, which can be obtained here: https://www.nuget.org/packages/protobuf-net/2.3.8-alpha2"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395564006",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395564006",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395564006,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU2NDAwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-07T21:02:52Z",
        "updated_at": "2018-06-07T21:02:52Z",
        "author_association": "OWNER",
        "body": "tracking PR: https://github.com/mgravell/protobuf-net/pull/394"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395598430",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-395598430",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 395598430,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU5ODQzMA==",
        "user": {
            "login": "rwkarg",
            "id": 17482002,
            "node_id": "MDQ6VXNlcjE3NDgyMDAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17482002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwkarg",
            "html_url": "https://github.com/rwkarg",
            "followers_url": "https://api.github.com/users/rwkarg/followers",
            "following_url": "https://api.github.com/users/rwkarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwkarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwkarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwkarg/subscriptions",
            "organizations_url": "https://api.github.com/users/rwkarg/orgs",
            "repos_url": "https://api.github.com/users/rwkarg/repos",
            "events_url": "https://api.github.com/users/rwkarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwkarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-07T23:34:26Z",
        "updated_at": "2018-06-07T23:34:26Z",
        "author_association": "NONE",
        "body": "To be more precise, the proto 2 spec defines that there should _not_ be a difference between serializing the default value of an optional field vs. omitting the field.\r\nThe message serializer may choose either option at will.\r\nThe message deserializer must handle an omitted field as the default value.\r\n\r\n**However** many of the implementations from Google deviate from this by presenting a `has*` property for each optional field letting the deserializer make a distinction between omitted vs. explicitly default; an unfortunate circumstance but the world we now live in."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395599409",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-395599409",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 395599409,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU5OTQwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-07T23:40:18Z",
        "updated_at": "2018-06-07T23:40:18Z",
        "author_association": "OWNER",
        "body": "\" To be more precise, the proto 2 spec defines that there should *not* be a\ndifference between serializing the default value of an optional field vs.\nomitting the field.\"\n\nDo you have a citation about that?\n\nOn Fri, 8 Jun 2018 at 00:34, rwkarg <notifications@github.com> wrote:\n\n> To be more precise, the proto 2 spec defines that there should *not* be a\n> difference between serializing the default value of an optional field vs.\n> omitting the field.\n> The message serializer may choose either option at will.\n> The message deserializer must handle an omitted field as the default value.\n>\n> *However* many of the implementations from Google deviate from this by\n> presenting a has* property for each optional field letting the\n> deserializer make a distinction between omitted vs. explicitly default; an\n> unfortunate circumstance but the world we now live in.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/382#issuecomment-395598430>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBwaU1KtYKczP2bw3bo-doYRmBApks5t6biCgaJpZM4Tl35t>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395645036",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395645036",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395645036,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY0NTAzNg==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T04:42:36Z",
        "updated_at": "2018-06-08T04:42:36Z",
        "author_association": "NONE",
        "body": "This is amazing!\r\nWill it work for all c# versions? we use c# 4.\r\nWill it be an option in the commandLine protogen?\r\n \r\nAnother comment is the name of the enum and the property, you gave them the name of the first field in the oneof, can you give it the name of the one of? \r\nFor example:\r\n```\r\nmessage Packet {\r\n  oneof Content {\r\n    TypeOne One = 1;\r\n    TypeTwo Two = 2;\r\n  }\r\n}\r\n```\r\n\r\nThe name of the enum will be ContentOneofCase and the name of the property ContentCase.\r\n\r\nThank you so much for your quick response!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395664220",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395664220",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395664220,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY2NDIyMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T06:42:40Z",
        "updated_at": "2018-06-08T06:42:40Z",
        "author_association": "OWNER",
        "body": "Oops, that was a silly error. I will fix that ASAP. And yes, the codegen\nfor this has downlevel c# support - it defaults to \"latest\", but you can\nuse +langver=4 to tell it to use c# 4 syntax throughout. There isn't\ncurrently a UI for this in the web portal - I will add one.\n\nOn Fri, 8 Jun 2018, 05:42 omri1100, <notifications@github.com> wrote:\n\n> This is amazing!\n> Will it work for all c# versions? we use c# 4.\n> Will it be an option in the commandLine protogen?\n>\n> Another comment is the name of the enum and the property, you gave them\n> the name of the first field in the oneof, can you give it the name of the\n> one of?\n> For example:\n>\n> message Packet {\n>   oneof Content {\n>     TypeOne One = 1;\n>     TypeTwo Two = 2;\n>   }\n> }\n>\n> The name of the enum will be ContentOneofCase and the name of the property\n> ContentCase.\n>\n> Thank you so much for your quick response!\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395645036>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBsLlBwJrUPr8eqw7bN3hKd2WHnrks5t6gC_gaJpZM4Ue5F->\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395688845",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395688845",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395688845,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY4ODg0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T08:27:27Z",
        "updated_at": "2018-06-08T08:27:27Z",
        "author_association": "OWNER",
        "body": "@omri1100  try now; note you can also now choose the language version in the web UI (including via the query-string): https://protogensite-preview.azurewebsites.net/?oneof=enum&langver=3#ga15dc111d6e6d786bedd2552ef98af77"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395688925",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395688925",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395688925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY4ODkyNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T08:27:48Z",
        "updated_at": "2018-06-08T08:27:48Z",
        "author_association": "OWNER",
        "body": "(note: this is still in a branch/preview - I'm very keen on your feedback before I merge it)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395708717",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395708717",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395708717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTcwODcxNw==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T09:40:48Z",
        "updated_at": "2018-06-08T09:40:48Z",
        "author_association": "NONE",
        "body": "This is awesome!\r\nThank you so much!\r\n\r\nIf I will find anything else I will create an issue. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395711797",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395711797",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395711797,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTcxMTc5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T09:52:32Z",
        "updated_at": "2018-06-08T09:52:32Z",
        "author_association": "OWNER",
        "body": "@omri1100 in addition to issues: could also please let me know in the affirmative if it seems to be working, so I can release 2.3.8 and merge/deploy."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395771405",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/378#issuecomment-395771405",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/378",
        "id": 395771405,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3MTQwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:05:42Z",
        "updated_at": "2018-06-08T14:05:42Z",
        "author_association": "OWNER",
        "body": "merging for deploy in 2.3.8\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395771709",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/390#issuecomment-395771709",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/390",
        "id": 395771709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3MTcwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:06:45Z",
        "updated_at": "2018-06-08T14:06:45Z",
        "author_association": "OWNER",
        "body": "seems fine; merging for 2.3.8"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395774247",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/353#issuecomment-395774247",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/353",
        "id": 395774247,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3NDI0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:14:49Z",
        "updated_at": "2018-06-08T14:14:49Z",
        "author_association": "OWNER",
        "body": "Hi, sorry for delay - I tend to bounce between projects; I'm reviewing this, and when I try it I get:\r\n\r\n> The TargetFramework value '.NETPortable,Version=v4.0,Profile=Profile5' was not recognized. It may be misspelled.\r\n\r\nWhat do  I need to do/add for this to build?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395775629",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/346#issuecomment-395775629",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/346",
        "id": 395775629,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3NTYyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:19:32Z",
        "updated_at": "2018-06-08T14:19:32Z",
        "author_association": "OWNER",
        "body": "Looks great; merging with a view to release in 2.3.8, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395777292",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395777292",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395777292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3NzI5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:25:19Z",
        "updated_at": "2018-06-08T14:25:19Z",
        "author_association": "OWNER",
        "body": "Sorry for delay  I tend to bounce between different projects for large chunks of time; I have a slight concern about thread-safety here, since the dictionary access isn't synchronized in any way. Other than that, looks OK (although the intellisense comment moved between elements). If you don't have time to consider this, I can look at it (the thread safety) before 2.3.9"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395777502",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/307#issuecomment-395777502",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/307",
        "id": 395777502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3NzUwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:25:58Z",
        "updated_at": "2018-06-08T14:25:58Z",
        "author_association": "OWNER",
        "body": "Apologies for delay; that's on me; having a look now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395779602",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/307#issuecomment-395779602",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/307",
        "id": 395779602,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc3OTYwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:32:43Z",
        "updated_at": "2018-06-08T14:32:43Z",
        "author_association": "OWNER",
        "body": "Seems fine; merging for 2.3.8 - thanks for the input"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395780388",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/326#issuecomment-395780388",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/326",
        "id": 395780388,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4MDM4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:35:23Z",
        "updated_at": "2018-06-08T14:35:23Z",
        "author_association": "OWNER",
        "body": "merging for 2.3.8; thanks for the contribution"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395781238",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/361#issuecomment-395781238",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/361",
        "id": 395781238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4MTIzOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:38:04Z",
        "updated_at": "2018-06-08T14:38:04Z",
        "author_association": "OWNER",
        "body": "any feedback on the points I raised?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395784746",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/125#issuecomment-395784746",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/125",
        "id": 395784746,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4NDc0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:49:00Z",
        "updated_at": "2018-06-08T14:49:00Z",
        "author_association": "OWNER",
        "body": "thanks - appreciated; I guess I win a prize for longest time to merge a tiny doc change :/ - oops"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395786474",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/33#issuecomment-395786474",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/33",
        "id": 395786474,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4NjQ3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T14:54:31Z",
        "updated_at": "2018-06-08T14:54:31Z",
        "author_association": "OWNER",
        "body": "This is now obsoleted by #307, which should be in 2.3.8; but: appreciated, and sorry I was so tardy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395788914",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395788914",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395788914,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc4ODkxNA==",
        "user": {
            "login": "alex-sherman",
            "id": 9901978,
            "node_id": "MDQ6VXNlcjk5MDE5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9901978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-sherman",
            "html_url": "https://github.com/alex-sherman",
            "followers_url": "https://api.github.com/users/alex-sherman/followers",
            "following_url": "https://api.github.com/users/alex-sherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-sherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-sherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-sherman/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-sherman/orgs",
            "repos_url": "https://api.github.com/users/alex-sherman/repos",
            "events_url": "https://api.github.com/users/alex-sherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-sherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:01:53Z",
        "updated_at": "2018-06-08T15:01:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm happy to add thread safety, I could go about it a few ways:\r\n1. Synchronizing access\r\n  a. Using lock [(I think more performant)](https://stackoverflow.com/questions/15252115/concurrentdictionary-performance-at-a-single-thread-misunderstanding)\r\n  b. Using ConcurrentDictionary\r\n2. Isolating access using ThreadLocal\r\n\r\nI think my vote is just to lock the dictionary during reads and writes. I'll benchmark it again with the lock and see if this is still worth doing. Also let me know if you would prefer it some other way."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395794537",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395794537",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395794537,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5NDUzNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:20:07Z",
        "updated_at": "2018-06-08T15:20:07Z",
        "author_association": "OWNER",
        "body": "that quick fix is tempting looking, but significantly impacts the target plaftorms:\r\n\r\n![image](https://user-images.githubusercontent.com/17328/41166264-c26e8170-6b37-11e8-9cc2-54e2d0559de1.png)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395795279",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395795279",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395795279,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5NTI3OQ==",
        "user": {
            "login": "alex-sherman",
            "id": 9901978,
            "node_id": "MDQ6VXNlcjk5MDE5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9901978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-sherman",
            "html_url": "https://github.com/alex-sherman",
            "followers_url": "https://api.github.com/users/alex-sherman/followers",
            "following_url": "https://api.github.com/users/alex-sherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-sherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-sherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-sherman/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-sherman/orgs",
            "repos_url": "https://api.github.com/users/alex-sherman/repos",
            "events_url": "https://api.github.com/users/alex-sherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-sherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:22:35Z",
        "updated_at": "2018-06-08T15:22:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh gotcha! I'm curious why my VS is not showing the same warnings, but I can change it to use lock instead."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395796882",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395796882",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395796882,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5Njg4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:27:42Z",
        "updated_at": "2018-06-08T15:27:42Z",
        "author_association": "OWNER",
        "body": "awesome; you might also want to use `TryGetValue` at the same time so you only need to find the value once"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395798576",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-395798576",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 395798576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5ODU3Ng==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:32:56Z",
        "updated_at": "2018-06-08T15:33:53Z",
        "author_association": "NONE",
        "body": "It's working for now, but I'll know better in two days, when I'll get back to work"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395803151",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395803151",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395803151,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgwMzE1MQ==",
        "user": {
            "login": "alex-sherman",
            "id": 9901978,
            "node_id": "MDQ6VXNlcjk5MDE5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9901978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-sherman",
            "html_url": "https://github.com/alex-sherman",
            "followers_url": "https://api.github.com/users/alex-sherman/followers",
            "following_url": "https://api.github.com/users/alex-sherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-sherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-sherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-sherman/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-sherman/orgs",
            "repos_url": "https://api.github.com/users/alex-sherman/repos",
            "events_url": "https://api.github.com/users/alex-sherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-sherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T15:47:13Z",
        "updated_at": "2018-06-08T15:47:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "Updated to use `TryGetValue` and multiple assign the result if it fails, looks reasonably clean to me. Happy to make further changes."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395811344",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395811344",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395811344,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgxMTM0NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T16:15:03Z",
        "updated_at": "2018-06-08T16:15:03Z",
        "author_association": "OWNER",
        "body": "I'm really interested in merging this, but I'm a bit suspicious about deadlocks right now - there is *other* locking in other places, and I'm concerned about entrancy edge conditions that could cause a hard deadlock. I don't think I can get this in for 2.3.8, but I'm happy to keep looking at it with plans of a 2.3.9 release if we can be sure that it can't cause problems."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395812324",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395812324",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395812324,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgxMjMyNA==",
        "user": {
            "login": "alex-sherman",
            "id": 9901978,
            "node_id": "MDQ6VXNlcjk5MDE5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9901978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-sherman",
            "html_url": "https://github.com/alex-sherman",
            "followers_url": "https://api.github.com/users/alex-sherman/followers",
            "following_url": "https://api.github.com/users/alex-sherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-sherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-sherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-sherman/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-sherman/orgs",
            "repos_url": "https://api.github.com/users/alex-sherman/repos",
            "events_url": "https://api.github.com/users/alex-sherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-sherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T16:18:37Z",
        "updated_at": "2018-06-08T16:19:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yeah that's totally valid. I can take a look a bit as well and if you had an idea of the locks that might be problematic, could you let me know where they are and I'll skim over them.\r\n\r\nOtherwise do you do any kind of static analysis or something? Not really sure what's available for stuff like this."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395817155",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395817155",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395817155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTgxNzE1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T16:36:58Z",
        "updated_at": "2018-06-08T16:37:24Z",
        "author_association": "OWNER",
        "body": "Yeah, deadlocks are a huge PITA to reason over. I'm thinking the best option might be to move the `TakeLock` method down from `RuntimeTypeModel` to `TypeModel` (as an `internal` method, I think) - then everything can lock on the same thing and the issue largely goes away. What I need to do *for that* is make sure that nothing is locking *separately* on `types` (the current lock object). If everything uses `TakeLock`, we can make `TakeLock` work with the new dictionary (from this commit) as the sync object."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395845573",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395845573",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395845573,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg0NTU3Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:18:06Z",
        "updated_at": "2018-06-08T18:18:06Z",
        "author_association": "OWNER",
        "body": "Thought of a simple and pragmatic fix. Basically: don't nest the lookup inside the lock.\r\n\r\nConsider:\r\n\r\n```\r\nlock(obj) {\r\n    if(obj.TryGetValue(key, out var Val)) return val;\r\n}\r\n.... get value the hard way...\r\nlock(obj) {\r\n    obj[key] = value;\r\n}\r\n```\r\n\r\nNow because of the split lock, we don't ever get in the scenario where thread 1 has A and is acquiring B, and thread 2 has B and is acquiring A - because we never run interesting code inside the lock here.\r\n\r\nNote the use of indexer instead of Add so it doesn't matter if we end up running parallel to another thread and both calculating it.\r\n\r\nCare to apply that?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395849118",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395849118",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395849118,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg0OTExOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:30:51Z",
        "updated_at": "2018-06-08T18:30:51Z",
        "author_association": "OWNER",
        "body": "actually, I think I can tweak that while preserving your credit; taking a look (unless you beat me to it, obviously)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395851748",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395851748",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395851748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg1MTc0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:39:47Z",
        "updated_at": "2018-06-08T18:39:47Z",
        "author_association": "OWNER",
        "body": "need to make some additional changes; the code \"as shown\" doesn't actually meet the full contract - it doesn't correctly update the `ref Type` arg. Fixing that. Oddly, no tests break, but I'm nervous about changing the behaviour."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395854472",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395854472",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395854472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg1NDQ3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:49:31Z",
        "updated_at": "2018-06-08T18:49:31Z",
        "author_association": "OWNER",
        "body": "Can you please have a look at https://github.com/mgravell/protobuf-net/commit/da9b6ecf1ac62e18411bda1b1d88eb204f21a033 and see if you agree that it makes sense? ignore the vbproj change - that was just due to my local build"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395856396",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395856396",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395856396,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg1NjM5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:56:34Z",
        "updated_at": "2018-06-08T18:56:34Z",
        "author_association": "OWNER",
        "body": "merged and added to release notes for 2.3.8; would still value your eyeballs on that extra tweak I added"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395856597",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395856597",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395856597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg1NjU5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T18:57:12Z",
        "updated_at": "2018-06-08T18:57:12Z",
        "author_association": "OWNER",
        "body": "also: thanks! and... sorry it took so long for me to deal with it - backlog is my life"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395864010",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/310#issuecomment-395864010",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/310",
        "id": 395864010,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg2NDAxMA==",
        "user": {
            "login": "alex-sherman",
            "id": 9901978,
            "node_id": "MDQ6VXNlcjk5MDE5Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9901978?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-sherman",
            "html_url": "https://github.com/alex-sherman",
            "followers_url": "https://api.github.com/users/alex-sherman/followers",
            "following_url": "https://api.github.com/users/alex-sherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-sherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-sherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-sherman/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-sherman/orgs",
            "repos_url": "https://api.github.com/users/alex-sherman/repos",
            "events_url": "https://api.github.com/users/alex-sherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-sherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T19:24:48Z",
        "updated_at": "2018-06-08T19:24:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yeah no worries, that looks like a good solution to me. This also results in the fastest benchmark time I've seen, presumably because of skipping the resolve proxies step for successful lookups. Thanks for adding this!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395917383",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395917383",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395917383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkxNzM4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T23:18:45Z",
        "updated_at": "2018-06-08T23:18:45Z",
        "author_association": "OWNER",
        "body": "you're not wrong... I can't see any of these coming back ever"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395919646",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395919646",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395919646,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkxOTY0Ng==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T23:38:00Z",
        "updated_at": "2018-06-08T23:38:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Let me know your thoughts on dropping FEAT_IKVM too. This'll make it a lot easier to follow along in the codebase.\r\n\r\nWe may even consider increasing our minimum targets to NET4.5 & netstandard1.1 -- allowing us to take a dependency on System.Memory. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395920505",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395920505",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395920505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkyMDUwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-08T23:46:14Z",
        "updated_at": "2018-06-08T23:46:14Z",
        "author_association": "OWNER",
        "body": "IKVM is a dead horse; the lib has been abandoned, and it isn't the good route forward. Which is why I didn't do any work to keep the IKVM bits working in the updated code."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395927405",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395927405",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395927405,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkyNzQwNQ==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T00:53:49Z",
        "updated_at": "2018-06-09T00:53:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "That should be all the cruft."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395929542",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395929542",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395929542,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkyOTU0Mg==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T01:26:23Z",
        "updated_at": "2018-06-09T01:27:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "I also added a .NETCOREAPP2.1 target to avoid importing any dependencies there. Notably, this allows us to avoid pulling in System.Reflection.Emit.Lightweight which is no longer published."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395945731",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-395945731",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 395945731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk0NTczMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T06:50:24Z",
        "updated_at": "2018-06-09T06:50:24Z",
        "author_association": "OWNER",
        "body": "Yeah, the death of Emit.Lightweight is a PITA."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395964922",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-395964922",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 395964922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk2NDkyMg==",
        "user": {
            "login": "damian-sikora-playsoft",
            "id": 5371450,
            "node_id": "MDQ6VXNlcjUzNzE0NTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5371450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/damian-sikora-playsoft",
            "html_url": "https://github.com/damian-sikora-playsoft",
            "followers_url": "https://api.github.com/users/damian-sikora-playsoft/followers",
            "following_url": "https://api.github.com/users/damian-sikora-playsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/damian-sikora-playsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/damian-sikora-playsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/damian-sikora-playsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/damian-sikora-playsoft/orgs",
            "repos_url": "https://api.github.com/users/damian-sikora-playsoft/repos",
            "events_url": "https://api.github.com/users/damian-sikora-playsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/damian-sikora-playsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T12:16:56Z",
        "updated_at": "2018-06-09T12:16:56Z",
        "author_association": "NONE",
        "body": "Hi, any news on this issue? I have the same problem using v.2.3.9"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395966801",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-395966801",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 395966801,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk2NjgwMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T12:49:14Z",
        "updated_at": "2018-06-09T12:49:14Z",
        "author_association": "OWNER",
        "body": "I'll have to have another look."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395979451",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/397#issuecomment-395979451",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/397",
        "id": 395979451,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk3OTQ1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T15:54:57Z",
        "updated_at": "2018-06-09T15:54:57Z",
        "author_association": "OWNER",
        "body": "I haven't investigated IL2CPP. I can add that to my list, but it isn't\nsomething I've done yet.\n\nMid term, I have a plan that involves Roslyn-based pregeneration at build\ntime, which should be a huge change for Unity and other AOT scenarios.\n\nShort term, I could try to have a look at what is involved - I'm slightly\nhampered by a few factors:\n\n1: I'm not usually a unity developer\n2: I'm not usually an android developer\n\nWhich - combined - means I don't necessarily have the tools installed and\nready in order to investigate it.\n\nAs I say: happy to add to my list - the tricky thing is how to prioritise\nthis vs other things, time being  \"zero sum\".\n\nOn Sat, 9 Jun 2018, 01:16 Kichang Kim, <notifications@github.com> wrote:\n\n> Hi, I tested protobuf-net with Unity 2018 IL2CPP platform.\n>\n> Here is my test code :\n>\n> public class ProtobufTest : MonoBehaviour\n> {\n>     class ObjectPool<T> where T : new()\n>     {\n>         Stack<T> stack = new Stack<T>();\n>\n>         public T Take()\n>         {\n>             if (stack.Count > 0)\n>             {\n>                 return stack.Pop();\n>             }\n>             else\n>             {\n>                 Debug.Log($\"{typeof(T).Name} is allocated.\");\n>                 return new T();\n>             }\n>         }\n>\n>         public void Put(T value)\n>         {\n>             this.stack.Push(value);\n>         }\n>     }\n>\n>     [ProtoContract]\n>     class Person\n>     {\n>         static ObjectPool<Person> pool = new ObjectPool<Person>();\n>\n>         [ProtoMember(1)]\n>         public int Id { get; set; }\n>         [ProtoMember(2)]\n>         public string Name { get; set; }\n>         [ProtoMember(3)]\n>         public Address Address { get; set; }\n>\n>         public static Person Create()\n>         {\n>             return pool.Take();\n>         }\n>\n>         public static void Dispose(Person value)\n>         {\n>             pool.Put(value);\n>         }\n>     }\n>     [ProtoContract]\n>     class Address\n>     {\n>         static ObjectPool<Address> pool = new ObjectPool<Address>();\n>\n>         [ProtoMember(1)]\n>         public string Line1 { get; set; }\n>         [ProtoMember(2)]\n>         public string Line2 { get; set; }\n>\n>         public static Address Create()\n>         {\n>             return pool.Take();\n>         }\n>\n>         public static void Dispose(Address value)\n>         {\n>             pool.Put(value);\n>         }\n>     }\n>\n>     MemoryStream stream = new MemoryStream();\n>     Person source;\n>\n>     private void Start()\n>     {\n>         RuntimeTypeModel.Default.Add(typeof(Person), true).SetFactory(\"Create\");\n>         RuntimeTypeModel.Default.Add(typeof(Address), true).SetFactory(\"Create\");\n>         Serializer.PrepareSerializer<Person>();\n>         Serializer.PrepareSerializer<Address>();\n>\n>         this.source = new Person();\n>         this.source.Name = \"aaa\";\n>         this.source.Address = new Address() { Line1 = \"line1\", Line2 = \"line2\" };\n>\n>         Serializer.Serialize(stream, this.source);\n>         stream.Position = 0;\n>\n>         Person person2 = Serializer.Deserialize<Person>(stream);\n>\n>         Debug.Log(person2.Name);\n>     }\n> }\n>\n> In editor, above code works well. But in device, it says error like this:\n>\n> 06-09 09:09:38.149: E/Unity(24366): ExecutionEngineException: Attempting to call method 'System.Reflection.MonoProperty::GetterAdapterFrame<ProtoBuf.ProtoMemberAttribute,System.Int32>' for which no ahead of time (AOT) code was generated.\n> 06-09 09:09:38.149: E/Unity(24366): Rethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.\n> 06-09 09:09:38.149: E/Unity(24366):   at System.Reflection.MonoProperty.GetValue (System.Object obj, System.Object[] index) [0x00000] in <00000000000000000000000000000000>:0\n> 06-09 09:09:38.149: E/Unity(24366):\n> 06-09 09:09:38.149: E/Unity(24366): (Filename: currently not available on il2cpp Line: -1)\n>\n> protobuf-net is not supported IL2CPP platform yet?\n> Thanks.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/397>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFe9BPMcbZv1h-ThwNCQCUnVs7RLks5t6xPpgaJpZM4UhGKS>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395984952",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-395984952",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 395984952,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk4NDk1Mg==",
        "user": {
            "login": "damian-sikora-playsoft",
            "id": 5371450,
            "node_id": "MDQ6VXNlcjUzNzE0NTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5371450?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/damian-sikora-playsoft",
            "html_url": "https://github.com/damian-sikora-playsoft",
            "followers_url": "https://api.github.com/users/damian-sikora-playsoft/followers",
            "following_url": "https://api.github.com/users/damian-sikora-playsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/damian-sikora-playsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/damian-sikora-playsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/damian-sikora-playsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/damian-sikora-playsoft/orgs",
            "repos_url": "https://api.github.com/users/damian-sikora-playsoft/repos",
            "events_url": "https://api.github.com/users/damian-sikora-playsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/damian-sikora-playsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T17:15:29Z",
        "updated_at": "2018-06-09T17:15:29Z",
        "author_association": "NONE",
        "body": "Is it normal that its happening only on release build?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/395986333",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-395986333",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 395986333,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk4NjMzMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-09T17:37:12Z",
        "updated_at": "2018-06-09T17:37:12Z",
        "author_association": "OWNER",
        "body": "For UWP? Quite possibly. All bets of normality are off with UWP :)\n\nOn Sat, 9 Jun 2018, 18:15 damian-sikora-playsoft, <notifications@github.com>\nwrote:\n\n> Is it normal that its happening only on release build?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/388#issuecomment-395984952>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEcLCKLFieoDP-j7fnVIkPSbMicSks5t7AKxgaJpZM4UGJmy>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396058826",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-396058826",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 396058826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA1ODgyNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-10T15:41:35Z",
        "updated_at": "2018-06-10T15:41:35Z",
        "author_association": "OWNER",
        "body": "This should be fixed by 2.3.10; let me know of any problems"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396058990",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/388#issuecomment-396058990",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/388",
        "id": 396058990,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA1ODk5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-10T15:43:34Z",
        "updated_at": "2018-06-10T15:43:34Z",
        "author_association": "OWNER",
        "body": "Note: this fix makes things *work* - it doesn't make them work *optimally*; for that, I need to complete the build-time pregeneration, since IL emit isn't going to work with UWP"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396060135",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/393#issuecomment-396060135",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/393",
        "id": 396060135,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA2MDEzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-10T15:59:10Z",
        "updated_at": "2018-06-10T15:59:10Z",
        "author_association": "OWNER",
        "body": "considering closed pending further feedback"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396090553",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/377#issuecomment-396090553",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/377",
        "id": 396090553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjA5MDU1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-10T23:31:24Z",
        "updated_at": "2018-06-10T23:31:24Z",
        "author_association": "OWNER",
        "body": "2.3.8 added work around `GetKey` - see #310"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396164804",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396164804",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396164804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE2NDgwNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T08:33:19Z",
        "updated_at": "2018-06-11T08:33:19Z",
        "author_association": "OWNER",
        "body": "Yes, the code is currently written with \"latest\" in mind. I've done a quick check, and adding `<LangVersion>4.0</LangVersion>` requires somewhere in the region of 100 changes.\r\n\r\nI'm uncertain of the wisdom of forcing the library to adopt down-level C#; my understanding - right or wrong - is that unity should be able to consume the code *as a library*, in which case: the language version used **does not matter**. Is there a blocking issue with consuming the library *as a library*? Is there some additional build target / TFM that we should add, for example?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396170079",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396170079",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396170079,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3MDA3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T08:51:52Z",
        "updated_at": "2018-06-11T08:51:52Z",
        "author_association": "OWNER",
        "body": "lol; if you fix the first 100-or-so, you get more - as the compiler realises there are more invalid things"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396172246",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396172246",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396172246,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3MjI0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T08:58:56Z",
        "updated_at": "2018-06-11T08:58:56Z",
        "author_association": "OWNER",
        "body": "I pushed a branch there ^^^ to investigate what the impact of this would be; frankly, I consider many of those changes serious regressions, and I'd rather pursue **just about any alternative** than to merge that branch.\r\n\r\nSo: what is the issue that prevents Unity consuming this *as a library package*? That is my ideal solution here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396174871",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396174871",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396174871,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3NDg3MQ==",
        "user": {
            "login": "springlight",
            "id": 5945531,
            "node_id": "MDQ6VXNlcjU5NDU1MzE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5945531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/springlight",
            "html_url": "https://github.com/springlight",
            "followers_url": "https://api.github.com/users/springlight/followers",
            "following_url": "https://api.github.com/users/springlight/following{/other_user}",
            "gists_url": "https://api.github.com/users/springlight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/springlight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/springlight/subscriptions",
            "organizations_url": "https://api.github.com/users/springlight/orgs",
            "repos_url": "https://api.github.com/users/springlight/repos",
            "events_url": "https://api.github.com/users/springlight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/springlight/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T09:07:57Z",
        "updated_at": "2018-06-11T09:07:57Z",
        "author_association": "NONE",
        "body": "thanks for reply,using the src code as a library works perfect on android platform.but on IOS,it goes wrong JIT in unity does not work on IOS,cause some Serialization error"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396175379",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396175379",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396175379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3NTM3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T09:09:42Z",
        "updated_at": "2018-06-11T09:09:42Z",
        "author_association": "OWNER",
        "body": "Have you tried 2.3.10? Some changes went out over the weekend that might help with some categories of errors."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396175748",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396175748",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396175748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3NTc0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T09:11:02Z",
        "updated_at": "2018-06-11T09:11:02Z",
        "author_association": "OWNER",
        "body": "You might also get better experiences if you limit it to the NETStandard1.0 target - this omits the entire IL generation part of the codebase, which is probably where most of the iOS problems come in."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396176955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-396176955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 396176955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjE3Njk1NQ==",
        "user": {
            "login": "springlight",
            "id": 5945531,
            "node_id": "MDQ6VXNlcjU5NDU1MzE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5945531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/springlight",
            "html_url": "https://github.com/springlight",
            "followers_url": "https://api.github.com/users/springlight/followers",
            "following_url": "https://api.github.com/users/springlight/following{/other_user}",
            "gists_url": "https://api.github.com/users/springlight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/springlight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/springlight/subscriptions",
            "organizations_url": "https://api.github.com/users/springlight/orgs",
            "repos_url": "https://api.github.com/users/springlight/repos",
            "events_url": "https://api.github.com/users/springlight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/springlight/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T09:15:14Z",
        "updated_at": "2018-06-11T09:15:14Z",
        "author_association": "NONE",
        "body": "ok\uff0cI'll try 2.3.10 then "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396309409",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-396309409",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 396309409,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMwOTQwOQ==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T16:48:13Z",
        "updated_at": "2018-06-11T16:48:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "Do we have any builds that exclude the runtime (NO_RUNTIME)?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396343503",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-396343503",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 396343503,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0MzUwMw==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T18:38:37Z",
        "updated_at": "2018-06-11T18:38:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "I took a quick pass cleaning up things as well -- let me know if this went to far and I can revert all those commits.\r\n\r\nI think it makes sense to ONLY target NETCOREAPP to ensure we get fast Span for now. This also makes that runtime dependency free.\r\n\r\nI'm going to stop this PR here before I take things too far.\r\n\r\nAll tests continue to pass.\r\n\r\nWith the exception of the two BinaryPrimitive calls for reading and writing Int32 and Int64, none of these changes should impact performance. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396349097",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-396349097",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 396349097,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM0OTA5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T18:56:34Z",
        "updated_at": "2018-06-11T18:56:34Z",
        "author_association": "OWNER",
        "body": "Awesome work, thanks. I need to review it - will do ASAP."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396448444",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/400#issuecomment-396448444",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/400",
        "id": 396448444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQ0ODQ0NA==",
        "user": {
            "login": "duhaibo0404",
            "id": 8650648,
            "node_id": "MDQ6VXNlcjg2NTA2NDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8650648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duhaibo0404",
            "html_url": "https://github.com/duhaibo0404",
            "followers_url": "https://api.github.com/users/duhaibo0404/followers",
            "following_url": "https://api.github.com/users/duhaibo0404/following{/other_user}",
            "gists_url": "https://api.github.com/users/duhaibo0404/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duhaibo0404/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duhaibo0404/subscriptions",
            "organizations_url": "https://api.github.com/users/duhaibo0404/orgs",
            "repos_url": "https://api.github.com/users/duhaibo0404/repos",
            "events_url": "https://api.github.com/users/duhaibo0404/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duhaibo0404/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T02:47:15Z",
        "updated_at": "2018-06-12T02:48:06Z",
        "author_association": "NONE",
        "body": "i am find this issue\r\n\r\nset AutoCompile = false\r\n\r\nlike this:\r\n\r\n  \r\n#if FEAT_COMPILER && !FX11 && !DEBUG\r\n            **AutoCompile = false;**\r\n#endif\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396486785",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/400#issuecomment-396486785",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/400",
        "id": 396486785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQ4Njc4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T07:01:50Z",
        "updated_at": "2018-06-12T07:01:50Z",
        "author_association": "OWNER",
        "body": "I'm curious - do the changes in 2.3.10 also fail in this way? ( I don't have IL2CPP etc)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396523846",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/401#issuecomment-396523846",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/401",
        "id": 396523846,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjUyMzg0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T09:18:56Z",
        "updated_at": "2018-06-12T09:18:56Z",
        "author_association": "OWNER",
        "body": "Well shoot. Fixed in 2.3.11 which is now on nuget - thanks for the report, you are absolutely correct."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396843064",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/402#issuecomment-396843064",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/402",
        "id": 396843064,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg0MzA2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T07:34:17Z",
        "updated_at": "2018-06-13T07:34:17Z",
        "author_association": "OWNER",
        "body": "Now that is subtle and nuanced. I love it! I'll take a look today. What's your preferred outcome here? Which would you change? (I can't guarantee it'll be the way I go, I'm just interested in your view)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396855891",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/402#issuecomment-396855891",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/402",
        "id": 396855891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg1NTg5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T08:22:22Z",
        "updated_at": "2018-06-13T08:22:22Z",
        "author_association": "OWNER",
        "body": "Cause identified; fixing."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396863115",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/402#issuecomment-396863115",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/402",
        "id": 396863115,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg2MzExNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T08:47:28Z",
        "updated_at": "2018-06-13T08:47:28Z",
        "author_association": "OWNER",
        "body": "Thanks; this is fixed in the code; given that this bug is many many years old, it probably isn't critical to push out a new build *today* - I've been building and deploying quite frequently lately, so this will probably go out in the next few days; if you need it sooner, let me know."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396885857",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/401#issuecomment-396885857",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/401",
        "id": 396885857,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg4NTg1Nw==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T10:07:55Z",
        "updated_at": "2018-06-13T10:07:55Z",
        "author_association": "NONE",
        "body": "Thanks, the code I wrote yesterday is working now.\r\nBut something is still wrong. Not on the first call ,but sometimes it stops at the breakpoint in our application:\r\n\r\n![image](https://user-images.githubusercontent.com/3104253/41344803-4ade0558-6f02-11e8-989a-743ee057fc58.png)\r\n\r\nI'll try to reproduce the problem in a small test code."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396890514",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/401#issuecomment-396890514",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/401",
        "id": 396890514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg5MDUxNA==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T10:26:19Z",
        "updated_at": "2018-06-13T10:26:19Z",
        "author_association": "NONE",
        "body": "Please try this:\r\n```\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var baseType = typeof(MyBaseClass);\r\n            var type = typeof(MyClass);\r\n            var m = TypeModel.Create();\r\n\r\n            Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\r\n\r\n            var protoType = m.Add(baseType, true);\r\n\r\n            Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\r\n\r\n            m[baseType].AddSubType(100, type);\r\n\r\n            Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\r\n\r\n            var protoType2 = m.Add(type, true);\r\n\r\n            Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\r\n        }\r\n    }\r\n\r\n    class MyBaseClass\r\n    {\r\n        public string MyBaseProp { get; set; }\r\n    }\r\n\r\n    class MyClass : MyBaseClass\r\n    {\r\n        public string MyProp { get; set; }\r\n    }\r\n```\r\n\r\nIn v2.3.11 it outputs:\r\n```\r\nFalse,False\r\nFalse,True\r\nFalse,True\r\nFalse,True\r\n```\r\n\r\nIn v2.3.7 it was:\r\n```\r\nFalse,False\r\nFalse,True\r\nTrue,True\r\nTrue,True\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/396893714",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/401#issuecomment-396893714",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/401",
        "id": 396893714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg5MzcxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T10:40:01Z",
        "updated_at": "2018-06-13T10:40:01Z",
        "author_association": "OWNER",
        "body": "Fair enough. And it seemed like such a good idea at the time! Thanks for\nfinding this - I'll get a fix pushed today.\n\nOn Wed, 13 Jun 2018, 11:26 Zavark\u00f3 G\u00e1bor, <notifications@github.com> wrote:\n\n> Please try this:\n>\n>     class Program\n>     {\n>         static void Main(string[] args)\n>         {\n>             var baseType = typeof(MyBaseClass);\n>             var type = typeof(MyClass);\n>             var m = TypeModel.Create();\n>\n>             Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\n>\n>             var protoType = m.Add(baseType, true);\n>\n>             Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\n>\n>             m[baseType].AddSubType(100, type);\n>\n>             Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\n>\n>             var protoType2 = m.Add(type, true);\n>\n>             Console.WriteLine(m.IsDefined(type) + \",\" + m.IsDefined(baseType));\n>         }\n>     }\n>\n>     class MyBaseClass\n>     {\n>         public string MyBaseProp { get; set; }\n>     }\n>\n>     class MyClass : MyBaseClass\n>     {\n>         public string MyProp { get; set; }\n>     }\n>\n> In v2.3.11 it outputs:\n>\n> False,False\n> False,True\n> False,True\n> False,True\n>\n> In v2.3.7 it was:\n>\n> False,False\n> False,True\n> True,True\n> True,True\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/401#issuecomment-396890514>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDCxQ3FCymPxhpcbc-nEw_SPkzeLks5t8OjOgaJpZM4Uj_KV>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397016643",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/401#issuecomment-397016643",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/401",
        "id": 397016643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAxNjY0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T17:16:33Z",
        "updated_at": "2018-06-13T17:16:33Z",
        "author_association": "OWNER",
        "body": "Fixed along with another scenario; available on nuget shortly"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397016876",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/402#issuecomment-397016876",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/402",
        "id": 397016876,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAxNjg3Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T17:17:17Z",
        "updated_at": "2018-06-13T17:17:17Z",
        "author_association": "OWNER",
        "body": "this is fixed in 2.3.12, available on nuget whenever nuget feels like indexing it (it can take a while)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397105765",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-397105765",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 397105765,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzEwNTc2NQ==",
        "user": {
            "login": "gamemachine",
            "id": 75981,
            "node_id": "MDQ6VXNlcjc1OTgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/75981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gamemachine",
            "html_url": "https://github.com/gamemachine",
            "followers_url": "https://api.github.com/users/gamemachine/followers",
            "following_url": "https://api.github.com/users/gamemachine/following{/other_user}",
            "gists_url": "https://api.github.com/users/gamemachine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gamemachine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gamemachine/subscriptions",
            "organizations_url": "https://api.github.com/users/gamemachine/orgs",
            "repos_url": "https://api.github.com/users/gamemachine/repos",
            "events_url": "https://api.github.com/users/gamemachine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gamemachine/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T22:18:20Z",
        "updated_at": "2018-06-13T22:18:20Z",
        "author_association": "NONE",
        "body": "Unity supports two different runtimes one for 3.5 and under and another for 4.x and above.  On top of that if you choose 4.x you have a choice of 4.x api or standard 2 api.\r\n\r\nIf you are on Unity 2018 you should be using the 4.x runtime unless there are other reasons not to."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397108218",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/397#issuecomment-397108218",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/397",
        "id": 397108218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzEwODIxOA==",
        "user": {
            "login": "gamemachine",
            "id": 75981,
            "node_id": "MDQ6VXNlcjc1OTgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/75981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gamemachine",
            "html_url": "https://github.com/gamemachine",
            "followers_url": "https://api.github.com/users/gamemachine/followers",
            "following_url": "https://api.github.com/users/gamemachine/following{/other_user}",
            "gists_url": "https://api.github.com/users/gamemachine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gamemachine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gamemachine/subscriptions",
            "organizations_url": "https://api.github.com/users/gamemachine/orgs",
            "repos_url": "https://api.github.com/users/gamemachine/repos",
            "events_url": "https://api.github.com/users/gamemachine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gamemachine/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T22:28:22Z",
        "updated_at": "2018-06-13T22:28:22Z",
        "author_association": "NONE",
        "body": "IL2CPP is AOT only.   You need to use Compile on your type model and then use the dll that that creates to do your serialization in Unity."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397251357",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/402#issuecomment-397251357",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/402",
        "id": 397251357,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI1MTM1Nw==",
        "user": {
            "login": "tataxfn",
            "id": 1707059,
            "node_id": "MDQ6VXNlcjE3MDcwNTk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1707059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tataxfn",
            "html_url": "https://github.com/tataxfn",
            "followers_url": "https://api.github.com/users/tataxfn/followers",
            "following_url": "https://api.github.com/users/tataxfn/following{/other_user}",
            "gists_url": "https://api.github.com/users/tataxfn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tataxfn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tataxfn/subscriptions",
            "organizations_url": "https://api.github.com/users/tataxfn/orgs",
            "repos_url": "https://api.github.com/users/tataxfn/repos",
            "events_url": "https://api.github.com/users/tataxfn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tataxfn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-14T10:41:38Z",
        "updated_at": "2018-06-14T10:41:38Z",
        "author_association": "NONE",
        "body": "Thank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/397663600",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/353#issuecomment-397663600",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/353",
        "id": 397663600,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY2MzYwMA==",
        "user": {
            "login": "rickardp",
            "id": 167356,
            "node_id": "MDQ6VXNlcjE2NzM1Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/167356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickardp",
            "html_url": "https://github.com/rickardp",
            "followers_url": "https://api.github.com/users/rickardp/followers",
            "following_url": "https://api.github.com/users/rickardp/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickardp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickardp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickardp/subscriptions",
            "organizations_url": "https://api.github.com/users/rickardp/orgs",
            "repos_url": "https://api.github.com/users/rickardp/repos",
            "events_url": "https://api.github.com/users/rickardp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickardp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-15T15:49:54Z",
        "updated_at": "2018-06-15T15:51:31Z",
        "author_association": "NONE",
        "body": "There is probably a need to have support for targeting the .NET framework. I only tested building the above on Windows.\r\n\r\nIt may be possible to condition compilation targeting PCL only to machines that are capable of building such a library, should building on e.g. Linux under .Net core be desired."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/398345661",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/403#issuecomment-398345661",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/403",
        "id": 398345661,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODM0NTY2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-19T10:02:14Z",
        "updated_at": "2018-06-19T10:02:14Z",
        "author_association": "OWNER",
        "body": "Eek. Thanks, will make this my priority this evening.\n\nOn Mon, 18 Jun 2018, 18:23 Huw Jenkins, <notifications@github.com> wrote:\n\n> Having a second layer of inheritance seems to break in 2.3.12 when it\n> worked fine in previous versions.\n>\n> The following runs fine in 2.3.11 (and earlier from what I can tell) but\n> using 2.3.12 throws an ArgumentException with a message of \"token\" :\n>\n> void Main()\n> {\n> \tSerializer.PrepareSerializer<PublishableMessage>();\n> \t\n> \tvar publishableMessage = new AnotherDerivedPublishableMessage(){Name=\"HELLO\", Location = \"HERE\" };\n>\n> \tvar serialised = SerialiseMessage(publishableMessage);\n> \tvar deserialised = DeserialiseMessage(serialised) as AnotherDerivedPublishableMessage;\n>\n> \tConsole.WriteLine(\tdeserialised?.Name );\n> \tConsole.WriteLine( deserialised?.Location );\n> }\n>\n> // Define other methods and classes here\n> private static byte[] SerialiseMessage(PublishableMessage message)\n> {\n> \tusing (var memoryStream = new MemoryStream())\n> \t{\n> \t\tSerializer.Serialize(memoryStream, message);\n> \t\treturn memoryStream.ToArray();\n> \t}\n> }\n>\n> private static PublishableMessage DeserialiseMessage(byte[] serialisedMessage)\n> {\n> \tusing (var stream = new MemoryStream(serialisedMessage))\n> \t{\n> \t\treturn Serializer.Deserialize<PublishableMessage>(stream);\n> \t}\n> }\n>\n> [ProtoContract]\n> [ProtoInclude(1, typeof(DerivedPublishableMessage))]\n> public class PublishableMessage\n> {\n> \t\n> }\n>\n> [ProtoContract]\n> [ProtoInclude(100, typeof(AnotherDerivedPublishableMessage))]\n> public class DerivedPublishableMessage : PublishableMessage\n> {\n> \t[ProtoMember(1)]\n> \tpublic string Name{get;set;}\t\n> }\n>\n>\n> [ProtoContract]\n> public class AnotherDerivedPublishableMessage : DerivedPublishableMessage\n> {\n> \t[ProtoMember(1)]\n> \tpublic string Location { get; set; }\n> }\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/403>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsIK0zt1FDCm6JG82Oo2igY2FzNxQks5t9-IJgaJpZM4UsKhq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/398526673",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/404#issuecomment-398526673",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/404",
        "id": 398526673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODUyNjY3Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-19T20:02:26Z",
        "updated_at": "2018-06-19T20:02:26Z",
        "author_association": "OWNER",
        "body": "Yes, this is \"as designed\"; basically, protobuf (the google spec) doesn't have any concept of inheritance; protobuf-net can make it work, **but it needs a little help**, via `[ProtoInclude]` - very similar to `[XmlInclude]` for `XmlSerializer` or `[KnownType]` for `DataContractSerializer`:\r\n\r\n```\r\n        [ProtoContract]\r\n        [ProtoInclude(5, typeof(Person))]\r\n        [ProtoInclude(6, typeof(Address))]\r\n        class Entity\r\n        {\r\n            [ProtoMember(1)]\r\n            public Guid Id { get; set; }\r\n        }\r\n```\r\n\r\nThe numbers here are arbitrary, they just can't conflict with other fields in the base type."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/398526951",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/403#issuecomment-398526951",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/403",
        "id": 398526951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODUyNjk1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-19T20:03:18Z",
        "updated_at": "2018-06-19T20:03:18Z",
        "author_association": "OWNER",
        "body": "Yes, that's a doozy; pushing a fix out to nuget now. Sorry for any inconvenience."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/398531648",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/403#issuecomment-398531648",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/403",
        "id": 398531648,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODUzMTY0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-19T20:19:15Z",
        "updated_at": "2018-06-19T20:19:15Z",
        "author_association": "OWNER",
        "body": "2.3.13 has been published to nuget; their indexing may take a while: https://www.nuget.org/packages/protobuf-net/2.3.13\r\n\r\nI've also announced on twitter to recommend update. Thanks for the report and the repro scenario. I'm very sorry for any inconvenience caused - it is *very rare* that potentially harmful bugs like this slip through, but this time: it did. I've added your test and additional debug assertions, so this should now be history."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/398678837",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/403#issuecomment-398678837",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/403",
        "id": 398678837,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODY3ODgzNw==",
        "user": {
            "login": "huwmongoose",
            "id": 10918832,
            "node_id": "MDQ6VXNlcjEwOTE4ODMy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/10918832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huwmongoose",
            "html_url": "https://github.com/huwmongoose",
            "followers_url": "https://api.github.com/users/huwmongoose/followers",
            "following_url": "https://api.github.com/users/huwmongoose/following{/other_user}",
            "gists_url": "https://api.github.com/users/huwmongoose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huwmongoose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huwmongoose/subscriptions",
            "organizations_url": "https://api.github.com/users/huwmongoose/orgs",
            "repos_url": "https://api.github.com/users/huwmongoose/repos",
            "events_url": "https://api.github.com/users/huwmongoose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huwmongoose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-20T09:06:00Z",
        "updated_at": "2018-06-20T09:06:00Z",
        "author_association": "NONE",
        "body": "no problem, many thanks for the quick fix. All my tests seem to work with the new version. So, all is good."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399554756",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-399554756",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 399554756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU1NDc1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T19:22:41Z",
        "updated_at": "2018-06-22T19:22:41Z",
        "author_association": "OWNER",
        "body": "Can you clarify \"remove enum type prefix of enum fields\"? I couldn't understand what that means sorry. Example maybe?\r\n\r\n\"convert camel-case to pascal.\" - is that not already handled by AutoCapitalize? Again, a concrete example would be good.\r\n\r\nIf looks like there's a breaking API change with the extra param - not at a PC, but if this is on a public API it'll have to be made binary compatible, typically by making the old constructor all mandatory args, with a new overload for the new version with optionals.\r\n\r\nCan you clarify the primary use case re the dictionary stuff? Do you have a concrete example of the scenario you're trying to improve?\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399563124",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-399563124",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 399563124,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2MzEyNA==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T19:51:28Z",
        "updated_at": "2018-06-22T19:51:28Z",
        "author_association": "NONE",
        "body": "### about \"remove enum type prefix of enum fields\":\r\nenum like this: \r\n```\r\n// RetType.proto\r\nenum RetType\r\n{\r\n    RetType_Succeed = 0; //\u6210\u529f\r\n    RetType_Failed = -1; //\u5931\u8d25\r\n    RetType_TimeOut = -100; //\u8d85\u65f6\r\n    RetType_Unknown = -400; //\u672a\u77e5\u7ed3\u679c\r\n}\r\n```\r\n\r\nprotogen default behavior will convert it to this:\r\n```\r\n// RetType.cs\r\n[global::ProtoBuf.ProtoContract()]\r\npublic enum RetType\r\n{\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"RetType_Succeed\")]\r\n    RetTypeSucceed = 0,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"RetType_Failed\")]\r\n    RetTypeFailed = -1,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"RetType_TimeOut\")]\r\n    RetTypeTimeOut = -100,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"RetType_Unknown\")]\r\n    RetTypeUnknown = -400,\r\n}\r\n```\r\nthe prefix \"RetType\" is not necessary.\r\n\r\n### about \"convert camel-case to pascal.\":\r\nif a field of message like this: `required uint32 serialNo = 1;`,  protogen default behavior will convert to this: `public uint serialNo { get; set; }` , the first letter of serialNo will be lower case. But I want to be upper case `SerialNo`.\r\n\r\n### about \"implement custom names conversion for classes, fields.\":\r\nfor example i have a file KLType.proto:\r\n```\r\n// KLType.proto\r\nenum KLType\r\n{\r\n    KLType_1Min = 1; //1\u5206K\r\n    KLType_Day = 2; //\u65e5K\r\n    KLType_Week = 3; //\u5468K\r\n    KLType_Month = 4; //\u6708K\t\r\n    KLType_Year = 5; //\u5e74K\r\n    KLType_5Min = 6; //5\u5206K\r\n    KLType_15Min = 7; //15\u5206K\r\n    KLType_30Min = 8; //30\u5206K\r\n}\r\n```\r\ndue to \"remove enum type prefix of enum fields\" mentioned earlier at above, so the protogen will convert it like this:\r\n```\r\n// KLType.cs\r\n[global::ProtoBuf.ProtoContract()]\r\npublic enum KLType\r\n{\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_1Min\")]\r\n    1Min = 1,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Day\")]\r\n    Day = 2,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Week\")]\r\n    Week = 3,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Month\")]\r\n    Month = 4,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Year\")]\r\n    Year = 5,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_5Min\")]\r\n    5Min = 6,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_15Min\")]\r\n    15Min = 7,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_30Min\")]\r\n    30Min = 8\r\n}\r\n```\r\nbut in C#, if a field begin with a number like `1Min` , `5Min`,  `15Min` will cause syntax error.\r\nso I add a custom names conversion description file like this:\r\n```\r\n// names-conversion.txt\r\nKLType_1Min=K1Min\r\nKLType_Day=KDay\r\nKLType_Week=KWeek\r\nKLType_Month=KMonth\r\nKLType_Year=KYear\r\nKLType_5Min=K5Min\r\nKLType_15Min=K15Min\r\nKLType_30Min=K30Min\r\n```\r\nthen I use protogen.exe as below:\r\n`protogen --proto_path=some_dir --csharp_out=some_dir KLType.proto --names_conversion=names-conversion.txt`\r\nit will get what i want:\r\n```\r\n[global::ProtoBuf.ProtoContract()]\r\npublic enum KLType\r\n{\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_1Min\")]\r\n    K1Min = 1,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Day\")]\r\n    KDay = 2,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Week\")]\r\n    KWeek = 3,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Month\")]\r\n    KMonth = 4,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_Year\")]\r\n    KYear = 5,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_5Min\")]\r\n    K5Min = 6,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_15Min\")]\r\n    K15Min = 7,\r\n    [global::ProtoBuf.ProtoEnum(Name = @\"KLType_30Min\")]\r\n    K30Min = 8\r\n}\r\n```\r\nall fields begin with 'K'.\r\n\r\nsometime you want to do other more custom names conversion, you can use `--names_conversion` to implement."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399563658",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399563658",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399563658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2MzY1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T19:53:39Z",
        "updated_at": "2018-06-22T19:53:39Z",
        "author_association": "OWNER",
        "body": "In the specific case: custom names can be provided *in the .proto* - you need to import the protobuf-net protogen.proto and use custom attribute syntax. Oddly enough, protogen.proto does this itself (except for the import).\r\n\r\nIn the general case: `NameNormalizer` can be provided via the API, to do anything you want.\r\n\r\nThere is not currently a command-line version of this, except to switch between a few inbuilt name normalizers."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399563886",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399563886",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399563886,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2Mzg4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T19:54:30Z",
        "updated_at": "2018-06-22T19:54:30Z",
        "author_association": "OWNER",
        "body": "Link for protogen using that syntax: https://github.com/mgravell/protobuf-net/blob/master/src/Tools/protogen.proto - the same approach should work for all elements."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399564467",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399564467",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399564467,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2NDQ2Nw==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T19:56:47Z",
        "updated_at": "2018-06-22T20:02:33Z",
        "author_association": "NONE",
        "body": "sorry, im using proto2, is it compatible ?\r\nthe other problem is: .proto files are generate by other company, it's often change, so I don't want to change .proto file for custom conversion."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399567105",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399567105",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399567105,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2NzEwNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:06:58Z",
        "updated_at": "2018-06-22T20:06:58Z",
        "author_association": "OWNER",
        "body": "Yes, it is compatible.\r\n\r\nOn the second... now you're making me think whether \"partial protos\" might be a thing here. Meaning: allowing a second proto to add custom options to an original file, so you would maintain a separate .proto that is *just* the annotations. It is probably easier than maintaining an exotic command line with all the amendments in there..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399567244",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399567244",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399567244,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU2NzI0NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:07:33Z",
        "updated_at": "2018-06-22T20:07:33Z",
        "author_association": "OWNER",
        "body": "(note: that doesn't exist today - it would need thinking)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399570721",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399570721",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399570721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MDcyMQ==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:21:09Z",
        "updated_at": "2018-06-22T20:21:09Z",
        "author_association": "NONE",
        "body": "I think \"partial protos\" is a better way"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399570779",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-399570779",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 399570779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MDc3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:21:24Z",
        "updated_at": "2018-06-22T20:21:24Z",
        "author_association": "OWNER",
        "body": "On the enum: I see what you mean, thanks - presumably that style has been chosen for C++ consumers (no scoping on enum values). I've checked with `protoc`, and it already applies this removal, so yes: I'm fine with that in principle. I will need to review the specific code.\r\n\r\nNote: what `protoc` does here is *prepend* enums with an underscore (`_`) if they would be invalid by starting with a number. I propose that this is what should happen here too, by default. `protoc` outputs things like:\r\n\r\n```\r\n  [pbr::OriginalName(\"KLType_1Min\")] _1Min = 1,\r\n```\r\n\r\nI suggest that this should be done as part of any enum prefix removal.\r\n\r\n---\r\n\r\ncamel case: you're right, thanks; it looks like it works with `serial_no` but not `serialNo`. I suggest that `AutoCapitalize` is where that fix should go. That means it will apply to all languages equally.\r\n\r\n---\r\n\r\nOn the names; would the approach used by `protoc` suggested above be a viable and pragmatic alternative here?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399571209",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-399571209",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 399571209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MTIwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:23:10Z",
        "updated_at": "2018-06-22T20:23:10Z",
        "author_association": "OWNER",
        "body": "Update: I see now that you *were* editing `AutoCapitalize` - so that's fine, thanks.\r\n\r\nNote: unit test scenarios for each of these would be good."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399571423",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399571423",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399571423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MTQyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:24:03Z",
        "updated_at": "2018-06-22T20:24:03Z",
        "author_association": "OWNER",
        "body": "cross-referencing #407 \r\n\r\nif it is juts the enum names... maybe the underscore thing that `protoc` uses is simpler?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399572415",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/406#issuecomment-399572415",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/406",
        "id": 399572415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MjQxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:28:16Z",
        "updated_at": "2018-06-22T20:28:16Z",
        "author_association": "OWNER",
        "body": "Hmmm, you're right. Looks like a cog fell out. Purely speculative, but possibly related to #390 - will check."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399573195",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399573195",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399573195,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3MzE5NQ==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:31:21Z",
        "updated_at": "2018-06-22T20:31:21Z",
        "author_association": "NONE",
        "body": "I have a look of protoc, it seems only support proto3\ud83d\ude22"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399577647",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/406#issuecomment-399577647",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/406",
        "id": 399577647,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3NzY0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:49:00Z",
        "updated_at": "2018-06-22T20:49:00Z",
        "author_association": "OWNER",
        "body": "Question: are you using the \"global tool\"? or the zip download?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399578347",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/406#issuecomment-399578347",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/406",
        "id": 399578347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3ODM0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:51:39Z",
        "updated_at": "2018-06-22T20:51:39Z",
        "author_association": "OWNER",
        "body": "Isolated: this seems to be a break between netcoreapp2.0 and netcoreapp2.1 when using the same code; the \"global tool\" uses netcoreapp2.1, so manifests the broken behaviour."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399579835",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/406#issuecomment-399579835",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/406",
        "id": 399579835,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU3OTgzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T20:57:11Z",
        "updated_at": "2018-06-22T20:57:11Z",
        "author_association": "OWNER",
        "body": "found and fixed; deploying shortly"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399581169",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/406#issuecomment-399581169",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/406",
        "id": 399581169,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU4MTE2OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T21:02:14Z",
        "updated_at": "2018-06-22T21:02:14Z",
        "author_association": "OWNER",
        "body": "[1.0.9](https://www.nuget.org/packages/protobuf-net.Protogen/1.0.9) available as soon as nuget indexes it"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399581665",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/405#issuecomment-399581665",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/405",
        "id": 399581665,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTU4MTY2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T21:04:20Z",
        "updated_at": "2018-06-22T21:04:20Z",
        "author_association": "OWNER",
        "body": "I was only mentioning `protoc` to compare and contrast the approach it takes; the underscore prefix is a reasonable one, IMO, that we would do well to emulate. I wasn't suggesting switching to `protoc` - I was just curious as to how it solved this problem."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/399721008",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-399721008",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 399721008,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTcyMTAwOA==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-24T01:00:03Z",
        "updated_at": "2018-06-24T01:00:03Z",
        "author_association": "NONE",
        "body": "please review again. :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400086303",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/392#issuecomment-400086303",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/392",
        "id": 400086303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDA4NjMwMw==",
        "user": {
            "login": "tructv",
            "id": 1837042,
            "node_id": "MDQ6VXNlcjE4MzcwNDI=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1837042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tructv",
            "html_url": "https://github.com/tructv",
            "followers_url": "https://api.github.com/users/tructv/followers",
            "following_url": "https://api.github.com/users/tructv/following{/other_user}",
            "gists_url": "https://api.github.com/users/tructv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tructv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tructv/subscriptions",
            "organizations_url": "https://api.github.com/users/tructv/orgs",
            "repos_url": "https://api.github.com/users/tructv/repos",
            "events_url": "https://api.github.com/users/tructv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tructv/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-25T20:34:15Z",
        "updated_at": "2018-06-25T20:34:15Z",
        "author_association": "NONE",
        "body": "Did you use RuntimeTypeModel? That's the main source of issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400542029",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/408#issuecomment-400542029",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/408",
        "id": 400542029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDU0MjAyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T04:51:59Z",
        "updated_at": "2018-06-27T04:51:59Z",
        "author_association": "OWNER",
        "body": "Sounds like bad IL, indeed. I'll take a look.\n\nOn Tue, 26 Jun 2018, 19:57 Simon, <notifications@github.com> wrote:\n\n> I'm tinkering with protobuf-net to create a type model from types\n> automatically. This worked fine for the most part, however I'm getting\n> weird FatalExecutionEngineErrors which I've been able to nail down to the\n> following piece of code:\n>\n> public struct Point2D { public double X; public double Y; }\n> ...var typeModel = ProtoBuf.Meta.TypeModel.Create();var @object = typeModel.Add(typeof(object), false);var point2D = typeModel.Add(typeof(Point2D), false);point2D.AddField(2, \"X\");point2D.AddField(3, \"Y\");\n> @object.AddSubType(1, typeof(Point2D));\n> var compiled = typeModel.Compile();\n> using (var stream = new MemoryStream())\n> {\n> \tcompiled.Serialize(stream, new Point2D(1, 2));\n> \tstream.Position = 0;\n>\n> \tvar actualPoint = (Point2D)compiled.Deserialize(stream, null, typeof(Point2D));\n> \tactualPoint.Should().Be(new Point2D(1, 2));\n> }\n>\n> It's interesting that this exception vanishes if I change the type of\n> Point2D from struct to class which leads me to believe that it might be a\n> problem with the generated code (I haven't looked into it in detail just\n> yet). But then again I don't know if this is actually intended to work in\n> the first place so I'll leave the author to be the judge of that.\n>\n> My environment:\n> Windows 10\n> .NET 4.5\n> protobuf-net 2.3.13\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/408>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKJjSzTsr6BrBDJe9ASQUrOR50FMks5uAoQdgaJpZM4U4fsO>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400611085",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/408#issuecomment-400611085",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/408",
        "id": 400611085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYxMTA4NQ==",
        "user": {
            "login": "Kittyfisto",
            "id": 11990827,
            "node_id": "MDQ6VXNlcjExOTkwODI3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11990827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kittyfisto",
            "html_url": "https://github.com/Kittyfisto",
            "followers_url": "https://api.github.com/users/Kittyfisto/followers",
            "following_url": "https://api.github.com/users/Kittyfisto/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kittyfisto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kittyfisto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kittyfisto/subscriptions",
            "organizations_url": "https://api.github.com/users/Kittyfisto/orgs",
            "repos_url": "https://api.github.com/users/Kittyfisto/repos",
            "events_url": "https://api.github.com/users/Kittyfisto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kittyfisto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T09:45:26Z",
        "updated_at": "2018-06-27T09:47:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the quick response. I did some further digging and found out that the problem occurs only:\r\n\r\na) when Deserialize(...) is called\r\nb) when Point2D is declared to be a sub-type of object\r\n\r\nI've compared the generated IL (with and without AddSubType) and found that the sub-type version emits OpCodes.Castclass to cast the first argument of `object Read(object, ProtoReader)` to Point2D. This will work just fine for reference types but probably shouldn't work for value types (the [MSDN doesn't explicitly mention value types](https://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.castclass(v=vs.110).aspx), but then why would they offer a separate unbox instruction?).\r\n\r\n**Edit** Here's an excerpt from the generated IL, the instruction I mentions it at offset *IL_003e*:\r\n\r\n```\r\n.method private static object  Read(object A_0,\r\n                                    class ['protobuf-net']ProtoBuf.ProtoReader A_1) cil managed\r\n{\r\n  // Code size       156 (0x9c)\r\n  .maxstack  8\r\n  .locals init (int32 V_0,\r\n           valuetype ['protobuf-net']ProtoBuf.SubItemToken V_1)\r\n  IL_0000:  br         IL_0078\r\n  IL_0005:  ldloc.0\r\n  IL_0006:  ldc.i4.1\r\n  IL_0007:  beq.s      IL_000e\r\n  IL_0009:  br         IL_005e\r\n  IL_000e:  ldarg.0\r\n  IL_000f:  brfalse    IL_003d\r\n  IL_0014:  ldarg.0\r\n  IL_0015:  isinst     [protobuf]protobuf.Point2D\r\n  IL_001a:  brtrue     IL_003d\r\n  IL_001f:  ldarg.1\r\n  IL_0020:  ldarg.0\r\n  IL_0021:  ldtoken    [protobuf]protobuf.Point2D\r\n  IL_0026:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)\r\n  IL_002b:  call       void ['protobuf-net']ProtoBuf.Meta.TypeModel::ThrowCannotCreateInstance(class [mscorlib]System.Type)\r\n  IL_0030:  ldnull\r\n  IL_0031:  call       object ['protobuf-net']ProtoBuf.ProtoReader::Merge(class ['protobuf-net']ProtoBuf.ProtoReader,\r\n                                                                          object,\r\n                                                                          object)\r\n  IL_0036:  castclass  [mscorlib]System.Object\r\n  IL_003b:  starg.s    A_0\r\n  IL_003d:  ldarg.0\r\n  IL_003e:  castclass  [protobuf]protobuf.Point2D\r\n  IL_0043:  ldarg.1\r\n  IL_0044:  call       valuetype ['protobuf-net']ProtoBuf.SubItemToken ['protobuf-net']ProtoBuf.ProtoReader::StartSubItem(class ['protobuf-net']ProtoBuf.ProtoReader)\r\n  IL_0049:  stloc.1\r\n  IL_004a:  ldarg.1\r\n  IL_004b:  call       valuetype [protobuf]protobuf.Point2D typemodel.inheritance::Read(valuetype [protobuf]protobuf.Point2D,\r\n                                                                                        class ['protobuf-net']ProtoBuf.ProtoReader)\r\n  IL_0050:  ldloc.1\r\n  IL_0051:  ldarg.1\r\n  IL_0052:  call       void ['protobuf-net']ProtoBuf.ProtoReader::EndSubItem(valuetype ['protobuf-net']ProtoBuf.SubItemToken,\r\n                                                                             class ['protobuf-net']ProtoBuf.ProtoReader)\r\n  IL_0057:  starg.s    A_0\r\n  IL_0059:  br         IL_0078\r\n  IL_005e:  ldarg.0\r\n  IL_005f:  brtrue     IL_0072\r\n  IL_0064:  newobj     instance void [mscorlib]System.Object::.ctor()\r\n  IL_0069:  dup\r\n  IL_006a:  ldarg.1\r\n  IL_006b:  call       void ['protobuf-net']ProtoBuf.ProtoReader::NoteObject(object,\r\n                                                                             class ['protobuf-net']ProtoBuf.ProtoReader)\r\n  IL_0070:  starg.s    A_0\r\n  IL_0072:  ldarg.1\r\n  IL_0073:  callvirt   instance void ['protobuf-net']ProtoBuf.ProtoReader::SkipField()\r\n  IL_0078:  ldarg.1\r\n  IL_0079:  callvirt   instance int32 ['protobuf-net']ProtoBuf.ProtoReader::ReadFieldHeader()\r\n  IL_007e:  dup\r\n  IL_007f:  stloc.0\r\n  IL_0080:  ldc.i4.0\r\n  IL_0081:  bgt        IL_0005\r\n  IL_0086:  ldarg.0\r\n  IL_0087:  brtrue     IL_009a\r\n  IL_008c:  newobj     instance void [mscorlib]System.Object::.ctor()\r\n  IL_0091:  dup\r\n  IL_0092:  ldarg.1\r\n  IL_0093:  call       void ['protobuf-net']ProtoBuf.ProtoReader::NoteObject(object,\r\n                                                                             class ['protobuf-net']ProtoBuf.ProtoReader)\r\n  IL_0098:  starg.s    A_0\r\n  IL_009a:  ldarg.0\r\n  IL_009b:  ret\r\n} // end of method inheritance::Read\r\n\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400633597",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400633597",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400633597,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYzMzU5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T11:02:15Z",
        "updated_at": "2018-06-27T11:02:15Z",
        "author_association": "OWNER",
        "body": "> It breaks on writer.ToArray()\r\n\r\nNo, it is breaking on `Serialize`. We know that the `DynamicMethod` bits won't work, but it *should* flip to using the runtime-reflection API automatically. Not sure why that isn't working, but: how about we try adding `uap` and `uap10.0` TFMs that explicitly exclude that entire codebase; let me try..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400634396",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400634396",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400634396,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYzNDM5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T11:05:58Z",
        "updated_at": "2018-06-27T11:05:58Z",
        "author_association": "OWNER",
        "body": "dammit, apparently that [isn't supported in the SDK build](https://github.com/dotnet/sdk/issues/1408) - trying https://github.com/onovotny/MSBuildSdkExtras"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400636983",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400636983",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400636983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYzNjk4Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T11:17:58Z",
        "updated_at": "2018-06-27T11:17:58Z",
        "author_association": "OWNER",
        "body": "my first attempt was unsuccessful; I've pinged Oren to get his input"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400655341",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400655341",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400655341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY1NTM0MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T12:32:54Z",
        "updated_at": "2018-06-27T12:32:54Z",
        "author_association": "OWNER",
        "body": "OK; I'm getting somewhere; leaving an SDK to download - what UAP SDK are you targeting, specifically?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400670892",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400670892",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400670892,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY3MDg5Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T13:27:42Z",
        "updated_at": "2018-06-27T13:27:42Z",
        "author_association": "OWNER",
        "body": "OK; 2.3.14-alpha1 is \"up\": https://www.nuget.org/packages/protobuf-net/2.3.14-alpha1\r\n\r\ncan you try that and let me know, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400671829",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/410#issuecomment-400671829",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/410",
        "id": 400671829,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY3MTgyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T13:30:24Z",
        "updated_at": "2018-06-27T13:30:24Z",
        "author_association": "OWNER",
        "body": "There is currently no API equivalent to \"implicit fields\" - it would need to be exposed. Or your calling code could just do the reflection there.\r\n\r\nCaution: \"implicit fields\" is a dangerous option, mostly intended for quick fixes to established contracts; if your contract changes, **it can break horribly**. You should almost always be explicit about the contract, not implicit.,"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400678153",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/408#issuecomment-400678153",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/408",
        "id": 400678153,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY3ODE1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T13:49:03Z",
        "updated_at": "2018-06-27T13:49:03Z",
        "author_association": "OWNER",
        "body": "Thanks; that'll help a lot. I haven't had time to dig yet (lots of plates), but my plan is to get this fixed in the next deploy"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400785912",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/236#issuecomment-400785912",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/236",
        "id": 400785912,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc4NTkxMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T18:33:53Z",
        "updated_at": "2018-06-27T18:33:53Z",
        "author_association": "OWNER",
        "body": "UWP has been added as a target; I think this should resolve it:  https://www.nuget.org/packages/protobuf-net/2.3.14-alpha1"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400865525",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400865525",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400865525,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDg2NTUyNQ==",
        "user": {
            "login": "MelbourneDeveloper",
            "id": 16697547,
            "node_id": "MDQ6VXNlcjE2Njk3NTQ3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16697547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MelbourneDeveloper",
            "html_url": "https://github.com/MelbourneDeveloper",
            "followers_url": "https://api.github.com/users/MelbourneDeveloper/followers",
            "following_url": "https://api.github.com/users/MelbourneDeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/MelbourneDeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MelbourneDeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MelbourneDeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/MelbourneDeveloper/orgs",
            "repos_url": "https://api.github.com/users/MelbourneDeveloper/repos",
            "events_url": "https://api.github.com/users/MelbourneDeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MelbourneDeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T23:48:31Z",
        "updated_at": "2018-06-27T23:48:31Z",
        "author_association": "NONE",
        "body": "Thanks @mgravell . I just did a pull on master and debugged. This is where the code is going wrong:\r\n\r\n![image](https://user-images.githubusercontent.com/16697547/42005544-64b4ab96-7ab8-11e8-916d-889ee401156e.png)\r\n\r\nWill test the alpha build now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/400866259",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-400866259",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 400866259,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDg2NjI1OQ==",
        "user": {
            "login": "MelbourneDeveloper",
            "id": 16697547,
            "node_id": "MDQ6VXNlcjE2Njk3NTQ3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16697547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MelbourneDeveloper",
            "html_url": "https://github.com/MelbourneDeveloper",
            "followers_url": "https://api.github.com/users/MelbourneDeveloper/followers",
            "following_url": "https://api.github.com/users/MelbourneDeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/MelbourneDeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MelbourneDeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MelbourneDeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/MelbourneDeveloper/orgs",
            "repos_url": "https://api.github.com/users/MelbourneDeveloper/repos",
            "events_url": "https://api.github.com/users/MelbourneDeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MelbourneDeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-27T23:52:54Z",
        "updated_at": "2018-06-27T23:52:54Z",
        "author_association": "NONE",
        "body": "@mgravell thank you so much!\r\n\r\nI can confirm that the alpha version works, and now I'll be able to release to the store."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401190603",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/412#issuecomment-401190603",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/412",
        "id": 401190603,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTE5MDYwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-28T22:20:07Z",
        "updated_at": "2018-06-28T22:20:07Z",
        "author_association": "OWNER",
        "body": "that's looking really good; no huge feedback - looking very viable. Let me know as you have more."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401208478",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-401208478",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 401208478,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTIwODQ3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-29T00:03:36Z",
        "updated_at": "2018-06-29T00:03:36Z",
        "author_association": "OWNER",
        "body": "@MelbourneDeveloper  awesome; I'll try to get things together for the next packaging round; I assume you're not blocked any more, then?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401262943",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-401262943",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 401262943,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTI2Mjk0Mw==",
        "user": {
            "login": "MelbourneDeveloper",
            "id": 16697547,
            "node_id": "MDQ6VXNlcjE2Njk3NTQ3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/16697547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MelbourneDeveloper",
            "html_url": "https://github.com/MelbourneDeveloper",
            "followers_url": "https://api.github.com/users/MelbourneDeveloper/followers",
            "following_url": "https://api.github.com/users/MelbourneDeveloper/following{/other_user}",
            "gists_url": "https://api.github.com/users/MelbourneDeveloper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MelbourneDeveloper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MelbourneDeveloper/subscriptions",
            "organizations_url": "https://api.github.com/users/MelbourneDeveloper/orgs",
            "repos_url": "https://api.github.com/users/MelbourneDeveloper/repos",
            "events_url": "https://api.github.com/users/MelbourneDeveloper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MelbourneDeveloper/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-29T06:41:44Z",
        "updated_at": "2018-06-29T06:41:44Z",
        "author_association": "NONE",
        "body": "@mgravell Correct!\r\n\r\nThe alpha package seems to work fine, and it's on it's way to the Microsoft store as soon as Microsoft's certification process runs its course."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401430292",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/412#issuecomment-401430292",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/412",
        "id": 401430292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQzMDI5Mg==",
        "user": {
            "login": "Kittyfisto",
            "id": 11990827,
            "node_id": "MDQ6VXNlcjExOTkwODI3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11990827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kittyfisto",
            "html_url": "https://github.com/Kittyfisto",
            "followers_url": "https://api.github.com/users/Kittyfisto/followers",
            "following_url": "https://api.github.com/users/Kittyfisto/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kittyfisto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kittyfisto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kittyfisto/subscriptions",
            "organizations_url": "https://api.github.com/users/Kittyfisto/orgs",
            "repos_url": "https://api.github.com/users/Kittyfisto/repos",
            "events_url": "https://api.github.com/users/Kittyfisto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kittyfisto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-29T18:03:37Z",
        "updated_at": "2018-06-29T18:03:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'll push in a few hours. Did you find a solution to https://github.com/xunit/xunit/issues/1183 by the way? I'm running into the same problem and haven't found an elegant solution so far (other than writing the type model into %temp%, but you probably haven't done that for a reason)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401852455",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/413#issuecomment-401852455",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/413",
        "id": 401852455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTg1MjQ1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-02T15:59:32Z",
        "updated_at": "2018-07-02T15:59:32Z",
        "author_association": "OWNER",
        "body": "I can't comment on protobuf.js; however, if all you have is a BLOB, there's no point running it through *any* serializer: just *send the BLOB*. All protobuf is going to do with a BLOB is chuck a field-header and length-prefix on the start, so it'll grow a few bytes (2-5, maybe), but the rest of the data **won't change**. So... for what you describe, it doesn't sound useful to protobuf encoded it:\r\n\r\n- if you can get protobuf data to the client in raw binary, you can also get png data to the client in raw binary\r\n- if you need to base-64 encode the protobuf data, you might as well have just base-64 encoded the raw png\r\n\r\nprotobuf is not compression; if you have a `bytes` field, it just packs it \"as is\"."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/401855494",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/413#issuecomment-401855494",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/413",
        "id": 401855494,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTg1NTQ5NA==",
        "user": {
            "login": "guylando",
            "id": 14879163,
            "node_id": "MDQ6VXNlcjE0ODc5MTYz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/14879163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guylando",
            "html_url": "https://github.com/guylando",
            "followers_url": "https://api.github.com/users/guylando/followers",
            "following_url": "https://api.github.com/users/guylando/following{/other_user}",
            "gists_url": "https://api.github.com/users/guylando/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guylando/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guylando/subscriptions",
            "organizations_url": "https://api.github.com/users/guylando/orgs",
            "repos_url": "https://api.github.com/users/guylando/repos",
            "events_url": "https://api.github.com/users/guylando/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guylando/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-02T16:10:15Z",
        "updated_at": "2018-07-02T16:10:15Z",
        "author_association": "NONE",
        "body": "Thanks for the clarification!\r\nI will close this but maybe you can please suggest something a little off topic: in the scenario I describe we encode using base64 because we insert it as a string into html code and insert the images in multiple places in the page in the client side. We do it this way so that each image will be only sent once. We are talking about 100+ users images. When gzipped they take about 300KB which slows down the page loading considerably. Thought to improve the performance by lowering the 300KB by using another encoding and thats why thought to use protobuf but as you describe, it cant be used here. Any suggestion what can be done in this case?\r\n\r\nPlacing the images in files path instead of data uri makes the loading even slower because its 100+ requests to the server. The user images are dynamic each time so creating a sprite is a problem as well."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402140140",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/414#issuecomment-402140140",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/414",
        "id": 402140140,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjE0MDE0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-03T12:34:09Z",
        "updated_at": "2018-07-03T12:34:09Z",
        "author_association": "OWNER",
        "body": "Yes, and I have spikes that have been investigating that - heck, I've been playing with pipelines for almost 2 years now, and the possibilities re protobuf have been very much a consideration. I'm trying to get the SE.Redis changes out the door first, though."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402179545",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/414#issuecomment-402179545",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/414",
        "id": 402179545,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjE3OTU0NQ==",
        "user": {
            "login": "alentor",
            "id": 9845804,
            "node_id": "MDQ6VXNlcjk4NDU4MDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/9845804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alentor",
            "html_url": "https://github.com/alentor",
            "followers_url": "https://api.github.com/users/alentor/followers",
            "following_url": "https://api.github.com/users/alentor/following{/other_user}",
            "gists_url": "https://api.github.com/users/alentor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alentor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alentor/subscriptions",
            "organizations_url": "https://api.github.com/users/alentor/orgs",
            "repos_url": "https://api.github.com/users/alentor/repos",
            "events_url": "https://api.github.com/users/alentor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alentor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-03T14:35:20Z",
        "updated_at": "2018-07-03T14:35:20Z",
        "author_association": "NONE",
        "body": "That's great, Can't wait for SE.Redis 2.0!!\r\nThank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402429942",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/145#issuecomment-402429942",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/145",
        "id": 402429942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQyOTk0Mg==",
        "user": {
            "login": "imsuperman0920",
            "id": 13757778,
            "node_id": "MDQ6VXNlcjEzNzU3Nzc4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/13757778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imsuperman0920",
            "html_url": "https://github.com/imsuperman0920",
            "followers_url": "https://api.github.com/users/imsuperman0920/followers",
            "following_url": "https://api.github.com/users/imsuperman0920/following{/other_user}",
            "gists_url": "https://api.github.com/users/imsuperman0920/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imsuperman0920/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imsuperman0920/subscriptions",
            "organizations_url": "https://api.github.com/users/imsuperman0920/orgs",
            "repos_url": "https://api.github.com/users/imsuperman0920/repos",
            "events_url": "https://api.github.com/users/imsuperman0920/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imsuperman0920/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-04T09:58:23Z",
        "updated_at": "2018-07-04T09:58:23Z",
        "author_association": "NONE",
        "body": "I got same exception.\r\nIs it fixed now ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402544688",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/145#issuecomment-402544688",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/145",
        "id": 402544688,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU0NDY4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-04T19:08:10Z",
        "updated_at": "2018-07-04T19:08:10Z",
        "author_association": "OWNER",
        "body": "If it still happens it probably isn't fixed. How big is your data here?\n\nOn Wed, 4 Jul 2018, 10:58 imsuperman0920, <notifications@github.com> wrote:\n\n> I got same exception.\n> Is it fixed now ?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/145#issuecomment-402429942>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsPlLY8zBasW1eAvAtB9vTPmpaNKpks5uDJG_gaJpZM4HoccE>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402544949",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/415#issuecomment-402544949",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/415",
        "id": 402544949,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU0NDk0OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-04T19:10:25Z",
        "updated_at": "2018-07-04T19:10:25Z",
        "author_association": "OWNER",
        "body": "It was trying to serialize, it found a BundleItem, which isn't something it\nexpected. What is the thing you would want here? Are you looking for a\nproperty tree of where it was? I.e. (root).Foo.Bar[42].SomeProp ?\n\nOn Wed, 4 Jul 2018, 10:19 Hambalk\u00f3 Bence, <notifications@github.com> wrote:\n\n> I started using the library and my main issue is that I have really\n> complex types and it is nearly impossible to debug. Is it possible to\n> somehow better trace what protobuf is doing? Or what's the general approach\n> to fixing an issue like this?\n> Thanks in advance.\n>\n> Message:\n> {\"Unexpected sub-type: WolvenKit.Bundles.BundleItem\"}\n> Stacktrace:\n> \" at ProtoBuf.Meta.TypeModel.ThrowUnexpectedSubtype(Type expected, Type\n> actual)\\r\\n at proto_13(Object , ProtoWriter )\\r\\n at\n> ProtoBuf.ProtoWriter.WriteObject(Object value, Int32 key, ProtoWriter\n> writer)\\r\\n at proto_11(Object , ProtoWriter )\\r\\n at\n> ProtoBuf.ProtoWriter.WriteObject(Object value, Int32 key, ProtoWriter\n> writer)\\r\\n at proto_9(Object , ProtoWriter )\\r\\n at\n> ProtoBuf.Meta.TypeModel.SerializeCore(ProtoWriter writer, Object value)\\r\\n\n> at ProtoBuf.Meta.TypeModel.Serialize(Stream dest, Object value,\n> SerializationContext context)\\r\\n at\n> ProtoBuf.Serializer.Serialize[T](Stream destination, T instance)\\r\\n at\n> WolvenKit.MainController.d__56.MoveNext() in\n> C:\\Users\\bence.hambalko\\Documents\\Repos\\Wolven-kit\\WolvenKit\\MainController.cs:line\n> 201\"\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/415>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJUEuJRB2gBh_KgiGriIhQ6T3RrGks5uDIiwgaJpZM4VCPYh>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402669360",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/415#issuecomment-402669360",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/415",
        "id": 402669360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjY2OTM2MA==",
        "user": {
            "login": "Traderain",
            "id": 6411732,
            "node_id": "MDQ6VXNlcjY0MTE3MzI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6411732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Traderain",
            "html_url": "https://github.com/Traderain",
            "followers_url": "https://api.github.com/users/Traderain/followers",
            "following_url": "https://api.github.com/users/Traderain/following{/other_user}",
            "gists_url": "https://api.github.com/users/Traderain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Traderain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Traderain/subscriptions",
            "organizations_url": "https://api.github.com/users/Traderain/orgs",
            "repos_url": "https://api.github.com/users/Traderain/repos",
            "events_url": "https://api.github.com/users/Traderain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Traderain/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T09:51:41Z",
        "updated_at": "2018-07-05T09:51:41Z",
        "author_association": "NONE",
        "body": "Yes because the project is huge and I have no idea where the issue lies."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402680679",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402680679",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402680679,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjY4MDY3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T10:36:39Z",
        "updated_at": "2018-07-05T10:36:39Z",
        "author_association": "OWNER",
        "body": "Can you not consume it as a prebuilt nuget package?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402682219",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402682219",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402682219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjY4MjIxOQ==",
        "user": {
            "login": "2731381914",
            "id": 20227905,
            "node_id": "MDQ6VXNlcjIwMjI3OTA1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20227905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2731381914",
            "html_url": "https://github.com/2731381914",
            "followers_url": "https://api.github.com/users/2731381914/followers",
            "following_url": "https://api.github.com/users/2731381914/following{/other_user}",
            "gists_url": "https://api.github.com/users/2731381914/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/2731381914/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/2731381914/subscriptions",
            "organizations_url": "https://api.github.com/users/2731381914/orgs",
            "repos_url": "https://api.github.com/users/2731381914/repos",
            "events_url": "https://api.github.com/users/2731381914/events{/privacy}",
            "received_events_url": "https://api.github.com/users/2731381914/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T10:43:16Z",
        "updated_at": "2018-07-05T10:43:16Z",
        "author_association": "NONE",
        "body": "I used the source code to import it into the unity project, using the package, and I was worried that there would be a problem with ios\u3002\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402689011",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402689011",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402689011,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjY4OTAxMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T11:12:36Z",
        "updated_at": "2018-07-05T11:12:36Z",
        "author_association": "OWNER",
        "body": "Is there a particular TFM that would make it simple to consume? The latest alpha includes an UWP TFM, so we probably have the tools in place to make that work now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402761774",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/417#issuecomment-402761774",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/417",
        "id": 402761774,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc2MTc3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T15:29:57Z",
        "updated_at": "2018-07-05T15:29:57Z",
        "author_association": "OWNER",
        "body": "I genuinely don't know, because I don't have a mac. I would *hope* that it would just take the netstandard build and work. Have you tried just referencing it from nuget? What happens?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402763417",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/415#issuecomment-402763417",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/415",
        "id": 402763417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc2MzQxNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-05T15:35:18Z",
        "updated_at": "2018-07-05T15:35:40Z",
        "author_association": "OWNER",
        "body": "Hmmm; I need to think about this. It introduces a lot of complexity to the API to do this meaningfully. Totally agree it is *desirable*."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402915907",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402915907",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402915907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjkxNTkwNw==",
        "user": {
            "login": "2731381914",
            "id": 20227905,
            "node_id": "MDQ6VXNlcjIwMjI3OTA1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20227905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2731381914",
            "html_url": "https://github.com/2731381914",
            "followers_url": "https://api.github.com/users/2731381914/followers",
            "following_url": "https://api.github.com/users/2731381914/following{/other_user}",
            "gists_url": "https://api.github.com/users/2731381914/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/2731381914/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/2731381914/subscriptions",
            "organizations_url": "https://api.github.com/users/2731381914/orgs",
            "repos_url": "https://api.github.com/users/2731381914/repos",
            "events_url": "https://api.github.com/users/2731381914/events{/privacy}",
            "received_events_url": "https://api.github.com/users/2731381914/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T03:35:30Z",
        "updated_at": "2018-07-06T03:35:30Z",
        "author_association": "NONE",
        "body": "I successfully imported the source code into unity using the protobuf-net-r668 version. I would like to know if this version supports protobuf3.0 and can be used in a production environment."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402940289",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402940289",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402940289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjk0MDI4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T06:33:20Z",
        "updated_at": "2018-07-06T06:33:20Z",
        "author_association": "OWNER",
        "body": "There are no binary format changes between proto2 and proto3, so without\nknowing exactly what proto3 features your talking about it is very hard to\nanswer that.\n\nYou can of course use r668, but it is unsupported at this point.\n\nOn Fri, 6 Jul 2018, 04:35 2731381914, <notifications@github.com> wrote:\n\n> I successfully imported the source code into unity using the\n> protobuf-net-r668 version. I would like to know if this version supports\n> protobuf3.0 and can be used in a production environment.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402915907>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJoSd6-ruEK4QmSPS7Vx5g7xBsNjks5uDtsDgaJpZM4VDoHt>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/402940682",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402940682",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 402940682,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjk0MDY4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T06:35:24Z",
        "updated_at": "2018-07-06T06:35:24Z",
        "author_association": "OWNER",
        "body": "There is a branch here that you may find interesting. I did it purely for\ncuriosity. It is not quite up to date, etc.\nhttps://github.com/mgravell/protobuf-net/tree/langver4\n\nOn Fri, 6 Jul 2018, 07:33 Marc Gravell, <marc.gravell@gmail.com> wrote:\n\n> There are no binary format changes between proto2 and proto3, so without\n> knowing exactly what proto3 features your talking about it is very hard to\n> answer that.\n>\n> You can of course use r668, but it is unsupported at this point.\n>\n> On Fri, 6 Jul 2018, 04:35 2731381914, <notifications@github.com> wrote:\n>\n>> I successfully imported the source code into unity using the\n>> protobuf-net-r668 version. I would like to know if this version supports\n>> protobuf3.0 and can be used in a production environment.\n>>\n>> \u2014\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/416#issuecomment-402915907>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsJoSd6-ruEK4QmSPS7Vx5g7xBsNjks5uDtsDgaJpZM4VDoHt>\n>> .\n>>\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403126344",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403126344",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403126344,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEyNjM0NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T19:30:03Z",
        "updated_at": "2018-07-06T19:30:03Z",
        "author_association": "OWNER",
        "body": "Yes, it should be perfectly fine re thread safety, and it has been used\nextensively on some very busy servers with high concurrency. If you can\ntalk more about your model, I might be able to help more. My first guess\nwould be that it is your code that is glitching here.\n\nOn Fri, 6 Jul 2018, 20:25 SneakyTactician, <notifications@github.com> wrote:\n\n> Does Protobuf-net Support Multi-Threading? I ask this because I am running\n> into a stack overflow exception that I suspect occurs whenever 2 or more\n> threads concurrently deserialize two different messages.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/418>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsACzEK6IXRLdzvC3sdER9iOIGtQrks5uD7m9gaJpZM4VF7Lp>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403133074",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403133074",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403133074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEzMzA3NA==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T20:03:50Z",
        "updated_at": "2018-07-06T20:03:50Z",
        "author_association": "NONE",
        "body": "My inheritance tree is rather large, so if you actually want to see the code to give me a pointer in the right direction then I will just have to send you a zip of the whole project or point you towards my git repo.\r\n\r\nProblem: \r\nI have a server and a client. Every time a client connects to the server the server serializes and sends over my game's world. Right after sending the world the server begins to send messages denoting what tick the server is at. Sometime during the deserialization I receive a stackoverflow exception that supposedly originates from Protobuf-net.dll according to visual studio. \r\n\r\nModel:\r\nI specify some parts of my inheritance tree by attributes, and some by the TypeModel.\r\nI manually teach the TypeModel how to serialize one class.\r\n\r\nThe attached file is how I serialize and deserialize messages.\r\n[ProtoUtil.zip](https://github.com/mgravell/protobuf-net/files/2171784/ProtoUtil.zip)\r\n\r\n\r\nBaseMessage -Has a message ID field, Every message is deserialized to this so we can deserialize the data again into the proper message.\r\n\r\n\r\n\r\nThank you so much for the help!\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403139481",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403139481",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403139481,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEzOTQ4MQ==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T20:32:15Z",
        "updated_at": "2018-07-06T20:32:15Z",
        "author_association": "NONE",
        "body": "[Serialization Tree.zip](https://github.com/mgravell/protobuf-net/files/2171891/Serialization.Tree.zip)\r\n\r\nThe serialization tree should have all of the objects that are serialized when sending over the world. The topmost object is the dimension class, which inherits or has an instance of every other file in the zip somewhere. Not sure if this will help."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403144591",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403144591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403144591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE0NDU5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T20:55:33Z",
        "updated_at": "2018-07-06T20:55:33Z",
        "author_association": "OWNER",
        "body": "Thanks, I'll have a look. My guess is that you have a recursive model and you somehow aren't triggering the recursion detection - perhaps via structs? I haven't opened the file yet, I'm purely speculating."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403155144",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403155144",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403155144,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1NTE0NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T21:48:55Z",
        "updated_at": "2018-07-06T21:48:55Z",
        "author_association": "OWNER",
        "body": "Can you clarify what you're doing here?\r\n\r\n                    BaseMessage Base = (BaseMessage)TypeModel.Deserialize(ms, null, typeof(BaseMessage));\r\n\r\n                    ms.Position = 0;\r\n                    BaseMessage message = (BaseMessage)TypeModel.Deserialize(ms, null, IDToMessage[Base.ID]);\r\n                    MasterLog.DebugWriteLine(\"Deserialized Message ID: \" + message.ID.ToString());\r\n\r\nIt *looks* like you're deserializing it once as `BaseMessage`, then deserializing it again as the actual type - is that right? Note: protobuf-net has inbuilt support for inheritance, if that is what you're trying to model.\r\n\r\n\r\nAdditionaly observation:\r\n\r\n    return outputStream.GetBuffer();\r\n\r\nwill return the oversized array with undefined contents (in reality, zeros) in the padding area.\r\n\r\nIt is a little hard to see what is going on here, and I appreciate it may not be desirable or possible to post a full repro here; but - do you *have* (locally) a reliable repeatable repro? ideally minimal? I've mapped out what I can from the files, and I can't *see* any loops, but...\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403155170",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403155170",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403155170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1NTE3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T21:49:05Z",
        "updated_at": "2018-07-06T21:49:05Z",
        "author_association": "OWNER",
        "body": "oh: also, what is the data volume here?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403162402",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403162402",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403162402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MjQwMg==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-06T22:32:31Z",
        "updated_at": "2018-07-06T22:32:31Z",
        "author_association": "NONE",
        "body": "I'll have a minimal example for you in the next day or two. As for the data volume:\r\n\r\nThe one time connection to the server sends the world (6-7 KB)\r\nTick messages happen about 17 msg per second, < 20 bytes each\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403225624",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403225624",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403225624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIyNTYyNA==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-07T16:05:22Z",
        "updated_at": "2018-07-07T16:05:22Z",
        "author_association": "NONE",
        "body": "[MagicalLife-ProtoDebug.zip](https://github.com/mgravell/protobuf-net/files/2172892/MagicalLife-ProtoDebug.zip)\r\n\r\n\r\nAttached is a simplified example. To reproduce:\r\n\r\n\r\n1. Build and run **(don't debug)** the MagicalLifeDedicatedServer project's .exe file\r\n2. Run and Debug the MagicalLifeClient project\r\n\r\n\r\nThe main class of interest:\r\nMagicalLifeAPI->Networking->Serialization->ProtoUtil.cs\r\n\r\n\r\nThe exception is thrown at line 60 of ProtoUtil.cs\r\n\r\n\r\nOther notable classes are located in:\r\nMagicalLifeAPI->Networking\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403225813",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403225813",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403225813,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzIyNTgxMw==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-07T16:08:52Z",
        "updated_at": "2018-07-07T16:09:08Z",
        "author_association": "NONE",
        "body": "When the client console asks for your IP, type in your IP4 address"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403271658",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/419#issuecomment-403271658",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/419",
        "id": 403271658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3MTY1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T08:27:02Z",
        "updated_at": "2018-07-08T08:27:02Z",
        "author_association": "OWNER",
        "body": "What happens today? Does it throw an exception? Or does it add a duplicate\nsub-type entry?\n\nOn Sun, 8 Jul 2018, 09:12 Varamil, <notifications@github.com> wrote:\n\n> I populate dynamically the RuntimeTypeModel.Default and it may happen that\n> I add two times the same subtype (with same filednumber) to the same type.\n> As there is a check when a type is added, I guested it was the same for\n> subtypes, but reading the source code, I see there's not.\n> In AddSubType function of MetaType it maybe cause a problem if I add\n> something like:\n>\n> foreach (SubType st in subTypes) //Check if not already included\n> {\n>     if (st.DerivedType == derivedMeta && st.FieldNumber == fieldNumber)\n>     {\n>          model.ResetKeyCache();\n>          return this;\n>     }\n> }\n>\n> before\n>\n> subTypes.Add(subType);\n> model.ResetKeyCache();\n> return this;\n>\n> thanks\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/419>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsA1gdm2RKvAMNI1XcRW95Jla3mnHks5uEb7zgaJpZM4VGo1e>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403275166",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403275166",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403275166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3NTE2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T09:32:40Z",
        "updated_at": "2018-07-08T10:43:24Z",
        "author_association": "OWNER",
        "body": "~~What are the wowrkloads / packages / pre-reqs I need for this to build? I'm getting a lot of build errors, mostly about `Point`, `ContentManager` and `Xna`. So: presumably I need Xna: but which version?~~\r\n\r\nEdit: never mind, MonoGame 3.6 seems to work"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403276087",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/417#issuecomment-403276087",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/417",
        "id": 403276087,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3NjA4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T09:52:21Z",
        "updated_at": "2018-07-08T09:52:21Z",
        "author_association": "OWNER",
        "body": "Treating as dup: https://github.com/mgravell/protobuf-net/issues/416"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403276237",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-403276237",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 403276237,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3NjIzNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T09:55:47Z",
        "updated_at": "2018-07-08T09:55:47Z",
        "author_association": "OWNER",
        "body": "Throwing this open to community input. I'm willing to go to reasonable lengths to be a good library citizen. Preferably lengths that don't bend my build process completely (we managed to get UWP into the regular build, for example).\r\n\r\nBut: I don't have the knowledge of what unity needs to consume things cleanly as a library / package. Are there any particular guidelines? Is there a TFM we can add in nuget? I simply don't know. I really don't want to have to go to langver 4. I've spiked it purely out of curiosity, and I don't like it much."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403277080",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-403277080",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 403277080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3NzA4MA==",
        "user": {
            "login": "distantcam",
            "id": 1298847,
            "node_id": "MDQ6VXNlcjEyOTg4NDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1298847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/distantcam",
            "html_url": "https://github.com/distantcam",
            "followers_url": "https://api.github.com/users/distantcam/followers",
            "following_url": "https://api.github.com/users/distantcam/following{/other_user}",
            "gists_url": "https://api.github.com/users/distantcam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/distantcam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/distantcam/subscriptions",
            "organizations_url": "https://api.github.com/users/distantcam/orgs",
            "repos_url": "https://api.github.com/users/distantcam/repos",
            "events_url": "https://api.github.com/users/distantcam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/distantcam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T10:11:43Z",
        "updated_at": "2018-07-08T10:11:43Z",
        "author_association": "NONE",
        "body": "Two things are needed. Both require Unity 2018.1 or later.\r\n\r\nFirst, update the project to use .NET 4.5.\r\nhttps://docs.unity3d.com/Manual/ScriptingRuntimeUpgrade.html\r\n\r\nThen use the `Package Manager` to import the `Incremental Compiler` package. \r\nhttps://forum.unity.com/threads/unity-incremental-c-compiler.523993/"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403277882",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-403277882",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 403277882,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI3Nzg4Mg==",
        "user": {
            "login": "distantcam",
            "id": 1298847,
            "node_id": "MDQ6VXNlcjEyOTg4NDc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1298847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/distantcam",
            "html_url": "https://github.com/distantcam",
            "followers_url": "https://api.github.com/users/distantcam/followers",
            "following_url": "https://api.github.com/users/distantcam/following{/other_user}",
            "gists_url": "https://api.github.com/users/distantcam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/distantcam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/distantcam/subscriptions",
            "organizations_url": "https://api.github.com/users/distantcam/orgs",
            "repos_url": "https://api.github.com/users/distantcam/repos",
            "events_url": "https://api.github.com/users/distantcam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/distantcam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T10:27:27Z",
        "updated_at": "2018-07-08T10:27:27Z",
        "author_association": "NONE",
        "body": "@mgravell I don't do iOS unity development but AFAIK importing precompiled libraries works as usual. The Unity documentation also mentions that `dynamic` code doesn't work on iOS, but I don't know if that's used in this project."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403280932",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403280932",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403280932,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI4MDkzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T11:26:24Z",
        "updated_at": "2018-07-08T11:29:16Z",
        "author_association": "OWNER",
        "body": "Right; the problem is that you aren't framing your messages correctly. In `Client_DataReceived` you are assuming that the incoming data is exactly one message, but that's just not how TCP works. TCP is a *stream*, and depending on various things, you can get data split or combined *pretty much randomly*. Because of this, data streams require \"framing\", so that you know how to split the data up. With a binary protocol, a typical framing approach might be : length prefix. The way I investigated this was to use protobuf-net's inbuilt \"with length prefix\" options (see: `SerializeWithLengthPrefix` and `DeserializeWithLengthPrefix`) to do *very crude* framing (note: this is insufficient, as I will explain later). This gives me output of things like:\r\n\r\n```\r\nDeserializing: ServerTickMessage 4, 8 bytes...\r\nDeserialized Message ID: 4\r\nDeserializing: WorldTransferMessage 2, 5727 bytes...\r\nDeserialized Message ID: 2\r\nHey, we dropped a message! We only used 5002 of 5727 bytes\r\n```\r\n\r\nwhich suggests that another 700+ bytes got combined at the TCP level and were incorrectly treated as part of this message. This means you were deserializing that data *as the wrong type and into a pre-existing object*, at which point pretty much all guarantees of reasonable behaviour are out the window.\r\n\r\nSo: the first thing you need to do is: implement framing. There's an additional problem here, though, because framing doesn't just mean \"splitting up data when you get more than one message at a time\" - it is more complex; you could get half a message in a fragment, or one and a bit messages, or the end of one message, the entire of a second message, and half of a third message. TCP is fun like that. So: when dealing with data streams, you also need to worry about \"backlog\", i.e. what to do with the half  message you received and can't process yet. This is actually a topic I've been talking about a lot lately, see [part 1](https://blog.marcgravell.com/2018/07/pipe-dreams-part-1.html) and [part 2](https://blog.marcgravell.com/2018/07/pipe-dreams-part-2.html) here. Note: I'm not saying that you need to move to \"pipelines\" - I'm just saying \"this are the related common problems that anyone dealing with data protocols need to know about and worry about\". Pipelines just happens to be a convenient fix, but you can get the same just by keeping a `MemoryStream` of incomplete payloads.\r\n\r\n---\r\n\r\nUnrelated observations:\r\n\r\n - you're doubling up on inheritance; your \"deserialize, check the id, get the actual type, now deserialize that\" is already doing all of the work that protobuf-net *already did*. If you check the **actual** type of the message after the first `Deserialize` call (`Base.GetType()`, etc), you should find that it *actually is* the correct expected type - there is no need to do the \"rewind and redo with the correct type\" work.\r\n- You're currently paying additional overhead by converting the data to base-64 and back to byte[]; you might be better off just returning `outputStream.ToArray()`, if you need a right-sized `byte[]`.\r\n\r\n---\r\n\r\nBut: fix your framing. Oh, I just realised I also spoke about it [here](https://blog.marcgravell.com/2013/02/how-many-ways-can-you-mess-up-io.html) - see the middle point, \"Network packets: what you send is not (usually) what you get\""
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403282642",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-403282642",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 403282642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI4MjY0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T11:57:40Z",
        "updated_at": "2018-07-08T11:57:40Z",
        "author_association": "OWNER",
        "body": "@distantcam nope, no dynamic"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403285751",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/419#issuecomment-403285751",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/419",
        "id": 403285751,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI4NTc1MQ==",
        "user": {
            "login": "Varamil",
            "id": 40546649,
            "node_id": "MDQ6VXNlcjQwNTQ2NjQ5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/40546649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Varamil",
            "html_url": "https://github.com/Varamil",
            "followers_url": "https://api.github.com/users/Varamil/followers",
            "following_url": "https://api.github.com/users/Varamil/following{/other_user}",
            "gists_url": "https://api.github.com/users/Varamil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Varamil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Varamil/subscriptions",
            "organizations_url": "https://api.github.com/users/Varamil/orgs",
            "repos_url": "https://api.github.com/users/Varamil/repos",
            "events_url": "https://api.github.com/users/Varamil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Varamil/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T12:51:50Z",
        "updated_at": "2018-07-08T12:51:50Z",
        "author_association": "NONE",
        "body": "It adds a duplicate sub-type, but when serialize throw an exception \"Duplicate field-number detected\".\r\nThe added foreach solves the duplication, but I don't know if it can cause side effects. I don't have either see a way to check if a sub-type is already present or not."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403296328",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403296328",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403296328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzI5NjMyOA==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T15:42:40Z",
        "updated_at": "2018-07-08T15:42:40Z",
        "author_association": "NONE",
        "body": "Thank you so much! I'm very new network programming, and I didn't know that TCP combined or withheld parts of messages. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403300191",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403300191",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/418",
        "id": 403300191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzMwMDE5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-08T16:43:04Z",
        "updated_at": "2018-07-08T16:43:04Z",
        "author_association": "OWNER",
        "body": "No problem. Having runnable code *really helped here*, so: thanks. If you\nfind yourself struggling and need help with framing, give me a shout -\nnetwork code and data protocols is something of a specialty of mine :)\n\nOn Sun, 8 Jul 2018, 16:42 SneakyTactician, <notifications@github.com> wrote:\n\n> Thank you so much! I'm very new network programming, and I didn't know\n> that TCP combined or withheld parts of messages.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/418#issuecomment-403296328>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHwITgJ7kNa9Fvio_3C3GMmGYGAXks5uEihwgaJpZM4VF7Lp>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/403395829",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-403395829",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 403395829,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzM5NTgyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-09T08:08:45Z",
        "updated_at": "2018-07-09T08:08:45Z",
        "author_association": "OWNER",
        "body": "so fun story: I downloaded 12GB of unity ...\r\n\r\n![no clue](https://cdn-images-1.medium.com/max/1200/1*snTXFElFuQLSFDnvZKJ6IA.png)\r\n\r\nSo... I'm ducking out here. That UI means not a single thing to me. This is where someone who actually understands how to package things for unity is going to have to step up, 'cos ... with all the will in the world, I'm just not going to be efficient or effective with that."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/405176217",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-405176217",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 405176217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE3NjIxNw==",
        "user": {
            "login": "gamemachine",
            "id": 75981,
            "node_id": "MDQ6VXNlcjc1OTgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/75981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gamemachine",
            "html_url": "https://github.com/gamemachine",
            "followers_url": "https://api.github.com/users/gamemachine/followers",
            "following_url": "https://api.github.com/users/gamemachine/following{/other_user}",
            "gists_url": "https://api.github.com/users/gamemachine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gamemachine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gamemachine/subscriptions",
            "organizations_url": "https://api.github.com/users/gamemachine/orgs",
            "repos_url": "https://api.github.com/users/gamemachine/repos",
            "events_url": "https://api.github.com/users/gamemachine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gamemachine/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-16T08:16:13Z",
        "updated_at": "2018-07-16T08:16:13Z",
        "author_association": "NONE",
        "body": "Unity is moving to AOT only even on PC.  So the main thing is no JIT.\r\n\r\nFor the api you have .Net 4.x or .Net standard 2.0.  \r\n\r\nC# 6 is the highest language level supported in their release builds.  But they have a Roslyn compiler package now in preview, that will be going into the next release with C# 7.2 support.   \r\n\r\nIf I was aiming for the widest compatibility, I'd target 4.x and C# 6, although C# 7.2 in 6 months or so will I think be where most Unity users are.  You will find a very few users using the now deprecated .Net 3.x api.  I would not be inclined to support that if it was an issue in any way.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/405225002",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-405225002",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 405225002,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTIyNTAwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-16T12:02:53Z",
        "updated_at": "2018-07-16T12:02:53Z",
        "author_association": "OWNER",
        "body": "From a separate email discussion, I obtained the following:\r\n\r\n- that there exists  https://github.com/GlitchEnzo/NuGetForUnity\r\n- that it seems to work fine with this lib\r\n\r\nNo idea if that is a good option, but it is an option.\r\n\r\n@gamemachine - it is fine saying that we \"have .Net 4.x or .Net standard 2.0.\", but it is often the case that we need to do some kind of special-casing to prevent AOT from even *trying* to do emit; the lib already has feature detection, but there are scenarios where it doesn't work - for UWP we had to add a specific TFM, for example. So: I'm still very interested in whether a TFM exists for Unity in this configuration."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/405325295",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-405325295",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 405325295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMyNTI5NQ==",
        "user": {
            "login": "gamemachine",
            "id": 75981,
            "node_id": "MDQ6VXNlcjc1OTgx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/75981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gamemachine",
            "html_url": "https://github.com/gamemachine",
            "followers_url": "https://api.github.com/users/gamemachine/followers",
            "following_url": "https://api.github.com/users/gamemachine/following{/other_user}",
            "gists_url": "https://api.github.com/users/gamemachine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gamemachine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gamemachine/subscriptions",
            "organizations_url": "https://api.github.com/users/gamemachine/orgs",
            "repos_url": "https://api.github.com/users/gamemachine/repos",
            "events_url": "https://api.github.com/users/gamemachine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gamemachine/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-16T17:44:20Z",
        "updated_at": "2018-07-16T17:44:20Z",
        "author_association": "NONE",
        "body": "I think this is about as close as you will get to a TFM.\r\n\r\nhttps://docs.unity3d.com/Manual/ScriptingRestrictions.html\r\n\r\nWith Unity if it requires JIT, the methods simply won't be there and it will an exception at runtime.  So yes you need to make sure it's not even trying to call anything requiring JIT. \r\n\r\nMos of the time it's simply a matter of don't use anything in Reflection.Emit."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407087149",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-407087149",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 407087149,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA4NzE0OQ==",
        "user": {
            "login": "RinayShah",
            "id": 30274343,
            "node_id": "MDQ6VXNlcjMwMjc0MzQz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30274343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RinayShah",
            "html_url": "https://github.com/RinayShah",
            "followers_url": "https://api.github.com/users/RinayShah/followers",
            "following_url": "https://api.github.com/users/RinayShah/following{/other_user}",
            "gists_url": "https://api.github.com/users/RinayShah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RinayShah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RinayShah/subscriptions",
            "organizations_url": "https://api.github.com/users/RinayShah/orgs",
            "repos_url": "https://api.github.com/users/RinayShah/repos",
            "events_url": "https://api.github.com/users/RinayShah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RinayShah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-23T14:56:06Z",
        "updated_at": "2018-07-23T14:56:06Z",
        "author_association": "NONE",
        "body": "Wait so what is the solution to this problem? I cannot install the 2.2.1 package because it gives me an error saying:\r\n\r\n\r\n\r\n> Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tCould not install package 'protobuf-net 2.2.1'. You are trying to install this package into a project that targets '.NETFramework,Version=v3.5', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\t\t\t0\t\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407167123",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/422#issuecomment-407167123",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/422",
        "id": 407167123,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE2NzEyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-23T19:05:41Z",
        "updated_at": "2018-07-23T19:05:41Z",
        "author_association": "OWNER",
        "body": "The current nuget should support 3.5 -\nhttps://www.nuget.org/packages/protobuf-net/\n\nNow: what is the target platform here? Is it an AOT platform?\n\nOn Mon, 23 Jul 2018, 15:59 Rinay Shah, <notifications@github.com> wrote:\n\n> When I run my code:\n> ` static class Program\n> {\n> private static string _exchange;\n> private static string _ipAddress;\n> private static string _bodyBindingKey;\n>\n>     private static void ReadConfigSettings()\n>     {\n>         _exchange = ConfigurationManager.AppSettings[\"exchange\"].Trim();\n>         _ipAddress = ConfigurationManager.AppSettings[\"ipAddress\"].Trim();\n>         _bodyBindingKey = ConfigurationManager.AppSettings[\"bodyBindingKey\"].Trim();\n>         if(string.IsNullOrEmpty(_exchange))\n>         {\n>             throw new ArgumentException(\"Exchange is not specified in the app.config.\");\n>         }\n>         if (string.IsNullOrEmpty(_ipAddress))\n>         {\n>             Console.WriteLine(\"IP Address not specified. Connecting to local host.\");\n>             _ipAddress = \"127.0.0.1\";\n>         }\n>         if (string.IsNullOrEmpty(_bodyBindingKey))\n>         {\n>             Console.WriteLine(\"Body binding key not specified. Binding to all remotes for body information.\");\n>             _bodyBindingKey = \"*.body\";\n>         }\n>         Console.WriteLine(\"Exchange is: {0}\", _exchange);\n>         Console.WriteLine(\"IP address is: {0}\", _ipAddress);\n>         Console.WriteLine(\"Listening for bodies to: {0}\", _bodyBindingKey);\n>     }\n>\n>     private static void Main()\n>     {\n>         ReadConfigSettings();\n>\n>         try\n>         {\n>             using (var receiver = new KinectBagReceiver<KinectBody>(_ipAddress, _exchange, _bodyBindingKey))\n>             {\n>                 while (true)\n>                 {\n>\n> #if NoWait\n> // Non-blocking, will return null if there isn't any data available\n> var kinectData = receiver.DequeueNoWait();\n> if (kinectData != null)\n> {\n> LogKinectData(kinectData);\n> }\n> System.Threading.Thread.Sleep(1);\n> #else\n> // Blocking call\n> var kinectData = receiver.Dequeue();\n> LogKinectData(kinectData);\n> #endif\n> }\n> }\n> }\n> catch(Exception ex)\n> {\n> Console.ForegroundColor = ConsoleColor.Red;\n> Console.WriteLine(ex.Message);\n> Console.ResetColor();\n> Console.WriteLine(ex.StackTrace);\n> Console.ReadLine();\n> }\n> }\n>\n>     static void LogKinectData(KinectBag<KinectBody> bundle)\n>     {\n>         Console.WriteLine(\"{0} New bundle from {1} \", DateTime.UtcNow.ToFileTimeUtc(), bundle.SensorId);\n>         if (bundle.Items != null)\n>         {\n>             Console.WriteLine(\"Bundle contains {0} bodies\", bundle.Items.Count);\n>             foreach (var body in bundle.Items)\n>             {\n>                 Console.WriteLine(\"- Body {0}\", body);\n>                 Console.WriteLine(\"- Hand States. Left {0} (Conf: {1}) Right {2} (Conf: {3})\", body.HandLeftState, body.HandLeftConfidence, body.HandRightState, body.HandRightConfidence);\n>                 if (body.FloatData.Keys.Count > 0)\n>                  {\n>                     Console.WriteLine(\"- Custom Data\");\n>                     foreach (var kv in body.FloatData)\n>                     {\n>                         Console.WriteLine(\"-- {0}: {1}\", kv.Key, kv.Value);\n>                     }\n>                 }\n>                 Console.WriteLine(\"- Joints\");\n>                 foreach (var joint in body.Joints)\n>                 {\n>                     Console.WriteLine(\"  - {0}\", joint);\n>                 }\n>\n>             }\n>         }\n>         else\n>         {\n>             Console.WriteLine(\"Empty bundle.\");\n>         }\n>     }\n> }\n>\n> }\n> `\n>\n> I get this error:\n>\n> [image: otoo1]\n> <https://user-images.githubusercontent.com/30274343/43084685-2ae49a8a-8e67-11e8-805c-9c8904f0e14a.png>\n>\n> I looked at other issues where they dicussed about installing older\n> Protobuf Packages but when I try to do that I get an error saying\n>\n> Severity Code Description Project File Line Suppression State\n> Error Could not install package 'protobuf-net 2.2.1'. You are trying to\n> install this package into a project that targets\n> '.NETFramework,Version=v3.5', but the package does not contain any assembly\n> references or content files that are compatible with that framework. For\n> more information, contact the package author. 0\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/422>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsK5QJBgacuJuLqJrWNInf2XMPP3pks5uJeTWgaJpZM4VbJ2R>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407413162",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407413162",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407413162,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQxMzE2Mg==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T13:49:08Z",
        "updated_at": "2018-07-24T13:49:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "We had a need to communicate to a WCF service using protobuf from a netcoreapp2.1 service... "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407416191",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407416191",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407416191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQxNjE5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T13:58:19Z",
        "updated_at": "2018-07-24T13:58:19Z",
        "author_association": "OWNER",
        "body": "Is it possible to make the extra package reference conditional on `FeatureServiceModel` being `true` ? Note: I haven't checked to see whether this is *always* true for all \"core\" lib targets"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407417443",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/423#issuecomment-407417443",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/423",
        "id": 407417443,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQxNzQ0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T14:01:59Z",
        "updated_at": "2018-07-24T14:01:59Z",
        "author_association": "OWNER",
        "body": "Note: no change required for VB; VB overload resolution prefers to cast enums to integers than to objects."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407418729",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/409#issuecomment-407418729",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/409",
        "id": 407418729,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQxODcyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T14:05:31Z",
        "updated_at": "2018-07-24T14:05:31Z",
        "author_association": "OWNER",
        "body": "package now available on nuget in non-alpha form; closing"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407421131",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-407421131",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 407421131,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQyMTEzMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T14:12:46Z",
        "updated_at": "2018-07-24T14:12:46Z",
        "author_association": "OWNER",
        "body": "again, can you clarify or provide a citation on what you think is being violated? Note: you say \" which do not include the \"fieldSpecified\" Boolean for fields which are optional in the proto message.\", but protobuf-net absolutely includes those... can you be very specific perhaps with an example? For example, here's mine: https://protogen.marcgravell.com/#g4206521d7557cced2e0de46ef2fa96d2 - which clearly generates a `public bool ShouldSerializeX()`\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407456423",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407456423",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407456423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ1NjQyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T15:51:36Z",
        "updated_at": "2018-07-24T15:51:36Z",
        "author_association": "OWNER",
        "body": "That looks pretty reasonable, thanks; sorry for this, but a little legals since I notice this is your first PR on the repo: can I confirm that you're able to contribute this PR freely and without caveat etc - or in human speak: that you (or someone else) isn't going to try to come at me with \"that's my work! I own that! I'm going to sue you!\" A simple \"yes, this is my own work and I hereby contribute it freely in accordance with the project licence\" should suffice! (I need to get a CLA bot!)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407457062",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407457062",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407457062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ1NzA2Mg==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T15:53:21Z",
        "updated_at": "2018-07-24T15:53:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "yes, this is my own work and I hereby contribute it freely in accordance with the project license."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407460451",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407460451",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407460451,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ2MDQ1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T16:02:56Z",
        "updated_at": "2018-07-24T16:02:56Z",
        "author_association": "OWNER",
        "body": "great; thanks for that! build locally seems fine etc; quick clarification - I can't see any functional difference between the netstandard2.0, netcoreapp2.0, and netcoreapp2.1 builds - they all use the same features as far as I can tell; so: what is the requirement for the 2 extra TFMs? what does that change here?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407473347",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407473347",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407473347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ3MzM0Nw==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T16:43:41Z",
        "updated_at": "2018-07-24T16:43:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think you're correct.  I removed the TFMs, I suspect you may want to re-add 2.1 at some point if you spanify...  Unrelated, I got a unit test error before and after my changes in this branch vs master, I did not investigate:\r\n\r\n\r\nXunit.Sdk.NotEqualException\r\nAssert.NotEqual() Failure\r\nExpected: Not 0\r\nActual:   0\r\n   at ProtoBuf.Schemas.SchemaTests.CompareProtoToParser(String path)\r\n\r\nC:\\Code\\Github\\protobuf-net\\src\\protobuf-net.Test\\bin\\Debug\\net452\\Schemas\\google\\protobuf\r\nstderr: \r\ngoogle/protobuf/map_unittest_proto3.proto: \"ForeignMessage\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: \"TestAllTypes\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: \"ForeignMessage\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: warning: Import google/protobuf/unittest_proto3.proto but not used.\r\n\r\nstderr (C#): \r\ngoogle/protobuf/map_unittest_proto3.proto: \"ForeignMessage\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: \"TestAllTypes\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: \"ForeignMessage\" is not defined.\r\ngoogle/protobuf/map_unittest_proto3.proto: warning: Import google/protobuf/unittest_proto3.proto but not used.\r\n\r\nexit code(C#): 1\r\nProtoc exited with code 1\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407474770",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407474770",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407474770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ3NDc3MA==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T16:48:19Z",
        "updated_at": "2018-07-24T16:48:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Unrelated, this should be valid here yes?  Tests look like winning solitaire."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407476506",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-407476506",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 407476506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ3NjUwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-24T16:53:45Z",
        "updated_at": "2018-07-24T16:53:45Z",
        "author_association": "OWNER",
        "body": "Yes, there is one known glitch in a very specific and unlikely .proto scenario - I should mark it as skipped, sorry: my bad.\r\n\r\nSpan is on my list (I've done a lot of work playing with it in anticipation); the main fun bit there is the question of whether it is better to add a TFM to make use of span-aware APIs, also needing a #if / #else for the non-2.1 stuff, Vs keep a single codebase without adding a TFM/#if - by using MemoryMarshal etc. It is a tricky question in some cases, but yes: I know all about the different options there."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/407804494",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-407804494",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 407804494,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzgwNDQ5NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-25T15:55:08Z",
        "updated_at": "2018-07-25T15:55:33Z",
        "author_association": "OWNER",
        "body": "One of the considerations here is: allocations and array mutability. The problem is that *unlike string*, we can't just assign a default value for free - it has real cost. Creating a new `byte[]` per instance can be unexpected, and if we use a *shared* instance, it can get confusing if someone changes `.BytesArray[1] = 42;` (which now updates all instances that are using the default shared array)\r\n\r\n\r\nI wonder if the \"fix\" here is to start considering \"spans\"; for example, if we used `ReadOnlyMemory<byte>` instead of `byte[]`, we *could* do something here (without incurring extra overhead), i.e.\r\n\r\n```c#\r\n[global::ProtoBuf.ProtoMember(1)]\r\npublic ReadOnlyMemory<byte> BytesArray { get; set; } = __pbn__bytesArray__default;\r\nprivate static readonly ReadOnlyMemory<byte> __pbn__bytesArray__default = new byte [] { 97,98,99 };\r\n```\r\n\r\nThis can still be assigned to different values by callers, but it is clear and obvious that you can't change the *interior* contents.\r\n\r\nThe problem is: we don't have any code to support this today :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408166719",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-408166719",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 408166719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODE2NjcxOQ==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T17:05:58Z",
        "updated_at": "2018-07-26T17:05:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "Indeed, the namespace should be wired up to use the projects NamespaceRoot. Shouldn't be a bit deal. The complexity there is making the NS adjust to relative paths when the .proto file is placed in a subdirectory. Typically, you would also want to provide the ability to override the namespace on a per-file basis; resx files allow you to do this, for example. It might also be nice to specify the visibility of the generated class. Do these classes need to be public to function? Or can they be internal? Or, you can have the generated code default the class visibility: not specified in the code so defaulted to internal, and allow a partial class to make it public if desired. I have an example of wiring up the NS in another project, so I can hook that up pretty quickly.\r\n\r\nI can also pretty easily wire up the configuration for language, C# vs VB, I should have had that in there already, but overlooked it.\r\n\r\nI guess I don't know what you mean about MSBuild only. Yes, this only works with MSBuild. However, the nuget integration that you are talking about is already here. The ProtobufNet.MSBuild.props/targets files are exactly that. They are automatically imported into the csproj when you reference this nuget package, and include some additional files to integrate with VS: adding property pages for .proto files and including generated code \"on save\". Those files are the key to making the nuget package function automatically when added to the project. Is there some other build system that you intend to support? What else is there for .net? Cake? I've only ever used MSBuild, and since VS uses MSBuild I would expect that nearly 100% of .NET devs use MSBuild (whether they know it or not).\r\n\r\nOne potential issue with the current design of this: it includes the protobuf-net and protobuf-net.Reflection assemblies in the package. This means that the generated code will be based off the version of protobuf-net that is embedded in the package, which might not be the same version that the project is referencing. Ideally, this package would be able to determine the referenced version of protobuf-net and use that dll to do the code generation. This would guarantee that the generated code is the same as would be generated by protogen. This might be more difficult to figure out, but should be possible, I think.\r\n\r\nI won't be able to make these adjustments for a few days, but will hopefully get back to this at week end.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408177895",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-408177895",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 408177895,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODE3Nzg5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T17:43:55Z",
        "updated_at": "2018-07-26T17:43:55Z",
        "author_association": "OWNER",
        "body": "I wouldn't worry too much about lib vs codegen versions: they tend to drift\nvery very rarely (compatibility wise), and a \"update both to latest\" is a\nreasonable default response.\n\nI was thinking of \"dotnet build\" - I don't know whether that would work\nwith this. If it does: great; if it doesn't: it is still better than we\nhave today!\n\nI really appreciate your input on this. As I say: this is simply something\nthat is outside my experience. I've repeatedly thought \"I should delve into\nthat\", but: there's always 20 other things to delve into! So: thanks.\n\nCan I confirm that you're able and willing to contribute this code in\naccordance with the project license? Meaning: you or your employer won't\ncome at me with a lawyer \"I own that bit, and I'm going to sue you!\"\n\nOn Thu, 26 Jul 2018, 18:05 Mark Pflug, <notifications@github.com> wrote:\n\n> Indeed, the namespace should be wired up to use the projects\n> NamespaceRoot. Shouldn't be a bit deal. The complexity there is making the\n> NS adjust to relative paths when the .proto file is placed in a\n> subdirectory. Typically, you would also want to provide the ability to\n> override the namespace on a per-file basis; resx files allow you to do\n> this, for example. It might also be nice to specify the visibility of the\n> generated class. Do these classes need to be public to function? Or can\n> they be internal? Or, you can have the generated code default the class\n> visibility: not specified in the code so defaulted to internal, and allow a\n> partial class to make it public if desired. I have an example of wiring up\n> the NS in another project, so I can hook that up pretty quickly.\n>\n> I can also pretty easily wire up the configuration for language, C# vs VB,\n> I should have had that in there already, but overlooked it.\n>\n> I guess I don't know what you mean about MSBuild only. Yes, this only\n> works with MSBuild. However, the nuget integration that you are talking\n> about is already here. The ProtobufNet.MSBuild.props/targets files are\n> exactly that. They are automatically imported into the csproj when you\n> reference this nuget package, and include some additional files to\n> integrate with VS: adding property pages for .proto files and including\n> generated code \"on save\". Those files are the key to making the nuget\n> package function automatically when added to the project. Is there some\n> other build system that you intend to support? What else is there for .net?\n> Cake? I've only ever used MSBuild, and since VS uses MSBuild I would expect\n> that nearly 100% of .NET devs use MSBuild (whether they know it or not).\n>\n> One potential issue with the current design of this: it includes the\n> protobuf-net and protobuf-net.Reflection assemblies in the package. This\n> means that the generated code will be based off the version of protobuf-net\n> that is embedded in the package, which might not be the same version that\n> the project is referencing. Ideally, this package would be able to\n> determine the referenced version of protobuf-net and use that dll to do the\n> code generation. This would guarantee that the generated code is the same\n> as would be generated by protogen. This might be more difficult to figure\n> out, but should be possible, I think.\n>\n> I won't be able to make these adjustments for a few days, but will\n> hopefully get back to this at week end.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/426#issuecomment-408166719>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLmC0gL9_KES7C0hrBTkccIGf7GLks5uKfb2gaJpZM4Vg-tl>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408214954",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-408214954",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 408214954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIxNDk1NA==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T19:50:37Z",
        "updated_at": "2018-07-26T19:50:37Z",
        "author_association": "NONE",
        "body": "Is a shared readonly variable is an option?\r\nThat way there is no need to allocate memory for each instance and its a readonly so it wont changed.\r\nI thing another way is that the default field can be private so it wont be changed by anybody.\r\n\r\nAnother question I have is why there are two ways to set the default value?\r\n```\r\n[global::ProtoBuf.ProtoMember(1)]\r\n[global::System.ComponentModel.DefaultValue(abc)]\r\npublic byte[] bytesArray\r\n{\r\n    get { return __pbn__bytesArray ?? abc; }\r\n    set { __pbn__bytesArray = value; }\r\n}\r\n```\r\n1. An attribute that sets the default value to something\r\n2. A check in the get function\r\n\r\nIs there a reason for both?\r\n\r\nThank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408226991",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-408226991",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 408226991,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODIyNjk5MQ==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T20:35:46Z",
        "updated_at": "2018-07-26T20:35:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "hate to bother, but any idea when this might get deployed?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408254966",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-408254966",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 408254966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI1NDk2Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T22:30:08Z",
        "updated_at": "2018-07-26T22:30:08Z",
        "author_association": "OWNER",
        "body": "> Is a shared readonly variable is an option?\r\n\r\nNo; arrays are mutable; even if you declare the *field* to be `readonly`, that only stops people assigning a *different array*; it doesn't stop them changing the contents of the existing array. It doesn't matter that the field is private - the moment you return it, any other consumer can change it - perhaps unwittingly:\r\n\r\n    obj.bytesArray[1] = 0x42; // mark as status complete\r\n\r\nThis changes the values for *anyone* - now or in the future - who ends up using the same shared array. That's the fundamental problem with arrays :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408255295",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-408255295",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 408255295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODI1NTI5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-26T22:31:47Z",
        "updated_at": "2018-07-26T22:31:47Z",
        "author_association": "OWNER",
        "body": "Sorry, I lost my evening trying to track down a JIT bug in netcoreapp2.1; I should hopefully get this and a few other things complete this weekend."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408301132",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/391#issuecomment-408301132",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/391",
        "id": 408301132,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODMwMTEzMg==",
        "user": {
            "login": "prodigga",
            "id": 185220,
            "node_id": "MDQ6VXNlcjE4NTIyMA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/185220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prodigga",
            "html_url": "https://github.com/prodigga",
            "followers_url": "https://api.github.com/users/prodigga/followers",
            "following_url": "https://api.github.com/users/prodigga/following{/other_user}",
            "gists_url": "https://api.github.com/users/prodigga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prodigga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prodigga/subscriptions",
            "organizations_url": "https://api.github.com/users/prodigga/orgs",
            "repos_url": "https://api.github.com/users/prodigga/repos",
            "events_url": "https://api.github.com/users/prodigga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prodigga/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T03:30:47Z",
        "updated_at": "2018-07-27T03:30:47Z",
        "author_association": "NONE",
        "body": "Hi @mgravell\r\n\r\nI had been thinking about implementing this myself and submitting a pull request. Always wanted to help out in a big Opensource project and this seemed like a good opportunity!  \r\n\r\nI was wondering if you were able to give me any pointers on where I would look and a brief overview of how you think it should be implemented to help me get started.\r\n\r\nWill pull the project down over the weekend and have a poke around!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408366424",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-408366424",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 408366424,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODM2NjQyNA==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T09:33:04Z",
        "updated_at": "2018-07-27T09:33:04Z",
        "author_association": "NONE",
        "body": "I meant something like ReadOnlyCollection<T>.\r\n\r\nAnd can you refer to my second question? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408405580",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-408405580",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 408405580,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQwNTU4MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T12:33:38Z",
        "updated_at": "2018-07-27T12:33:38Z",
        "author_association": "OWNER",
        "body": "I guess `ReadOnlyCollection<byte>` *could* work; but: there's no optimized path to handle that right now, so once again it would require changes. Basically: I think you're right that this should happen, it just isn't a 3 line code change - it requires internal library changes to support the scenario."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408459688",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408459688",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 408459688,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ1OTY4OA==",
        "user": {
            "login": "daniel-packard",
            "id": 1051245,
            "node_id": "MDQ6VXNlcjEwNTEyNDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1051245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daniel-packard",
            "html_url": "https://github.com/daniel-packard",
            "followers_url": "https://api.github.com/users/daniel-packard/followers",
            "following_url": "https://api.github.com/users/daniel-packard/following{/other_user}",
            "gists_url": "https://api.github.com/users/daniel-packard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daniel-packard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daniel-packard/subscriptions",
            "organizations_url": "https://api.github.com/users/daniel-packard/orgs",
            "repos_url": "https://api.github.com/users/daniel-packard/repos",
            "events_url": "https://api.github.com/users/daniel-packard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daniel-packard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T15:48:08Z",
        "updated_at": "2018-07-27T15:48:08Z",
        "author_association": "NONE",
        "body": "@mgravell --  Any new updates/thoughts/guidelines on using protobuf-net with UWP release mode (i.e. with AOT compilation turned on)?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408461572",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408461572",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 408461572,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ2MTU3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T15:54:43Z",
        "updated_at": "2018-07-27T15:54:43Z",
        "author_association": "OWNER",
        "body": "It depends whether you mean for it to work, or for it to work *optimally*.\nFor it to work: the current build on nuget has a UWP TFM target that should\navoid any AOT issues. However, it won't be as fast as it theoretically\ncould be - for that we need better build time tooling. That's on my\n\"definitely todo\" list, I just haven't got there yet.\n\nOn Fri, 27 Jul 2018, 16:48 Daniel Packard, <notifications@github.com> wrote:\n\n> @mgravell <https://github.com/mgravell> -- Any new\n> updates/thoughts/guidelines on using protobuf-net with UWP release mode\n> (i.e. with AOT compilation turned on)?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408459688>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNILkhyU_xtmZtiN5SGR8k4AoJ80ks5uKzY4gaJpZM4OEpFX>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408468004",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408468004",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 408468004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ2ODAwNA==",
        "user": {
            "login": "daniel-packard",
            "id": 1051245,
            "node_id": "MDQ6VXNlcjEwNTEyNDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1051245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daniel-packard",
            "html_url": "https://github.com/daniel-packard",
            "followers_url": "https://api.github.com/users/daniel-packard/followers",
            "following_url": "https://api.github.com/users/daniel-packard/following{/other_user}",
            "gists_url": "https://api.github.com/users/daniel-packard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daniel-packard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daniel-packard/subscriptions",
            "organizations_url": "https://api.github.com/users/daniel-packard/orgs",
            "repos_url": "https://api.github.com/users/daniel-packard/repos",
            "events_url": "https://api.github.com/users/daniel-packard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daniel-packard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T16:18:13Z",
        "updated_at": "2018-07-27T16:18:13Z",
        "author_association": "NONE",
        "body": "For the short term, \"work\" is much more important than \"work *optimally*\" - thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408474024",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-408474024",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 408474024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ3NDAyNA==",
        "user": {
            "login": "rwkarg",
            "id": 17482002,
            "node_id": "MDQ6VXNlcjE3NDgyMDAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17482002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwkarg",
            "html_url": "https://github.com/rwkarg",
            "followers_url": "https://api.github.com/users/rwkarg/followers",
            "following_url": "https://api.github.com/users/rwkarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwkarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwkarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwkarg/subscriptions",
            "organizations_url": "https://api.github.com/users/rwkarg/orgs",
            "repos_url": "https://api.github.com/users/rwkarg/repos",
            "events_url": "https://api.github.com/users/rwkarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwkarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T16:40:56Z",
        "updated_at": "2018-07-27T16:40:56Z",
        "author_association": "NONE",
        "body": "Sorry for the late reply!\r\n\r\nOn the serialization side:\r\nhttps://developers.google.com/protocol-buffers/docs/proto#specifying-field-rules\r\n`optional: a well-formed message can have zero or one of this field (but not more than one).`\r\n\r\nThat alone doesn't speak to the intended behavior but on the Deserialization side:\r\nhttps://developers.google.com/protocol-buffers/docs/proto#optional\r\n\r\n`A well-formed message may or may not contain an optional element. When a message is parsed, if it does not contain an optional element, the corresponding field in the parsed object is set to the default value for that field.`\r\nIf I send a message without an optional int32 field, then when it is deserialized it is set to the default (0 if no explicit default is specified in the definitions).\r\n\r\nI can't find anywhere in any specification a mention of different behavior between a message containing an optional field with the default value vs. omitting the field from the message; only than there shouldn't be a difference.\r\nIt is only in implementations that there is a notion of `has*` to differentiate between the two cases.\r\n\r\nIt also doesn't make any sense if you think about defaults. In a world where omitted is semantically different from default, if an integer field has a default value of 10, then it can't ever be \"used\" as a default by omitting the field. I would have a value of null/nil/unspecified instead of 10. I'd have to explicitly send 10 to get that intended value across. The same thing happens with zero if no explicit default is provided. I'd need to always send a serialized field with value zero.\r\n\r\nThe basic issues is that the proto2 spec doesn't have an elegant way to handle nullable types (an int32 field can only have a numeric value, not null) but implementations have tried to overload the use of `optional` fields to get nullable values even though that is not what that field type is specified to be used for.\r\n\r\nproto3 addresses this with the well-known wrapper types (like Int32Wrapper) where there is semantically a difference from omitting the Wrapper field is explicitly null and including that field, with or without an internal value field included, is explicitly the default (0 for int32) or the provided value, respectively."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408482186",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-408482186",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 408482186,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ4MjE4Ng==",
        "user": {
            "login": "rwkarg",
            "id": 17482002,
            "node_id": "MDQ6VXNlcjE3NDgyMDAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17482002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwkarg",
            "html_url": "https://github.com/rwkarg",
            "followers_url": "https://api.github.com/users/rwkarg/followers",
            "following_url": "https://api.github.com/users/rwkarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwkarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwkarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwkarg/subscriptions",
            "organizations_url": "https://api.github.com/users/rwkarg/orgs",
            "repos_url": "https://api.github.com/users/rwkarg/repos",
            "events_url": "https://api.github.com/users/rwkarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwkarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T17:12:48Z",
        "updated_at": "2018-07-27T17:12:48Z",
        "author_association": "NONE",
        "body": "Here's a concrete example of where this becomes an issue for us.\r\n\r\nWe have Java services we call from .NET that define their contracts in .proto files. A message may look like the following:\r\n\r\n```\r\nmessage SearchItems {\r\n  optional int32 itemType = 1;\r\n  // additional search filters\r\n}\r\n```\r\nIn this case, `itemType` 0 is a valid type.\r\nAs implemented on the Java side (since their implementation surfaces a hasItemType property) omitting the `itemType` field means don't do any filtering on itemType. Sending a value of zero (or any other number) for that field will filter the results to only include items of that itemType.\r\n\r\nThere is no way to tell from the contract that an omitted `itemType` field *won't* be deserialized as the default value of that field (which is counter to the expectation if following the proto2 spec).\r\nThis could be addressed by making every primitive type that the C# generator creates a nullable type (or with the ShouldSerialize/Reset methods and nullable backing field) but now there are *more* decisions that the message creating side needs to correctly make (and could get wrong) but *still the exact same* level of ambiguity (now, is null actually the same as the default value or not? The contract still doesn't differentiate). At least in our experience, the number of times that behavior is different for default vs. omitted optional fields is by far the minority so we'd be adding a lot of confusion for our use case if we went down this route for all optional fields.\r\n\r\nThe best way to address this type of situation would be to use a wrapper type (it's proto2 so define our own) to explicitly document the fields that have null behavior, but the messages are already defined and in use by several parties so breaking changes aren't a favorable option (neither is exposing a second api with the wrapped types).\r\n\r\nThe middle ground we're working with now is that the Java service's contracts have a custom option `Nullable` that they can put on fields that have a semantically different meaning between omitting the field and sending default value. We can then only generate nullable properties for the fields that actually matter. This way we know looking at the generated messages that null/omitting has a semantically different meaning from sending default. For the vast majority of the remaining fields, we know that it will always be a numeric value and we can let the library control whether it's sent or not.\r\nThis is pretty good and in practice it doesn't really cause problems, but there is still the issue that creating a new instance of a message with a nullable field will initialize that field to null when arguably it should be 0 (or the defined default value). That could be addressed but it just hasn't been an issue for us to spend any time on it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408489884",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-408489884",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 408489884,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ4OTg4NA==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T17:42:26Z",
        "updated_at": "2018-07-27T17:42:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "\"Upgrade both packages\" sounds like the simple solution, agreed.\r\n\r\ndotnet build calls MSBuild internally, or at least I think it does. Rargardless, \"dotnet build\" works with this solution, I just tested it. People using non-standard build tools will be on their own, of course.\r\n\r\nMSBuild is a rabbit hole for sure, so I'm glad I can save you some time. It took me quite a while to figure out how all this worked, and when I first saw it work: edit some domain-specific text, and then immediately interact with those types in C# code, I was floored. My proof of concept project was https://github.com/markpflug/elemental.jsonresource. Since then I've been on the lookout for other places where it could be applied. Now that all the details are sorted out, it doesn't take very long to adapt it to an existing code-gen scenario. Your existing code does all the real work, this project just wires it up to MSBuild and prods VS to provide intellisense. \r\n\r\nMy goal of contributing this to protobuf-net is to help advertise this DSL capability which seems to be pretty much unknown in the .NET community. You are a fairly well known figure in the community, so I'm hoping you can help make people more aware of this capability, because I think it has a lot of very powerful potential. I wouldn't have contributed this if I foresaw any legal issues."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408516353",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-408516353",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 408516353,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUxNjM1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T19:25:47Z",
        "updated_at": "2018-07-27T19:25:47Z",
        "author_association": "OWNER",
        "body": "Sounds great, and I definitely do appreciate gaining your MSBuild / nuget input - an area I'm blind in. I think this is also a good route into better AOT support - specifically, optionally enabling the existing schema tooling to generate C# to drive the serialization, for UWP etc - so: this is awesome, and I will very much be shouting it from the rooftops when we've merged it and I've played with it a bit to familiarize myself with how it works.\r\n\r\nThanks again!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408517191",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-408517191",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 408517191,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUxNzE5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T19:29:44Z",
        "updated_at": "2018-07-27T19:29:44Z",
        "author_association": "OWNER",
        "body": "I'm confused, though; the default behaviour is for the generated code to\nact the same whether it was an implicit default vs an explicit value\nassigned to that value. You actively need to go out of your way to check\nthe \"has\" (ShouldSerialize) - so ... if you don't want to know... don't\nlook? Maybe I'm hazy on what the fundamental thing you want to see changed\nhere is...\n\nOn Fri, 27 Jul 2018, 18:12 rwkarg, <notifications@github.com> wrote:\n\n> Here's a concrete example of where this becomes an issue for us.\n>\n> We have Java services we call from .NET that define their contracts in\n> .proto files. A message may look like the following:\n>\n> message SearchItems {\n>   optional int32 itemType = 1;\n>   // additional search filters\n> }\n>\n> In this case, itemType 0 is a valid type.\n> As implemented on the Java side (since their implementation surfaces a\n> hasItemType property) omitting the itemType field means don't do any\n> filtering on itemType. Sending a value of zero (or any other number) for\n> that field will filter the results to only include items of that itemType.\n>\n> There is no way to tell from the contract that an omitted itemType field\n> *won't* be deserialized as the default value of that field (which is\n> counter to the expectation if following the proto2 spec).\n> This could be addressed by making every primitive type that the C#\n> generator creates a nullable type (or with the ShouldSerialize/Reset\n> methods and nullable backing field) but now there are *more* decisions\n> that the message creating side needs to correctly make (and could get\n> wrong) but *still the exact same* level of ambiguity (now, is null\n> actually the same as the default value or not? The contract still doesn't\n> differentiate). At least in our experience, the number of times that\n> behavior is different for default vs. omitted optional fields is by far the\n> minority so we'd be adding a lot of confusion for our use case if we went\n> down this route for all optional fields.\n>\n> The best way to address this type of situation would be to use a wrapper\n> type (it's proto2 so define our own) to explicitly document the fields that\n> have null behavior, but the messages are already defined and in use by\n> several parties so breaking changes aren't a favorable option (neither is\n> exposing a second api with the wrapped types).\n>\n> The middle ground we're working with now is that the Java service's\n> contracts have a custom option Nullable that they can put on fields that\n> have a semantically different meaning between omitting the field and\n> sending default value. We can then only generate nullable properties for\n> the fields that actually matter. This way we know looking at the generated\n> messages that null/omitting has a semantically different meaning from\n> sending default. For the vast majority of the remaining fields, we know\n> that it will always be a numeric value and we can let the library control\n> whether it's sent or not.\n> This is pretty good and in practice it doesn't really cause problems, but\n> there is still the issue that creating a new instance of a message with a\n> nullable field will initialize that field to null when arguably it should\n> be 0 (or the defined default value). That could be addressed but it just\n> hasn't been an issue for us to spend any time on it.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/382#issuecomment-408482186>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDefPOPPlLbZiIghL-I4cbV9hevUks5uK0oRgaJpZM4Tl35t>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408517402",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408517402",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 408517402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUxNzQwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T19:30:36Z",
        "updated_at": "2018-07-27T19:30:36Z",
        "author_association": "OWNER",
        "body": "Great. Let me know if you hit any problems.\n\nOn Fri, 27 Jul 2018, 17:18 Daniel Packard, <notifications@github.com> wrote:\n\n> For the short term, \"work\" is much more important than \"work *optimally*\"\n> - thanks!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/274#issuecomment-408468004>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsDwT5exabTLg9Mo-2KEaTZNBWM14ks5uKz1GgaJpZM4OEpFX>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/408528982",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/382#issuecomment-408528982",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/382",
        "id": 408528982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUyODk4Mg==",
        "user": {
            "login": "rwkarg",
            "id": 17482002,
            "node_id": "MDQ6VXNlcjE3NDgyMDAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17482002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwkarg",
            "html_url": "https://github.com/rwkarg",
            "followers_url": "https://api.github.com/users/rwkarg/followers",
            "following_url": "https://api.github.com/users/rwkarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwkarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwkarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwkarg/subscriptions",
            "organizations_url": "https://api.github.com/users/rwkarg/orgs",
            "repos_url": "https://api.github.com/users/rwkarg/repos",
            "events_url": "https://api.github.com/users/rwkarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwkarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-27T20:22:14Z",
        "updated_at": "2018-07-27T20:22:14Z",
        "author_association": "NONE",
        "body": "The confusion may be my fault. I'm agreeing with you, not asking for a change \ud83d\ude04 \r\nproto3 - There is no use for a \"fieldSpecified\". The wrapper types are explicitly the way to have a nullable field (which is different from an optional field).\r\n\r\nWhat I was additionally commenting on is that even in proto2, according to the spec, there is *not* a difference between \"the data wasn't set and the default was zero\" and \"the data was set to zero specifically\". Despite that, many proto2 implementations allow for that difference which causes the above mentioned problems.\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409013757",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/412#issuecomment-409013757",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/412",
        "id": 409013757,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAxMzc1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T21:17:50Z",
        "updated_at": "2018-07-30T21:17:50Z",
        "author_association": "OWNER",
        "body": "Looks great, merging; thanks hugely"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409015759",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/421#issuecomment-409015759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/421",
        "id": 409015759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAxNTc1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T21:23:33Z",
        "updated_at": "2018-07-30T21:23:33Z",
        "author_association": "OWNER",
        "body": "This looks great, thanks; merging!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409020170",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-409020170",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 409020170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAyMDE3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T21:37:37Z",
        "updated_at": "2018-07-30T21:37:37Z",
        "author_association": "OWNER",
        "body": "This is looking great; merging now - many thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409021311",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-409021311",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 409021311,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAyMTMxMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T21:42:23Z",
        "updated_at": "2018-07-30T21:42:23Z",
        "author_association": "OWNER",
        "body": "Hi; I left a couple of review comments that I haven't seen updated / discussion on; did you have any views on those?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409038347",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-409038347",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 409038347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTAzODM0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T22:55:08Z",
        "updated_at": "2018-07-30T22:55:08Z",
        "author_association": "OWNER",
        "body": "Well this was a fun one, especially some merge conflicts (that's on me, I should have merged sooner), but: thanks hugely - much appreciated."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409040140",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409040140",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409040140,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0MDE0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T23:03:56Z",
        "updated_at": "2018-07-30T23:03:56Z",
        "author_association": "OWNER",
        "body": "I was hoping to look at this today, but clearing down some backlog PRs took all my time; hopefully I should have time to play with this tomorrow!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409040840",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-409040840",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 409040840,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0MDg0MA==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T23:07:19Z",
        "updated_at": "2018-07-30T23:07:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hooray!!!! Let me know if netfx2.0 gives any trouble \\ the one target I wasn\u2019t able to test locally. Could be a good time to drop too. :)\n\nNow that span, memory, and all the new C# features are on the table without having to worry about these additional platform targets  \u2014 I\u2019m excited to see if I can make any contributions that improve performance!\n\n\n\n\n\nSent from my iPhone\n\n> On Jul 30, 2018, at 5:55 PM, Marc Gravell <notifications@github.com> wrote:\n> \n> Well this was a fun one, especially some merge conflicts (that's on me, I should have merged sooner), but: thanks hugely - much appreciated.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409043240",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-409043240",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 409043240,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0MzI0MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-30T23:20:10Z",
        "updated_at": "2018-07-30T23:20:10Z",
        "author_association": "OWNER",
        "body": "> Could be a good time to drop too.\r\n\r\nmaybe; and if and when it starts causing problems, I might do that, but: right now it isn't costing me anything\r\n\r\nre span: can you give me a few days before you dive in there? I want to refactor some things, and we're going to hit one hell of a merge conflict otherwise. For clarity, what I plan to do is - in a branch - make `ProtoReader` and `ProtoWriter` into `abstract` base types, moving all the current implementation code into a concrete `Stream`-based subtype. This will allow me to start work on a `ReadOnlySequence<byte>` -based type. Part of the objective there is to allow to to try to get comparison data to allow me to compare against a direct version, i.e. not based on `ProtoReader`/`ProtoWriter`; to see whether that is worth doing \"for real\". All fun.\r\n\r\nThere are almost certainly span things that could be usefully worked on in the `Stream`-based version, , but... probably best to let me at least move the types around first."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409066103",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/396#issuecomment-409066103",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/396",
        "id": 409066103,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA2NjEwMw==",
        "user": {
            "login": "iamcarbon",
            "id": 7537,
            "node_id": "MDQ6VXNlcjc1Mzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamcarbon",
            "html_url": "https://github.com/iamcarbon",
            "followers_url": "https://api.github.com/users/iamcarbon/followers",
            "following_url": "https://api.github.com/users/iamcarbon/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamcarbon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamcarbon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamcarbon/subscriptions",
            "organizations_url": "https://api.github.com/users/iamcarbon/orgs",
            "repos_url": "https://api.github.com/users/iamcarbon/repos",
            "events_url": "https://api.github.com/users/iamcarbon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamcarbon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T01:42:56Z",
        "updated_at": "2018-07-31T01:42:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "\ud83d\udc4d"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409089322",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-409089322",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 409089322,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA4OTMyMg==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T04:17:24Z",
        "updated_at": "2018-07-31T04:17:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409118215",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/407#issuecomment-409118215",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/407",
        "id": 409118215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTExODIxNQ==",
        "user": {
            "login": "GreatFireWall",
            "id": 4510984,
            "node_id": "MDQ6VXNlcjQ1MTA5ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4510984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GreatFireWall",
            "html_url": "https://github.com/GreatFireWall",
            "followers_url": "https://api.github.com/users/GreatFireWall/followers",
            "following_url": "https://api.github.com/users/GreatFireWall/following{/other_user}",
            "gists_url": "https://api.github.com/users/GreatFireWall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GreatFireWall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GreatFireWall/subscriptions",
            "organizations_url": "https://api.github.com/users/GreatFireWall/orgs",
            "repos_url": "https://api.github.com/users/GreatFireWall/repos",
            "events_url": "https://api.github.com/users/GreatFireWall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GreatFireWall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T07:07:06Z",
        "updated_at": "2018-07-31T07:07:06Z",
        "author_association": "NONE",
        "body": "sorry, I can't see any comments except 23 Jun. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409118547",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/421#issuecomment-409118547",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/421",
        "id": 409118547,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTExODU0Nw==",
        "user": {
            "login": "seldary",
            "id": 1826296,
            "node_id": "MDQ6VXNlcjE4MjYyOTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1826296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldary",
            "html_url": "https://github.com/seldary",
            "followers_url": "https://api.github.com/users/seldary/followers",
            "following_url": "https://api.github.com/users/seldary/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldary/subscriptions",
            "organizations_url": "https://api.github.com/users/seldary/orgs",
            "repos_url": "https://api.github.com/users/seldary/repos",
            "events_url": "https://api.github.com/users/seldary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldary/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T07:08:27Z",
        "updated_at": "2018-07-31T07:08:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks!!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409372985",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/353#issuecomment-409372985",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/353",
        "id": 409372985,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM3Mjk4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T21:25:18Z",
        "updated_at": "2018-07-31T21:25:18Z",
        "author_association": "OWNER",
        "body": "I think, given the impact on the build process, and the realities of timing (.net standard \"in\", .net portable ... sorta on the way out), I'm reluctant to absorb this into the main branch. I really appreciate the thought, but I'm just not sure that it is the right thing to do. I hope you understand."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409383911",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409383911",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409383911,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM4MzkxMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T22:06:43Z",
        "updated_at": "2018-07-31T22:06:43Z",
        "author_association": "OWNER",
        "body": "OK, I spent about an hour trying to merge / rebase locally, and eventually gave up; I'm just going to merge this, and we can figure out the rest after :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409385756",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409385756",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409385756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM4NTc1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T22:14:47Z",
        "updated_at": "2018-07-31T22:14:47Z",
        "author_association": "OWNER",
        "body": "I get a few new warnings locally; the xml comments is fine - I can suppress that; any thoughts on:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\tMSB3836\tThe explicit binding redirect on \"Microsoft.Build.Framework, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" conflicts with an autogenerated binding redirect. Consider removing it from the application configuration file or disabling autogenerated binding redirects. The build will replace it with: \"<bindingRedirect oldVersion=\"0.0.0.0-99.9.9.9\" newVersion=\"15.1.0.0\" xmlns=\"urn:schemas-microsoft-com:asm.v1\" />\".\tprotobuf-net.MSBuild.Test\tC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets\t2224\t\r\n```\r\n\r\n(times several)\r\n\r\nfrom the app.config?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409388377",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409388377",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409388377,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM4ODM3Nw==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T22:26:56Z",
        "updated_at": "2018-07-31T22:26:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "It is possible that the app.config is no longer needed. Getting the MSBuild unit tests to function was a challenge. The key was adding the Microsoft.Build.Locator package, which provides a special assembly loader that knows how to locate and load the assemblies from your Visual studio install folders. This is needed, because the MSBuild nuget packages don't include enough of the .NET targets to be able to support a .NET build. Anyway, I think the Microsoft.Build.Locator package might be providing its own binding redirects. See here:\r\nhttps://github.com/Microsoft/MSBuildLocator/blob/master/src/MSBuildLocator/build/Microsoft.Build.Locator.props\r\n\r\nThis \"SuggestedBindingRedirects\" think is new to me,  but I assume it is what is causing this warning."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409453591",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/353#issuecomment-409453591",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/353",
        "id": 409453591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTQ1MzU5MQ==",
        "user": {
            "login": "rickardp",
            "id": 167356,
            "node_id": "MDQ6VXNlcjE2NzM1Ng==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/167356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickardp",
            "html_url": "https://github.com/rickardp",
            "followers_url": "https://api.github.com/users/rickardp/followers",
            "following_url": "https://api.github.com/users/rickardp/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickardp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickardp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickardp/subscriptions",
            "organizations_url": "https://api.github.com/users/rickardp/orgs",
            "repos_url": "https://api.github.com/users/rickardp/repos",
            "events_url": "https://api.github.com/users/rickardp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickardp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T05:26:22Z",
        "updated_at": "2018-08-01T05:26:22Z",
        "author_association": "NONE",
        "body": "Actually, during this time we managed to (slowly) migrate away from the old PCL targets, meaning we don\u2019t need this change anymore.\r\n\r\nIf anyone reading this should need to build with PCL support, I confirmed that this PR will only build on Windows (probably also Mono though).\r\n\r\nThank you for your time, and keep up the good work!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409745532",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409745532",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409745532,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc0NTUzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T22:27:52Z",
        "updated_at": "2018-08-01T22:27:52Z",
        "author_association": "OWNER",
        "body": "K; I've merged and cleaned up the app.config, but I'm still struggling a little with what I *do* with it; I can't pack it with `dotnet pack -c Release`, for example, which is my default trick.\r\n\r\nI'm *very* ignorant about MSBuild, so help me out here; how do I package this for deployment? Do we need to add a custom nuspec, for example?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409753447",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409753447",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409753447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc1MzQ0Nw==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T23:04:15Z",
        "updated_at": "2018-08-01T23:04:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "What is the error that dotnet pack is returning? I would have thought that would work, but I never tried it.\r\n\r\nHonestly, I was just creating the package from the Visual Studio UI. Right click the project node in Solution Explorer, and there should be a Pack option in the context menu. Be warned, that context menu option is flaky, it won't always create a new package, you might have to delete everything in the bin/release folder first. I think VS is incorrectly determining if the output is up to date.\r\n\r\nYou can do the same thing from the command line (dev tools) `msbuild protobuf-net.MSBuild.csproj /t:Pack /p:Configuration=Release`. This should produce the nupkg in the bin/release folder. All the package details/version should be coming from your Directory.Build.props, so it should pick up the same version as everything else. This is what I would have thought that `dotnet pack` command was doing internally.\r\n\r\nNow, to test the package. The way I do it (there might be a better way), is I create a local folder like `C:\\LocalNuget', put the package in there, then register that folder as a package source. Then I can select that package source to add the nupkg to a another project to test it. If you haven't ever done that, [here is some reading](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior).\r\n\r\nI should also point out, that this package \"works\" with both old and new-style SDK csproj project systems, however you will only get intellisense when using in a new SDK-style project. It looks like you have adopted the new SDK style, but be aware that it does't behave the same in the old style projects. Just another reason for people to make the move I guess. The behavior from MSBuild should be identical though for both project types.\r\n\r\nLet me know if you need further clarification. Happy to help."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409758759",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409758759",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409758759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc1ODc1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T23:34:47Z",
        "updated_at": "2018-08-01T23:34:47Z",
        "author_association": "OWNER",
        "body": "the pack error could be bad interplay with the switch to `MSBuild.Sdk.Extras` (for UAP); the error is:\r\n\r\n> C:\\code\\protobuf-net\\src\\protobuf-net\\protobuf-net.csproj : error MSB4057: The target \"_GetRestoreSettingsPerFramework\" does not exist in the project.\r\n\r\nwhich suggests protobuf-net itself is to blame, which would fit. Using the context menu pack option does indeed give me a nupkg; let me play with that, and see how it works. Thanks for pointing me in the right direction, and thanks for this contribution."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409759855",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409759855",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409759855,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc1OTg1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T23:41:34Z",
        "updated_at": "2018-08-01T23:41:34Z",
        "author_association": "OWNER",
        "body": "btw; I'm planning to blog about this when I've got my head around it and have some samples / demos; I really genuinely appreciate the work - it is simply outside my skillset. Can emit runtime IL and process binary files in massively parallel servers; can't understand a build script :/"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409760906",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409760906",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409760906,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc2MDkwNg==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T23:48:46Z",
        "updated_at": "2018-08-01T23:48:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think MSBuild is blind spot for most .NET devs, and I think that is a testament to how good the VS tooling is. MSBuild is involved in building just about every single .NET project ever, but most people never have to think about it, because the defaults *just work*. Learning it allows you do some pretty powerful stuff, but it is definitely not an easy technology to absorb. ... and then nuget layers another level of complexity (and power) on top."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409761464",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409761464",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409761464,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc2MTQ2NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-01T23:52:30Z",
        "updated_at": "2018-08-01T23:52:30Z",
        "author_association": "OWNER",
        "body": "https://www.nuget.org/packages/protobuf-net.MSBuild/ - I played with the package-id. I haven't fully tested it yet and put demos together : will do over the next few days"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409944913",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409944913",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409944913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk0NDkxMw==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-02T14:24:58Z",
        "updated_at": "2018-08-02T14:24:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "Turns out that changing the package ID breaks things. The way MSBuild/nuget integration works is that it expects the props/targets files to be located at \"/build/[packageid].props\". I'll make another pull request to rearrange everything such that the package name is \"protobuf-net.MSBuild\", I'll make the assembly name match that as well. For whatever reason, having a hyphen in the assembly name made me feel uncomfortable."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/409982700",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409982700",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/426",
        "id": 409982700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk4MjcwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-02T16:14:35Z",
        "updated_at": "2018-08-02T16:14:35Z",
        "author_association": "OWNER",
        "body": "Sorry for making work; I was aiming for \"consistent with the other pieces\"\n\nOn Thu, 2 Aug 2018, 15:25 Mark Pflug, <notifications@github.com> wrote:\n\n> Turns out that changing the package ID breaks things. The way\n> MSBuild/nuget integration works is that it expects the props/targets files\n> to be located at \"/build/[packageid].props\". I'll make another pull request\n> to rearrange everything such that the package name is\n> \"protobuf-net.MSBuild\", I'll make the assembly name match that as well. For\n> whatever reason, having a hyphen in the assembly name made me feel\n> uncomfortable.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/426#issuecomment-409944913>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsBgfuY12E5EUuePplU3WEoByohRuks5uMwvYgaJpZM4Vg-tl>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410098914",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/427#issuecomment-410098914",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/427",
        "id": 410098914,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDA5ODkxNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-02T23:29:16Z",
        "updated_at": "2018-08-02T23:29:16Z",
        "author_association": "OWNER",
        "body": "this looks great, thanks; see also; https://blog.marcgravell.com/2018/08/protobuf-net-august-2018-update.html\r\n\r\nminor observation: it looks like it pushes protobuf-net.Reflection into the build output, which *probably* isn't needed - not sure if there's a magic button to push on that, but: great work! I sincerely appreciate it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410212695",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/424#issuecomment-410212695",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/424",
        "id": 410212695,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDIxMjY5NQ==",
        "user": {
            "login": "Drawaes",
            "id": 16406969,
            "node_id": "MDQ6VXNlcjE2NDA2OTY5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/16406969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Drawaes",
            "html_url": "https://github.com/Drawaes",
            "followers_url": "https://api.github.com/users/Drawaes/followers",
            "following_url": "https://api.github.com/users/Drawaes/following{/other_user}",
            "gists_url": "https://api.github.com/users/Drawaes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Drawaes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Drawaes/subscriptions",
            "organizations_url": "https://api.github.com/users/Drawaes/orgs",
            "repos_url": "https://api.github.com/users/Drawaes/repos",
            "events_url": "https://api.github.com/users/Drawaes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Drawaes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T10:25:21Z",
        "updated_at": "2018-08-03T10:25:21Z",
        "author_association": "NONE",
        "body": "No thank you @randyridge ;) just noticed this and it means I can upgrade from 2.0.0.88 or whatever it was we were using in our .net core apps"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410245111",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/429#issuecomment-410245111",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/429",
        "id": 410245111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDI0NTExMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T12:56:49Z",
        "updated_at": "2018-08-03T12:56:49Z",
        "author_association": "OWNER",
        "body": "this looks great to me; I'm going to glance with a questioning face in @MarkPflug's direction, because they understand this aspect a lot better than me, but gets a \ud83d\udc4d from me"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410247651",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/430#issuecomment-410247651",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/430",
        "id": 410247651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDI0NzY1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T13:07:08Z",
        "updated_at": "2018-08-03T13:07:08Z",
        "author_association": "OWNER",
        "body": "note: IIRC the code already has msbuild-compatible error generation;  the command-line opts for `protoc` error style, which is different - but pretty sure both already exist"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410280053",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/429#issuecomment-410280053",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/429",
        "id": 410280053,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDI4MDA1Mw==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T14:58:22Z",
        "updated_at": "2018-08-03T14:58:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm wondering if it can be even simpler than that...\r\n\r\nWhat if it was just:\r\n`<ProtoCodeGenerationRoot>$(IntermediateOutputPath)</ProtoCodeGenerationRoot>`\r\n\r\nWould that still work in your scenario? I'm honestly not sure why I thought it was needed to combine that with the project root. Well, it was probably because I copied it verbatim from my project without thinking about it:\r\nhttps://github.com/MarkPflug/Elemental.JsonResource/blob/master/Elemental.JsonResource/build/Elemental.JsonResource.targets\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410300098",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/429#issuecomment-410300098",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/429",
        "id": 410300098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMwMDA5OA==",
        "user": {
            "login": "hartmannr76",
            "id": 1211229,
            "node_id": "MDQ6VXNlcjEyMTEyMjk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1211229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hartmannr76",
            "html_url": "https://github.com/hartmannr76",
            "followers_url": "https://api.github.com/users/hartmannr76/followers",
            "following_url": "https://api.github.com/users/hartmannr76/following{/other_user}",
            "gists_url": "https://api.github.com/users/hartmannr76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hartmannr76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hartmannr76/subscriptions",
            "organizations_url": "https://api.github.com/users/hartmannr76/orgs",
            "repos_url": "https://api.github.com/users/hartmannr76/repos",
            "events_url": "https://api.github.com/users/hartmannr76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hartmannr76/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T16:05:28Z",
        "updated_at": "2018-08-03T16:05:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "@MarkPflug I think you're right. The call looks like it should still work in all scenarios. The default (no `.props` file, is just relative) and the absolute path should still be fine. I'll update"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410301361",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/429#issuecomment-410301361",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/429",
        "id": 410301361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMwMTM2MQ==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T16:09:48Z",
        "updated_at": "2018-08-03T16:09:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "This looks good to me.\r\n\r\nOne other thing to consider. The \"obj\" folder can be a bit of a dumping ground for random build output. It might be good to push the generated proto code into a sub-directory to avoid file name collisions.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410312083",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/431#issuecomment-410312083",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/431",
        "id": 410312083,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMxMjA4Mw==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T16:49:14Z",
        "updated_at": "2018-08-03T16:49:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh oops. I slipped in something else here I didn't mean to. \r\n\r\n` <PrivateAssets>All</PrivateAssets>` on the project references. This makes it so that there isn't a nuget package dependency from `protobuf-net.MSBuild` to `protobuf-net` and `protobuf-net.Reflection`. Technically, since the code gen has those assemblies embedded, it doesn't require a dependency to those packages. The project that consumes this will still need protobuf-net for compilation, but I don't know if this should have a package reference or not. Thoughts?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410312929",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/431#issuecomment-410312929",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/431",
        "id": 410312929,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMxMjkyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T16:52:28Z",
        "updated_at": "2018-08-03T16:52:28Z",
        "author_association": "OWNER",
        "body": "Re the ref - I thought it would be PrivateAssets for that bit (comparing to things like the git versioning and pdb tools). Makes sense - will play with it this evening, much obliged. On the package ref: it makes sense for there to be a package ref here, *even if* it isn't technically required by the tool (after the build), the generated code won't work without it. So this means you only need the one ref to get things going.\r\n\r\nWill review this pm,huge thanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410314509",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/431#issuecomment-410314509",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/431",
        "id": 410314509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMxNDUwOQ==",
        "user": {
            "login": "MarkPflug",
            "id": 7776174,
            "node_id": "MDQ6VXNlcjc3NzYxNzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7776174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkPflug",
            "html_url": "https://github.com/MarkPflug",
            "followers_url": "https://api.github.com/users/MarkPflug/followers",
            "following_url": "https://api.github.com/users/MarkPflug/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkPflug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkPflug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkPflug/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkPflug/orgs",
            "repos_url": "https://api.github.com/users/MarkPflug/repos",
            "events_url": "https://api.github.com/users/MarkPflug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkPflug/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T16:58:21Z",
        "updated_at": "2018-08-03T16:58:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "So, I think that having a package dependency on protobuf-net, but *not* on protobuf-net.Reflection makes sense. Only the protobuf-net is required for the code compilation, and Reflection is only needed at code gen time but not for code compile?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410315690",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/431#issuecomment-410315690",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/431",
        "id": 410315690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDMxNTY5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T17:02:38Z",
        "updated_at": "2018-08-03T17:02:38Z",
        "author_association": "OWNER",
        "body": "> Only the protobuf-net is required for the code compilation, and Reflection is only needed at code gen time but not for code compile?\r\n\r\nExactly that, yes"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410393568",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/430#issuecomment-410393568",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/430",
        "id": 410393568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM5MzU2OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T22:37:04Z",
        "updated_at": "2018-08-03T22:37:04Z",
        "author_association": "OWNER",
        "body": "fixed by #431; available in 2.3.17"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410397872",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/430#issuecomment-410397872",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/430",
        "id": 410397872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM5Nzg3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T23:06:27Z",
        "updated_at": "2018-08-03T23:06:27Z",
        "author_association": "OWNER",
        "body": "deployed 2.3.17"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410397891",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/431#issuecomment-410397891",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/431",
        "id": 410397891,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM5Nzg5MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T23:06:37Z",
        "updated_at": "2018-08-03T23:06:37Z",
        "author_association": "OWNER",
        "body": "deployed 2.3.17"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410397902",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/429#issuecomment-410397902",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/429",
        "id": 410397902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM5NzkwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T23:06:44Z",
        "updated_at": "2018-08-03T23:06:44Z",
        "author_association": "OWNER",
        "body": "deployed 2.3.17"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410402328",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-410402328",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 410402328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQwMjMyOA==",
        "user": {
            "login": "mjfusa",
            "id": 447857,
            "node_id": "MDQ6VXNlcjQ0Nzg1Nw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/447857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mjfusa",
            "html_url": "https://github.com/mjfusa",
            "followers_url": "https://api.github.com/users/mjfusa/followers",
            "following_url": "https://api.github.com/users/mjfusa/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjfusa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mjfusa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjfusa/subscriptions",
            "organizations_url": "https://api.github.com/users/mjfusa/orgs",
            "repos_url": "https://api.github.com/users/mjfusa/repos",
            "events_url": "https://api.github.com/users/mjfusa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mjfusa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-03T23:40:24Z",
        "updated_at": "2018-08-03T23:40:24Z",
        "author_association": "NONE",
        "body": "@mgravell - are you saying there are still issues with .Net Native in the current release?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410405370",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/274#issuecomment-410405370",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/274",
        "id": 410405370,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQwNTM3MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-04T00:08:09Z",
        "updated_at": "2018-08-04T00:08:09Z",
        "author_association": "OWNER",
        "body": "@mjfusa define \"issues\"? the primary codebase is metaprogramming heavy, which means it can't work to the full potential on platforms that don't allow IL emit. We have plans to change that; see the end of https://blog.marcgravell.com/2018/08/protobuf-net-august-2018-update.html - but: it should *work*"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410454664",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-410454664",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 410454664,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ1NDY2NA==",
        "user": {
            "login": "omri1100",
            "id": 17013289,
            "node_id": "MDQ6VXNlcjE3MDEzMjg5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/17013289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omri1100",
            "html_url": "https://github.com/omri1100",
            "followers_url": "https://api.github.com/users/omri1100/followers",
            "following_url": "https://api.github.com/users/omri1100/following{/other_user}",
            "gists_url": "https://api.github.com/users/omri1100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omri1100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omri1100/subscriptions",
            "organizations_url": "https://api.github.com/users/omri1100/orgs",
            "repos_url": "https://api.github.com/users/omri1100/repos",
            "events_url": "https://api.github.com/users/omri1100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omri1100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-04T14:48:31Z",
        "updated_at": "2018-08-04T14:48:31Z",
        "author_association": "NONE",
        "body": "OK,\r\nI'm was thinking about this problem from another perspective, is it possible to add an option that when its on, the protogen-net.exe will treat the 'bytes' field as a 'string' field?\r\nI was thinking why the 'bytes' field in python and cpp become a 'string' field and thought why not do the same in c#, its a matter of one function to parse the string to byte array.\r\n\r\nI dont know if its even possible or right to do, but I think it will be a good option as it is done in other languages\r\n\r\nThank you!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410456387",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/425#issuecomment-410456387",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/425",
        "id": 410456387,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ1NjM4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-04T15:16:33Z",
        "updated_at": "2018-08-04T15:16:33Z",
        "author_association": "OWNER",
        "body": "I think that would introduce significant confusion and cause a range of problems; `string` is semantically very different to `bytes`. The real fix is to get `ReadOnlyMemory<byte>` support. It is on the list..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410546754",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/434#issuecomment-410546754",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/434",
        "id": 410546754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU0Njc1NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-05T20:45:22Z",
        "updated_at": "2018-08-05T20:45:22Z",
        "author_association": "OWNER",
        "body": "\ud83d\udc4d awesome, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410575931",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/436#issuecomment-410575931",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/436",
        "id": 410575931,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU3NTkzMQ==",
        "user": {
            "login": "benaadams",
            "id": 1142958,
            "node_id": "MDQ6VXNlcjExNDI5NTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1142958?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benaadams",
            "html_url": "https://github.com/benaadams",
            "followers_url": "https://api.github.com/users/benaadams/followers",
            "following_url": "https://api.github.com/users/benaadams/following{/other_user}",
            "gists_url": "https://api.github.com/users/benaadams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benaadams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benaadams/subscriptions",
            "organizations_url": "https://api.github.com/users/benaadams/orgs",
            "repos_url": "https://api.github.com/users/benaadams/repos",
            "events_url": "https://api.github.com/users/benaadams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benaadams/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T03:00:57Z",
        "updated_at": "2018-08-06T03:00:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "Manually inline Peek to reduce span copies, Jit doesn't remove the copies after inlining\r\n\r\nDon't pass mutable struct via `in` then call a property on it as that will cause a copy; so always pass by `ref`\r\n- had to inline a method for the stackalloc version as compiler got unhappy\r\n\r\nOnly first arguments get passed by register, no point in wasting on Span which gets passed via stack"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410585953",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/436#issuecomment-410585953",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/436",
        "id": 410585953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU4NTk1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T04:31:16Z",
        "updated_at": "2018-08-06T04:31:16Z",
        "author_association": "OWNER",
        "body": "that's.... just wow; thanks Ben"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410740966",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410740966",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410740966,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc0MDk2Ng==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T15:07:43Z",
        "updated_at": "2018-08-06T15:07:43Z",
        "author_association": "NONE",
        "body": "I think I understand the basic concept:\r\n\r\nWhen data comes in, read a header which describes the length of the message, receive data into buffer until the length of the message is stored, then deserialize. Repeat. When serializing with length prefix, I assume this embeds a length header in the message. How do I read just this part of incoming data?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410757727",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410757727",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410757727,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc1NzcyNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T15:57:06Z",
        "updated_at": "2018-08-06T15:57:06Z",
        "author_association": "OWNER",
        "body": "`ProtoBuf.Serializer.TryReadLengthPrefix` attempts to read *just a header* from a stream, without any additional buffering. Once you know the length, and you have that much data, you can use `new ProtoReader(...)` (or with the latest build: `ProtoReader.Create`) specifying the length to create a length-limited reader. With *that*, you can use the `Deserialize` methods, but you might need to use the ones on `RuntimeTypeModel.Default` to be able to pass in a reader (note: `Serializer` is just a shim that makes `RuntimeTypeModel.Default` easier to use; they are the same thing).\r\n\r\nDoes that answer the question?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410779730",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410779730",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410779730,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc3OTczMA==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T17:07:52Z",
        "updated_at": "2018-08-06T17:07:52Z",
        "author_association": "NONE",
        "body": "I believe so. Thank you! I'm going to try implementing what you described now, and if everything goes well I won't have any more questions for today."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410803753",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410803753",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410803753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDgwMzc1Mw==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T18:21:09Z",
        "updated_at": "2018-08-06T18:21:09Z",
        "author_association": "NONE",
        "body": "I determined that for one message I was debugging with that the length prefix header was 3 bytes large. Are they always that size? Or is there a way to calculate the size of the header?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410811107",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410811107",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410811107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDgxMTEwNw==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T18:43:00Z",
        "updated_at": "2018-08-06T18:43:00Z",
        "author_association": "NONE",
        "body": "The reason I ask is that I need to know so I can remove the correct amount of bytes from my expandable buffer"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410814581",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410814581",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410814581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDgxNDU4MQ==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T18:53:15Z",
        "updated_at": "2018-08-06T18:53:15Z",
        "author_association": "NONE",
        "body": "Never mind, I figured it all out. Thank you so much for your help! "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/410815495",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/437#issuecomment-410815495",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/437",
        "id": 410815495,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDgxNTQ5NQ==",
        "user": {
            "login": "SneakyTactician",
            "id": 17660531,
            "node_id": "MDQ6VXNlcjE3NjYwNTMx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17660531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SneakyTactician",
            "html_url": "https://github.com/SneakyTactician",
            "followers_url": "https://api.github.com/users/SneakyTactician/followers",
            "following_url": "https://api.github.com/users/SneakyTactician/following{/other_user}",
            "gists_url": "https://api.github.com/users/SneakyTactician/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SneakyTactician/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SneakyTactician/subscriptions",
            "organizations_url": "https://api.github.com/users/SneakyTactician/orgs",
            "repos_url": "https://api.github.com/users/SneakyTactician/repos",
            "events_url": "https://api.github.com/users/SneakyTactician/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SneakyTactician/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-06T18:55:58Z",
        "updated_at": "2018-08-06T19:17:16Z",
        "author_association": "NONE",
        "body": "Here is my solution, if you are interested in it, or want to reference it for the next person wondering how to do message framing: \r\n\r\n    /// <summary>\r\n    /// Used to buffer Protobuf-net (<see cref=\"BaseMessage\"/>) messages correctly in order to handle a TCP connection.\r\n    /// </summary>\r\n    public class MessageBuffer\r\n    {\r\n        private List<byte> Buffer { get; set; }\r\n\r\n        private int NextMessageLength = -1;\r\n\r\n        public MessageBuffer()\r\n        {\r\n            this.Buffer = new List<byte>();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Handles new data from the TCP connection.\r\n        /// </summary>\r\n        /// <param name=\"data\"></param>\r\n        public void ReceiveData(byte[] data)\r\n        {\r\n            this.Buffer.AddRange(data);\r\n\r\n            if (NextMessageLength == -1)\r\n            {\r\n                this.CalculateNextMessageLength();\r\n            }\r\n        }\r\n\r\n        private void CalculateNextMessageLength()\r\n        {\r\n                ProtoBuf.Serializer.TryReadLengthPrefix(this.Buffer.ToArray(), 0, this.Buffer.Count, ProtoBuf.PrefixStyle.Base128, out this.NextMessageLength);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Returns true if <paramref name=\"data\"/> contains a message to be deserialized.\r\n        /// </summary>\r\n        /// <param name=\"data\">Null if there is no message fully buffered yet.</param>\r\n        /// <returns></returns>\r\n        public bool GetMessageData(out BaseMessage data)\r\n        {\r\n            if (this.NextMessageLength != -1 && this.NextMessageLength <= this.Buffer.Count)\r\n            {\r\n                using (MemoryStream ms = new MemoryStream(this.Buffer.ToArray()))\r\n                {\r\n                    data = (BaseMessage)ProtoUtil.TypeModel.DeserializeWithLengthPrefix(ms, null, typeof(BaseMessage), PrefixStyle.Base128, 0);\r\n                    this.Buffer.RemoveRange(0, Convert.ToInt32(ms.Position));\r\n\r\n                    //Remove the trailing 0s from the last message\r\n\r\n                    //The starting index of the next message\r\n                    int start = this.Buffer.FindIndex(x => x != 0);\r\n\r\n                    if (start == -1)\r\n                    {\r\n                        this.Buffer.Clear();\r\n                    }\r\n                    else\r\n                    {\r\n                        this.Buffer.RemoveRange(0, start);\r\n                    }\r\n                }\r\n\r\n                this.NextMessageLength = -1;\r\n                return true;\r\n            }\r\n\r\n            data = null;\r\n            return false;\r\n        }\r\n    }"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411335927",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/438#issuecomment-411335927",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/438",
        "id": 411335927,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTMzNTkyNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-08T08:54:57Z",
        "updated_at": "2018-08-08T08:56:19Z",
        "author_association": "OWNER",
        "body": "This already exists; ~~~`Serializer.NonGeneric.GetSchema`~~~\r\n\r\nedit / correction: `RuntimeTypeModel.Default.GetSchema`. But; it exists :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411424959",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/439#issuecomment-411424959",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/439",
        "id": 411424959,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQyNDk1OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-08T14:26:16Z",
        "updated_at": "2018-08-08T14:26:16Z",
        "author_association": "OWNER",
        "body": "lol, yeah, you're absolutely right; also, most of those are at least 5+ years out of date; perhaps this should be \"redo documentation from scratch\" :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411435289",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/439#issuecomment-411435289",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/439",
        "id": 411435289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQzNTI4OQ==",
        "user": {
            "login": "SamuelEnglard",
            "id": 1119883,
            "node_id": "MDQ6VXNlcjExMTk4ODM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1119883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamuelEnglard",
            "html_url": "https://github.com/SamuelEnglard",
            "followers_url": "https://api.github.com/users/SamuelEnglard/followers",
            "following_url": "https://api.github.com/users/SamuelEnglard/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamuelEnglard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamuelEnglard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamuelEnglard/subscriptions",
            "organizations_url": "https://api.github.com/users/SamuelEnglard/orgs",
            "repos_url": "https://api.github.com/users/SamuelEnglard/repos",
            "events_url": "https://api.github.com/users/SamuelEnglard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamuelEnglard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-08T14:54:54Z",
        "updated_at": "2018-08-08T14:54:54Z",
        "author_association": "NONE",
        "body": "5+ years out of date is still better than nothing possibly!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411680261",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/440#issuecomment-411680261",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/440",
        "id": 411680261,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY4MDI2MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-09T08:31:26Z",
        "updated_at": "2018-08-09T08:31:26Z",
        "author_association": "OWNER",
        "body": "To be clear: when you say \"output format\", you're just talking about the filename, is that correct?\r\n\r\nI'm aware of a {foo}.designer.cs convention, and I could get behind moving to that. I'll need to look into whether {foo}.generated.cs is an existing convention.\r\n\r\nNote I have also added some extra RCS \r\n(Rosylnator) suppressions in the next build. Can I ask what things it is your linter is complaining about? If it is only a few, with codes, and a well-known linter, we could also annotate them appropriately."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411683398",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/440#issuecomment-411683398",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/440",
        "id": 411683398,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY4MzM5OA==",
        "user": {
            "login": "watsonsong",
            "id": 853396,
            "node_id": "MDQ6VXNlcjg1MzM5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/853396?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/watsonsong",
            "html_url": "https://github.com/watsonsong",
            "followers_url": "https://api.github.com/users/watsonsong/followers",
            "following_url": "https://api.github.com/users/watsonsong/following{/other_user}",
            "gists_url": "https://api.github.com/users/watsonsong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/watsonsong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/watsonsong/subscriptions",
            "organizations_url": "https://api.github.com/users/watsonsong/orgs",
            "repos_url": "https://api.github.com/users/watsonsong/repos",
            "events_url": "https://api.github.com/users/watsonsong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/watsonsong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-09T08:42:33Z",
        "updated_at": "2018-08-09T08:42:33Z",
        "author_association": "NONE",
        "body": "I am using this analyzer:\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers\r\n\r\nAnd it treat the '.generated.cs' filename as a generated file for ignore it. Or check the header start with '<auto-generated/>'."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/411777546",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/440#issuecomment-411777546",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/440",
        "id": 411777546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc3NzU0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-09T14:29:12Z",
        "updated_at": "2018-08-09T14:29:12Z",
        "author_association": "OWNER",
        "body": "k; I can get behind this; should be pretty simple to implement"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412178378",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/441#issuecomment-412178378",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/441",
        "id": 412178378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE3ODM3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-10T19:11:32Z",
        "updated_at": "2018-08-10T19:11:32Z",
        "author_association": "OWNER",
        "body": "Try just \"protogen\" - not \"dotnet protogen\"\n\nOn Fri, 10 Aug 2018, 17:12 Mark Watts, <notifications@github.com> wrote:\n\n> After installing on MacOs the command is still not available.\n>\n> ~> dotnet tool install --global protobuf-net.Protogen\n> You can invoke the tool using the following command: protogen\n> Tool 'protobuf-net.protogen' (version '2.3.17') was successfully installed.\n> ~> cd tmp\n> ~/tmp> dotnet protogen\n> No executable found matching command \"dotnet-protogen\"\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/441>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLOIcoAYj2EbKKEgATYVjE_tDJn4ks5uPbDRgaJpZM4V4dFs>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412265465",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/441#issuecomment-412265465",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/441",
        "id": 412265465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI2NTQ2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-11T10:09:52Z",
        "updated_at": "2018-08-11T10:09:52Z",
        "author_association": "OWNER",
        "body": "closing this down as I *assume* this is the problem; if I'm wrong, just ping me and we can reopen it and investigate."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412286934",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/441#issuecomment-412286934",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/441",
        "id": 412286934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI4NjkzNA==",
        "user": {
            "login": "mwatts",
            "id": 18381,
            "node_id": "MDQ6VXNlcjE4Mzgx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwatts",
            "html_url": "https://github.com/mwatts",
            "followers_url": "https://api.github.com/users/mwatts/followers",
            "following_url": "https://api.github.com/users/mwatts/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwatts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwatts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwatts/subscriptions",
            "organizations_url": "https://api.github.com/users/mwatts/orgs",
            "repos_url": "https://api.github.com/users/mwatts/repos",
            "events_url": "https://api.github.com/users/mwatts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwatts/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-11T16:44:13Z",
        "updated_at": "2018-08-11T16:44:13Z",
        "author_association": "NONE",
        "body": "using just \"protogen\" does in fact work.  Seems contrary to most of the other tools function and was not clear in the documentation however.   But that did work."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412289419",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/441#issuecomment-412289419",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/441",
        "id": 412289419,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI4OTQxOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-11T17:19:16Z",
        "updated_at": "2018-08-11T17:19:16Z",
        "author_association": "OWNER",
        "body": "That's simply how \"global tools\" (as designed by the folks at MS) work; to quote from the text you pasted:\r\n\r\n> `You can invoke the tool using the following command: protogen`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412298801",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-412298801",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 412298801,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI5ODgwMQ==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-11T20:10:38Z",
        "updated_at": "2018-08-11T20:12:03Z",
        "author_association": "NONE",
        "body": "Linked to this #379 - I assume it's the same bug - you could try @mgravell's suggestion of 'ProtoMap' there, I haven't tried it myself."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412490584",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-412490584",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 412490584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ5MDU4NA==",
        "user": {
            "login": "wbkostan",
            "id": 1851754,
            "node_id": "MDQ6VXNlcjE4NTE3NTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1851754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wbkostan",
            "html_url": "https://github.com/wbkostan",
            "followers_url": "https://api.github.com/users/wbkostan/followers",
            "following_url": "https://api.github.com/users/wbkostan/following{/other_user}",
            "gists_url": "https://api.github.com/users/wbkostan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wbkostan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wbkostan/subscriptions",
            "organizations_url": "https://api.github.com/users/wbkostan/orgs",
            "repos_url": "https://api.github.com/users/wbkostan/repos",
            "events_url": "https://api.github.com/users/wbkostan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wbkostan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T11:41:14Z",
        "updated_at": "2018-08-13T11:41:14Z",
        "author_association": "NONE",
        "body": "@mgravell, I hate resurrecting an issue after a year, but it's still Open, so hope it's not too much of a sin. I'm experiencing this still in 2.3.15. Is this a confirmed bug? Intentionally unsupported functionality? Can anyone with more knowledge of the internals comment on the impacts of the fix provided by @lbargaoanu to ignore the keys for type objects when reading? (that fix also works for me locally)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412495399",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-412495399",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 412495399,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ5NTM5OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T12:03:11Z",
        "updated_at": "2018-08-13T12:03:11Z",
        "author_association": "OWNER",
        "body": "@wbkostan  I'll have to have a look when I've finished the current batch of open changes (there's a huge amount of pending work a branch, that I want to complete and merge)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412495808",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-412495808",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 412495808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ5NTgwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T12:05:01Z",
        "updated_at": "2018-08-13T12:05:57Z",
        "author_association": "OWNER",
        "body": "~~~\"The assembly version of protobuf-net 2.3.13 is higher than the assembly version of protobuf-net 2.3.17.\"\r\n\r\ncannot parse; is that an error message coming from somewhere in particular? I'm struggling a little to understand what you mean, because a: 2.3.13 is not higher than 2.3.17, and b: they're both \"the asssembly version of protobuf-net\". So: what exactly are you seeing, where?~~~"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412495975",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-412495975",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 412495975,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ5NTk3NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T12:05:47Z",
        "updated_at": "2018-08-13T12:05:47Z",
        "author_association": "OWNER",
        "body": "oh, I think I understand - sorry, I was being slow; I'll have a look at what they are and see what happened."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412499582",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-412499582",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 412499582,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ5OTU4Mg==",
        "user": {
            "login": "sellep",
            "id": 7950306,
            "node_id": "MDQ6VXNlcjc5NTAzMDY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7950306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sellep",
            "html_url": "https://github.com/sellep",
            "followers_url": "https://api.github.com/users/sellep/followers",
            "following_url": "https://api.github.com/users/sellep/following{/other_user}",
            "gists_url": "https://api.github.com/users/sellep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sellep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sellep/subscriptions",
            "organizations_url": "https://api.github.com/users/sellep/orgs",
            "repos_url": "https://api.github.com/users/sellep/repos",
            "events_url": "https://api.github.com/users/sellep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sellep/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T12:21:23Z",
        "updated_at": "2018-08-13T12:21:23Z",
        "author_association": "NONE",
        "body": "I just think that the assembly version of protobuf-net (NuGet version 2.3.17) should be 2.3.17.0 and not 2.3.0.0."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/412500062",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-412500062",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 412500062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjUwMDA2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-13T12:23:18Z",
        "updated_at": "2018-08-13T12:23:18Z",
        "author_association": "OWNER",
        "body": "yeah, I got there in the end :) I'll fix that next version; I guess the transition to \"nerdbank versioning\" didn't go quite as smoothly as I intended"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413336307",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/443#issuecomment-413336307",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/443",
        "id": 413336307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMzNjMwNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-15T21:04:24Z",
        "updated_at": "2018-08-15T21:04:24Z",
        "author_association": "OWNER",
        "body": "Well, I'd argue that is correct. Zero is an invalid field number in protobuf. Are you looking for an improved error message here, or?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413799388",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413799388",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413799388,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzc5OTM4OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T08:43:59Z",
        "updated_at": "2018-08-17T08:43:59Z",
        "author_association": "OWNER",
        "body": "This seems to work:\r\n\r\n```c#\r\n    static void Main()\r\n    {\r\n        Serializer.PrepareSerializer<ICreature>();\r\n        var creatures = new ICreature[] { new Human(), new Animal() };\r\n\r\n        var clone = Serializer.DeepClone(creatures);\r\n        Console.WriteLine(clone[0]); // Human\r\n        Console.WriteLine(clone[1]); // Animal\r\n    }\r\n\r\n    [ProtoContract]\r\n    [ProtoInclude(1, typeof(Human))]\r\n    [ProtoInclude(2, typeof(Animal))]\r\n    public interface ICreature\r\n    {\r\n    }\r\n```\r\n\r\nNote: `AddSubType(0, ...)` **should not work** - if it does, that's a bug - `0` is not a valid tag in protobuf."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413822893",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413822893",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413822893,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzgyMjg5Mw==",
        "user": {
            "login": "MaxXor",
            "id": 7271470,
            "node_id": "MDQ6VXNlcjcyNzE0NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7271470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaxXor",
            "html_url": "https://github.com/MaxXor",
            "followers_url": "https://api.github.com/users/MaxXor/followers",
            "following_url": "https://api.github.com/users/MaxXor/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaxXor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaxXor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaxXor/subscriptions",
            "organizations_url": "https://api.github.com/users/MaxXor/orgs",
            "repos_url": "https://api.github.com/users/MaxXor/repos",
            "events_url": "https://api.github.com/users/MaxXor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaxXor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T10:19:29Z",
        "updated_at": "2018-08-17T10:19:29Z",
        "author_association": "NONE",
        "body": "Sorry, copied wrong example, I'm not using `0` as tag.\r\n\r\nTry this:\r\n```csharp\r\n        static void Main(string[] args)\r\n        {\r\n            var h = new Human { Name = \"Test\" };\r\n            using (var file = File.Create(\"creature.bin\"))\r\n            {\r\n                Serializer.Serialize(file, h);\r\n            }\r\n\r\n            using (var file = File.OpenRead(\"creature.bin\"))\r\n            {\r\n                ICreature c = Serializer.Deserialize<ICreature>(file);\r\n                Type t = c.GetType();\r\n                if (t == typeof(Animal))\r\n                {\r\n                    var p = (Animal)c;\r\n                }\r\n                else if (t == typeof(Human))\r\n                {\r\n                    var p = (Human)c;\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nWith these `ProtoInclude` it doesn't work and throws a ProtoException: \r\n> The type cannot be changed once a serializer has been generated for Human (ICreature)\r\n\r\nWhen manually adding the sub types, it works though... is this maybe a bug?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413849641",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413849641",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413849641,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg0OTY0MQ==",
        "user": {
            "login": "MaxXor",
            "id": 7271470,
            "node_id": "MDQ6VXNlcjcyNzE0NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7271470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaxXor",
            "html_url": "https://github.com/MaxXor",
            "followers_url": "https://api.github.com/users/MaxXor/followers",
            "following_url": "https://api.github.com/users/MaxXor/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaxXor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaxXor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaxXor/subscriptions",
            "organizations_url": "https://api.github.com/users/MaxXor/orgs",
            "repos_url": "https://api.github.com/users/MaxXor/repos",
            "events_url": "https://api.github.com/users/MaxXor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaxXor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T12:26:08Z",
        "updated_at": "2018-08-17T12:26:08Z",
        "author_association": "NONE",
        "body": "Oh nevermind, you example is indeed working, thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413850227",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413850227",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413850227,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg1MDIyNw==",
        "user": {
            "login": "MaxXor",
            "id": 7271470,
            "node_id": "MDQ6VXNlcjcyNzE0NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7271470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaxXor",
            "html_url": "https://github.com/MaxXor",
            "followers_url": "https://api.github.com/users/MaxXor/followers",
            "following_url": "https://api.github.com/users/MaxXor/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaxXor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaxXor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaxXor/subscriptions",
            "organizations_url": "https://api.github.com/users/MaxXor/orgs",
            "repos_url": "https://api.github.com/users/MaxXor/repos",
            "events_url": "https://api.github.com/users/MaxXor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaxXor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T12:28:47Z",
        "updated_at": "2018-08-17T12:28:47Z",
        "author_association": "NONE",
        "body": "When exactly is it required to call `PrepareSerializer`?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413871116",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/304#issuecomment-413871116",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/304",
        "id": 413871116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg3MTExNg==",
        "user": {
            "login": "wbkostan",
            "id": 1851754,
            "node_id": "MDQ6VXNlcjE4NTE3NTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1851754?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wbkostan",
            "html_url": "https://github.com/wbkostan",
            "followers_url": "https://api.github.com/users/wbkostan/followers",
            "following_url": "https://api.github.com/users/wbkostan/following{/other_user}",
            "gists_url": "https://api.github.com/users/wbkostan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wbkostan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wbkostan/subscriptions",
            "organizations_url": "https://api.github.com/users/wbkostan/orgs",
            "repos_url": "https://api.github.com/users/wbkostan/repos",
            "events_url": "https://api.github.com/users/wbkostan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wbkostan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T13:46:29Z",
        "updated_at": "2018-08-17T13:46:29Z",
        "author_association": "NONE",
        "body": "Leaving an update on the results of my debugging. The issue appears to specifically affect nested dynamic types which are not written with 'AsReference' support. When the objects are not written with AsReference support, the BclHelpers.ReadNetObject method fills the NetObjectCache from the inside out by reading the 'newTypeKey' and 'type' information, but not attempting to add those values to the source.NetCache until after executing ProtoReader.ReadTypedObject (which will recursively deserialize the inner dynamic type and add the keyed object information to the, still empty, NetObjectCache which triggers the exception). The solution seems to be ensuring the keyed object information is added to the NetObjectCache before attempting to deserialize the typed object; however, I don't understand the behaviors around late set and as reference support yet to suggest a pull request.\r\n\r\nAs a workaround, using [ProtoMember(1, DynamicType=true, AsReference=true)] seems to resolve my immediate issues. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413874007",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413874007",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413874007,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg3NDAwNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T13:56:23Z",
        "updated_at": "2018-08-17T13:56:23Z",
        "author_association": "OWNER",
        "body": "good question; I haven't dug into which cog exactly fell out here; but: it is a good \"catch all\" for any problems of this kind; the 3.0 branch includes a new \"create a compiled type model for this entire assembly\" which I would recommend as a replacement - it is faster, too, and you don't need to worry about calling it multiple times (it does all the right things for reuse, etc)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413881518",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413881518",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413881518,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg4MTUxOA==",
        "user": {
            "login": "MaxXor",
            "id": 7271470,
            "node_id": "MDQ6VXNlcjcyNzE0NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7271470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaxXor",
            "html_url": "https://github.com/MaxXor",
            "followers_url": "https://api.github.com/users/MaxXor/followers",
            "following_url": "https://api.github.com/users/MaxXor/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaxXor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaxXor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaxXor/subscriptions",
            "organizations_url": "https://api.github.com/users/MaxXor/orgs",
            "repos_url": "https://api.github.com/users/MaxXor/repos",
            "events_url": "https://api.github.com/users/MaxXor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaxXor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T14:21:22Z",
        "updated_at": "2018-08-17T14:21:22Z",
        "author_association": "NONE",
        "body": "Sounds good, which branch is it? Can't find any `3.0 branch`."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/413884389",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-413884389",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 413884389,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg4NDM4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-17T14:30:34Z",
        "updated_at": "2018-08-17T14:30:34Z",
        "author_association": "OWNER",
        "body": "Confusingly, it is the `split-reader` branch. It made sense at the time, but it now encompasses all of the 3.0 changes (which are incomplete, in particular if you're using the new \"pipelines\" support)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/414608589",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/445#issuecomment-414608589",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/445",
        "id": 414608589,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDYwODU4OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-21T09:17:42Z",
        "updated_at": "2018-08-21T09:17:42Z",
        "author_association": "OWNER",
        "body": "protobuf doesn't use names - it needs numbers; so : if you want to use `DataMember`, you'll need to use the `Order` member of each to give it a clue:\r\n\r\n    [DataContract]\r\n    public class UserTrust\r\n    {\r\n        public UserTrust() { }\r\n        public UserTrust(int userId, int credenceUserId)\r\n        {\r\n            this.UserId = userId;\r\n            this.CredenceUserId = credenceUserId;\r\n        }\r\n        [DataMember(Order=1)]\r\n        public int UserId { get;  set; }\r\n        [DataMember(Order=2)]\r\n        public int CredenceUserId { get;  set; }\r\n        [DataMember(Order=3)]\r\n        public DateTime AddTime { get;  set; } = DateTime.Now;\r\n    }\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/414800013",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/447#issuecomment-414800013",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/447",
        "id": 414800013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgwMDAxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-21T19:51:55Z",
        "updated_at": "2018-08-21T19:51:55Z",
        "author_association": "OWNER",
        "body": "> First of all, I'm not sure if it is appropriate to submit issues for alpha versions of protobuf-net. \r\n\r\nabsolutely! the more the better; see [here](https://twitter.com/marcgravell/status/1031981546276835329) for my views on this, which  I wrote before seeing this.\r\n\r\n> Am I using the library incorrectly or is there an underlying issue in protobuf-net?\r\n\r\nprobably the latter; any objections to me simply hoisting this code into the test suite?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/414808973",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/447#issuecomment-414808973",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/447",
        "id": 414808973,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgwODk3Mw==",
        "user": {
            "login": "kriskalish",
            "id": 4382071,
            "node_id": "MDQ6VXNlcjQzODIwNzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4382071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kriskalish",
            "html_url": "https://github.com/kriskalish",
            "followers_url": "https://api.github.com/users/kriskalish/followers",
            "following_url": "https://api.github.com/users/kriskalish/following{/other_user}",
            "gists_url": "https://api.github.com/users/kriskalish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kriskalish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kriskalish/subscriptions",
            "organizations_url": "https://api.github.com/users/kriskalish/orgs",
            "repos_url": "https://api.github.com/users/kriskalish/repos",
            "events_url": "https://api.github.com/users/kriskalish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kriskalish/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-21T20:22:17Z",
        "updated_at": "2018-08-21T20:22:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the quick response! I'm glad to help in any way that I can.\r\n\r\nFeel free to lift the provided sample. I'm sure that the snippet could be better, but it turns out that there is no easy way to build a multi-segment ReadOnlySequence. It isn't ideal to rely on the Pipe to fragment the data since changes to the memory pool implementation could end up causing different segment sizes being generated.\r\n\r\nFor what it is worth, I noticed that the System.IO.Pipelines library actually has a factory in the test code that would offer more control:\r\n\r\nhttps://github.com/dotnet/corefx/blob/013ea4452d32c76af6fe0b3590b5dcf79bdd1492/src/System.Memory/tests/ReadOnlyBuffer/ReadOnlySequenceFactory.byte.cs#L118\r\n\r\nThe main issue is that BufferSegment is an internal class, and I didn't want to create a ton of boiler plate by implementing the factory and segment class just to start a discussion.\r\n\r\nIf you an encounter any issues reproducing the issue, I'm happy to put something a little more complete together."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/414880803",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/445#issuecomment-414880803",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/445",
        "id": 414880803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDg4MDgwMw==",
        "user": {
            "login": "lfzm",
            "id": 28291464,
            "node_id": "MDQ6VXNlcjI4MjkxNDY0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/28291464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lfzm",
            "html_url": "https://github.com/lfzm",
            "followers_url": "https://api.github.com/users/lfzm/followers",
            "following_url": "https://api.github.com/users/lfzm/following{/other_user}",
            "gists_url": "https://api.github.com/users/lfzm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lfzm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lfzm/subscriptions",
            "organizations_url": "https://api.github.com/users/lfzm/orgs",
            "repos_url": "https://api.github.com/users/lfzm/repos",
            "events_url": "https://api.github.com/users/lfzm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lfzm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-22T01:55:20Z",
        "updated_at": "2018-08-22T01:55:20Z",
        "author_association": "NONE",
        "body": "Thank you, solved"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415135575",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/448#issuecomment-415135575",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/448",
        "id": 415135575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTEzNTU3NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-22T18:37:40Z",
        "updated_at": "2018-08-22T18:37:40Z",
        "author_association": "OWNER",
        "body": "Thanks. It may be that we need to raise the minimum advertised level - I'll\nneed to look.\n\nOn Wed, 22 Aug 2018, 19:35 ShadowTeolog, <notifications@github.com> wrote:\n\n> protobuf-net.MSBuild silently not work, if try to add to project with .NET\n> 4.6 runtime and simply don't compile .proto files without any error message.\n> After switch to .NET 4.7.1 runtime, Visual Studio report error related\n> with protobuf-net.MSBuild package settings file format and unload project\n> from solution.\n> This especially funny because same package work normal in monodevelop 7.x\n> on ubuntu\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/448>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsCIqNIVxmAg2_H6YNlJBSfCuROXDks5uTaRmgaJpZM4WIMFn>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415167586",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/449#issuecomment-415167586",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/449",
        "id": 415167586,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTE2NzU4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-22T20:25:09Z",
        "updated_at": "2018-08-22T20:25:09Z",
        "author_association": "OWNER",
        "body": "Yes, I know. Much better AOT stuff is on the roadmap, and there are steps being made in that direction in the 3.0 branch, but: there's a lot to do. I'm working on it, but: time is a finite sum game."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415200000",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/443#issuecomment-415200000",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/443",
        "id": 415200000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTIwMDAwMA==",
        "user": {
            "login": "Akronae",
            "id": 17302866,
            "node_id": "MDQ6VXNlcjE3MzAyODY2",
            "avatar_url": "https://avatars0.githubusercontent.com/u/17302866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Akronae",
            "html_url": "https://github.com/Akronae",
            "followers_url": "https://api.github.com/users/Akronae/followers",
            "following_url": "https://api.github.com/users/Akronae/following{/other_user}",
            "gists_url": "https://api.github.com/users/Akronae/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Akronae/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Akronae/subscriptions",
            "organizations_url": "https://api.github.com/users/Akronae/orgs",
            "repos_url": "https://api.github.com/users/Akronae/repos",
            "events_url": "https://api.github.com/users/Akronae/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Akronae/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-22T22:17:43Z",
        "updated_at": "2018-08-22T22:17:43Z",
        "author_association": "NONE",
        "body": "Yeah, i spent an hour looking for what was wrong because the error message was saying something like \"index out of range: tag\""
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415455543",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/450#issuecomment-415455543",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/450",
        "id": 415455543,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ1NTU0Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-23T15:16:16Z",
        "updated_at": "2018-08-23T15:16:31Z",
        "author_association": "OWNER",
        "body": "I'm struggling a little with the question. Are you asking:\r\n\r\n> When creating c# from a .proto via protogen, how can I make the generated types inherit from an abstract base class?\r\n\r\n? "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415458182",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/450#issuecomment-415458182",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/450",
        "id": 415458182,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ1ODE4Mg==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-23T15:24:21Z",
        "updated_at": "2018-08-23T15:24:21Z",
        "author_association": "NONE",
        "body": "yes, how to generate the class inherit from an abstract base class?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415499052",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/450#issuecomment-415499052",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/450",
        "id": 415499052,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ5OTA1Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-23T17:18:39Z",
        "updated_at": "2018-08-23T17:18:39Z",
        "author_association": "OWNER",
        "body": "There's nothing currently built in for this, although it is certainly something we could add. Right now, your best bet would be to create a second code file and use \"partial classes\" to do this - so your second code file would be just:\r\n\r\n```c#\r\nnamespace PB\r\n{\r\n    partial class C2STest : Protocol { }\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415629945",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/450#issuecomment-415629945",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/450",
        "id": 415629945,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTYyOTk0NQ==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T02:14:54Z",
        "updated_at": "2018-08-24T02:14:54Z",
        "author_association": "NONE",
        "body": "en...i know, thanks for you."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415726613",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415726613",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415726613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcyNjYxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:02:08Z",
        "updated_at": "2018-08-24T11:02:08Z",
        "author_association": "OWNER",
        "body": "This isn't merged yet, but try following the guidance at the top of:\r\n\r\nhttps://github.com/mgravell/protobuf-net/blob/split-reader/src/protobuf-net/protobuf-net.csproj"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415728278",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415728278",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415728278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcyODI3OA==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:10:33Z",
        "updated_at": "2018-08-24T11:10:33Z",
        "author_association": "NONE",
        "body": "Lovely - will try that now.\r\n\r\nAs a temporary fix, I removed all targets except for net40 and it started to work (without the SDK .targets change)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415728438",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415728438",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415728438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcyODQzOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:11:24Z",
        "updated_at": "2018-08-24T11:11:24Z",
        "author_association": "OWNER",
        "body": "Out of curiosity - is there anything stopping you just using the pre-build nuget package?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415734925",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-415734925",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 415734925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTczNDkyNQ==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:44:03Z",
        "updated_at": "2018-08-24T11:44:33Z",
        "author_association": "NONE",
        "body": "Bit more info on this:  If you change the declaration to a `IDictionary` from a `Dictionary` everything works fine (it uses a `ListDecorator` which works, instead of a `MapDecorator` which doesn't)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415736247",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-415736247",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 415736247,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTczNjI0Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T11:50:30Z",
        "updated_at": "2018-08-24T11:50:30Z",
        "author_association": "OWNER",
        "body": "@megakid yay, so that means I have two bugs to fix :/"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415738684",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-415738684",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 415738684,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTczODY4NA==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T12:02:20Z",
        "updated_at": "2018-08-24T12:02:32Z",
        "author_association": "NONE",
        "body": "@mgravell not if I can fix them first!\r\n\r\nJust focusing on that for the moment, is the desired behaviour here that the `MapDecorator` is used for both `Dictionary` and `IDictionary` types?  That would be breaking right?  \r\n\r\nFollowing that assumption, wouldn't it be better if by default `IDictionary` + `Dictionary` both use the `ListDecorator` and then `[ProtoMap]` could be used to move to `MapDecorator` ?  Would also need to consider `IgnoreListHandling` here..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415741981",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415741981",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415741981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc0MTk4MQ==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T12:17:49Z",
        "updated_at": "2018-08-24T12:17:49Z",
        "author_association": "NONE",
        "body": "Can't say I've heard of a pre-build nuget package (not a source-only nuget package I am guessing).\r\n\r\nI'm intreged - what do you mean?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415744855",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415744855",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415744855,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc0NDg1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T12:31:16Z",
        "updated_at": "2018-08-24T12:31:16Z",
        "author_association": "OWNER",
        "body": "I meant pre-built (typo). As in: just add a package reference."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415745735",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-415745735",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 415745735,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc0NTczNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T12:35:22Z",
        "updated_at": "2018-08-24T12:35:22Z",
        "author_association": "OWNER",
        "body": "The only change in behaviour here *should* be when there are duplicate keys, going from the old version (explode), to the \"map\" version (second value replaces old value). As such, it can't impact any currently working code, and I'm OK with the trade-off of \"old code that would have thrown now succeeds\" as the default, since that moves us into using proto3 behaviour by default, with using the old-behaviour being the opt-in choice. this was considered, and I'm OK with that change. There's no reason to treat dictionary and idictionary different here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415746029",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/452#issuecomment-415746029",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/452",
        "id": 415746029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc0NjAyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T12:36:44Z",
        "updated_at": "2018-08-24T12:36:44Z",
        "author_association": "OWNER",
        "body": "Yup, sounds like a bug in the code-gen. Should be simple for me to fix - will try to look later."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415771129",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/451#issuecomment-415771129",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/451",
        "id": 415771129,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc3MTEyOQ==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T14:12:23Z",
        "updated_at": "2018-08-24T14:12:49Z",
        "author_association": "NONE",
        "body": "Oh sorry - I could use it to repro but I wanted to fix the issue within `protobuf-net.dll` rather than just repro the issue.\r\n\r\n1 down, 1 to go :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415870786",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/447#issuecomment-415870786",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/447",
        "id": 415870786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTg3MDc4Ng==",
        "user": {
            "login": "kriskalish",
            "id": 4382071,
            "node_id": "MDQ6VXNlcjQzODIwNzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4382071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kriskalish",
            "html_url": "https://github.com/kriskalish",
            "followers_url": "https://api.github.com/users/kriskalish/followers",
            "following_url": "https://api.github.com/users/kriskalish/following{/other_user}",
            "gists_url": "https://api.github.com/users/kriskalish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kriskalish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kriskalish/subscriptions",
            "organizations_url": "https://api.github.com/users/kriskalish/orgs",
            "repos_url": "https://api.github.com/users/kriskalish/repos",
            "events_url": "https://api.github.com/users/kriskalish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kriskalish/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-24T20:15:55Z",
        "updated_at": "2018-08-24T20:15:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "I did a little digging and found what appears to be the issue preventing the test case above from working.\r\n\r\nLooking at ProtoReader.ReadOnlySequence.cs line 256, when reading a string that crosses segments in a ReadOnlySequence, the call to Rent() returns an array bigger than needed. In my case 45 bytes were needed, but 64 were given. I was able to fix it by reslicing what came back from rent. Here is the original code:\r\n```\r\nprivate string ImplReadStringMultiSegment(ref State state, int bytes)\r\n{\r\n    // we should probably do the work with a Decoder,\r\n    // but this works for today\r\n    using (var mem = MemoryPool<byte>.Shared.Rent(bytes))\r\n    {\r\n        var span = mem.Memory.Span; \r\n        ImplReadBytes(ref state, span);\r\n        return ToString(span, 0, bytes);\r\n    }\r\n}\r\n```\r\nHere is the fix I tested:\r\n```\r\nprivate string ImplReadStringMultiSegment(ref State state, int bytes)\r\n{\r\n    // we should probably do the work with a Decoder,\r\n    // but this works for today\r\n    using (var mem = MemoryPool<byte>.Shared.Rent(bytes))\r\n    {\r\n        var span = mem.Memory.Span.Slice(0, bytes); // reslice because rent often returns a larger buffer than we need\r\n        ImplReadBytes(ref state, span);\r\n        return ToString(span, 0, bytes);\r\n    }\r\n}\r\n```\r\nAfter building a nuget package for my local store, I ended up getting an out of range error in ProtoReader.ReadOnlySequence.cs line 195 when testing with a more realistic dataset. After some investigation I saw that it appeared to be an issue with slicing in `ImplTryReadUInt64VarintWithoutMoving` which caused `available` to be incremented past 10.\r\n\r\nHere is the original for the sake of discussion:\r\n```\r\nprivate protected override int ImplTryReadUInt64VarintWithoutMoving(ref State state, out ulong value)\r\n{\r\n    return state.RemainingInCurrent >= 10\r\n        ? State.TryParseUInt64Varint(state.Span, state.OffsetInCurrent, out value)\r\n        : ViaStackAlloc(ref state, out value);\r\n\r\n    int ViaStackAlloc(ref State s, out ulong val)\r\n    {\r\n        Span<byte> span = stackalloc byte[10];\r\n        Span<byte> target = span;\r\n\r\n        int available = 0;\r\n        if (s.RemainingInCurrent != 0)\r\n        {\r\n            int take = Math.Min(s.RemainingInCurrent, target.Length);\r\n            Peek(ref s, take).CopyTo(target);\r\n            target = target.Slice(available); \r\n            available += take;\r\n        }\r\n\r\n        var iterCopy = _source;\r\n        while (!target.IsEmpty && iterCopy.MoveNext())\r\n        {\r\n            var nextBuffer = iterCopy.Current.Span;\r\n            var take = Math.Min(nextBuffer.Length, target.Length);\r\n\r\n            nextBuffer.Slice(0, take).CopyTo(target);\r\n            target = target.Slice(take);\r\n            available += take;\r\n        }\r\n\r\n        if (available != 10) span = span.Slice(0, available);\r\n        return ProtoReader.State.TryParseUInt64Varint(span, 0, out val);\r\n    }\r\n}\r\n```\r\nI then changed the code that copies the first bit as follows:\r\n```\r\nprivate protected override int ImplTryReadUInt64VarintWithoutMoving(ref State state, out ulong value)\r\n{\r\n    return state.RemainingInCurrent >= 10\r\n        ? State.TryParseUInt64Varint(state.Span, state.OffsetInCurrent, out value)\r\n        : ViaStackAlloc(ref state, out value);\r\n\r\n    int ViaStackAlloc(ref State s, out ulong val)\r\n    {\r\n        Span<byte> span = stackalloc byte[10];\r\n        Span<byte> target = span;\r\n\r\n        int available = 0;\r\n        if (s.RemainingInCurrent != 0)\r\n        {\r\n            int take = Math.Min(s.RemainingInCurrent, target.Length);\r\n            Peek(ref s, take).CopyTo(target);\r\n            target = target.Slice(take); // reslice target by what we just took\r\n            available += take;\r\n        }\r\n\r\n        var iterCopy = _source;\r\n        while (!target.IsEmpty && iterCopy.MoveNext())\r\n        {\r\n            var nextBuffer = iterCopy.Current.Span;\r\n            var take = Math.Min(nextBuffer.Length, target.Length);\r\n\r\n            nextBuffer.Slice(0, take).CopyTo(target);\r\n            target = target.Slice(take);\r\n            available += take;\r\n        }\r\n\r\n        if (available != 10) span = span.Slice(0, available);\r\n        return ProtoReader.State.TryParseUInt64Varint(span, 0, out val);\r\n    }\r\n}\r\n```\r\nEverything seems to be working from what I can tell so far now! Very exciting. \r\n\r\nIf you have any interest, I'm happy to PR these changes into the split-reader branch."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415962355",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/455#issuecomment-415962355",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/455",
        "id": 415962355,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk2MjM1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-25T11:16:34Z",
        "updated_at": "2018-08-25T11:16:34Z",
        "author_association": "OWNER",
        "body": "I suspect we can fix the assembly versioning here without nuking nerdbank\nfrom orbit.\n\nOn Sat, 25 Aug 2018, 00:57 Randy Ridge, <notifications@github.com> wrote:\n\n> Bumping version and reverting nerdbank versioning, the binding redirect is\n> killing me..\n>\n> #442 <https://github.com/mgravell/protobuf-net/issues/442>\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/mgravell/protobuf-net/pull/455\n> Commit Summary\n>\n>    - revert nerdbank versioning\n>\n> File Changes\n>\n>    - *M* src/Directory.build.props\n>    <https://github.com/mgravell/protobuf-net/pull/455/files#diff-0> (3)\n>    - *M* src/version.json\n>    <https://github.com/mgravell/protobuf-net/pull/455/files#diff-1> (2)\n>\n> Patch Links:\n>\n>    - https://github.com/mgravell/protobuf-net/pull/455.patch\n>    - https://github.com/mgravell/protobuf-net/pull/455.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/455>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsHyT8QGkCWf46dEo4EquvmkAZ_jtks5uUJLsgaJpZM4WMJMe>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415982368",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-415982368",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 415982368,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk4MjM2OA==",
        "user": {
            "login": "MaxXor",
            "id": 7271470,
            "node_id": "MDQ6VXNlcjcyNzE0NzA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7271470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaxXor",
            "html_url": "https://github.com/MaxXor",
            "followers_url": "https://api.github.com/users/MaxXor/followers",
            "following_url": "https://api.github.com/users/MaxXor/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaxXor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaxXor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaxXor/subscriptions",
            "organizations_url": "https://api.github.com/users/MaxXor/orgs",
            "repos_url": "https://api.github.com/users/MaxXor/repos",
            "events_url": "https://api.github.com/users/MaxXor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaxXor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-25T16:53:17Z",
        "updated_at": "2018-08-25T16:53:41Z",
        "author_association": "NONE",
        "body": "I'm now adding a plugin system to my software and will use this to add dynamically new types to the serializer. This will continue to work in the v3.0, right? Works very well now.\r\n```csharp\r\nRuntimeTypeModel.Default[typeof(IBaseType)].AddSubType(counter, typeof(DerivedClass));\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/415984245",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/444#issuecomment-415984245",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/444",
        "id": 415984245,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk4NDI0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-25T17:22:56Z",
        "updated_at": "2018-08-25T17:22:56Z",
        "author_association": "OWNER",
        "body": "Yes, that's not something that should change.\n\nOn Sat, 25 Aug 2018, 17:53 MaxXor, <notifications@github.com> wrote:\n\n> I'm now adding a plugin system to my software and will use this to add\n> dynamically new types to the serializer. This will continue to work in the\n> v3.0, right?\n>\n> RuntimeTypeModel.Default[typeof(IBaseType)].AddSubType(counter, typeof(DerivedClass));\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/444#issuecomment-415982368>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEgRVt0kuGUcABATf4hj0p80reU9ks5uUYD-gaJpZM4WBLsI>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/416216933",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/455#issuecomment-416216933",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/455",
        "id": 416216933,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjIxNjkzMw==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-27T12:55:06Z",
        "updated_at": "2018-08-27T12:55:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Perhaps, I just needed to get the version bumped as it was causing all manner of hell at work.  :D"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/416524627",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/400#issuecomment-416524627",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/400",
        "id": 416524627,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUyNDYyNw==",
        "user": {
            "login": "hdv0112",
            "id": 12231882,
            "node_id": "MDQ6VXNlcjEyMjMxODgy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/12231882?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hdv0112",
            "html_url": "https://github.com/hdv0112",
            "followers_url": "https://api.github.com/users/hdv0112/followers",
            "following_url": "https://api.github.com/users/hdv0112/following{/other_user}",
            "gists_url": "https://api.github.com/users/hdv0112/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hdv0112/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hdv0112/subscriptions",
            "organizations_url": "https://api.github.com/users/hdv0112/orgs",
            "repos_url": "https://api.github.com/users/hdv0112/repos",
            "events_url": "https://api.github.com/users/hdv0112/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hdv0112/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T09:59:18Z",
        "updated_at": "2018-08-28T09:59:48Z",
        "author_association": "NONE",
        "body": "Thanks duhaibo0404 and mgravell so much!!!. It's worked for me. I'm using protobuf-net 2.3.12"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/416554644",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-416554644",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 416554644,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjU1NDY0NA==",
        "user": {
            "login": "JakubHolovsky",
            "id": 4558405,
            "node_id": "MDQ6VXNlcjQ1NTg0MDU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4558405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JakubHolovsky",
            "html_url": "https://github.com/JakubHolovsky",
            "followers_url": "https://api.github.com/users/JakubHolovsky/followers",
            "following_url": "https://api.github.com/users/JakubHolovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/JakubHolovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JakubHolovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JakubHolovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/JakubHolovsky/orgs",
            "repos_url": "https://api.github.com/users/JakubHolovsky/repos",
            "events_url": "https://api.github.com/users/JakubHolovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JakubHolovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T11:46:56Z",
        "updated_at": "2018-08-28T11:47:07Z",
        "author_association": "NONE",
        "body": "Yeah, also ran into this issue. Got binding redirects for non-existing        \r\n\r\n```\r\n<assemblyIdentity name=\"protobuf-net\" publicKeyToken=\"257b51d87d2e4d67\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-2.3.4.0\" newVersion=\"2.3.4.0\" />\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/416571886",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-416571886",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 416571886,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjU3MTg4Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-28T12:49:45Z",
        "updated_at": "2018-08-28T12:49:45Z",
        "author_association": "OWNER",
        "body": "I'm going to try and fix this today; sorry, was vacating - minimal github\nlast week :/\n\nOn Tue, 28 Aug 2018 at 12:46, Jakub Holovsky <notifications@github.com>\nwrote:\n\n> Yeah, also ran into this issue. Got binding redirects for non-existing\n>\n> \u2014\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/442#issuecomment-416554644>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsIXcD19SwKZpU9n0ILGYqSOvCWdsks5uVS2wgaJpZM4V6LhU>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417140515",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417140515",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417140515,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzE0MDUxNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-29T23:30:03Z",
        "updated_at": "2018-08-29T23:30:41Z",
        "author_association": "OWNER",
        "body": "can you be more specific? it doesn't do that usually... do you have an example that shows this?\r\n\r\nare you talking about `SerializeWithLengthPrefix`? it takes an enum to choose the strategy..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417174217",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417174217",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417174217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzE3NDIxNw==",
        "user": {
            "login": "SamuelEnglard",
            "id": 1119883,
            "node_id": "MDQ6VXNlcjExMTk4ODM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1119883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamuelEnglard",
            "html_url": "https://github.com/SamuelEnglard",
            "followers_url": "https://api.github.com/users/SamuelEnglard/followers",
            "following_url": "https://api.github.com/users/SamuelEnglard/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamuelEnglard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamuelEnglard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamuelEnglard/subscriptions",
            "organizations_url": "https://api.github.com/users/SamuelEnglard/orgs",
            "repos_url": "https://api.github.com/users/SamuelEnglard/repos",
            "events_url": "https://api.github.com/users/SamuelEnglard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamuelEnglard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T03:02:11Z",
        "updated_at": "2018-08-30T03:02:11Z",
        "author_association": "NONE",
        "body": "The enum says the protobuf-net will use a fixint32"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417235982",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417235982",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417235982,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzIzNTk4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T08:31:27Z",
        "updated_at": "2018-08-30T08:31:27Z",
        "author_association": "OWNER",
        "body": "Base128===varint\r\n\r\nNaming is hard. If you want varint: choose base 128"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417236474",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417236474",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417236474,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzIzNjQ3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T08:33:05Z",
        "updated_at": "2018-08-30T08:33:05Z",
        "author_association": "OWNER",
        "body": "And yes, I will totally hold my hands up and say that this is a terrible name that doesn't do even remotely what it says. Sorry."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417323222",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417323222",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417323222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyMzIyMg==",
        "user": {
            "login": "SamuelEnglard",
            "id": 1119883,
            "node_id": "MDQ6VXNlcjExMTk4ODM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1119883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamuelEnglard",
            "html_url": "https://github.com/SamuelEnglard",
            "followers_url": "https://api.github.com/users/SamuelEnglard/followers",
            "following_url": "https://api.github.com/users/SamuelEnglard/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamuelEnglard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamuelEnglard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamuelEnglard/subscriptions",
            "organizations_url": "https://api.github.com/users/SamuelEnglard/orgs",
            "repos_url": "https://api.github.com/users/SamuelEnglard/repos",
            "events_url": "https://api.github.com/users/SamuelEnglard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamuelEnglard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T13:40:48Z",
        "updated_at": "2018-08-30T13:40:48Z",
        "author_association": "NONE",
        "body": "Less the naming and more the documentation. If it just said that Base128 is what protoc uses I'd be happy(er)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417328204",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/457#issuecomment-417328204",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/457",
        "id": 417328204,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyODIwNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T13:55:42Z",
        "updated_at": "2018-08-30T13:55:42Z",
        "author_association": "OWNER",
        "body": "that do?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417329435",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-417329435",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 417329435,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyOTQzNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T13:59:13Z",
        "updated_at": "2018-08-30T13:59:13Z",
        "author_association": "OWNER",
        "body": "2.3.18 is on nuget now; sorry for any inconvenience"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417329676",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/455#issuecomment-417329676",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/455",
        "id": 417329676,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMyOTY3Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T13:59:57Z",
        "updated_at": "2018-08-30T13:59:57Z",
        "author_association": "OWNER",
        "body": "I went with https://github.com/mgravell/protobuf-net/commit/d13fd9455557a585912f856a9a27f5e8442c7100 instead in the end - I really want to keep the nerdbank versioning - I just screwed it up, sorry about that. 2.3.18 is on nuget now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417335049",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/442#issuecomment-417335049",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/442",
        "id": 417335049,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMzNTA0OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T14:15:41Z",
        "updated_at": "2018-08-30T14:15:41Z",
        "author_association": "OWNER",
        "body": "see also 2.4.0; 2.3.18 turned out to be #fail"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417335251",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/455#issuecomment-417335251",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/455",
        "id": 417335251,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMzNTI1MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T14:16:11Z",
        "updated_at": "2018-08-30T14:16:11Z",
        "author_association": "OWNER",
        "body": "ended up jumping to 2.4.0, but I'm OK with this"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417337937",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/455#issuecomment-417337937",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/455",
        "id": 417337937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzMzNzkzNw==",
        "user": {
            "login": "randyridge",
            "id": 476061,
            "node_id": "MDQ6VXNlcjQ3NjA2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/476061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randyridge",
            "html_url": "https://github.com/randyridge",
            "followers_url": "https://api.github.com/users/randyridge/followers",
            "following_url": "https://api.github.com/users/randyridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/randyridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randyridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randyridge/subscriptions",
            "organizations_url": "https://api.github.com/users/randyridge/orgs",
            "repos_url": "https://api.github.com/users/randyridge/repos",
            "events_url": "https://api.github.com/users/randyridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randyridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-30T14:23:48Z",
        "updated_at": "2018-08-30T14:23:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417578138",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-417578138",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 417578138,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU3ODEzOA==",
        "user": {
            "login": "megakid",
            "id": 1478003,
            "node_id": "MDQ6VXNlcjE0NzgwMDM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1478003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/megakid",
            "html_url": "https://github.com/megakid",
            "followers_url": "https://api.github.com/users/megakid/followers",
            "following_url": "https://api.github.com/users/megakid/following{/other_user}",
            "gists_url": "https://api.github.com/users/megakid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/megakid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/megakid/subscriptions",
            "organizations_url": "https://api.github.com/users/megakid/orgs",
            "repos_url": "https://api.github.com/users/megakid/repos",
            "events_url": "https://api.github.com/users/megakid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/megakid/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-31T07:30:04Z",
        "updated_at": "2018-08-31T07:30:04Z",
        "author_association": "NONE",
        "body": "Both bugs are fixed in these PRs:\r\n#454\r\n#456"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417590004",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/318#issuecomment-417590004",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/318",
        "id": 417590004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU5MDAwNA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-08-31T08:17:36Z",
        "updated_at": "2018-08-31T08:17:36Z",
        "author_association": "OWNER",
        "body": "Thanks. I need to find time to do a PR sweep!\n\nOn Fri, 31 Aug 2018, 08:30 James Connor, <notifications@github.com> wrote:\n\n> Both bugs are fixed in these PRs:\n> #454 <https://github.com/mgravell/protobuf-net/pull/454>\n> #456 <https://github.com/mgravell/protobuf-net/pull/456>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/318#issuecomment-417578138>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGMwmpZ3kuG_8EsWI1JU4EOeDLZCks5uWOX8gaJpZM4QTSYt>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417936728",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-417936728",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 417936728,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkzNjcyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T14:59:17Z",
        "updated_at": "2018-09-02T14:59:17Z",
        "author_association": "OWNER",
        "body": "I'll have a look at the \"did you mean?\" part later, but: I actually did a\nbranch with c# 4 to see how bad it would be. Note, however, that I have no\nintentions of merging that branch or trying to maintain c# 4 compatibility.\nMy preference there would be for Unity to consume the library pre-built.\n\nOn Sun, 2 Sep 2018, 15:03 gapspt, <notifications@github.com> wrote:\n\n> Hi Marc,\n>\n> I am porting protobuf-net to be compatible with C# 4 in order for it to be\n> compiled through Unity.\n>\n> While most of the changes are minor things, I am struggling to understand\n> one particular line of code:\n>\n> https://github.com/mgravell/protobuf-net/blob/1b5b6570eb02042dc58fcb37e5ea88caf0573ad8/src/protobuf-net/Meta/MetaType.cs#L1464\n> if (pi?.CanWrite == false)\n>\n> For context, this was originally introduced in the following commit\n> 3a33c47\n> <https://github.com/mgravell/protobuf-net/commit/3a33c47ec37a4946101f85c398e4564830a8e503>\n> as:\n> if ((mi as PropertyInfo)?.CanWrite == false)\n>\n> To be compliant with C# 4, I need to change it to:\n> if (pi == null ? null == false : p.CanWrite == false)\n> And since null == false is also false, this is the same as:\n> if (pi == null ? false : p.CanWrite == false)\n> Which is the same as:\n> if (pi != null && p.CanWrite == false)\n> Which is the same as:\n> if (pi != null && !p.CanWrite)\n>\n> My question is if this is really the intended behaviour, or rather if it\n> was supposed to be instead:\n> if (pi != null || !p.CanWrite)\n> ?\n> I read the whole method to try and understand its intent, but still I am\n> unable to know for sure.\n>\n> Also, I'm of the opinion that changing it to (pi != null && !p.CanWrite)\n> (or rather to (pi != null || !p.CanWrite) if that's the case) should\n> provide better readability in the future for this particular case.\n>\n> By the way, if you are interested, I can send you a pull request with my\n> changes once I'm done.\n>\n> Thank you for your time!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/458>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsJXzvYRy8_v-DUNHvRq2FPzduhSPks5uW-U9gaJpZM4WWnzO>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/417951723",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-417951723",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 417951723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk1MTcyMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-02T18:49:24Z",
        "updated_at": "2018-09-02T18:49:39Z",
        "author_association": "OWNER",
        "body": "Yes, it is \"correct as written\". That check is looking for get-only automatically-implemented properties, i.e.\r\n\r\n    public string Foo {get;}\r\n\r\nFor this scenario to apply, there must be a property (so: `pi != null`) and it must not have a setter (`&& !pi.CanWrite`). In that case, we can check for Roslyn's implementation, hence:\r\n\r\n    string name = $\"<{((PropertyInfo)mi).Name}>k__BackingField\";\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418064998",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418064998",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 418064998,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA2NDk5OA==",
        "user": {
            "login": "gapspt",
            "id": 5992125,
            "node_id": "MDQ6VXNlcjU5OTIxMjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5992125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gapspt",
            "html_url": "https://github.com/gapspt",
            "followers_url": "https://api.github.com/users/gapspt/followers",
            "following_url": "https://api.github.com/users/gapspt/following{/other_user}",
            "gists_url": "https://api.github.com/users/gapspt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gapspt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gapspt/subscriptions",
            "organizations_url": "https://api.github.com/users/gapspt/orgs",
            "repos_url": "https://api.github.com/users/gapspt/repos",
            "events_url": "https://api.github.com/users/gapspt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gapspt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-03T09:57:42Z",
        "updated_at": "2018-09-03T09:57:42Z",
        "author_association": "NONE",
        "body": "Awesome, thanks for the quick reply!\r\n\r\nChanges for C# 4 are not that big actually, the most annoying one is the nameof keyword.\r\n\r\nUnity now has an updated runtime that supports C# 6 (developers can choose between both), and those changes are considerably smaller. Would you consider that change?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418068106",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418068106",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 418068106,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA2ODEwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-03T10:09:23Z",
        "updated_at": "2018-09-03T10:09:23Z",
        "author_association": "OWNER",
        "body": "Possibly - it would depend on the changes :) but frankly I wouldn't start this right now - the v3 code-changes in a branch are going to make anything there unmergeable and/or a waste of time (meaning: you'd need to start again after the merge). Also, I know that *at least some* of the v3 changes depend on new features - there's an entire new API that requires `ref struct`, for example. It is almost certainly possible to make a *compiling version* for C# 6 (making the dummy type that would now only exist for the API a `struct` rather than a `ref struct`, for example), but it won't be able to use any of the *features* that are intended for that.\r\n\r\nBut again: it really wouldn't be a good use of anyone's time to begin such an endeavour *before* the v3 changes are merged."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418075445",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418075445",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 418075445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA3NTQ0NQ==",
        "user": {
            "login": "gapspt",
            "id": 5992125,
            "node_id": "MDQ6VXNlcjU5OTIxMjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5992125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gapspt",
            "html_url": "https://github.com/gapspt",
            "followers_url": "https://api.github.com/users/gapspt/followers",
            "following_url": "https://api.github.com/users/gapspt/following{/other_user}",
            "gists_url": "https://api.github.com/users/gapspt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gapspt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gapspt/subscriptions",
            "organizations_url": "https://api.github.com/users/gapspt/orgs",
            "repos_url": "https://api.github.com/users/gapspt/repos",
            "events_url": "https://api.github.com/users/gapspt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gapspt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-03T10:39:27Z",
        "updated_at": "2018-09-03T10:39:27Z",
        "author_association": "NONE",
        "body": "Unfortunately I have it done already! But I won't push it then, and will give it another try on the v3 :)\r\nAny rough ETA for v3?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418076682",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418076682",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 418076682,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA3NjY4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-03T10:45:01Z",
        "updated_at": "2018-09-03T10:45:01Z",
        "author_association": "OWNER",
        "body": "probably the next few weeks, but it depends how gnarly the issue of \"sync\nbuffer writers vs async pipe flushes\" gets...\n\nOn Mon, 3 Sep 2018 at 11:39, gapspt <notifications@github.com> wrote:\n\n> Unfortunately I have it done already! But I won't push it then, and will\n> give it another try on the v3 :)\n> Any rough ETA for v3?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418075445>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsALVNui7__qF_xEgVznmKUOXxCNYks5uXQbfgaJpZM4WWnzO>\n> .\n>\n\n\n-- \nRegards,\n\nMarc\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418102142",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/458#issuecomment-418102142",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/458",
        "id": 418102142,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODEwMjE0Mg==",
        "user": {
            "login": "gapspt",
            "id": 5992125,
            "node_id": "MDQ6VXNlcjU5OTIxMjU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5992125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gapspt",
            "html_url": "https://github.com/gapspt",
            "followers_url": "https://api.github.com/users/gapspt/followers",
            "following_url": "https://api.github.com/users/gapspt/following{/other_user}",
            "gists_url": "https://api.github.com/users/gapspt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gapspt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gapspt/subscriptions",
            "organizations_url": "https://api.github.com/users/gapspt/orgs",
            "repos_url": "https://api.github.com/users/gapspt/repos",
            "events_url": "https://api.github.com/users/gapspt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gapspt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-03T12:33:19Z",
        "updated_at": "2018-09-03T12:33:19Z",
        "author_association": "NONE",
        "body": "All right!\r\nWell, thanks again :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/418983974",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/459#issuecomment-418983974",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/459",
        "id": 418983974,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxODk4Mzk3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-06T06:47:49Z",
        "updated_at": "2018-09-06T06:47:49Z",
        "author_association": "OWNER",
        "body": "The proposed API itself probably won't work well due to the significant\nchanges (and non-byte[]-based implementations). But: I think it would\nreally help me if I could see your custom implementation of this proposed\ninterface, so I can understand what you're actually wanting to do\ndifferently. Perhaps that is a better place to start a discussion so we can\nboth understand the \"what\" before we start trying to discuss the \"how\".\n\nOn Wed, 5 Sep 2018, 22:31 Jury Soldatenkov, <notifications@github.com>\nwrote:\n\n> It's not a ready to merge PR, but an idea to discuss.\n> I'm working on a trading application which uses huge amount of small\n> repetitive strings. All of them are interned using string.Intern(). I had\n> to build a modified version of protobuf-net which is capable of writing\n> such strings from cached byte arrays and reading them from\n> Dictionary<ArraySegment,string>.\n> I saw a few percents improvement in performance, and greatly reduced GC\n> pressure. (I can share figures later). I'm sure it won't work well for\n> \"general purpose\" string serialization/deserialization, but it works well\n> for me.\n> To sum up, I would rather have an extension point in the original code\n> than maintaining my own copy, and I need some feedback whether I'm on the\n> right way to implement it.\n> Upcoming version 3 looks like an opportunity for some breaking changes.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/mgravell/protobuf-net/pull/459\n> Commit Summary\n>\n>    - Add a seam point to allow custom string\n>    serialization/deserialization routines\n>\n> File Changes\n>\n>    - *A* src/protobuf-net/IStringSerializer.cs\n>    <https://github.com/mgravell/protobuf-net/pull/459/files#diff-0> (50)\n>    - *M* src/protobuf-net/ProtoReader.cs\n>    <https://github.com/mgravell/protobuf-net/pull/459/files#diff-1> (26)\n>    - *M* src/protobuf-net/ProtoWriter.cs\n>    <https://github.com/mgravell/protobuf-net/pull/459/files#diff-2> (9)\n>\n> Patch Links:\n>\n>    - https://github.com/mgravell/protobuf-net/pull/459.patch\n>    - https://github.com/mgravell/protobuf-net/pull/459.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/459>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsMaawu0VKWSSNwS1du0s1fmuLirFks5uYEKXgaJpZM4Wbutd>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/419099146",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/459#issuecomment-419099146",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/459",
        "id": 419099146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTA5OTE0Ng==",
        "user": {
            "login": "solyutor",
            "id": 958861,
            "node_id": "MDQ6VXNlcjk1ODg2MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/958861?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solyutor",
            "html_url": "https://github.com/solyutor",
            "followers_url": "https://api.github.com/users/solyutor/followers",
            "following_url": "https://api.github.com/users/solyutor/following{/other_user}",
            "gists_url": "https://api.github.com/users/solyutor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solyutor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solyutor/subscriptions",
            "organizations_url": "https://api.github.com/users/solyutor/orgs",
            "repos_url": "https://api.github.com/users/solyutor/repos",
            "events_url": "https://api.github.com/users/solyutor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solyutor/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-06T13:45:55Z",
        "updated_at": "2018-09-06T13:45:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry for being unclear first time.  \r\nI've pushed  updated code which contains [`StringCache`](https://github.com/mgravell/protobuf-net/blob/2306216f2204f7f0afd2414277a32f141fcf4e1d/src/protobuf-net/StringCache.cs) class which does the job. \r\nThe main idea - avoid allocating strings during deserialization and look up for interned ones instead. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/420593111",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-420593111",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 420593111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU5MzExMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-12T10:17:31Z",
        "updated_at": "2018-09-12T10:17:31Z",
        "author_association": "OWNER",
        "body": "I should just nuke `BufferPool` in the 3.0 branch... I guess the thing I need to think about there is minimum .NET version, as the `ArrayPool` stuff doesn't go as far back,"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/420612415",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-420612415",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 420612415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDYxMjQxNQ==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-12T11:19:59Z",
        "updated_at": "2018-09-12T11:19:59Z",
        "author_association": "NONE",
        "body": "Or at least please allow to use a custom buffer pool, like:\r\n\r\nhttps://github.com/zgabi/protobuf-net/commit/82f59e377137222dd55abcbc4720b94f551cdeb3\r\n\r\nSo we can decide to use ArrayPool or not to use pool by simply returining new objects."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421264620",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421264620",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 421264620,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI2NDYyMA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-14T07:58:28Z",
        "updated_at": "2018-09-14T07:58:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hmm that's probably clearing the buffers when it's returned to the pool? Is the serializing object huge?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421269448",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421269448",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 421269448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI2OTQ0OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-14T08:18:08Z",
        "updated_at": "2018-09-14T08:18:08Z",
        "author_association": "OWNER",
        "body": "What's more fun... It won't matter what size the current object is - if a\nhuge buffer has been pooled, it'll hurt the same for small and large.\nHowever! Thinking about it: there's no reason to wipe the buffer at all -\nwe're about to overwrite it. So: if the code does have wipe semantics, that\ncan probably simply be removed.\n\nOn Fri, 14 Sep 2018, 08:58 Rob Emery, <notifications@github.com> wrote:\n\n> Hmm that's probably clearing the buffers when it's returned to the pool?\n> Is the serializing object huge?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421264620>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsOEs3XWNpBnfyg5F1kJK17GzhXeOks5ua2GlgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421271174",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421271174",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 421271174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI3MTE3NA==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-14T08:24:48Z",
        "updated_at": "2018-09-14T08:24:48Z",
        "author_association": "NONE",
        "body": "The objects has different sizes. But not too large, max some megabytes.\r\n\r\nSerialization is called on multiple threads, max 128 in our configuration, and onee when all threads are \"waiting\" in the serialization probably all the 128 threads are used.\r\n\r\nI think it is a locking issue. Maybe the pool sould be thread static."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421271613",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421271613",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 421271613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI3MTYxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-14T08:26:43Z",
        "updated_at": "2018-09-14T08:26:43Z",
        "author_association": "OWNER",
        "body": "I might have done it already (not at keyboard to check), but in 3.0 in the\nplan is to use ArrayPool there on platforms that support it.\n\nOn Fri, 14 Sep 2018, 09:24 Zavark\u00f3 G\u00e1bor, <notifications@github.com> wrote:\n\n> The objects has different sizes. But not too large, max some megabytes.\n>\n> Serialization is called on multiple threads, max 128 in our configuration,\n> and onee when all threads are \"waiting\" in the serialization probably all\n> the 128 threads are used.\n>\n> I think it is a locking issue. Maybe the pool sould be thread static.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421271174>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLTUQS_jIUayr6-Udxw6EhQN3bnvks5ua2fRgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421281689",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-421281689",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 421281689,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTI4MTY4OQ==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-14T08:58:44Z",
        "updated_at": "2018-09-14T09:34:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have absolutely made that up, it doesn't clear the buffers at all. I can only assume that if it's a lock contention issue it has to be the amount of time spent in the 'find best matches' loop : https://github.com/mgravell/protobuf-net/blob/master/src/protobuf-net/BufferPool.cs#L35 which is only from 1..20 at the moment anyway.... \r\n\r\nArrayPool is a *much* better implementation anyway :D"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/421802411",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-421802411",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 421802411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTgwMjQxMQ==",
        "user": {
            "login": "kushinn",
            "id": 1787305,
            "node_id": "MDQ6VXNlcjE3ODczMDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1787305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kushinn",
            "html_url": "https://github.com/kushinn",
            "followers_url": "https://api.github.com/users/kushinn/followers",
            "following_url": "https://api.github.com/users/kushinn/following{/other_user}",
            "gists_url": "https://api.github.com/users/kushinn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kushinn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kushinn/subscriptions",
            "organizations_url": "https://api.github.com/users/kushinn/orgs",
            "repos_url": "https://api.github.com/users/kushinn/repos",
            "events_url": "https://api.github.com/users/kushinn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kushinn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-16T17:43:34Z",
        "updated_at": "2018-09-16T17:47:10Z",
        "author_association": "NONE",
        "body": "![image](https://user-images.githubusercontent.com/1787305/45599258-da594680-ba1a-11e8-8886-ffaed13eec3b.png)\r\n![image](https://user-images.githubusercontent.com/1787305/45599261-f65ce800-ba1a-11e8-8f6a-e173d57f1725.png)\r\n\r\nIt's C# 7.0 language feature.\r\n\r\nAnd the readonly struct is C# 7.2 language feature."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/422160133",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/463#issuecomment-422160133",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/463",
        "id": 422160133,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE2MDEzMw==",
        "user": {
            "login": "kriskalish",
            "id": 4382071,
            "node_id": "MDQ6VXNlcjQzODIwNzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4382071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kriskalish",
            "html_url": "https://github.com/kriskalish",
            "followers_url": "https://api.github.com/users/kriskalish/followers",
            "following_url": "https://api.github.com/users/kriskalish/following{/other_user}",
            "gists_url": "https://api.github.com/users/kriskalish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kriskalish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kriskalish/subscriptions",
            "organizations_url": "https://api.github.com/users/kriskalish/orgs",
            "repos_url": "https://api.github.com/users/kriskalish/repos",
            "events_url": "https://api.github.com/users/kriskalish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kriskalish/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-17T20:31:37Z",
        "updated_at": "2018-09-17T20:31:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "I will take a look. I think it is quite likely that ImplReadBytes could be refactored to take a length. I'll take a stab at it and run my tests against it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/422164258",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/463#issuecomment-422164258",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/463",
        "id": 422164258,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE2NDI1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-17T20:43:58Z",
        "updated_at": "2018-09-17T20:43:58Z",
        "author_association": "OWNER",
        "body": "Meh. Maybe you're right and this existing Slice is fine. I haven't looked, but: I really appreciate the second set of eyeballs."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/422180335",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/463#issuecomment-422180335",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/463",
        "id": 422180335,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE4MDMzNQ==",
        "user": {
            "login": "kriskalish",
            "id": 4382071,
            "node_id": "MDQ6VXNlcjQzODIwNzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4382071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kriskalish",
            "html_url": "https://github.com/kriskalish",
            "followers_url": "https://api.github.com/users/kriskalish/followers",
            "following_url": "https://api.github.com/users/kriskalish/following{/other_user}",
            "gists_url": "https://api.github.com/users/kriskalish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kriskalish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kriskalish/subscriptions",
            "organizations_url": "https://api.github.com/users/kriskalish/orgs",
            "repos_url": "https://api.github.com/users/kriskalish/repos",
            "events_url": "https://api.github.com/users/kriskalish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kriskalish/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-17T21:37:39Z",
        "updated_at": "2018-09-17T21:37:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "I pushed it with the refactor in place, that way you can look at both and see what you prefer. I think the overall cost of both methods should be roughly equivalent as a Slice is a bounds check, pointer arithmetic, and stack allocating another Span. In contrast, the method I just pushed adds additional integer arithmetic to reading each segment.\r\n\r\nIn general, I'm not too concerned about the readability of a private function in a performance-sensitive library when optimizing for execution time, so I defer to you on what is appropriate.\r\n\r\nWe can keep, amend, or revert the last commit based on your feedback."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423306172",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/464#issuecomment-423306172",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/464",
        "id": 423306172,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzMwNjE3Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-20T19:35:02Z",
        "updated_at": "2018-09-20T19:35:02Z",
        "author_association": "OWNER",
        "body": "it isn't a feature I'd implement by default - in most cases it isn't something that *should* be implemented, and it quickly gets non-trivial to define what \"equals\" means when there is a sub-tree. Likewise, it isn't something we could blindly add without impacting people who *have* added meaningful definitions of \"equals\" in a partial class.\r\n\r\nWe *could* consider some kind of option to enable this, but... I'd be keen to understand the scenarios you want to target here. Can you be more specific?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423330833",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/464#issuecomment-423330833",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/464",
        "id": 423330833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzMzMDgzMw==",
        "user": {
            "login": "guthyerrz",
            "id": 1661391,
            "node_id": "MDQ6VXNlcjE2NjEzOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1661391?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guthyerrz",
            "html_url": "https://github.com/guthyerrz",
            "followers_url": "https://api.github.com/users/guthyerrz/followers",
            "following_url": "https://api.github.com/users/guthyerrz/following{/other_user}",
            "gists_url": "https://api.github.com/users/guthyerrz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guthyerrz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guthyerrz/subscriptions",
            "organizations_url": "https://api.github.com/users/guthyerrz/orgs",
            "repos_url": "https://api.github.com/users/guthyerrz/repos",
            "events_url": "https://api.github.com/users/guthyerrz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guthyerrz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-20T20:57:53Z",
        "updated_at": "2018-09-20T20:57:53Z",
        "author_association": "NONE",
        "body": "Well I don't have any real need for this function yet. I was just wandering why this was not implemented. I only noticed it because one of my test cases broke when I switched from the Google library to yours. \r\n\r\nI'll close this issue for now. When we need to use this I'll comment here again ;)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423362289",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423362289",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423362289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzM2MjI4OQ==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-20T23:05:33Z",
        "updated_at": "2018-09-20T23:05:33Z",
        "author_association": "NONE",
        "body": "I  am considering using this as a replacement to C#'s binary serialization when writing objects to Memcached, and got a little worried by this issue. \r\nCould you please elaborate on this buffer pool ? \r\nWhat is it used for , and how could we avoid hogging the CPU ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423437008",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423437008",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423437008,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQzNzAwOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-21T07:11:49Z",
        "updated_at": "2018-09-21T07:11:49Z",
        "author_association": "OWNER",
        "body": "It is on my list to investigate to get more details. It seems like a\nrare/edge scenario, since it isn't a bottleneck I've seen in (many years).\nAlso, note that v3 will almost certainly remove this *completely* on most\nplatforms (maybe retaining it for very old runtimes, although a part of me\nwonders whether the saner thing is to finally cut those older runtimes\ncompletely).\n\nOn Fri, 21 Sep 2018, 00:05 pianoman4873, <notifications@github.com> wrote:\n\n> I am considering using this as a replacement to C#'s binary serialization\n> when writing objects to Memcached, and got a little worried by this issue.\n> Could you please elaborate on this buffer pool ?\n> What is it used for , and how could we avoid hogging the CPU ?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423362289>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFrl56w-AqRaRnpy54k1CBEPCvWHks5udB8-gaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423535250",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423535250",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423535250,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzUzNTI1MA==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-21T13:43:36Z",
        "updated_at": "2018-09-21T13:43:36Z",
        "author_association": "NONE",
        "body": "Thanks Marc. \r\nWhen is V3 due ?\r\nCould you describe shortly what are those buffers used for ? Just to better understand the implementation aspect :)\r\n\r\nThanks !\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423545274",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423545274",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423545274,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzU0NTI3NA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-21T14:13:16Z",
        "updated_at": "2018-09-21T14:13:16Z",
        "author_association": "OWNER",
        "body": "It is a scratch buffer that sits between the Stream and the reader/writer,\nso we're not dependent on the stream's buffering.\n\nIn v3 this will probably be replaced by ArrayPool completely, in the Stream\ncase. V3 also adds much better MemoryStream optimization, and has Pipelines\nsupport.\n\nOn Fri, 21 Sep 2018, 14:43 pianoman4873, <notifications@github.com> wrote:\n\n> Thanks Marc.\n> When is V3 due ?\n> Could you describe shortly what are those buffers used for ? Just to\n> better understand the implementation aspect :)\n>\n> Thanks !\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423535250>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKB9L0ytJUgTmeNE7AM5VeKF6wnHks5udO0JgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423558212",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423558212",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423558212,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzU1ODIxMg==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-21T14:47:32Z",
        "updated_at": "2018-09-21T14:47:32Z",
        "author_association": "NONE",
        "body": "Thanks a lot Marc.\r\nIs there a due date already for v3 ? :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423647771",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423647771",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423647771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY0Nzc3MQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-21T19:32:31Z",
        "updated_at": "2018-09-21T19:32:31Z",
        "author_association": "OWNER",
        "body": "Ultimately it comes from my free time, so I try not to promise specific\ndates. Sometime between 2-6 weeks is probably a rough guess.\n\nOn Fri, 21 Sep 2018, 15:47 pianoman4873, <notifications@github.com> wrote:\n\n> Thanks a lot Marc.\n> Is there a due date already for v3 ? :)\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423558212>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKcUrw6zCju1yRiMKDXeVlMl9sPpks5udPwegaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423728789",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423728789",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423728789,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzcyODc4OQ==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-22T08:58:10Z",
        "updated_at": "2018-09-22T08:58:10Z",
        "author_association": "NONE",
        "body": "Thanks a lot Marc."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/423758721",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-423758721",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 423758721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc1ODcyMQ==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-22T17:08:07Z",
        "updated_at": "2018-09-22T17:08:07Z",
        "author_association": "NONE",
        "body": "Is alpha.3 already contains this change or do you plan to release a newer prerelease version?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424307324",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/459#issuecomment-424307324",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/459",
        "id": 424307324,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDMwNzMyNA==",
        "user": {
            "login": "szehetner",
            "id": 32911487,
            "node_id": "MDQ6VXNlcjMyOTExNDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32911487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szehetner",
            "html_url": "https://github.com/szehetner",
            "followers_url": "https://api.github.com/users/szehetner/followers",
            "following_url": "https://api.github.com/users/szehetner/following{/other_user}",
            "gists_url": "https://api.github.com/users/szehetner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szehetner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szehetner/subscriptions",
            "organizations_url": "https://api.github.com/users/szehetner/orgs",
            "repos_url": "https://api.github.com/users/szehetner/repos",
            "events_url": "https://api.github.com/users/szehetner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szehetner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T11:32:21Z",
        "updated_at": "2018-09-25T11:32:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have a very similar but slightly different requirement. I also want to avoid string allocations when deserializing known strings, but I have a few fields that contain unique values, which i certainly don't want to intern as that would create a memory leak. @solyutor's solution somehow avoids this by calling string.IsInterned instead of string.Intern, but this requires all possible strings to be known and interned before doing any deserialization. At least in my use case this isn't possible. I know that certain members will have string values from a small set of possible values, but there could be new values during runtime.\r\n\r\nSo for me the ideal API would be a new ProtoMember option (e.g. InternOnDeserialization=true), so I could control this for each member. On Deserialization this would use the raw byte array/span to get or add the string instance in a global (Concurrent?)Dictionary (like @solyutor's solution does it). Using the raw bytes instead for the lookup avoids even the temporary string needed for string.Intern, making this allocation free. The dictionary would need to be reused across all ProtoReader instances (unlike the existing RuntimeTypeModel.InternStrings option).\r\n\r\nSo I would propose a new ProtoMember/MetaType for this\r\nPros:\r\n* minimizes the new public API needed\r\n* much easier to discover and use\r\n* interning behaviour can be set per member\r\n* implementation is hidden and can be optimized/changed later, e.g. as @mgravell said introducing pipelines after this would certainly require changes\r\n\r\nCons:\r\n* only solves this interning use case, not other possible uses of a custom string serialization hook.\r\n* If misused, this would create a memory leak. So documentation should be explicit about this, but shouldn't be a big deal as by default this would anyway be disabled.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424456965",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424456965",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424456965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1Njk2NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T18:44:33Z",
        "updated_at": "2018-09-25T18:44:33Z",
        "author_association": "OWNER",
        "body": "Not known statically? Or not known at all? Would you have a `Type`\ninstance, for example? Or is it completely unknown?\n\nOn Tue, 25 Sep 2018, 18:32 pianoman4873, <notifications@github.com> wrote:\n\n> Hello Marc,\n> This isn't really an issue - just an inquiry - sorry it misplaced here ,\n> but I really need an answer as soon as possible -\n> Is it possible to deserialize from protobuf-net WITHOUT knowing apriori\n> the type of the object ? ( this is required since I wish to use\n> protobuf-net with ScaleOut software which would eventually store objects of\n> different types so when providing the callback of the serializer method ,\n> the object type is not known ).\n>\n> Thanks !\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/465>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsN943QCfP5TIVi60FbS_C4yEh3RIks5uemixgaJpZM4W5I0s>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424465526",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424465526",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424465526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ2NTUyNg==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T19:11:09Z",
        "updated_at": "2018-09-25T19:12:28Z",
        "author_association": "NONE",
        "body": "Not know at all. \r\nThe framework ( ScaleOut ) allows me to provide a custom serializer / deserializer  method  ( as a plug in which will be used for the objects in the  distributed memory cache)\r\nHowever, in the scenario of storing various object types in the cache, I don't have a single type to supply for the serializer / deserializer , because there are multiple types of objects I might store. \r\n\r\nThe solution could be have a separted \"named cache\" ( as they call it ) , for each object type . \r\nHowever, this will incur modifications in my code base and I was wondering if there was a way around it.\r\n\r\nI provided a link which explains the usage - \r\n\r\nhttp://static.scaleoutsoftware.com/docs/AppFabricMigrationGuide/content/_object_serialization.html \r\n\r\nYou can see that in the example they gave they dedicate the cache to Person types ... however ,in my usage I have various types , hence the potential problem.\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424474728",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424474728",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424474728,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ3NDcyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T19:40:29Z",
        "updated_at": "2018-09-25T19:40:29Z",
        "author_association": "OWNER",
        "body": "Is the number of actual potential types reasonable? Or unbounded?\r\n\r\nI wonder whether you could do something like a \"oneof\" - meaning: always serialize a Foo, but where a Foo has \"oneof\" the actual types:\r\n\r\n```protobuf\r\nmessage Foo {\r\n    oneof item {\r\n        X x = 1;\r\n        Y y = 2;\r\n        ...\r\n        Z z = 42;\r\n    }\r\n}\r\n```\r\n\r\n(Don't worry, you don't need to use .proto for this)\r\n\r\nAlternatively, there is the subclass approach via `[ProtoInclude(...)]` - which protobuf-net actually treats identically to the above.\r\n\r\nThe final obption is to use dynamic typing. So:\r\n\r\n```c#\r\n[ProtoContract]\r\nclass Foo {\r\n    [ProtoMember(1, DynamicType= true)]\r\n    public object Value {get;set;}\r\n}\r\n```\r\n\r\nThis can work, but I kinda advise against it."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424479401",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424479401",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424479401,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ3OTQwMQ==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T19:54:54Z",
        "updated_at": "2018-09-25T19:54:54Z",
        "author_association": "NONE",
        "body": "It's actually pretty bounded.\r\nSo just to be on the same page, you suggest to create some wrapper class  ,say W , \r\nwhich will be the one the custom serializer will use,  and it will have as members the various types I wish to serialize , for example  A, B, C . \r\nAnd in case I wish to serialize type A , then only A will be populated , and B and C will be null ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424481107",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424481107",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424481107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ4MTEwNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T20:01:05Z",
        "updated_at": "2018-09-25T20:01:05Z",
        "author_association": "OWNER",
        "body": "Yes, exactly that. The library actually has a range of \"discriminated union\" types built in to support exactly that usage without needing lots of fields - typically these are used by the code-gen tooling, but it can be used equally from hand-coded scenarios.\r\n\r\nAs I say: at the data layer, this is identical to how protobuf-net handles inheritance, so: if all your possible types could share a common base type, that is also a viable (and simpler) option."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424483077",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424483077",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424483077,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ4MzA3Nw==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T20:07:40Z",
        "updated_at": "2018-09-25T20:07:40Z",
        "author_association": "NONE",
        "body": "OK, I might as well use the inheritance solution then :)\r\nSince I need to come up with a prototype solution soon , and compare performance - do you also support \"automatic\" annotation of member fields ( since I have pretty \"fat\" classes ) and this could be pretty  onerous skidding through all of them :)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424510953",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424510953",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424510953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDUxMDk1Mw==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-25T21:40:00Z",
        "updated_at": "2018-09-25T22:20:34Z",
        "author_association": "NONE",
        "body": "And just one last question to elucidate a little the usage - \r\nIf I use the inheritance solution and have type A, which is subclassed by all other types , say B and C,\r\nand if I annotate A as follows - \r\n\r\n[ProtoContract]\r\n[ProtoInclude(2, typeof(B))]\r\n[ProtoInclude(2, typeof(C))]\r\nclass A ...\r\n\r\nthen , when de- serializing I could write \r\n\r\nA a =  Serializer.Deserialize<A> (stream)\r\nand in case the stream contains the instance B , that object a above would actually be of type B , correct ?\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424605936",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424605936",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424605936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDYwNTkzNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T06:55:03Z",
        "updated_at": "2018-09-26T06:55:03Z",
        "author_association": "OWNER",
        "body": "Yes, it will give you the correct type based on the inheritance tree and\nthe actual type serialized.\n\nYes there are some automatic options to infer contracts, but: they are\ninherently brittle - only use them if you know you're not ever going to be\nadding more fields (it has to invent numbers somehow, and it uses an\nalphabetic ordering by name; if you later add an AardvarkCount, all your\nnumbers can break). But: see ImplicitFields on ProtoContractAttribute\n\nOn Tue, 25 Sep 2018, 22:40 pianoman4873, <notifications@github.com> wrote:\n\n> And I more small question -\n> If I use the inheritance solution and have type A, which is subclassed by\n> all other types , say B and C,\n> and if I annotate A as follows -\n>\n> [ProtoContract]\n> [ProtoInclude(2, typeof(B))]\n> [ProtoInclude(2, typeof(C))]\n> class A ...\n>\n> then , when desalinizing I could write\n>\n> A a = Serializer.Deserialize (stream)\n> and in case the stream contains the instance B , that object a above would\n> actually be of type B , correct ?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424510953>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGXBSmRoN2XQ5F7G-lcxRuSbGDpdks5ueqKxgaJpZM4W5I0s>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424606046",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424606046",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424606046,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDYwNjA0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T06:55:33Z",
        "updated_at": "2018-09-26T06:55:33Z",
        "author_association": "OWNER",
        "body": "Also: re performance - side note, v3 basically doubles perf\n\nOn Wed, 26 Sep 2018, 07:54 Marc Gravell, <marc.gravell@gmail.com> wrote:\n\n> Yes, it will give you the correct type based on the inheritance tree and\n> the actual type serialized.\n>\n> Yes there are some automatic options to infer contracts, but: they are\n> inherently brittle - only use them if you know you're not ever going to be\n> adding more fields (it has to invent numbers somehow, and it uses an\n> alphabetic ordering by name; if you later add an AardvarkCount, all your\n> numbers can break). But: see ImplicitFields on ProtoContractAttribute\n>\n> On Tue, 25 Sep 2018, 22:40 pianoman4873, <notifications@github.com> wrote:\n>\n>> And I more small question -\n>> If I use the inheritance solution and have type A, which is subclassed by\n>> all other types , say B and C,\n>> and if I annotate A as follows -\n>>\n>> [ProtoContract]\n>> [ProtoInclude(2, typeof(B))]\n>> [ProtoInclude(2, typeof(C))]\n>> class A ...\n>>\n>> then , when desalinizing I could write\n>>\n>> A a = Serializer.Deserialize (stream)\n>> and in case the stream contains the instance B , that object a above\n>> would actually be of type B , correct ?\n>>\n>> \u2014\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424510953>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AABDsGXBSmRoN2XQ5F7G-lcxRuSbGDpdks5ueqKxgaJpZM4W5I0s>\n>> .\n>>\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424613126",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/465#issuecomment-424613126",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/465",
        "id": 424613126,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDYxMzEyNg==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T07:24:55Z",
        "updated_at": "2018-09-26T07:24:55Z",
        "author_association": "NONE",
        "body": "Great - thanks a lot Marc for all the help !!!! You're awesome :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424783136",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/466#issuecomment-424783136",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/466",
        "id": 424783136,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc4MzEzNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T16:30:10Z",
        "updated_at": "2018-09-26T16:30:10Z",
        "author_association": "OWNER",
        "body": "It isn't a scenario I have added specific code for at the current time, so: there isn't an immediate \"do this and it will work\" answer I can give you. Ultimately we can add a special case for it - it comes down to how many special cases are actually needed. I haven't looked at what we would need additional to store this specific type."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424863971",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/466#issuecomment-424863971",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/466",
        "id": 424863971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg2Mzk3MQ==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T20:46:14Z",
        "updated_at": "2018-09-26T20:46:14Z",
        "author_association": "NONE",
        "body": "Ok,thanks.\r\nSo currently you suggest to use the \"surrogate\" as specified in \r\n\r\nhttps://stackoverflow.com/questions/7046506/can-i-serialize-arbitrary-types-with-protobuf-net/7046868#7046868\r\n\r\n ?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424874862",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/466#issuecomment-424874862",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/466",
        "id": 424874862,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg3NDg2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T21:24:47Z",
        "updated_at": "2018-09-26T21:24:47Z",
        "author_association": "OWNER",
        "body": "Something like that, yes. I'm a little cautious of over-emphasizing any specific solution here - if that works for you: great."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/424875624",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/466#issuecomment-424875624",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/466",
        "id": 424875624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg3NTYyNA==",
        "user": {
            "login": "pianoman4873",
            "id": 25153192,
            "node_id": "MDQ6VXNlcjI1MTUzMTky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/25153192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pianoman4873",
            "html_url": "https://github.com/pianoman4873",
            "followers_url": "https://api.github.com/users/pianoman4873/followers",
            "following_url": "https://api.github.com/users/pianoman4873/following{/other_user}",
            "gists_url": "https://api.github.com/users/pianoman4873/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pianoman4873/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pianoman4873/subscriptions",
            "organizations_url": "https://api.github.com/users/pianoman4873/orgs",
            "repos_url": "https://api.github.com/users/pianoman4873/repos",
            "events_url": "https://api.github.com/users/pianoman4873/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pianoman4873/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-26T21:27:26Z",
        "updated_at": "2018-09-26T21:27:26Z",
        "author_association": "NONE",
        "body": "Thanks a lot"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/425422945",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425422945",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 425422945,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQyMjk0NQ==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-28T12:41:07Z",
        "updated_at": "2018-09-28T12:41:07Z",
        "author_association": "NONE",
        "body": "I've checked the alpha 3 version. It seems that it does not contain the change you mentioned, yet (ArrayPool)\r\nI also can't find the latest source code (for v3).\r\n\r\nCould you please push the latest code or create a new prelease?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/425537450",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425537450",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 425537450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTUzNzQ1MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-28T19:10:59Z",
        "updated_at": "2018-09-28T19:10:59Z",
        "author_association": "OWNER",
        "body": "The branch for this is something like \"split-reader\". Not at a PC right now\n\nOn Fri, 28 Sep 2018, 13:41 Zavark\u00f3 G\u00e1bor, <notifications@github.com> wrote:\n\n> I've checked the alpha 3 version. It seems that it does not contain the\n> change you mentioned, yet (ArrayPool)\n> I also can't find the latest source code (for v3).\n>\n> Could you please push the latest code or create a new prelease?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425422945>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsMLfEUEZiotJv0VmerBWUWF-aqOUks5ufhjkgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/425551028",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425551028",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 425551028,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU1MTAyOA==",
        "user": {
            "login": "mintsoft",
            "id": 978048,
            "node_id": "MDQ6VXNlcjk3ODA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/978048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mintsoft",
            "html_url": "https://github.com/mintsoft",
            "followers_url": "https://api.github.com/users/mintsoft/followers",
            "following_url": "https://api.github.com/users/mintsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/mintsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mintsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mintsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/mintsoft/orgs",
            "repos_url": "https://api.github.com/users/mintsoft/repos",
            "events_url": "https://api.github.com/users/mintsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mintsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-28T20:06:03Z",
        "updated_at": "2018-09-28T20:06:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "https://github.com/mgravell/protobuf-net/tree/split-reader one would assume?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/425554742",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425554742",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 425554742,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU1NDc0Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-28T20:20:48Z",
        "updated_at": "2018-09-28T20:20:48Z",
        "author_association": "OWNER",
        "body": "Aye, that's the one.\n\nOn Fri, 28 Sep 2018, 21:06 Rob Emery, <notifications@github.com> wrote:\n\n> https://github.com/mgravell/protobuf-net/tree/split-reader one would\n> assume?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-425551028>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsKyigufJvlfI6OSe5XzjnSvWU_XCks5ufoErgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/426909057",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/468#issuecomment-426909057",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/468",
        "id": 426909057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjkwOTA1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-04T07:09:12Z",
        "updated_at": "2018-10-04T07:09:12Z",
        "author_association": "OWNER",
        "body": "The problem I have there is that *in the general case* it is not correct to\nassume that the caller made a mistake, even in the \"zero bytes consumed\"\ncase.\n\nIt is pretty normal and common to slice a stream and consume segments or\njust a tail (i.e. \"everything from here\"- after some prefix/header), and\nzero bytes is a perfectly legal and valid serialization size for protobuf -\nnot even uncommon.\n\nThe best fix here IMO would be to use the memory-stream ctor that accepts\nthe byte[], rather than using write. v3 will have methods to accept buffers\ndirectly as a new primary API (to support \"pipelines\"), with no stream as\nan intermediary.\n\n\nOn Wed, 3 Oct 2018, 23:31 Indy, <notifications@github.com> wrote:\n\n> Hi,\n>\n> We ran into this small issue this week and I thought it would be nice if\n> protobuf-net guarded against silly mistakes like it.\n>\n> public class Program\n> {\n> \tpublic static void Main(string[] args)\n> \t{\n> \t\tvar resetStream = args.Length > 0;\n> \t\tvar runtimeTypeModel = TypeModel.Create();\n>\n> \t\tusing (var stream = File.Create(\"person.bin\"))\n> \t\t{\n> \t\t\truntimeTypeModel.Serialize(stream, new Person\n> \t\t\t{\n> \t\t\t\tName = \"Fred\"\n> \t\t\t});\n> \t\t}\n>\n> \t\tvar buffer = File.ReadAllBytes(\"person.bin\");\n>\n> \t\tPerson person;\n> \t\tusing (var stream = new MemoryStream())\n> \t\t{\n> \t\t\tstream.Write(buffer, 0, buffer.Length);\n>\n> \t\t\tif (resetStream)\n> \t\t\t{\n> \t\t\t\tstream.Position = 0L;\n> \t\t\t}\n>\n> \t\t\tperson = (Person) runtimeTypeModel.Deserialize(stream, null, typeof(Person));\n> \t\t}\n>\n> \t\tConsole.WriteLine(person.Name);\n> \t}\n> }\n>\n> [ProtoContract]public class Person\n> {\n> \t[ProtoMember(1)]\n> \tpublic string Name { get; set; }\n> }\n>\n> There scenarios in which we want to write a byte[] to the MemoryStream\n> and then deserialize. Calling MemoryStream.Write advances the stream\n> <https://github.com/dotnet/corefx/blob/cc6aa17cbe21deef23588ce63ab2b365b6cda651/src/Common/src/CoreLib/System/IO/MemoryStream.cs#L681>\n> .\n>\n> If MemoryStream.Position is not set to 0L then a constructed but empty\n> object is returned back.\n>\n> It would be nice if the API guarded against easy-to-make mistakes like\n> this. I have not dug too deep but it looks like a small change to\n> ProtoReader.cs could help prevent these kind of mistakes.\n>\n>\n> https://github.com/mgravell/protobuf-net/blob/1b5b6570eb02042dc58fcb37e5ea88caf0573ad8/src/protobuf-net/ProtoReader.cs#L93\n>\n> I was thinking something like this...\n>\n> if (source.Position != 0L)\n> {\n> \tif (source.CanSeek)\n> \t{\n> \t\tsource.Position = 0L;\n> \t}\n> \telse\n> \t{\n> \t\tthrow new InvalidOperationException(\"Stream is not set to the beginning\");\n> \t}\n> }\n>\n> Happy to put together a PR.\n>\n> Thanks,\n> Indy\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/468>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsFogDaxxMwZGHKpe-IbijASR1Wzhks5uhTrTgaJpZM4XHD4w>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/427171529",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/468#issuecomment-427171529",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/468",
        "id": 427171529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE3MTUyOQ==",
        "user": {
            "login": "indy-singh",
            "id": 1906778,
            "node_id": "MDQ6VXNlcjE5MDY3Nzg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1906778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/indy-singh",
            "html_url": "https://github.com/indy-singh",
            "followers_url": "https://api.github.com/users/indy-singh/followers",
            "following_url": "https://api.github.com/users/indy-singh/following{/other_user}",
            "gists_url": "https://api.github.com/users/indy-singh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/indy-singh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/indy-singh/subscriptions",
            "organizations_url": "https://api.github.com/users/indy-singh/orgs",
            "repos_url": "https://api.github.com/users/indy-singh/repos",
            "events_url": "https://api.github.com/users/indy-singh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/indy-singh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-04T21:14:03Z",
        "updated_at": "2018-10-04T21:14:03Z",
        "author_association": "NONE",
        "body": "The example was using a MemoryStream for a concise repo. But it actually happened when attempting to use it with `Microsoft.IO.RecyclableMemoryStream.GetStream`. Digging a little deeper, and a similar API exists to pass [in the buffer.](https://github.com/Microsoft/Microsoft.IO.RecyclableMemoryStream/blob/9de4de04a51e21e196703398d99f702ebdccfd81/src/RecyclableMemoryStreamManager.cs#L610).\r\n\r\nThanks,\r\nIndy\r\n\r\nClosing."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429364444",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-429364444",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 429364444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTM2NDQ0NA==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-12T15:26:17Z",
        "updated_at": "2018-10-12T15:26:17Z",
        "author_association": "NONE",
        "body": "There is a similar issue with TypeModel.GetKey.\r\n\r\nI made the following changes:\r\nhttps://github.com/zgabi/protobuf-net/commit/e8e3ea057c75b0624b21435caa1a4dd12546e504\r\n\r\nTogether with the ArrayPool change it will solve my problem, and the CPU usage is almost 0% almost every time.\r\nThis is how I changed the bufferpool:\r\nhttps://github.com/zgabi/protobuf-net/commit/1824da473747b365d14613c1c6427308646e7f2b\r\n\r\nThis commit also contains your PR #462 and #463, because I liked them:)\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429474003",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-429474003",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 429474003,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ3NDAwMw==",
        "user": {
            "login": "rwkarg",
            "id": 17482002,
            "node_id": "MDQ6VXNlcjE3NDgyMDAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17482002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwkarg",
            "html_url": "https://github.com/rwkarg",
            "followers_url": "https://api.github.com/users/rwkarg/followers",
            "following_url": "https://api.github.com/users/rwkarg/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwkarg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwkarg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwkarg/subscriptions",
            "organizations_url": "https://api.github.com/users/rwkarg/orgs",
            "repos_url": "https://api.github.com/users/rwkarg/repos",
            "events_url": "https://api.github.com/users/rwkarg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwkarg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-12T21:57:29Z",
        "updated_at": "2018-10-12T21:57:29Z",
        "author_association": "NONE",
        "body": "@zgabi Looks like ArrayPool.Shared already takes in to account both a ThreadLocalStorage pool for quick storage, as well as a per-core pool for when the ThreadLocal pool is empty.\r\nhttps://github.com/dotnet/corefx/blob/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/Common/src/CoreLib/System/Buffers/ArrayPool.cs#L36\r\nhttps://github.com/dotnet/corefx/blob/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/Common/src/CoreLib/System/Buffers/TlsOverPerCoreLockedStacksArrayPool.cs"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429492101",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/452#issuecomment-429492101",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/452",
        "id": 429492101,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ5MjEwMQ==",
        "user": {
            "login": "rongguodong",
            "id": 11858549,
            "node_id": "MDQ6VXNlcjExODU4NTQ5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/11858549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rongguodong",
            "html_url": "https://github.com/rongguodong",
            "followers_url": "https://api.github.com/users/rongguodong/followers",
            "following_url": "https://api.github.com/users/rongguodong/following{/other_user}",
            "gists_url": "https://api.github.com/users/rongguodong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rongguodong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rongguodong/subscriptions",
            "organizations_url": "https://api.github.com/users/rongguodong/orgs",
            "repos_url": "https://api.github.com/users/rongguodong/repos",
            "events_url": "https://api.github.com/users/rongguodong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rongguodong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-12T23:54:20Z",
        "updated_at": "2018-10-12T23:54:35Z",
        "author_association": "NONE",
        "body": "I also met the same problem. Has it been fixed?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429514052",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-429514052",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 429514052,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTUxNDA1Mg==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-13T05:58:12Z",
        "updated_at": "2018-10-13T12:16:59Z",
        "author_association": "NONE",
        "body": "Yes, but it is limited to 1 MB. The size of the TlsOverPerCoreLockedStacksArrayPool is not configurable:(\r\n\r\nThis is only my implementetion, I'm not telling that it shoudl be added in this way to the library. But I'd be happy to have a configurable bufferpool instead of the ArrrayPool.Shared\r\n\r\nAnd my threads are \"fixed\", I'm not creating new threads dynamically, so for me the thread static threadpool is ideal. Probably only some buffers are created for each thread (first a default 1024 bytes, then a bigger and when it is small a double sized, which is probably the last)."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429803031",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429803031",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429803031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTgwMzAzMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T10:52:52Z",
        "updated_at": "2018-10-15T10:52:52Z",
        "author_association": "OWNER",
        "body": "Hi; protogen is available as a download from https://protogen.marcgravell.com, or as a \"dotnet global tool\" - https://www.nuget.org/packages/protobuf-net.Protogen\r\n\r\nIt can also be used online - for example: https://protogen.marcgravell.com#gd88905e2555316d1ddc633463ab09242 (which should show your sample). I am unclear from the question what the issue is that you're facing - but : that's where protogen is available!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429824053",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429824053",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429824053,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTgyNDA1Mw==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T11:59:05Z",
        "updated_at": "2018-10-15T12:01:25Z",
        "author_association": "NONE",
        "body": "i can used online in https://protogen.marcgravell.com#gd88905e2555316d1ddc633463ab09242 \r\n\r\nbut when i used command-line,  `protogen.exe test.proto -otest.cs`  throw the  System.NullReferenceException in protogen.program.main(string[] args)\r\nthe protogen2.3.16 was download from the https://protogen.marcgravell.com/\r\n\r\nin the https://protogen.marcgravell.com/, Can I choose to download other versions except 2.3.16?\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429830029",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429830029",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429830029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTgzMDAyOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T12:17:10Z",
        "updated_at": "2018-10-15T12:17:10Z",
        "author_association": "OWNER",
        "body": "I will try that when I'm at a computer (aways from desk for a few days).\nHowever, isn't -o a folder, not a file? (From memory)\n\nOn Mon, 15 Oct 2018, 13:10 uncle nine, <notifications@github.com> wrote:\n\n> input the protogen.exe test.proto -otest.cs command\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429824720>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEmCQQj6XdbZNr2pignKpGv4WHvCks5ulHj_gaJpZM4XcDbR>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429866603",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429866603",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429866603,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg2NjYwMw==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T14:08:04Z",
        "updated_at": "2018-10-15T14:08:04Z",
        "author_association": "NONE",
        "body": "I see the src code..its a file, not folder..\r\n\r\n`using (var fds = File.Create(outPath))\r\n                        {\r\n                            Serializer.Serialize(fds, set);\r\n                        }`\r\n\r\nI try it in mac..but  throw same exception \r\n`qutongdeMBP:net462 uncle9$ mono protogen.exe a.proto -oa.cs\r\nObject reference not set to an instance of an object\r\n  at protogen.Program.Main (System.String[] args) [0x005e8] in <87ed6d347445412fa65db7c1ed5e0624>:0 `"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429868753",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429868753",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429868753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg2ODc1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T14:13:20Z",
        "updated_at": "2018-10-15T14:13:20Z",
        "author_association": "OWNER",
        "body": "Ok, I'll have to take a look. Just wrapping up some DIY on the house, so\nshould be able to look soon.\n\nOn Mon, 15 Oct 2018, 15:08 uncle nine, <notifications@github.com> wrote:\n\n> I see the src code..its a file, not folder..\n>\n> using (var fds = File.Create(outPath)) { Serializer.Serialize(fds, set); }\n>\n> I try it in mac..but throw same exception\n> qutongdeMBP:net462 uncle9$ mono protogen.exe a.proto -oa.cs Object\n> reference not set to an instance of an object at protogen.Program.Main\n> (System.String[] args) [0x005e8] in <87ed6d347445412fa65db7c1ed5e0624>:0\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429866603>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD770zqp62Tz360sGe8PvRYeFYKOks5ulJbFgaJpZM4XcDbR>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/429871607",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-429871607",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 429871607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTg3MTYwNw==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-15T14:20:10Z",
        "updated_at": "2018-10-15T14:20:10Z",
        "author_association": "NONE",
        "body": "OK,thanks."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/430080061",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/470#issuecomment-430080061",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/470",
        "id": 430080061,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA4MDA2MQ==",
        "user": {
            "login": "uncleniner",
            "id": 33974362,
            "node_id": "MDQ6VXNlcjMzOTc0MzYy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/33974362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uncleniner",
            "html_url": "https://github.com/uncleniner",
            "followers_url": "https://api.github.com/users/uncleniner/followers",
            "following_url": "https://api.github.com/users/uncleniner/following{/other_user}",
            "gists_url": "https://api.github.com/users/uncleniner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uncleniner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uncleniner/subscriptions",
            "organizations_url": "https://api.github.com/users/uncleniner/orgs",
            "repos_url": "https://api.github.com/users/uncleniner/repos",
            "events_url": "https://api.github.com/users/uncleniner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uncleniner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-16T02:35:31Z",
        "updated_at": "2018-10-16T02:35:31Z",
        "author_association": "NONE",
        "body": "thanks for your help, i know what where i had wrong,\r\nthe tool need use the command for generate cs file\r\n`protogen.exe a.proto --csharp_out=folder name`\r\nthanks for u.."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/430360155",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/471#issuecomment-430360155",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/471",
        "id": 430360155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM2MDE1NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-16T19:06:41Z",
        "updated_at": "2018-10-16T19:06:41Z",
        "author_association": "OWNER",
        "body": "Hi. In the current version: no. The v3 spike (started but not yet complete)\nadds mechanisms intended to support this scenario, and fix a range of other\nallocation problems. So: v3 will be the answer here - I just need to finish\nit!\n\nOn Tue, 16 Oct 2018, 12:47 bmesetovic, <notifications@github.com> wrote:\n\n> As part of an effort to reduce GC frequency and impact on our application,\n> we wanted to model several proto serializable DTOs as structs instead of\n> classes. This would reduce the number of objects allocated on the heap and\n> in turn reduce the frequency and duration of GCs.\n>\n> A typical example would be Decimal or DateTime, both of which semantically\n> should be structs anyway. We have DTOs that contain 20-30 decimals, so a\n> switch to structs would provide a substantial reduction in object\n> allocations.\n>\n> However, benchmarks done with BenchmarkDotNet show that the amount of\n> allocated memory actually doubles when we switch to struct decimal DTO.\n> Looking at the library code, it seems that structs are always boxed during\n> deserialization and there is no way to avoid it. I've found several\n> comments online that suggest otherwise, but have not been able to reproduce\n> it.\n>\n> Here are the benchmark results:\n>\n> BenchmarkDotNet=v0.11.1, OS=Windows 10.0.16299.611\n> (1709/FallCreatorsUpdate/Redstone3)\n> Intel Xeon CPU E5-1620 v2 3.70GHz, 1 CPU, 8 logical and 4 physical cores\n> Frequency=3613282 Hz, Resolution=276.7567 ns, Timer=TSC\n> .NET Core SDK=2.1.403\n> [Host] : .NET Core 2.1.5 (CoreCLR 4.6.26919.02, CoreFX 4.6.26919.02),\n> 64bit RyuJIT\n> DefaultJob : .NET Core 2.1.5 (CoreCLR 4.6.26919.02, CoreFX 4.6.26919.02),\n> 64bit RyuJIT\n>\n> |           Method |     Mean |     Error |    StdDev |  Gen 0 | Allocated |\n> |----------------- |---------:|----------:|----------:|-------:|----------:|\n> |     ValueDecimal | 6.173 us | 0.0231 us | 0.0216 us | 0.5188 |   2.68 KB |\n> | ReferenceDecimal | 7.445 us | 0.0306 us | 0.0287 us | 0.2518 |   1.31 KB |\n>\n>\n> I am also attaching the benchmark code (BoxingBenchmark.zip\n> <https://github.com/mgravell/protobuf-net/files/2482839/BoxingBenchmark.zip>\n> ).\n>\n> Is there a way to avoid boxing in this scenario?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/471>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsInjz31fk_5_cH4PVezO072x2tLuks5ulcdKgaJpZM4XeLVD>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431355226",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/472#issuecomment-431355226",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/472",
        "id": 431355226,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTM1NTIyNg==",
        "user": {
            "login": "unger",
            "id": 3875734,
            "node_id": "MDQ6VXNlcjM4NzU3MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3875734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unger",
            "html_url": "https://github.com/unger",
            "followers_url": "https://api.github.com/users/unger/followers",
            "following_url": "https://api.github.com/users/unger/following{/other_user}",
            "gists_url": "https://api.github.com/users/unger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unger/subscriptions",
            "organizations_url": "https://api.github.com/users/unger/orgs",
            "repos_url": "https://api.github.com/users/unger/repos",
            "events_url": "https://api.github.com/users/unger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-19T13:00:56Z",
        "updated_at": "2018-10-19T13:00:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "Pull request #473 for this Issue"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431461495",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/473#issuecomment-431461495",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/473",
        "id": 431461495,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQ2MTQ5NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-19T18:48:20Z",
        "updated_at": "2018-10-19T18:48:20Z",
        "author_association": "OWNER",
        "body": "Happy with the change and the reasoning - looks fine. But can you cite a specific implementation that behaves in the way described, just for the paper trail?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431482500",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/473#issuecomment-431482500",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/473",
        "id": 431482500,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQ4MjUwMA==",
        "user": {
            "login": "unger",
            "id": 3875734,
            "node_id": "MDQ6VXNlcjM4NzU3MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3875734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unger",
            "html_url": "https://github.com/unger",
            "followers_url": "https://api.github.com/users/unger/followers",
            "following_url": "https://api.github.com/users/unger/following{/other_user}",
            "gists_url": "https://api.github.com/users/unger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unger/subscriptions",
            "organizations_url": "https://api.github.com/users/unger/orgs",
            "repos_url": "https://api.github.com/users/unger/repos",
            "events_url": "https://api.github.com/users/unger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-19T20:01:15Z",
        "updated_at": "2018-10-19T20:01:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for looking into this issue so quickly.\r\n\r\nI checked the \"offical\" google c# implementation here: \r\n[https://github.com/protocolbuffers/protobuf/blob/master/csharp/src/Google.Protobuf/CodedInputStream.cs](url)\r\n\r\nOn row 543:\r\n` public bool ReadBool()\r\n{\r\n   return ReadRawVarint32() != 0;\r\n}`\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431609027",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/473#issuecomment-431609027",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/473",
        "id": 431609027,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTYwOTAyNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-20T18:58:19Z",
        "updated_at": "2018-10-20T18:58:19Z",
        "author_association": "OWNER",
        "body": "Fair enough; seems good to merge, then. For the purposes of legals, can you confirm that you're able and willing to contribute this change in accordance with the project's license?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431639869",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/473#issuecomment-431639869",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/473",
        "id": 431639869,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTYzOTg2OQ==",
        "user": {
            "login": "unger",
            "id": 3875734,
            "node_id": "MDQ6VXNlcjM4NzU3MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3875734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unger",
            "html_url": "https://github.com/unger",
            "followers_url": "https://api.github.com/users/unger/followers",
            "following_url": "https://api.github.com/users/unger/following{/other_user}",
            "gists_url": "https://api.github.com/users/unger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unger/subscriptions",
            "organizations_url": "https://api.github.com/users/unger/orgs",
            "repos_url": "https://api.github.com/users/unger/repos",
            "events_url": "https://api.github.com/users/unger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-21T05:20:51Z",
        "updated_at": "2018-10-21T05:20:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes I confirm that I am willing to contribute with this change."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/431654032",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/473#issuecomment-431654032",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/473",
        "id": 431654032,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTY1NDAzMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-21T09:44:46Z",
        "updated_at": "2018-10-21T09:44:46Z",
        "author_association": "OWNER",
        "body": "awesome, and thanks; merged!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/432533939",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/59#issuecomment-432533939",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/59",
        "id": 432533939,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjUzMzkzOQ==",
        "user": {
            "login": "seanyao1",
            "id": 5680514,
            "node_id": "MDQ6VXNlcjU2ODA1MTQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5680514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seanyao1",
            "html_url": "https://github.com/seanyao1",
            "followers_url": "https://api.github.com/users/seanyao1/followers",
            "following_url": "https://api.github.com/users/seanyao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/seanyao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seanyao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seanyao1/subscriptions",
            "organizations_url": "https://api.github.com/users/seanyao1/orgs",
            "repos_url": "https://api.github.com/users/seanyao1/repos",
            "events_url": "https://api.github.com/users/seanyao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seanyao1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-24T06:49:34Z",
        "updated_at": "2018-10-24T06:49:34Z",
        "author_association": "NONE",
        "body": "This happens to me too"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/432609921",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/416#issuecomment-432609921",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/416",
        "id": 432609921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjYwOTkyMQ==",
        "user": {
            "login": "gyx9208",
            "id": 4034823,
            "node_id": "MDQ6VXNlcjQwMzQ4MjM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4034823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gyx9208",
            "html_url": "https://github.com/gyx9208",
            "followers_url": "https://api.github.com/users/gyx9208/followers",
            "following_url": "https://api.github.com/users/gyx9208/following{/other_user}",
            "gists_url": "https://api.github.com/users/gyx9208/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gyx9208/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gyx9208/subscriptions",
            "organizations_url": "https://api.github.com/users/gyx9208/orgs",
            "repos_url": "https://api.github.com/users/gyx9208/repos",
            "events_url": "https://api.github.com/users/gyx9208/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gyx9208/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-24T10:55:17Z",
        "updated_at": "2018-10-24T10:55:40Z",
        "author_association": "NONE",
        "body": "Hi, here is a easy way.\r\n\r\nCopy the generated \"proto.cs\" and \"protobuf-net.dll\" into \"Assets/\"\r\nCreate a file  \"/Assets/Editor/TestProtoBuf.cs\"\r\n\r\n```csharp\r\nusing UnityEngine;\r\nusing UnityEditor;\r\nusing UnityEngine.TestTools;\r\nusing NUnit.Framework;\r\nusing System.Collections;\r\nusing MoleMole.Test.GamePlayProto;\r\nusing System.IO;\r\n\r\npublic class TestProtoBuf\r\n{\r\n\t[Test]\r\n\tpublic void ProtoBufTestSimplePasses()\r\n\t{\r\n\t\t//Arrange\r\n\t\tHeartBeat inbeat = new HeartBeat();\r\n\t\tinbeat.TimeStamp = 11;\r\n\r\n\t\t//Act\r\n\t\tMemoryStream stream = new MemoryStream();\r\n\t\tProtoBuf.Serializer.Serialize(stream, inbeat);\r\n\r\n\t\tstream.Seek(0, SeekOrigin.Begin);\r\n\r\n\t\tHeartBeat outbeat = ProtoBuf.Serializer.Deserialize<HeartBeat>(stream);\r\n\r\n\t\t//Assert\r\n\t\tAssert.AreEqual(11, outbeat.TimeStamp);\r\n\t}\r\n}\r\n```\r\n\r\nIn Unity, click Window/General/Test Runner. I'm not sure whether the menu'name is correct if you're not in Unity 2018. It's easy to find. It's a unit test window.\r\n\r\nThen you can see the TestProtoBuf case. \"Run All\""
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/437913222",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-437913222",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 437913222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzkxMzIyMg==",
        "user": {
            "login": "zgabi",
            "id": 3104253,
            "node_id": "MDQ6VXNlcjMxMDQyNTM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3104253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zgabi",
            "html_url": "https://github.com/zgabi",
            "followers_url": "https://api.github.com/users/zgabi/followers",
            "following_url": "https://api.github.com/users/zgabi/following{/other_user}",
            "gists_url": "https://api.github.com/users/zgabi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zgabi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zgabi/subscriptions",
            "organizations_url": "https://api.github.com/users/zgabi/orgs",
            "repos_url": "https://api.github.com/users/zgabi/repos",
            "events_url": "https://api.github.com/users/zgabi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zgabi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-12T15:03:02Z",
        "updated_at": "2018-11-12T15:03:02Z",
        "author_association": "NONE",
        "body": "Is there any news on V3?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/437917809",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/461#issuecomment-437917809",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/461",
        "id": 437917809,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzkxNzgwOQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-12T15:16:07Z",
        "updated_at": "2018-11-12T15:16:07Z",
        "author_association": "OWNER",
        "body": "Sorry, my free time has been tied up with other (non-code) things for a\nwhile. I'll get back to it as soon as I can.\n\nOn Mon, 12 Nov 2018, 15:03 Zavark\u00f3 G\u00e1bor <notifications@github.com wrote:\n\n> Is there any news on V3?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/461#issuecomment-437913222>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsK7oUjtB-WIramFqfiBQxWyyhEw7ks5uuY2mgaJpZM4Wk9pu>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/438799001",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/206#issuecomment-438799001",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/206",
        "id": 438799001,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc5OTAwMQ==",
        "user": {
            "login": "HelloKitty",
            "id": 5829095,
            "node_id": "MDQ6VXNlcjU4MjkwOTU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5829095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HelloKitty",
            "html_url": "https://github.com/HelloKitty",
            "followers_url": "https://api.github.com/users/HelloKitty/followers",
            "following_url": "https://api.github.com/users/HelloKitty/following{/other_user}",
            "gists_url": "https://api.github.com/users/HelloKitty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HelloKitty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HelloKitty/subscriptions",
            "organizations_url": "https://api.github.com/users/HelloKitty/orgs",
            "repos_url": "https://api.github.com/users/HelloKitty/repos",
            "events_url": "https://api.github.com/users/HelloKitty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HelloKitty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-14T20:02:51Z",
        "updated_at": "2018-11-14T22:53:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Any update on BitArray support without copying `byte[]`? I haven't tested myself, Google leads me here. There are some usecases for updating dirty values of collections efficiently by sending BitArray and the changed values. Such a solution scales well if you have on average have many values changing each message.\r\n\r\nThough it's probably just easy to write your own BitArray based on the coreclr source for whatever your needs are and make it serializable with Protobuf-net. That is the course I am taking for afew reasons."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/442043797",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/476#issuecomment-442043797",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/476",
        "id": 442043797,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjA0Mzc5Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-27T12:38:49Z",
        "updated_at": "2018-11-27T12:38:49Z",
        "author_association": "OWNER",
        "body": "Hi; that seems ... unlikely. Just so I start looking at the right place - what library version are you using? Also: are you sure that this isn't some kind of over-allocation API nuance in the C++ API, or an incorrect API usage?\r\n\r\nIf I run your example code, I get 10 bytes in my \"data.out\" file, which is exactly what I would expect:\r\n\r\n- 1 byte for the field header for field 1\r\n- 1 byte for the length prefix of the text of field 1\r\n- 4 bytes for the text of field 1\r\n- 1 byte for the field header for field 2\r\n- 1 byte for the value of field 2\r\n- 1 byte for the field header for field 3\r\n- 1 byte for the value of field 3\r\n\r\nEqually, the second byte (the length prefix of the text) is: 0x04 - which is simply decoded as the literal value 4.\r\n\r\nThe actual payload I get is: (0x) 0A-04-54-65-73-74-10-78-18-78\r\n\r\nSo: whatever is happening - I don't think it is the encode at fault here.\r\n\r\nThe file you are processing: is that *also* 10 bytes? I'm trying to think how it might have been damaged; the most common cause is people using text APIs on binary data, but nothing in the question suggests that.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/442072520",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/476#issuecomment-442072520",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/476",
        "id": 442072520,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjA3MjUyMA==",
        "user": {
            "login": "ejoebstl",
            "id": 1852126,
            "node_id": "MDQ6VXNlcjE4NTIxMjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1852126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejoebstl",
            "html_url": "https://github.com/ejoebstl",
            "followers_url": "https://api.github.com/users/ejoebstl/followers",
            "following_url": "https://api.github.com/users/ejoebstl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejoebstl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejoebstl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejoebstl/subscriptions",
            "organizations_url": "https://api.github.com/users/ejoebstl/orgs",
            "repos_url": "https://api.github.com/users/ejoebstl/repos",
            "events_url": "https://api.github.com/users/ejoebstl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejoebstl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-27T14:14:15Z",
        "updated_at": "2018-11-27T14:14:37Z",
        "author_association": "NONE",
        "body": "Thank you for the insanely fast response. \r\n\r\nMy payload is 11 bytes. 0A-04-54-65-73-74-10-78-18-78-0a.\r\n\r\nSuper odd. I don't know where it comes from, but I would not expect the trailing `\\n` to cause that kind of trouble. \r\nI'll look into deeper into the decoding. \r\n\r\nI'm using protobuf.net 2.4.0, libprotoc 3.6.1, dotnet core 2.1.403 on arch linux. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/442081012",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/476#issuecomment-442081012",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/476",
        "id": 442081012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjA4MTAxMg==",
        "user": {
            "login": "ejoebstl",
            "id": 1852126,
            "node_id": "MDQ6VXNlcjE4NTIxMjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1852126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejoebstl",
            "html_url": "https://github.com/ejoebstl",
            "followers_url": "https://api.github.com/users/ejoebstl/followers",
            "following_url": "https://api.github.com/users/ejoebstl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejoebstl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejoebstl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejoebstl/subscriptions",
            "organizations_url": "https://api.github.com/users/ejoebstl/orgs",
            "repos_url": "https://api.github.com/users/ejoebstl/repos",
            "events_url": "https://api.github.com/users/ejoebstl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejoebstl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-27T14:38:29Z",
        "updated_at": "2018-11-27T14:38:29Z",
        "author_association": "NONE",
        "body": "I've created [an issue](https://github.com/protocolbuffers/protobuf/issues/5401) with protobuf - maybe they can help. \r\n\r\nThanks again!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/443212686",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/319#issuecomment-443212686",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/319",
        "id": 443212686,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIxMjY4Ng==",
        "user": {
            "login": "michaldobrodenka",
            "id": 2361931,
            "node_id": "MDQ6VXNlcjIzNjE5MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2361931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaldobrodenka",
            "html_url": "https://github.com/michaldobrodenka",
            "followers_url": "https://api.github.com/users/michaldobrodenka/followers",
            "following_url": "https://api.github.com/users/michaldobrodenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaldobrodenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaldobrodenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaldobrodenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michaldobrodenka/orgs",
            "repos_url": "https://api.github.com/users/michaldobrodenka/repos",
            "events_url": "https://api.github.com/users/michaldobrodenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaldobrodenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-30T14:04:17Z",
        "updated_at": "2018-11-30T14:04:17Z",
        "author_association": "NONE",
        "body": "Would be nice to have something to precompile. My mobile app has 250 classes marked with ProtoContract, with inheritance etc.\r\n\r\nFirst serialization takes 2-3 seoncds (iPhone XS). On slow embedded ARMv6 it takes 50 secs!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/443213373",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/319#issuecomment-443213373",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/319",
        "id": 443213373,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIxMzM3Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-30T14:06:38Z",
        "updated_at": "2018-11-30T14:06:38Z",
        "author_association": "OWNER",
        "body": "Totally agree. And that's on my plan - the problem is : everything takes time to implement. I've been tied up with multiple things - hope to get back on it, though."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/443213857",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/319#issuecomment-443213857",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/319",
        "id": 443213857,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIxMzg1Nw==",
        "user": {
            "login": "michaldobrodenka",
            "id": 2361931,
            "node_id": "MDQ6VXNlcjIzNjE5MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2361931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaldobrodenka",
            "html_url": "https://github.com/michaldobrodenka",
            "followers_url": "https://api.github.com/users/michaldobrodenka/followers",
            "following_url": "https://api.github.com/users/michaldobrodenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaldobrodenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaldobrodenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaldobrodenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michaldobrodenka/orgs",
            "repos_url": "https://api.github.com/users/michaldobrodenka/repos",
            "events_url": "https://api.github.com/users/michaldobrodenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaldobrodenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-30T14:08:25Z",
        "updated_at": "2018-11-30T14:08:25Z",
        "author_association": "NONE",
        "body": "Thank you for your effort! Wish I could be helpful somehow.\r\n\r\nI'll try to compile latest precompile and use it as long as possible."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/443994437",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/476#issuecomment-443994437",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/476",
        "id": 443994437,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzk5NDQzNw==",
        "user": {
            "login": "ejoebstl",
            "id": 1852126,
            "node_id": "MDQ6VXNlcjE4NTIxMjY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1852126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejoebstl",
            "html_url": "https://github.com/ejoebstl",
            "followers_url": "https://api.github.com/users/ejoebstl/followers",
            "following_url": "https://api.github.com/users/ejoebstl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejoebstl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejoebstl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejoebstl/subscriptions",
            "organizations_url": "https://api.github.com/users/ejoebstl/orgs",
            "repos_url": "https://api.github.com/users/ejoebstl/repos",
            "events_url": "https://api.github.com/users/ejoebstl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejoebstl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-04T07:06:59Z",
        "updated_at": "2018-12-04T07:07:11Z",
        "author_association": "NONE",
        "body": "We've tracked the issue down and it's related to exported symbols from a [3rd party library](https://github.com/pytorch/pytorch/issues/14573). Thanks for your help!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/444009003",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/476#issuecomment-444009003",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/476",
        "id": 444009003,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDAwOTAwMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-04T08:11:53Z",
        "updated_at": "2018-12-04T08:11:53Z",
        "author_association": "OWNER",
        "body": "Thanks for the update - appreciated\n\nOn Tue, 4 Dec 2018, 07:07 Emanuel J\u00f6bstl <notifications@github.com wrote:\n\n> Closed #476 <https://github.com/mgravell/protobuf-net/issues/476>.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/476#event-2003446454>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsD_oPOW7QFIr3dT7PLD_ND4Lyvcgks5u1h8hgaJpZM4Y1Tmj>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/445256581",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/144#issuecomment-445256581",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/144",
        "id": 445256581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTI1NjU4MQ==",
        "user": {
            "login": "michaldobrodenka",
            "id": 2361931,
            "node_id": "MDQ6VXNlcjIzNjE5MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2361931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaldobrodenka",
            "html_url": "https://github.com/michaldobrodenka",
            "followers_url": "https://api.github.com/users/michaldobrodenka/followers",
            "following_url": "https://api.github.com/users/michaldobrodenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaldobrodenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaldobrodenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaldobrodenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michaldobrodenka/orgs",
            "repos_url": "https://api.github.com/users/michaldobrodenka/repos",
            "events_url": "https://api.github.com/users/michaldobrodenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaldobrodenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-07T14:54:31Z",
        "updated_at": "2018-12-07T14:54:31Z",
        "author_association": "NONE",
        "body": "Did you manage to solve this?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/445290101",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/144#issuecomment-445290101",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/144",
        "id": 445290101,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTI5MDEwMQ==",
        "user": {
            "login": "jeanbern",
            "id": 967680,
            "node_id": "MDQ6VXNlcjk2NzY4MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/967680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeanbern",
            "html_url": "https://github.com/jeanbern",
            "followers_url": "https://api.github.com/users/jeanbern/followers",
            "following_url": "https://api.github.com/users/jeanbern/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeanbern/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeanbern/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeanbern/subscriptions",
            "organizations_url": "https://api.github.com/users/jeanbern/orgs",
            "repos_url": "https://api.github.com/users/jeanbern/repos",
            "events_url": "https://api.github.com/users/jeanbern/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeanbern/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-07T16:39:04Z",
        "updated_at": "2018-12-07T16:39:04Z",
        "author_association": "NONE",
        "body": "I profiled it vs a hand-built serializer and mine was faster even when protobuf ignored the date. So I didn't end up digging into the fix, sorry."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/445369543",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/144#issuecomment-445369543",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/144",
        "id": 445369543,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM2OTU0Mw==",
        "user": {
            "login": "michaldobrodenka",
            "id": 2361931,
            "node_id": "MDQ6VXNlcjIzNjE5MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2361931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaldobrodenka",
            "html_url": "https://github.com/michaldobrodenka",
            "followers_url": "https://api.github.com/users/michaldobrodenka/followers",
            "following_url": "https://api.github.com/users/michaldobrodenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaldobrodenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaldobrodenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaldobrodenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michaldobrodenka/orgs",
            "repos_url": "https://api.github.com/users/michaldobrodenka/repos",
            "events_url": "https://api.github.com/users/michaldobrodenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaldobrodenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-07T21:23:04Z",
        "updated_at": "2018-12-07T21:23:28Z",
        "author_association": "NONE",
        "body": "Ok, I probably got it, it seems that problem was old protobuf-net.dll referenced by  data class. With 2.10 alpha 5 or 2.33 it works."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/446502198",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/477#issuecomment-446502198",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/477",
        "id": 446502198,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjUwMjE5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-12-12T08:24:37Z",
        "updated_at": "2018-12-12T08:24:37Z",
        "author_association": "OWNER",
        "body": "The failure to respect the `+names` toggle is a bug - will try to fix when I get a moment.\r\n\r\nAs a temporary workaround: if you control the .proto, this works:\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\nimport \"protobuf-net/protogen.proto\";\r\n\r\nenum MessageType {\r\n    UNKNOWN = 0 [(.protobuf_net.enumvalopt).name = \"UNKNOWN\"];\r\n    GET_CLIENT_INFO = 1 [(.protobuf_net.enumvalopt).name = \"GET_CLIENT_INFO\"];\r\n    GET_CLIENT_INFO_OK = 2 [(.protobuf_net.enumvalopt).name = \"GET_CLIENT_INFO_OK\"];\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/451045705",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/482#issuecomment-451045705",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/482",
        "id": 451045705,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTA0NTcwNQ==",
        "user": {
            "login": "utilitydelta",
            "id": 24741665,
            "node_id": "MDQ6VXNlcjI0NzQxNjY1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/24741665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utilitydelta",
            "html_url": "https://github.com/utilitydelta",
            "followers_url": "https://api.github.com/users/utilitydelta/followers",
            "following_url": "https://api.github.com/users/utilitydelta/following{/other_user}",
            "gists_url": "https://api.github.com/users/utilitydelta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utilitydelta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utilitydelta/subscriptions",
            "organizations_url": "https://api.github.com/users/utilitydelta/orgs",
            "repos_url": "https://api.github.com/users/utilitydelta/repos",
            "events_url": "https://api.github.com/users/utilitydelta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utilitydelta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-03T03:00:43Z",
        "updated_at": "2019-01-03T03:00:43Z",
        "author_association": "NONE",
        "body": "OK. Worked it out. Protobuf-net hits the accessor first, it returns an 16byte empty guid, then the logic is to append the additional bytes on the end during deserialization instead of replacing the byte[]. I can work around it. :)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/452079045",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/483#issuecomment-452079045",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/483",
        "id": 452079045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjA3OTA0NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-07T20:57:25Z",
        "updated_at": "2019-01-07T20:57:25Z",
        "author_association": "OWNER",
        "body": "The 3.0 branch isn't yet released / deployed / supported. I will take a\nlook, however - probably tomorrow evening. I can't guess without trying\nsome code. Out of curiosity: how large are the messages in this case? I\nalso know there's an unmerged bug/PR in the 3.0 code that could well be\nrelated.\n\nHowever, my advice for a quick fix here would be: don't use the 3.0 alpha\nyet.\n\nOn Mon, 7 Jan 2019, 20:44 mmillerbe <notifications@github.com wrote:\n\n> Hi,\n>\n> First, thanks very much for the fantastic software! I really appreciate\n> all the work you've put into it.\n>\n> Today I ran into a few exceptions when deserializing a message using\n> protobuf-net. The message was transmitted over a TCP connection. Previous\n> and subsequent runs of the client applications parsed the message\n> successfully, and the raw message data (as a byte array in the servers'\n> memory) hadn't changed across client runs.\n>\n> I'm using the 3.0.0-alpha.3 release from NuGet.\n>\n> I'm running two clients, connecting to separate servers. Client 1 threw\n> one exception once, while Client 2 threw two separate exceptions (one in\n> each of two separate runs).\n>\n> Client 1 and Client 2 each threw the following exception once:\n>\n> ProtoBuf.ProtoException: Unexpected wire-type: Variant\n>    at ProtoBuf.BclHelpers.ReadTimeSpanTicks(ProtoReader source, State& state, DateTimeKind& kind) in C:\\code\\protobuf-net\\src\\protobuf-net\\BclHelpers.cs:line 469\n>    at ProtoBuf.BclHelpers.ReadDateTime(ProtoReader source, State& state) in C:\\code\\protobuf-net\\src\\protobuf-net\\BclHelpers.cs:line 350\n>    at proto_84(ProtoReader , State& , Object )\n>    at ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType(ProtoReader reader, State& state, DataFormat format, Int32 tag, Type type, Object& value, Boolean skipOtherFields, Boolean asListItem, Boolean autoCreate, Boolean insideList, Object parentListOrType) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 1156\n>    at ProtoBuf.Meta.TypeModel.DeserializeAny(ProtoReader reader, State& state, Type type, Object value, Boolean noAutoCreate) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 733\n>    at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context) in C:\\code\\protobuf-net\\src\\protobuf-net\\Meta\\TypeModel.cs:line 584\n>    at ProtoBuf.Serializer.Deserialize[T](Stream source) in C:\\code\\protobuf-net\\src\\protobuf-net\\Serializer.cs:line 70\n>\n> In addition, Client 2 threw this Exception (in a separate run from the\n> above):\n>\n> System.InvalidOperationException: Type is not expected, and no contract can be inferred: MessageObject\n>    at ProtoBuf.Meta.TypeModel.ThrowUnexpectedType(Type type)\n>    at ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType(ProtoReader reader, State& state, DataFormat format, Int32 tag, Type type, Object& value, Boolean skipOtherFields, Boolean asListItem, Boolean autoCreate, Boolean insideList, Object parentListOrType)\n>    at ProtoBuf.Meta.TypeModel.DeserializeAny(ProtoReader reader, State& state, Type type, Object value, Boolean noAutoCreate)\n>    at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context)\n>    at ProtoBuf.Serializer.Deserialize[T](Stream source)\n>\n> The objects in question are registered with protobuf-net's model using the\n> RuntimeTypeModel. They look like:\n>\n> class ClassA\n> {\n> \tpublic string PropertyOne { get; }\n>\n> \tprivate ClassA() { }\n> \tpublic ClassA(string propertyOne) => PropertyOne = propertyOne;\n> }\n>\n> class ClassB\n> {\n> \tpublic List<ClassA> ClassAs { get; }\n>\n> \tprivate ClassB() { }\n> \tpublic ClassB(List<ClassA> classAs) => ClassAs = classAs;\n> }\n>\n> class MessageObject\n> {\n> \tpublic DateTime Timestamp { get; }\n> \tpublic List<ClassB> ClassBs { get; }\n>\n> \tprivate MessageObject() { }\n>\n> \tpublic MessageObject(DateTime timestamp, List<ClassB> classBs)\n> \t{\n> \t\tTimestamp = timestamp;\n> \t\tClassBs = classBs;\n> \t}\n> }\n>\n> The registration of these objects looks like the below, and is called\n> before any deserialization is attempted.\n>\n> RuntimeTypeModel.Default.Add(typeof(ClassA), applyDefaultBehaviour: false)\n>     .Add(1, nameof(ClassA.PropertyOne))\n>     .UseConstructor = true;\n>\n> RuntimeTypeModel.Default.Add(typeof(ClassB), applyDefaultBehaviour: false)\n>     .Add(1, nameof(ClassB.ClassAs))\n>     .UseConstructor = true;\n>\n> RuntimeTypeModel.Default.Add(typeof(MessageObject), applyDefaultBehaviour: false)\n>     .Add(1, nameof(MessageObject.Timestamp))\n>     .Add(2, nameof(MessageObject.ClassBs))\n>     .UseConstructor = true;\n>\n> I've been using the code for these objects for around 6 months without\n> incident, so I'm a little stuck on how to proceed. I tried to look for the\n> code from the alpha.3 release, but I didn't see a tag for that (apologies\n> if I missed it!). It looks like possibly the code from the moar-state or\n> split-reader branches are along the right lines, but I'm not sure about\n> that.\n>\n> If I had to guess (based on the second exception), I'd think that the\n> registration of the classes somehow wasn't finished or wasn't done, but my\n> understanding is that those calls are synchronous, and I'm \"reasonably\n> sure\" that I called them before deserializing. Do either or both of those\n> exceptions make you think of something I could be doing wrong?\n>\n> Thanks very much for reading a long post!\n>\n> Mike Miller\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/483>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsLjDM9n76oifF4bkhWq-VMoQwGS4ks5vA7HJgaJpZM4Z0SKz>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/452082263",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/483#issuecomment-452082263",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/483",
        "id": 452082263,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjA4MjI2Mw==",
        "user": {
            "login": "mmillerbe",
            "id": 37117294,
            "node_id": "MDQ6VXNlcjM3MTE3Mjk0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/37117294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmillerbe",
            "html_url": "https://github.com/mmillerbe",
            "followers_url": "https://api.github.com/users/mmillerbe/followers",
            "following_url": "https://api.github.com/users/mmillerbe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmillerbe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmillerbe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmillerbe/subscriptions",
            "organizations_url": "https://api.github.com/users/mmillerbe/orgs",
            "repos_url": "https://api.github.com/users/mmillerbe/repos",
            "events_url": "https://api.github.com/users/mmillerbe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmillerbe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-07T21:08:02Z",
        "updated_at": "2019-01-07T21:08:02Z",
        "author_association": "NONE",
        "body": "@mgravell, thanks very much for the quick response and for taking a look!  Apologies for using pre-release software; I'll definitely use v2.4 going forward.  If I'm honest, I wasn't paying as much attention as I should, and VS showed the pre-release as the latest release.  \r\n\r\nThe messages were 396 and 400 bytes long.  Also, to be clear: everything works as expected almost all of the time, so don't go too crazy trying to reproduce.  I'd also be happy to do whatever testing you think would be helpful.\r\n\r\nThanks!\r\nMike"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/453130459",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/483#issuecomment-453130459",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/483",
        "id": 453130459,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzEzMDQ1OQ==",
        "user": {
            "login": "mmillerbe",
            "id": 37117294,
            "node_id": "MDQ6VXNlcjM3MTE3Mjk0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/37117294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmillerbe",
            "html_url": "https://github.com/mmillerbe",
            "followers_url": "https://api.github.com/users/mmillerbe/followers",
            "following_url": "https://api.github.com/users/mmillerbe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmillerbe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmillerbe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmillerbe/subscriptions",
            "organizations_url": "https://api.github.com/users/mmillerbe/orgs",
            "repos_url": "https://api.github.com/users/mmillerbe/repos",
            "events_url": "https://api.github.com/users/mmillerbe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmillerbe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-10T15:14:35Z",
        "updated_at": "2019-01-10T15:14:35Z",
        "author_association": "NONE",
        "body": "Hey @mgravell, just wanted to add some minor additional info here.  I saw one of the two above exceptions in some testing today when running against the 2.4.0 release (stack trace below).  I only saw the error in 1/10 runs, and I think that ratio will drop with subsequent runs.  It \"feels like\" a race or error in how I'm registering the types with the `RuntimeTypeModel`.  \r\n\r\nFor now, I'll probably just use attributes for those classes and remove the Runtime registration.  Let me know if there's any testing I could do.\r\n\r\nThanks again for your help!\r\n\r\nMike\r\n\r\n```\r\nSystem.InvalidOperationException: Type is not expected, and no contract can be inferred: MessageObject\r\n   at ProtoBuf.Meta.TypeModel.ThrowUnexpectedType(Type type)\r\n   at ProtoBuf.Meta.TypeModel.TryDeserializeAuxiliaryType(ProtoReader reader, DataFormat format, Int32 tag, Type type, Object& value, Boolean skipOtherFields, Boolean asListItem, Boolean autoCreate, Boolean insideList, Object parentListOrType)\r\n   at ProtoBuf.Meta.TypeModel.DeserializeCore(ProtoReader reader, Type type, Object value, Boolean noAutoCreate)\r\n   at ProtoBuf.Meta.TypeModel.Deserialize(Stream source, Object value, Type type, SerializationContext context)\r\n   at ProtoBuf.Serializer.Deserialize[T](Stream source)\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/453144725",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/483#issuecomment-453144725",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/483",
        "id": 453144725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE0NDcyNQ==",
        "user": {
            "login": "mmillerbe",
            "id": 37117294,
            "node_id": "MDQ6VXNlcjM3MTE3Mjk0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/37117294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mmillerbe",
            "html_url": "https://github.com/mmillerbe",
            "followers_url": "https://api.github.com/users/mmillerbe/followers",
            "following_url": "https://api.github.com/users/mmillerbe/following{/other_user}",
            "gists_url": "https://api.github.com/users/mmillerbe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mmillerbe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mmillerbe/subscriptions",
            "organizations_url": "https://api.github.com/users/mmillerbe/orgs",
            "repos_url": "https://api.github.com/users/mmillerbe/repos",
            "events_url": "https://api.github.com/users/mmillerbe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mmillerbe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-10T15:50:45Z",
        "updated_at": "2019-01-10T15:50:45Z",
        "author_association": "NONE",
        "body": "Sorry for the frequent posts, but one more follow-up from me.  Seeing the same exception in the official release made me go back over my networking code, and there was a case where I could start to receive data before the registration was finished.  I'm almost positive that's what happened, so there's no issue with protobuf-net, just my usage thereof.\r\n\r\nThanks again for talking it out with me and for providing the library!\r\n\r\nMike"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455780298",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/484#issuecomment-455780298",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/484",
        "id": 455780298,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4MDI5OA==",
        "user": {
            "login": "sumitsahrawat",
            "id": 5645741,
            "node_id": "MDQ6VXNlcjU2NDU3NDE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5645741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahrawat",
            "html_url": "https://github.com/sumitsahrawat",
            "followers_url": "https://api.github.com/users/sumitsahrawat/followers",
            "following_url": "https://api.github.com/users/sumitsahrawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahrawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahrawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahrawat/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahrawat/orgs",
            "repos_url": "https://api.github.com/users/sumitsahrawat/repos",
            "events_url": "https://api.github.com/users/sumitsahrawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahrawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-19T13:27:04Z",
        "updated_at": "2019-01-19T13:27:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "I should also mention that `protoc` also does the same."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455781057",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/484#issuecomment-455781057",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/484",
        "id": 455781057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4MTA1Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-19T13:38:28Z",
        "updated_at": "2019-01-19T13:38:28Z",
        "author_association": "OWNER",
        "body": "Yep, seems like a definite win. Will do.\n\nOn Sat, 19 Jan 2019, 13:27 Sumit Sahrawat <notifications@github.com wrote:\n\n> I should also mention that protoc also does the same.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/484#issuecomment-455780298>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsEkhlcgt8-Z9_oHxYj-HZIkts9Xfks5vEx0ogaJpZM4aCcis>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455841963",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/484#issuecomment-455841963",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/484",
        "id": 455841963,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg0MTk2Mw==",
        "user": {
            "login": "sumitsahrawat",
            "id": 5645741,
            "node_id": "MDQ6VXNlcjU2NDU3NDE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5645741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahrawat",
            "html_url": "https://github.com/sumitsahrawat",
            "followers_url": "https://api.github.com/users/sumitsahrawat/followers",
            "following_url": "https://api.github.com/users/sumitsahrawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahrawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahrawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahrawat/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahrawat/orgs",
            "repos_url": "https://api.github.com/users/sumitsahrawat/repos",
            "events_url": "https://api.github.com/users/sumitsahrawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahrawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-20T06:39:46Z",
        "updated_at": "2019-01-20T06:39:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell I have some time on my hands so I'll try to send in a PR today."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455849128",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/485#issuecomment-455849128",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/485",
        "id": 455849128,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg0OTEyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-20T09:05:17Z",
        "updated_at": "2019-01-20T09:06:03Z",
        "author_association": "OWNER",
        "body": "It looks to me like the c# closing tag isn't in a comment? I haven't tested it to see what happens (on mobile), but it looks suspect... (Line 139)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455849944",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/485#issuecomment-455849944",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/485",
        "id": 455849944,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg0OTk0NA==",
        "user": {
            "login": "sumitsahrawat",
            "id": 5645741,
            "node_id": "MDQ6VXNlcjU2NDU3NDE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5645741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahrawat",
            "html_url": "https://github.com/sumitsahrawat",
            "followers_url": "https://api.github.com/users/sumitsahrawat/followers",
            "following_url": "https://api.github.com/users/sumitsahrawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahrawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahrawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahrawat/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahrawat/orgs",
            "repos_url": "https://api.github.com/users/sumitsahrawat/repos",
            "events_url": "https://api.github.com/users/sumitsahrawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahrawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-20T09:18:32Z",
        "updated_at": "2019-01-20T09:18:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "Nice catch \ud83d\udc4d "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/455872369",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/485#issuecomment-455872369",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/485",
        "id": 455872369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg3MjM2OQ==",
        "user": {
            "login": "sumitsahrawat",
            "id": 5645741,
            "node_id": "MDQ6VXNlcjU2NDU3NDE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5645741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahrawat",
            "html_url": "https://github.com/sumitsahrawat",
            "followers_url": "https://api.github.com/users/sumitsahrawat/followers",
            "following_url": "https://api.github.com/users/sumitsahrawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahrawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahrawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahrawat/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahrawat/orgs",
            "repos_url": "https://api.github.com/users/sumitsahrawat/repos",
            "events_url": "https://api.github.com/users/sumitsahrawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahrawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-20T14:45:59Z",
        "updated_at": "2019-01-20T14:45:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "Had to commit for each file separately as I made those changes through the github web interface."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/456843273",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/485#issuecomment-456843273",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/485",
        "id": 456843273,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njg0MzI3Mw==",
        "user": {
            "login": "sumitsahrawat",
            "id": 5645741,
            "node_id": "MDQ6VXNlcjU2NDU3NDE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5645741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsahrawat",
            "html_url": "https://github.com/sumitsahrawat",
            "followers_url": "https://api.github.com/users/sumitsahrawat/followers",
            "following_url": "https://api.github.com/users/sumitsahrawat/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsahrawat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsahrawat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsahrawat/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsahrawat/orgs",
            "repos_url": "https://api.github.com/users/sumitsahrawat/repos",
            "events_url": "https://api.github.com/users/sumitsahrawat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsahrawat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-01-23T15:24:37Z",
        "updated_at": "2019-01-23T15:24:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mgravell This looks ready to merge after checking tests."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460058954",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/191#issuecomment-460058954",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/191",
        "id": 460058954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA1ODk1NA==",
        "user": {
            "login": "fengzhi09",
            "id": 22229659,
            "node_id": "MDQ6VXNlcjIyMjI5NjU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/22229659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fengzhi09",
            "html_url": "https://github.com/fengzhi09",
            "followers_url": "https://api.github.com/users/fengzhi09/followers",
            "following_url": "https://api.github.com/users/fengzhi09/following{/other_user}",
            "gists_url": "https://api.github.com/users/fengzhi09/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fengzhi09/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fengzhi09/subscriptions",
            "organizations_url": "https://api.github.com/users/fengzhi09/orgs",
            "repos_url": "https://api.github.com/users/fengzhi09/repos",
            "events_url": "https://api.github.com/users/fengzhi09/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fengzhi09/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-03T14:58:53Z",
        "updated_at": "2019-02-03T14:58:53Z",
        "author_association": "NONE",
        "body": "thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460343721",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/491#issuecomment-460343721",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/491",
        "id": 460343721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM0MzcyMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-04T17:47:55Z",
        "updated_at": "2019-02-04T17:47:55Z",
        "author_association": "OWNER",
        "body": "known oversight - the `__pbn__SomeGroup.Int32` (etc) needs some love - either a cast or a new `uint` getter; I'll try to look at that tomorrow"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460378803",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/491#issuecomment-460378803",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/491",
        "id": 460378803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM3ODgwMw==",
        "user": {
            "login": "xPaw",
            "id": 613331,
            "node_id": "MDQ6VXNlcjYxMzMzMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/613331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xPaw",
            "html_url": "https://github.com/xPaw",
            "followers_url": "https://api.github.com/users/xPaw/followers",
            "following_url": "https://api.github.com/users/xPaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/xPaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xPaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xPaw/subscriptions",
            "organizations_url": "https://api.github.com/users/xPaw/orgs",
            "repos_url": "https://api.github.com/users/xPaw/repos",
            "events_url": "https://api.github.com/users/xPaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xPaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-04T19:27:15Z",
        "updated_at": "2019-02-04T19:27:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Wasn't this fixed by #486?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460389713",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/491#issuecomment-460389713",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/491",
        "id": 460389713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDM4OTcxMw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-04T19:56:27Z",
        "updated_at": "2019-02-04T19:56:27Z",
        "author_association": "OWNER",
        "body": "Quite possibly indeed! I have some time set aside tomorrow when I should be\nable to verify, merge, test, deploy, etc a few things!\n\nLooks promising, anyways :)\n\nOn Mon, 4 Feb 2019, 19:27 Pavel Djundik, <notifications@github.com> wrote:\n\n> Wasn't this fixed by #486\n> <https://github.com/mgravell/protobuf-net/pull/486>?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/491#issuecomment-460378803>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsNhhqXCQSCA-uU11KjWR94a_wEpYks5vKImTgaJpZM4ahndq>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460617390",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/492#issuecomment-460617390",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/492",
        "id": 460617390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDYxNzM5MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-05T12:18:18Z",
        "updated_at": "2019-02-05T12:18:18Z",
        "author_association": "OWNER",
        "body": "\"does that sound correct?\" - possibly; I have some time reserved this\nevening for pb-net; I'll look then\n\nOn Tue, 5 Feb 2019, 11:50 Pavel Djundik, <notifications@github.com> wrote:\n\n> *@xPaw* commented on this pull request.\n> ------------------------------\n>\n> In src/protobuf-net.Reflection/CSharpCodeGenerator.cs\n> <https://github.com/mgravell/protobuf-net/pull/492#discussion_r253831996>:\n>\n> > +        protected override void WriteServiceFooter(GeneratorContext ctx, ServiceDescriptorProto service, ref object state)\n> +        {\n> +            ctx.Outdent().WriteLine(\"}\").WriteLine();\n> +        }\n> +        /// <summary>\n> +        /// Write a service method\n> +        /// </summary>\n> +        protected override void WriteServiceMethod(GeneratorContext ctx, MethodDescriptorProto method, ref object state)\n> +        {\n> +            var outputType = Escape(method.OutputType);\n> +            var inputType = Escape(method.InputType);\n> +\n> +            var target = ctx.TryFind<DescriptorProto>(method.OutputType);\n> +            if (target != null)\n> +            {\n> +                var declaringType = target.Parent;\n>\n> I used Parent from TryFind here, does that sound correct?\n>\n> I don't see any parents on service method directly.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/pull/492#pullrequestreview-200033241>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGO75Dqx1GTNc6UxFHA_8BImMOlAks5vKW_2gaJpZM4ai2ke>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/460959271",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/349#issuecomment-460959271",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/349",
        "id": 460959271,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk1OTI3MQ==",
        "user": {
            "login": "SandorJFejer",
            "id": 47382464,
            "node_id": "MDQ6VXNlcjQ3MzgyNDY0",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47382464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SandorJFejer",
            "html_url": "https://github.com/SandorJFejer",
            "followers_url": "https://api.github.com/users/SandorJFejer/followers",
            "following_url": "https://api.github.com/users/SandorJFejer/following{/other_user}",
            "gists_url": "https://api.github.com/users/SandorJFejer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SandorJFejer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SandorJFejer/subscriptions",
            "organizations_url": "https://api.github.com/users/SandorJFejer/orgs",
            "repos_url": "https://api.github.com/users/SandorJFejer/repos",
            "events_url": "https://api.github.com/users/SandorJFejer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SandorJFejer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-06T09:40:52Z",
        "updated_at": "2019-02-06T09:41:32Z",
        "author_association": "NONE",
        "body": "Hi,\r\n\r\nI tested the example code above (using versions 2.3.7 and 2.4.0) with the suggested change:\r\n```\r\n[ProtoContract(AsReferenceDefault = true)]\r\npublic class Person\r\n```\r\n\r\nBut the reference is still not maintained.\r\n\r\nAny idea? Thanks in advance."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461467270",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-461467270",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 461467270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTQ2NzI3MA==",
        "user": {
            "login": "cmccowan",
            "id": 7210714,
            "node_id": "MDQ6VXNlcjcyMTA3MTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7210714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cmccowan",
            "html_url": "https://github.com/cmccowan",
            "followers_url": "https://api.github.com/users/cmccowan/followers",
            "following_url": "https://api.github.com/users/cmccowan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cmccowan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cmccowan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cmccowan/subscriptions",
            "organizations_url": "https://api.github.com/users/cmccowan/orgs",
            "repos_url": "https://api.github.com/users/cmccowan/repos",
            "events_url": "https://api.github.com/users/cmccowan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cmccowan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-07T15:24:05Z",
        "updated_at": "2019-02-07T16:29:36Z",
        "author_association": "NONE",
        "body": "I found this restriction inexplicable too.  Apparently this restriction exists because of the way protobuf scopes the enum values.  They are not children of the specified enum itself, as you would expect.  They are all children of the enum type; therefore siblings to each other."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461503306",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-461503306",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 461503306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwMzMwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-07T16:40:09Z",
        "updated_at": "2019-02-07T16:40:09Z",
        "author_association": "OWNER",
        "body": "The problem here is that `protoc` chooses to use C-style rules for enums, presumably because they need to generate C/C++; which means they don't have scoping. Yes it is a pain point, but kinda one in `protoc` (and the .proto DSL, IMO). If you want your own enums to generate different names, you can do that via `[ProtoEnum(...)]` - it should use the provided name, so it can be `Unknown` in C#, and `FOO_UNKNOWN` in .proto; any use?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461505955",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-461505955",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 461505955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwNTk1NQ==",
        "user": {
            "login": "cmccowan",
            "id": 7210714,
            "node_id": "MDQ6VXNlcjcyMTA3MTQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/7210714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cmccowan",
            "html_url": "https://github.com/cmccowan",
            "followers_url": "https://api.github.com/users/cmccowan/followers",
            "following_url": "https://api.github.com/users/cmccowan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cmccowan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cmccowan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cmccowan/subscriptions",
            "organizations_url": "https://api.github.com/users/cmccowan/orgs",
            "repos_url": "https://api.github.com/users/cmccowan/repos",
            "events_url": "https://api.github.com/users/cmccowan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cmccowan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-07T16:47:23Z",
        "updated_at": "2019-02-07T16:47:23Z",
        "author_association": "NONE",
        "body": "Yes!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461508402",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-461508402",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 461508402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwODQwMg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-07T16:53:53Z",
        "updated_at": "2019-02-07T16:53:53Z",
        "author_association": "OWNER",
        "body": "The following shows the idea - but it has highlighted a bug which I will address (the default value):\r\n\r\n``` c#\r\nusing ProtoBuf;\r\n\r\nstatic class P\r\n{\r\n    static void Main()\r\n    {\r\n        System.Console.WriteLine(Serializer.GetProto<SomeContract>());\r\n    }\r\n}\r\n\r\n[ProtoContract]\r\nclass SomeContract\r\n{\r\n    [ProtoMember(1)]\r\n    public Foo Foo { get; set; } = Foo.Unknown;\r\n\r\n    [ProtoMember(2)]\r\n    public Bar Bar { get; set; } = Bar.Unknown;\r\n}\r\n[ProtoContract(Name = \"Whatever\")]\r\npublic enum Foo\r\n{\r\n    [ProtoEnum(Name = \"FOO_UNKNOWN\")]\r\n    Unknown,\r\n    [ProtoEnum(Name = \"FOO_A\")]\r\n    A,\r\n    [ProtoEnum(Name = \"FOO_B\")]\r\n    B,\r\n}\r\npublic enum Bar\r\n{\r\n    [ProtoEnum(Name = \"BAR_UNKNOWN\")]\r\n    Unknown,\r\n    [ProtoEnum(Name = \"BAR_C\")]\r\n    C,\r\n    [ProtoEnum(Name = \"BAR_D\")]\r\n    D,\r\n}\r\n```\r\n\r\nwhich generates:\r\n\r\n``` protobuf\r\nsyntax = \"proto2\";\r\n\r\nenum Bar {\r\n   BAR_UNKNOWN = 0;\r\n   BAR_C = 1;\r\n   BAR_D = 2;\r\n}\r\nmessage SomeContract {\r\n   optional Whatever Foo = 1 [default = Unknown];\r\n   optional Bar Bar = 2 [default = Unknown];\r\n}\r\nenum Whatever {\r\n   FOO_UNKNOWN = 0;\r\n   FOO_A = 1;\r\n   FOO_B = 2;\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461509160",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/60#issuecomment-461509160",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/60",
        "id": 461509160,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwOTE2MA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-07T16:55:47Z",
        "updated_at": "2019-02-07T16:56:01Z",
        "author_association": "OWNER",
        "body": "I would also be willing to consider some kind of \"prefix enum with name\" boolean, i.e. so if you have:\r\n\r\n``` c#\r\n[ProtoContract(PrefixEnumsWithName = true)]\r\npublic enum Foo\r\n{\r\n    Unknown,\r\n    A,\r\n    B,\r\n}\r\n```\r\n\r\nit generated:\r\n\r\n``` protobuf\r\nenum Foo {\r\n    Foo_Unknown = 0;\r\n    Foo_A = 1;\r\n    Foo_B = 2;\r\n}\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/461977100",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/494#issuecomment-461977100",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/494",
        "id": 461977100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTk3NzEwMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-08T23:04:18Z",
        "updated_at": "2019-02-08T23:04:18Z",
        "author_association": "OWNER",
        "body": "In protobuf, field numbers have to be positive - try 1, 2, 3 etc instead of\nzero.\n\nOn Fri, 8 Feb 2019, 21:32 Tyler Kvochick, <notifications@github.com> wrote:\n\n> Hi! I was trying a tiny example serialization after getting this exception\n> on my actual classes that I need to serialize.\n>\n> Exception is this:\n>\n> ProtoBuf.ProtoException: 'Specified argument was out of the range of valid values.\n> Parameter name: tag (TestApp.ProtoTest)'\n>\n> Inner Exception:\n> ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\n> Parameter name: tag\n>\n> Minimum viable code is this:\n>\n> namespace TestApp\n> {\n>     class Program\n>     {\n>          public void Main()\n>          {\n>              var pt = new ProtoTest(0x1);\n>\n>             SerializeProto(pt, filePath);\n>          }\n>\n>          static void SerializeProto(object thing, string filePath)\n>         {\n>             Console.WriteLine(\"Preserialization: \" + thing.ToString());\n>             var file = System.IO.File.Create(filePath);\n>             Serializer.Serialize(file, thing);\n>\n>             var inFile = System.IO.File.OpenRead(filePath);\n>             var dsrlFile = Serializer.Deserialize<File>(inFile);\n>             Console.WriteLine(\"Deserialization: \" + dsrlFile.ToString());\n>         }\n>     }\n>\n>     [ProtoContract]\n>     class ProtoTest\n>     {\n>         [ProtoMember(0)]\n>         public byte Val;\n>\n>         public ProtoTest()\n>         {\n>\n>         }\n>         public ProtoTest(byte v)\n>         {\n>             Val = v;\n>         }\n>     }\n> }\n>\n> I'm sure that I've missed something but this seems to match the demo in\n> the readme. Thanks!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/494>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGWCMQnUypKOa_n7syZ8Z0AFf2rgks5vLezwgaJpZM4axt4T>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/462942974",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/494#issuecomment-462942974",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/494",
        "id": 462942974,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjk0Mjk3NA==",
        "user": {
            "login": "tymokvo",
            "id": 12144028,
            "node_id": "MDQ6VXNlcjEyMTQ0MDI4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/12144028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tymokvo",
            "html_url": "https://github.com/tymokvo",
            "followers_url": "https://api.github.com/users/tymokvo/followers",
            "following_url": "https://api.github.com/users/tymokvo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tymokvo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tymokvo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tymokvo/subscriptions",
            "organizations_url": "https://api.github.com/users/tymokvo/orgs",
            "repos_url": "https://api.github.com/users/tymokvo/repos",
            "events_url": "https://api.github.com/users/tymokvo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tymokvo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-12T21:29:36Z",
        "updated_at": "2019-02-12T21:29:36Z",
        "author_association": "NONE",
        "body": "Yep, that was it. Thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/464460806",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/479#issuecomment-464460806",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/479",
        "id": 464460806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQ2MDgwNg==",
        "user": {
            "login": "Noah1911",
            "id": 827313,
            "node_id": "MDQ6VXNlcjgyNzMxMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/827313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Noah1911",
            "html_url": "https://github.com/Noah1911",
            "followers_url": "https://api.github.com/users/Noah1911/followers",
            "following_url": "https://api.github.com/users/Noah1911/following{/other_user}",
            "gists_url": "https://api.github.com/users/Noah1911/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Noah1911/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Noah1911/subscriptions",
            "organizations_url": "https://api.github.com/users/Noah1911/orgs",
            "repos_url": "https://api.github.com/users/Noah1911/repos",
            "events_url": "https://api.github.com/users/Noah1911/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Noah1911/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-17T14:00:47Z",
        "updated_at": "2019-02-17T14:01:11Z",
        "author_association": "NONE",
        "body": "Got same issue with bytes from ProtoReader:\r\n```\r\nT item = default;\r\n...\r\nusing (var ms = new MemoryStream(ProtoReader.AppendBytes(null, reader))) {\r\n    item = Serializer.Deserialize<T>(ms);\r\n}\r\n...\r\n```"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/464804879",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/479#issuecomment-464804879",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/479",
        "id": 464804879,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDgwNDg3OQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-18T16:43:10Z",
        "updated_at": "2019-02-18T16:44:12Z",
        "author_association": "OWNER",
        "body": "Eek, well that's a major problem! Will investigate as a top priority. Sorry, this skipped past my radar when it came in originally - filtering is tricky, and it arrived on Christmas day..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465456546",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465456546",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465456546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ1NjU0Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T07:24:37Z",
        "updated_at": "2019-02-20T07:24:37Z",
        "author_association": "OWNER",
        "body": "(note: edited issue body for formatting / markdown reasons)\r\n\r\nWhat is your third test case? Any specific value that you're failing with? A repro would be good here, i.e. what are the contents and position of the `memStream`?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465465314",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465465314",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465465314,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ2NTMxNA==",
        "user": {
            "login": "mite51",
            "id": 11327425,
            "node_id": "MDQ6VXNlcjExMzI3NDI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11327425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mite51",
            "html_url": "https://github.com/mite51",
            "followers_url": "https://api.github.com/users/mite51/followers",
            "following_url": "https://api.github.com/users/mite51/following{/other_user}",
            "gists_url": "https://api.github.com/users/mite51/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mite51/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mite51/subscriptions",
            "organizations_url": "https://api.github.com/users/mite51/orgs",
            "repos_url": "https://api.github.com/users/mite51/repos",
            "events_url": "https://api.github.com/users/mite51/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mite51/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T07:57:24Z",
        "updated_at": "2019-02-20T08:01:18Z",
        "author_association": "NONE",
        "body": "         Here's a simplified case that crashes for me.   \r\n\r\n```\r\n            byte[] buffer = new byte[BUFFER_SIZE];\r\n            MemoryStream ms = new MemoryStream(buffer);\r\n\r\n            int value = -1;\r\n\r\n            MemoryStream ms1 = new MemoryStream(buffer);\r\n            ProtoBuf.Serializer.Serialize(ms1, value);\r\n\r\n            MemoryStream ms2 = new MemoryStream(buffer, 0, sizeof(int));\r\n            int deserializedValue = ProtoBuf.Serializer.Deserialize<int>(ms2);\r\n```\r\n\r\n\r\nHowever, when I went to test the case for a positive value, it failed in a different way, said there was unread data. In getting that to function I noticed the ms1.Position after the value was writing was not what I was expecting, it was 2. Then I looked at the ms1.Position when value was negative, and it was 11. When I use this line instead:\r\n\r\n\r\n`MemoryStream ms2 = new MemoryStream(buffer,0, (int)ms1.Position);`\r\n\r\nIt works fine. If I'm writing an int value, I'm not sure how I can deserialize that if the size of the data it needs changes. Clearly there's something I'm not understanding.\r\n\r\n[edit] tried and failed to fix formatting."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465468487",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465468487",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465468487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ2ODQ4Nw==",
        "user": {
            "login": "mite51",
            "id": 11327425,
            "node_id": "MDQ6VXNlcjExMzI3NDI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11327425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mite51",
            "html_url": "https://github.com/mite51",
            "followers_url": "https://api.github.com/users/mite51/followers",
            "following_url": "https://api.github.com/users/mite51/following{/other_user}",
            "gists_url": "https://api.github.com/users/mite51/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mite51/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mite51/subscriptions",
            "organizations_url": "https://api.github.com/users/mite51/orgs",
            "repos_url": "https://api.github.com/users/mite51/repos",
            "events_url": "https://api.github.com/users/mite51/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mite51/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T08:08:29Z",
        "updated_at": "2019-02-20T08:10:29Z",
        "author_association": "NONE",
        "body": "Heres why I think I'm having this issue... I'm using protobut to send messages over the network.. \r\n\r\n```\r\n        public void SendToAllClients(NetMsg msg)\r\n        {\r\n            //protobuf-net http://wallaceturner.com/serialization-with-protobuf-net\r\n            byte[] buffer = new byte[BUFFER_SIZE];\r\n            MemoryStream ms = new MemoryStream(buffer);\r\n\r\n            uint typeHash = Netcode.Util.GetHash32(msg.GetType().FullName);//check that the type is registered\r\n\r\n            byte[] typeHashBytes = BitConverter.GetBytes(typeHash);\r\n\r\n            Serializer.Serialize(ms, typeHash);\r\n            Serializer.Serialize(ms, msg);\r\n...\r\n```\r\n\r\nAnd when I receive it, I do this...\r\n\r\n```\r\n        public void OnData(int connectionId, int channelId, int recHostId, byte[] recBuffer, int recBufferSize)\r\n        {\r\n            int sizeofTypeHash = sizeof(int) + 2;\r\n\r\n            MemoryStream ms = new MemoryStream(recBuffer, 0, sizeofTypeHash);\r\n\r\n            uint typeHash = ProtoBuf.Serializer.Deserialize<uint>(ms);\r\n\r\n            ms = new MemoryStream(recBuffer, sizeofTypeHash, recBufferSize - sizeofTypeHash);\r\n\r\n            Type msgType = MsgTypeRegistration.FindType(typeHash);\r\n...\r\n```\r\nI think I'll need to rethink this somehow.. \r\n\r\n* my 3rd test case was my 3rd message, and the hash had just happened to be negative ... before I switched to uint for the type hash to \"fix\" it\r\n\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465471887",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465471887",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465471887,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ3MTg4Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T08:20:04Z",
        "updated_at": "2019-02-20T08:20:04Z",
        "author_association": "OWNER",
        "body": "The error here is your code; this is fine, for example:\r\n\r\n            int value = -1;\r\n            MemoryStream ms = new MemoryStream();\r\n            ProtoBuf.Serializer.Serialize(ms, value);\r\n            ms.Position = 0;\r\n            int deserializedValue = ProtoBuf.Serializer.Deserialize<int>(ms);\r\n            System.Console.WriteLine(deserializedValue);\r\n\r\nThe problem is that you're assuming the size of the data - in particular here:\r\n\r\n    MemoryStream ms2 = new MemoryStream(buffer, 0, sizeof(int));\r\n\r\nYou're ignoring the *actual* serialized size - protobuf doesn't follow CPU encoding rules - it has very specific encoding rules instead.\r\n\r\nThere are two options in general:\r\n\r\n- if you are just consuming data to the end of a `Stream`, you can just use `Serialize`/`Deserialize`\r\n- otherwise, you'll need \"framing\"\r\n- if you have your own framing protocol: `ProtoReader` permits length-limited\r\n- otherwise, just use `SerializeWithLengthPrefix`/`DeserializeWithLengthPrefix` and let the lib add basic framing\r\n\r\nNote: the next \"major\" will add APIs specifically for buffer-based inputs rather than just `Stream`-based, but that is incomplete.\r\n\r\nI don't think there's anything for me to fix here."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465664549",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465664549",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465664549,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY2NDU0OQ==",
        "user": {
            "login": "mite51",
            "id": 11327425,
            "node_id": "MDQ6VXNlcjExMzI3NDI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11327425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mite51",
            "html_url": "https://github.com/mite51",
            "followers_url": "https://api.github.com/users/mite51/followers",
            "following_url": "https://api.github.com/users/mite51/following{/other_user}",
            "gists_url": "https://api.github.com/users/mite51/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mite51/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mite51/subscriptions",
            "organizations_url": "https://api.github.com/users/mite51/orgs",
            "repos_url": "https://api.github.com/users/mite51/repos",
            "events_url": "https://api.github.com/users/mite51/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mite51/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T16:57:08Z",
        "updated_at": "2019-02-20T16:57:08Z",
        "author_association": "NONE",
        "body": "Thanks a lot, I guess I should have known it likely was not a bug.. I will probably use SerializeWithLengthPrefix or just BitConverter for the typehash. \r\nOn a side note, I do find it unusual that a negative int would need 11 bytes, compared to 2 for a non negative. "
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/465668953",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-465668953",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 465668953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTY2ODk1Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T17:08:29Z",
        "updated_at": "2019-02-20T17:08:29Z",
        "author_association": "OWNER",
        "body": "that's a feature of \"varint\" encoding; in the more general case, you can do things like:\r\n\r\n``` c#\r\n[ProtoContract]\r\nclass Foo {\r\n    [ProtoMember(1, DataFormat = DataFormat.ZigZag)]\r\n    public int Bar {get;set;} // = -1 somewhere\r\n}\r\n```\r\n\r\nand it will be much more efficient"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/466625512",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-466625512",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 466625512,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjYyNTUxMg==",
        "user": {
            "login": "mite51",
            "id": 11327425,
            "node_id": "MDQ6VXNlcjExMzI3NDI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11327425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mite51",
            "html_url": "https://github.com/mite51",
            "followers_url": "https://api.github.com/users/mite51/followers",
            "following_url": "https://api.github.com/users/mite51/following{/other_user}",
            "gists_url": "https://api.github.com/users/mite51/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mite51/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mite51/subscriptions",
            "organizations_url": "https://api.github.com/users/mite51/orgs",
            "repos_url": "https://api.github.com/users/mite51/repos",
            "events_url": "https://api.github.com/users/mite51/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mite51/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-23T07:30:59Z",
        "updated_at": "2019-02-23T07:30:59Z",
        "author_association": "NONE",
        "body": "Everything is working much better now that I understand what I did not before... Thanks for your help."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/466631596",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/497#issuecomment-466631596",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/497",
        "id": 466631596,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjYzMTU5Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-23T09:06:48Z",
        "updated_at": "2019-02-23T09:06:48Z",
        "author_association": "OWNER",
        "body": "K, closing."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/467862795",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/477#issuecomment-467862795",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/477",
        "id": 467862795,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzg2Mjc5NQ==",
        "user": {
            "login": "stasberkov",
            "id": 4071534,
            "node_id": "MDQ6VXNlcjQwNzE1MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4071534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stasberkov",
            "html_url": "https://github.com/stasberkov",
            "followers_url": "https://api.github.com/users/stasberkov/followers",
            "following_url": "https://api.github.com/users/stasberkov/following{/other_user}",
            "gists_url": "https://api.github.com/users/stasberkov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stasberkov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stasberkov/subscriptions",
            "organizations_url": "https://api.github.com/users/stasberkov/orgs",
            "repos_url": "https://api.github.com/users/stasberkov/repos",
            "events_url": "https://api.github.com/users/stasberkov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stasberkov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-27T13:32:23Z",
        "updated_at": "2019-02-27T13:32:23Z",
        "author_association": "NONE",
        "body": "Can you please publish/release a new version? I am having troubles building the project from sources: `protobuf-net-master\\src\\protobuf-net\\protobuf-net.csproj : error MSB4057: The target \"_GetRestoreSettingsPerFramework\" does not exist in the project.`"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/467901950",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/477#issuecomment-467901950",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/477",
        "id": 467901950,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzkwMTk1MA==",
        "user": {
            "login": "stasberkov",
            "id": 4071534,
            "node_id": "MDQ6VXNlcjQwNzE1MzQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4071534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stasberkov",
            "html_url": "https://github.com/stasberkov",
            "followers_url": "https://api.github.com/users/stasberkov/followers",
            "following_url": "https://api.github.com/users/stasberkov/following{/other_user}",
            "gists_url": "https://api.github.com/users/stasberkov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stasberkov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stasberkov/subscriptions",
            "organizations_url": "https://api.github.com/users/stasberkov/orgs",
            "repos_url": "https://api.github.com/users/stasberkov/repos",
            "events_url": "https://api.github.com/users/stasberkov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stasberkov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-27T15:18:10Z",
        "updated_at": "2019-02-27T15:18:10Z",
        "author_association": "NONE",
        "body": "Setting\r\n```\r\n  \"msbuild-sdks\": {\r\n    \"MSBuild.Sdk.Extras\": \"1.6.68\"\r\n  }\r\n```\r\nin `global.json` fixed the build issue."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/473084718",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-473084718",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 473084718,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA4NDcxOA==",
        "user": {
            "login": "OptrixAU",
            "id": 10553088,
            "node_id": "MDQ6VXNlcjEwNTUzMDg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10553088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OptrixAU",
            "html_url": "https://github.com/OptrixAU",
            "followers_url": "https://api.github.com/users/OptrixAU/followers",
            "following_url": "https://api.github.com/users/OptrixAU/following{/other_user}",
            "gists_url": "https://api.github.com/users/OptrixAU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OptrixAU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OptrixAU/subscriptions",
            "organizations_url": "https://api.github.com/users/OptrixAU/orgs",
            "repos_url": "https://api.github.com/users/OptrixAU/repos",
            "events_url": "https://api.github.com/users/OptrixAU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OptrixAU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-14T22:09:12Z",
        "updated_at": "2019-03-14T22:09:12Z",
        "author_association": "NONE",
        "body": "Using it as a library has issues for cross-platform use - Unity only uses the latest version of .NET on WIndows platforms. Otherwise, you're restricted to .NET 2.0 via MONO on Linux and MacOS, and nothing at all of WebGL, IOS and Android platforms.\r\n\r\nAdding the source however allows it to operate on every platform."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/473088262",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/399#issuecomment-473088262",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/399",
        "id": 473088262,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzA4ODI2Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-14T22:21:45Z",
        "updated_at": "2019-03-14T22:21:45Z",
        "author_association": "OWNER",
        "body": "That's all well and good, but the usage of latest-C#-version features is likely to increase, not decrease, especially as I try to finish up the \"span\"/\"sequence\" work. There are language features in C#7/8 specifically for these scenarios - features that I kinda want.\r\n\r\nSo: it would be a *massive* problem to restrict language version, at least for the core lib. For generated code (protogen), sure: down-level is fine. I would still rather focus on what target platforms can be maintained to allow it to be used effectively *as a library*, if unity isn't going to use an up-to-date compiler."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/473104185",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/503#issuecomment-473104185",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/503",
        "id": 473104185,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzEwNDE4NQ==",
        "user": {
            "login": "OptrixAU",
            "id": 10553088,
            "node_id": "MDQ6VXNlcjEwNTUzMDg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10553088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OptrixAU",
            "html_url": "https://github.com/OptrixAU",
            "followers_url": "https://api.github.com/users/OptrixAU/followers",
            "following_url": "https://api.github.com/users/OptrixAU/following{/other_user}",
            "gists_url": "https://api.github.com/users/OptrixAU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OptrixAU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OptrixAU/subscriptions",
            "organizations_url": "https://api.github.com/users/OptrixAU/orgs",
            "repos_url": "https://api.github.com/users/OptrixAU/repos",
            "events_url": "https://api.github.com/users/OptrixAU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OptrixAU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-14T23:31:46Z",
        "updated_at": "2019-03-14T23:31:46Z",
        "author_association": "NONE",
        "body": "Ahh, just noticed the Precompile option, which I'm assuming takes all of the runtime issues away.\r\n\r\nI'll start exploring it right now."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/473134651",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/503#issuecomment-473134651",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/503",
        "id": 473134651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzEzNDY1MQ==",
        "user": {
            "login": "OptrixAU",
            "id": 10553088,
            "node_id": "MDQ6VXNlcjEwNTUzMDg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10553088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OptrixAU",
            "html_url": "https://github.com/OptrixAU",
            "followers_url": "https://api.github.com/users/OptrixAU/followers",
            "following_url": "https://api.github.com/users/OptrixAU/following{/other_user}",
            "gists_url": "https://api.github.com/users/OptrixAU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OptrixAU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OptrixAU/subscriptions",
            "organizations_url": "https://api.github.com/users/OptrixAU/orgs",
            "repos_url": "https://api.github.com/users/OptrixAU/repos",
            "events_url": "https://api.github.com/users/OptrixAU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OptrixAU/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-15T02:22:10Z",
        "updated_at": "2019-03-15T02:22:10Z",
        "author_association": "NONE",
        "body": "OK - we can't build Precompile right now because there isn't an IKVM version of the protobuf.net library, which I assume you disposed of when they stopped maintaining the IKVM project and threw Precompile in to the 'additional' folder.\r\n\r\nHowever, it's still available as a Nuget package. Should it be possible to throw the IKVM.Reflection library in as a replacement to System.Reflection and get Precompile back up and running? \r\n\r\nOr is there anywhere I can track down an old, binary build of Precompile along with its various libraries?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/473189037",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/503#issuecomment-473189037",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/503",
        "id": 473189037,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE4OTAzNw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-15T07:43:55Z",
        "updated_at": "2019-03-15T07:43:55Z",
        "author_association": "OWNER",
        "body": "Precompile probably worked way back in r668.\r\n\r\nMy plan is to revisit a lot of this for V3, but to date: I simply haven't found the time to get this implemented - competing priorities, etc, and ultimately every minute here comes from my own personal time."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/479322881",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/503#issuecomment-479322881",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/503",
        "id": 479322881,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTMyMjg4MQ==",
        "user": {
            "login": "michaldobrodenka",
            "id": 2361931,
            "node_id": "MDQ6VXNlcjIzNjE5MzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2361931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaldobrodenka",
            "html_url": "https://github.com/michaldobrodenka",
            "followers_url": "https://api.github.com/users/michaldobrodenka/followers",
            "following_url": "https://api.github.com/users/michaldobrodenka/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaldobrodenka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaldobrodenka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaldobrodenka/subscriptions",
            "organizations_url": "https://api.github.com/users/michaldobrodenka/orgs",
            "repos_url": "https://api.github.com/users/michaldobrodenka/repos",
            "events_url": "https://api.github.com/users/michaldobrodenka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaldobrodenka/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-03T03:37:55Z",
        "updated_at": "2019-04-03T03:38:53Z",
        "author_association": "NONE",
        "body": "I just switched to precompile using version 2.3.17. It is working :) (Precompile is a little older I think, but it is using 2.3.17 version of protobuf-net)\r\n\r\nI had to do it, runtime model creation took 50 seconds to complete (slow ARM computer). This allowed me also turning on AOT on Android, drastically increased startup speed."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/482584506",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/508#issuecomment-482584506",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/508",
        "id": 482584506,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjU4NDUwNg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-12T13:57:55Z",
        "updated_at": "2019-04-12T13:57:55Z",
        "author_association": "OWNER",
        "body": "The syntax is deliberately identical to \"protoc\". What does the error\nmessage say, exactly?\n\nOn Fri, 12 Apr 2019, 09:03 zj1015723131, <notifications@github.com> wrote:\n\n> I don't know how to use the protogen command in CMD?\n> eg: \"protogen -i:test.proto -0:test.cs \" ,but it is failed .I hope you can\n> help me,Thanks\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mgravell/protobuf-net/issues/508>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABDsGoHWSLbVuSlY0Uci4TVq2Ee7HYmks5vgD23gaJpZM4crjhk>\n> .\n>\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/485792849",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/504#issuecomment-485792849",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/504",
        "id": 485792849,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTc5Mjg0OQ==",
        "user": {
            "login": "diegobfernandez",
            "id": 2291571,
            "node_id": "MDQ6VXNlcjIyOTE1NzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2291571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diegobfernandez",
            "html_url": "https://github.com/diegobfernandez",
            "followers_url": "https://api.github.com/users/diegobfernandez/followers",
            "following_url": "https://api.github.com/users/diegobfernandez/following{/other_user}",
            "gists_url": "https://api.github.com/users/diegobfernandez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diegobfernandez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diegobfernandez/subscriptions",
            "organizations_url": "https://api.github.com/users/diegobfernandez/orgs",
            "repos_url": "https://api.github.com/users/diegobfernandez/repos",
            "events_url": "https://api.github.com/users/diegobfernandez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diegobfernandez/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-23T13:01:45Z",
        "updated_at": "2019-04-23T13:01:45Z",
        "author_association": "NONE",
        "body": "Nice! I really need this given pluralization in Portuguese is very innacurate."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/487357038",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/508#issuecomment-487357038",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/508",
        "id": 487357038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzM1NzAzOA==",
        "user": {
            "login": "raul-gherman",
            "id": 24805963,
            "node_id": "MDQ6VXNlcjI0ODA1OTYz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/24805963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raul-gherman",
            "html_url": "https://github.com/raul-gherman",
            "followers_url": "https://api.github.com/users/raul-gherman/followers",
            "following_url": "https://api.github.com/users/raul-gherman/following{/other_user}",
            "gists_url": "https://api.github.com/users/raul-gherman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raul-gherman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raul-gherman/subscriptions",
            "organizations_url": "https://api.github.com/users/raul-gherman/orgs",
            "repos_url": "https://api.github.com/users/raul-gherman/repos",
            "events_url": "https://api.github.com/users/raul-gherman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raul-gherman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-28T08:22:08Z",
        "updated_at": "2019-04-28T08:22:08Z",
        "author_association": "NONE",
        "body": "protogen.exe myProtoFile.proto --csharp_out=.\\"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490639756",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/500#issuecomment-490639756",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/500",
        "id": 490639756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDYzOTc1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:31:37Z",
        "updated_at": "2019-05-08T20:31:37Z",
        "author_association": "OWNER",
        "body": "Thanks for the fix - much appreciated"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490640993",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490640993",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490640993,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0MDk5Mw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:35:19Z",
        "updated_at": "2019-05-08T20:35:19Z",
        "author_association": "OWNER",
        "body": "First, sorry for the delay - I got tied up with things!\r\n\r\nI really like the idea of this, and I see what it is doing. Nice approach. I'm a little cautious, however, that this depends on the internal `decimal` layout in ways that will be really hard for us to be absolutely sure about in a x-plat way. Maybe I'm being paranoid, or maybe I need to think more.\r\n\r\nDefinitely interested in this, I'm just... cautious. Let me ponder on it a bit (more)"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490641367",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/507#issuecomment-490641367",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/507",
        "id": 490641367,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0MTM2Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:36:25Z",
        "updated_at": "2019-05-08T20:36:25Z",
        "author_association": "OWNER",
        "body": "Makes sense to me; thanks for the code!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490641625",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/510#issuecomment-490641625",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/510",
        "id": 490641625,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0MTYyNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:37:16Z",
        "updated_at": "2019-05-08T20:37:16Z",
        "author_association": "OWNER",
        "body": "seems legit - thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490642078",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/504#issuecomment-490642078",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/504",
        "id": 490642078,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0MjA3OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:38:35Z",
        "updated_at": "2019-05-08T20:38:35Z",
        "author_association": "OWNER",
        "body": "Seems reasonable and solves a range of problems - thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490647201",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/512#issuecomment-490647201",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/512",
        "id": 490647201,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0NzIwMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:54:11Z",
        "updated_at": "2019-05-08T20:54:11Z",
        "author_association": "OWNER",
        "body": "I really like this; looks good to me, merging - thanks muchly"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490647418",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/512#issuecomment-490647418",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/512",
        "id": 490647418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0NzQxOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:54:56Z",
        "updated_at": "2019-05-08T20:54:56Z",
        "author_association": "OWNER",
        "body": "oh, apparently there's a merge conflict - I'll try and get to that"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490647998",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/492#issuecomment-490647998",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/492",
        "id": 490647998,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY0Nzk5OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T20:56:50Z",
        "updated_at": "2019-05-08T20:56:50Z",
        "author_association": "OWNER",
        "body": "reason I'm a bit stalled on merging this one is that I'm also looking at gRPC - might need to enable this as a switched thing with different outputs; basic implementation looks good, though. Keeping this in mind but on a back burner while I spin multiple plates"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490659882",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/485#issuecomment-490659882",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/485",
        "id": 490659882,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY1OTg4Mg==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T21:36:06Z",
        "updated_at": "2019-05-08T21:36:06Z",
        "author_association": "OWNER",
        "body": "Merged, thanks"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490660858",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490660858",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490660858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY2MDg1OA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T21:39:30Z",
        "updated_at": "2019-05-08T21:39:30Z",
        "author_association": "OWNER",
        "body": "I think what we need here is a sentinel test and fallback, so:\r\n\r\n```\r\nstatic readonly book s_optimized = VerifyLayout();\r\n```\r\n\r\nAnd check the bool in the code, using the fast version or old code respectively. The JIT now recognizes this pattern and can remove the test from the runtime code, at least on new .NET Core\r\n\r\nThe verification sentinel should be a known value that tests all the fields with no zero bytes (unless they are required to be zero), and no duplicates. If the values are as expected: we're all golden.\r\n\r\nThoughts?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490668414",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/512#issuecomment-490668414",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/512",
        "id": 490668414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY2ODQxNA==",
        "user": {
            "login": "paulhickman-a365",
            "id": 13047235,
            "node_id": "MDQ6VXNlcjEzMDQ3MjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13047235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulhickman-a365",
            "html_url": "https://github.com/paulhickman-a365",
            "followers_url": "https://api.github.com/users/paulhickman-a365/followers",
            "following_url": "https://api.github.com/users/paulhickman-a365/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulhickman-a365/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulhickman-a365/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulhickman-a365/subscriptions",
            "organizations_url": "https://api.github.com/users/paulhickman-a365/orgs",
            "repos_url": "https://api.github.com/users/paulhickman-a365/repos",
            "events_url": "https://api.github.com/users/paulhickman-a365/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulhickman-a365/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T22:07:00Z",
        "updated_at": "2019-05-08T22:07:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "It looks a trivial conflict - master has a new \"private readonly\" on the declaration of rootTail."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490692757",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/342#issuecomment-490692757",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/342",
        "id": 490692757,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDY5Mjc1Nw==",
        "user": {
            "login": "paulhickman-a365",
            "id": 13047235,
            "node_id": "MDQ6VXNlcjEzMDQ3MjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13047235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulhickman-a365",
            "html_url": "https://github.com/paulhickman-a365",
            "followers_url": "https://api.github.com/users/paulhickman-a365/followers",
            "following_url": "https://api.github.com/users/paulhickman-a365/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulhickman-a365/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulhickman-a365/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulhickman-a365/subscriptions",
            "organizations_url": "https://api.github.com/users/paulhickman-a365/orgs",
            "repos_url": "https://api.github.com/users/paulhickman-a365/repos",
            "events_url": "https://api.github.com/users/paulhickman-a365/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulhickman-a365/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-08T23:54:23Z",
        "updated_at": "2019-05-08T23:54:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "The \"register surrogate by convention\" suggestion is very similar to what dependency injection libraries face when deciding whether to implement registering implementations of interfaces by convention.\r\n\r\nI like the approach of SimpleInjector here: instead of implementing a fixed convention that is baked into the library, include documentation of how to scan an assembly and use it with the RuntimeTypeModel API (see https://simpleinjector.readthedocs.io/en/latest/advanced.html#batch-registration for their documentation and justification of this approach).\r\n\r\nThe same approach could then be generalised for any configuration made through the RuntimeTypeModel - not just surrogates - e.g. decide whether to make a type passed AsReference by convention.\r\n"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490782828",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490782828",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490782828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDc4MjgyOA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T07:32:35Z",
        "updated_at": "2019-05-09T07:32:35Z",
        "author_association": "OWNER",
        "body": "Manually merged with the extra check added - seems good, thanks!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490801459",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490801459",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490801459,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDgwMTQ1OQ==",
        "user": {
            "login": "szehetner",
            "id": 32911487,
            "node_id": "MDQ6VXNlcjMyOTExNDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32911487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szehetner",
            "html_url": "https://github.com/szehetner",
            "followers_url": "https://api.github.com/users/szehetner/followers",
            "following_url": "https://api.github.com/users/szehetner/following{/other_user}",
            "gists_url": "https://api.github.com/users/szehetner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szehetner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szehetner/subscriptions",
            "organizations_url": "https://api.github.com/users/szehetner/orgs",
            "repos_url": "https://api.github.com/users/szehetner/repos",
            "events_url": "https://api.github.com/users/szehetner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szehetner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T08:14:52Z",
        "updated_at": "2019-05-09T08:14:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks, yes the extra check makes sense, even though the layout is unlikely to change.\r\n\r\nBTW, I think the same pattern could be used for WriteGuid to avoid the Guid.ToByteArray() call, but I haven't looked at that in detail."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490841967",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490841967",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490841967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg0MTk2Nw==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T10:05:36Z",
        "updated_at": "2019-05-09T10:05:36Z",
        "author_association": "OWNER",
        "body": "I agree that the layout is **extremely** unlikely to ever be wrong, but: my head hurts too much at the idea of checking each combination of CPU-endianness of different OSes with each framework/runtime. So it is easier to add the test :)\r\n\r\nGood spot on `Guid` - I'll hack that in a bit quick..."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490866056",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490866056",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490866056,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg2NjA1Ng==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T11:31:38Z",
        "updated_at": "2019-05-09T11:31:38Z",
        "author_association": "OWNER",
        "body": "Here's the guid code, if you're interested: https://github.com/mgravell/protobuf-net/commit/6e57ce00deedc8db4e4196a37ae2a675a112e913"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490870530",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490870530",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490870530,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg3MDUzMA==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T11:47:53Z",
        "updated_at": "2019-05-09T11:48:20Z",
        "author_association": "OWNER",
        "body": "actually, made it a *lot* simpler now; it may turn out to be non-optimized on exotic CPUs, but: I'm OK with this: https://github.com/mgravell/protobuf-net/commit/a4311c7fcb44d7cb47bb9772d5f18d2a5663c662"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490884981",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490884981",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490884981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg4NDk4MQ==",
        "user": {
            "login": "szehetner",
            "id": 32911487,
            "node_id": "MDQ6VXNlcjMyOTExNDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32911487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szehetner",
            "html_url": "https://github.com/szehetner",
            "followers_url": "https://api.github.com/users/szehetner/followers",
            "following_url": "https://api.github.com/users/szehetner/following{/other_user}",
            "gists_url": "https://api.github.com/users/szehetner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szehetner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szehetner/subscriptions",
            "organizations_url": "https://api.github.com/users/szehetner/orgs",
            "repos_url": "https://api.github.com/users/szehetner/repos",
            "events_url": "https://api.github.com/users/szehetner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szehetner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T12:36:22Z",
        "updated_at": "2019-05-09T12:36:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, looks good for Guids now as well.\r\n\r\nJust out of interest, how does this JIT optimization work? Does it mean that if the JIT sees a `static readonly _field = Init()` it can assume that because the field is readonly it won't change any more so it can treat it like a constant and in methods jitted after the field was initialized it can eliminate branches depending on it? \r\nI knew the JIT could eliminate code based on constants and some generic type checks, but not based on the result of methods, i.e. information only known at runtime. If it can do that now, that opens up a few interesting optimization possibilities."
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490891585",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490891585",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490891585,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg5MTU4NQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T12:54:36Z",
        "updated_at": "2019-05-09T12:55:52Z",
        "author_association": "OWNER",
        "body": "Yes, this is now a thing in .NET Core 3 - it used to just impact things that mapped to code implementations like BitConverter.IsLittleEndian, Vector.IsHardwareAccelerated, but now the JIT does this for readonly static fields too, as long as they are initialized in the right way, which comes down to the `beforefieldinit` flag, as I understand it. As a consequence:\r\n\r\n- static field initializer: good\r\n- static constructor: bad\r\n\r\nThis ties into a related change where you now **cannot** use reflection to change the value of a static readonly field, as there's a good chance that the running code won't see it - depending on whether the JIT has already run.\r\n\r\nIIRC it can also do some de-virtualizing of calls, based on using the runtime type of an object rather than the declared type - I haven't played with this, but things like:\r\n\r\n``` c#\r\nstatic readonly SomeBaseType s_whatever = new SomeConcreteType();\r\n...\r\ns_whatever.SomeVirtualMethod();\r\n```\r\n\r\nthis should now be able to devirtualize to `SomeConcreteType.SomeVirtualMethod` as though it used `call` instead of `callvirt` - because `s_whatever` will *never* be anything other than a `SomeConcreteType`.\r\n\r\nMake sense?"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490893345",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490893345",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490893345,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg5MzM0NQ==",
        "user": {
            "login": "szehetner",
            "id": 32911487,
            "node_id": "MDQ6VXNlcjMyOTExNDg3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/32911487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szehetner",
            "html_url": "https://github.com/szehetner",
            "followers_url": "https://api.github.com/users/szehetner/followers",
            "following_url": "https://api.github.com/users/szehetner/following{/other_user}",
            "gists_url": "https://api.github.com/users/szehetner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szehetner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szehetner/subscriptions",
            "organizations_url": "https://api.github.com/users/szehetner/orgs",
            "repos_url": "https://api.github.com/users/szehetner/repos",
            "events_url": "https://api.github.com/users/szehetner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szehetner/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T12:59:22Z",
        "updated_at": "2019-05-09T12:59:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, makes sense. Thanks for the explanation!"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/490894201",
        "html_url": "https://github.com/mgravell/protobuf-net/pull/462#issuecomment-490894201",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/462",
        "id": 490894201,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDg5NDIwMQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-09T13:01:42Z",
        "updated_at": "2019-05-09T13:01:42Z",
        "author_association": "OWNER",
        "body": "here's one half of this (the devirtualization stuff): https://github.com/dotnet/coreclr/pull/20886"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/491130041",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/515#issuecomment-491130041",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/515",
        "id": 491130041,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTEzMDA0MQ==",
        "user": {
            "login": "fenghaiyang1121",
            "id": 22760529,
            "node_id": "MDQ6VXNlcjIyNzYwNTI5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22760529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fenghaiyang1121",
            "html_url": "https://github.com/fenghaiyang1121",
            "followers_url": "https://api.github.com/users/fenghaiyang1121/followers",
            "following_url": "https://api.github.com/users/fenghaiyang1121/following{/other_user}",
            "gists_url": "https://api.github.com/users/fenghaiyang1121/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fenghaiyang1121/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fenghaiyang1121/subscriptions",
            "organizations_url": "https://api.github.com/users/fenghaiyang1121/orgs",
            "repos_url": "https://api.github.com/users/fenghaiyang1121/repos",
            "events_url": "https://api.github.com/users/fenghaiyang1121/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fenghaiyang1121/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-10T02:18:39Z",
        "updated_at": "2019-05-10T02:18:39Z",
        "author_association": "NONE",
        "body": "![20215437-E2FE-4056-8968-6D97385071EC](https://user-images.githubusercontent.com/22760529/57498071-f3499b80-730c-11e9-8d3a-e2e18f04f124.png)\r\n\u8fd0\u884c\u62a5\u9519\u56fe"
    },
    {
        "url": "https://api.github.com/repos/mgravell/protobuf-net/issues/comments/491181125",
        "html_url": "https://github.com/mgravell/protobuf-net/issues/515#issuecomment-491181125",
        "issue_url": "https://api.github.com/repos/mgravell/protobuf-net/issues/515",
        "id": 491181125,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTE4MTEyNQ==",
        "user": {
            "login": "mgravell",
            "id": 17328,
            "node_id": "MDQ6VXNlcjE3MzI4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/17328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgravell",
            "html_url": "https://github.com/mgravell",
            "followers_url": "https://api.github.com/users/mgravell/followers",
            "following_url": "https://api.github.com/users/mgravell/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgravell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgravell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgravell/subscriptions",
            "organizations_url": "https://api.github.com/users/mgravell/orgs",
            "repos_url": "https://api.github.com/users/mgravell/repos",
            "events_url": "https://api.github.com/users/mgravell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgravell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-10T07:06:01Z",
        "updated_at": "2019-05-10T07:06:01Z",
        "author_association": "OWNER",
        "body": "What library version are you using, so I can check what this is doing?"
    }
]