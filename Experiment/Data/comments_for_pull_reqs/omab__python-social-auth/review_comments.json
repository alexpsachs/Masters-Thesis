[
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/17827848",
        "pull_request_review_id": null,
        "id": 17827848,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODI3ODQ4",
        "diff_hunk": "@@ -32,10 +32,22 @@ def shopifyAPI(self):\n     def get_user_details(self, response):\n         \"\"\"Use the shopify store name as the username\"\"\"\n         return {\n-            'username': six.text_type(response.get('shop', ''), 'utf-8')\n+            'username': six.text_type(response.get('shop', ''))\n                                 .replace('.myshopify.com', '')\n         }\n \n+\n+    def extra_data(self, user, uid, response, details=None):\n+        \"\"\"Return access_token and extra defined names to store in\n+        extra_data field\"\"\"\n+        data = super(BaseOAuth2, self).extra_data(user, uid, response, details)",
        "path": "social/backends/shopify.py",
        "position": null,
        "original_position": 13,
        "commit_id": "7b413e85fdfe78976a36190cb2db324664479fa5",
        "original_commit_id": "a1886b0f88bf3e936d050f6ab67a7d171994876a",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Skipping a class?\n",
        "created_at": "2014-09-21T20:14:22Z",
        "updated_at": "2014-09-23T08:27:38Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/386#discussion_r17827848",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/386",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/17827848"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/386#discussion_r17827848"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/386"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19578212",
        "pull_request_review_id": null,
        "id": 19578212,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTc4MjEy",
        "diff_hunk": "@@ -5,12 +5,16 @@\n import social.apps.django_app.default.fields\n from django.conf import settings\n import social.storage.django_orm\n+from social.utils import setting_name\n \n+user_model = getattr(settings, setting_name('USER_MODEL'), None) or \\\n+             getattr(settings, 'AUTH_USER_MODE', None) or \\",
        "path": "social/apps/django_app/default/migrations/0001_initial.py",
        "position": 7,
        "original_position": 7,
        "commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "original_commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "user": {
            "login": "mgalgs",
            "id": 152014,
            "node_id": "MDQ6VXNlcjE1MjAxNA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/152014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgalgs",
            "html_url": "https://github.com/mgalgs",
            "followers_url": "https://api.github.com/users/mgalgs/followers",
            "following_url": "https://api.github.com/users/mgalgs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgalgs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgalgs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgalgs/subscriptions",
            "organizations_url": "https://api.github.com/users/mgalgs/orgs",
            "repos_url": "https://api.github.com/users/mgalgs/repos",
            "events_url": "https://api.github.com/users/mgalgs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgalgs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this supposed to be AUTH_USER_MODEL?\n",
        "created_at": "2014-10-29T22:51:02Z",
        "updated_at": "2014-10-29T22:51:02Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/422#discussion_r19578212",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/422",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19578212"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/422#discussion_r19578212"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19708909",
        "pull_request_review_id": null,
        "id": 19708909,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA4OTA5",
        "diff_hunk": "@@ -5,12 +5,16 @@\n import social.apps.django_app.default.fields\n from django.conf import settings\n import social.storage.django_orm\n+from social.utils import setting_name\n \n+user_model = getattr(settings, setting_name('USER_MODEL'), None) or \\\n+             getattr(settings, 'AUTH_USER_MODE', None) or \\",
        "path": "social/apps/django_app/default/migrations/0001_initial.py",
        "position": 7,
        "original_position": 7,
        "commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "original_commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's the setting name to override the Django built-in user model.\n",
        "created_at": "2014-11-02T00:34:32Z",
        "updated_at": "2014-11-02T00:34:32Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/422#discussion_r19708909",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/422",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19708909"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/422#discussion_r19708909"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19709168",
        "pull_request_review_id": null,
        "id": 19709168,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA5MTY4",
        "diff_hunk": "@@ -5,12 +5,16 @@\n import social.apps.django_app.default.fields\n from django.conf import settings\n import social.storage.django_orm\n+from social.utils import setting_name\n \n+user_model = getattr(settings, setting_name('USER_MODEL'), None) or \\\n+             getattr(settings, 'AUTH_USER_MODE', None) or \\",
        "path": "social/apps/django_app/default/migrations/0001_initial.py",
        "position": 7,
        "original_position": 7,
        "commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "original_commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "user": {
            "login": "jlynn",
            "id": 850401,
            "node_id": "MDQ6VXNlcjg1MDQwMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/850401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlynn",
            "html_url": "https://github.com/jlynn",
            "followers_url": "https://api.github.com/users/jlynn/followers",
            "following_url": "https://api.github.com/users/jlynn/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlynn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlynn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlynn/subscriptions",
            "organizations_url": "https://api.github.com/users/jlynn/orgs",
            "repos_url": "https://api.github.com/users/jlynn/repos",
            "events_url": "https://api.github.com/users/jlynn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlynn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think @mgalgs was referencing my typo. I'll fix it.\n",
        "created_at": "2014-11-02T01:42:36Z",
        "updated_at": "2014-11-02T01:42:36Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/422#discussion_r19709168",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/422",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19709168"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/422#discussion_r19709168"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19709192",
        "pull_request_review_id": null,
        "id": 19709192,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzA5MTky",
        "diff_hunk": "@@ -5,12 +5,16 @@\n import social.apps.django_app.default.fields\n from django.conf import settings\n import social.storage.django_orm\n+from social.utils import setting_name\n \n+user_model = getattr(settings, setting_name('USER_MODEL'), None) or \\\n+             getattr(settings, 'AUTH_USER_MODE', None) or \\",
        "path": "social/apps/django_app/default/migrations/0001_initial.py",
        "position": 7,
        "original_position": 7,
        "commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "original_commit_id": "a9c44398d2294bb8f947d17870f42515679df2fc",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Damn, I didn't saw it when doing the review.\n",
        "created_at": "2014-11-02T01:51:02Z",
        "updated_at": "2014-11-02T01:51:02Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/422#discussion_r19709192",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/422",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/19709192"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/422#discussion_r19709192"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24257307",
        "pull_request_review_id": null,
        "id": 24257307,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjU3MzA3",
        "diff_hunk": "@@ -3,4 +3,4 @@ requests>=1.1.0\n oauthlib>=0.3.8\n requests-oauthlib>=0.3.0,<0.3.2\n six>=1.2.0\n-PyJWT==0.2.1\n+PyJWT>=0.4.1",
        "path": "requirements-python3.txt",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf69d67d109acfda1016d4a2a63a1cc0a3aba84",
        "original_commit_id": "63d8f95553dc45096e973f4df01355e3216af335",
        "user": {
            "login": "Menda",
            "id": 23944,
            "node_id": "MDQ6VXNlcjIzOTQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/23944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Menda",
            "html_url": "https://github.com/Menda",
            "followers_url": "https://api.github.com/users/Menda/followers",
            "following_url": "https://api.github.com/users/Menda/following{/other_user}",
            "gists_url": "https://api.github.com/users/Menda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Menda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Menda/subscriptions",
            "organizations_url": "https://api.github.com/users/Menda/orgs",
            "repos_url": "https://api.github.com/users/Menda/repos",
            "events_url": "https://api.github.com/users/Menda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Menda/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would use `==` for safety.\n",
        "created_at": "2015-02-06T17:42:18Z",
        "updated_at": "2015-02-06T21:00:19Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/509#discussion_r24257307",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/509",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24257307"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/509#discussion_r24257307"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/509"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24271715",
        "pull_request_review_id": null,
        "id": 24271715,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MjcxNzE1",
        "diff_hunk": "@@ -3,4 +3,4 @@ requests>=1.1.0\n oauthlib>=0.3.8\n requests-oauthlib>=0.3.0,<0.3.2\n six>=1.2.0\n-PyJWT==0.2.1\n+PyJWT>=0.4.1",
        "path": "requirements-python3.txt",
        "position": null,
        "original_position": 5,
        "commit_id": "bdf69d67d109acfda1016d4a2a63a1cc0a3aba84",
        "original_commit_id": "63d8f95553dc45096e973f4df01355e3216af335",
        "user": {
            "login": "clintonb",
            "id": 910510,
            "node_id": "MDQ6VXNlcjkxMDUxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clintonb",
            "html_url": "https://github.com/clintonb",
            "followers_url": "https://api.github.com/users/clintonb/followers",
            "following_url": "https://api.github.com/users/clintonb/following{/other_user}",
            "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions",
            "organizations_url": "https://api.github.com/users/clintonb/orgs",
            "repos_url": "https://api.github.com/users/clintonb/repos",
            "events_url": "https://api.github.com/users/clintonb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clintonb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good point. `>=` is what lead to this problem in the first place.\n",
        "created_at": "2015-02-06T21:01:00Z",
        "updated_at": "2015-02-06T21:01:00Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/509#discussion_r24271715",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/509",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24271715"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/509#discussion_r24271715"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/509"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24943352",
        "pull_request_review_id": null,
        "id": 24943352,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTQzMzUy",
        "diff_hunk": "@@ -0,0 +1,31 @@\n+\"\"\"\n+Zotero OAuth1 backends, docs at:\n+    http://psa.matiasaguirre.net/docs/backends/zotero.html\n+\"\"\"\n+from requests import HTTPError\n+\n+from social.backends.oauth import BaseOAuth2, BaseOAuth1\n+from social.exceptions import AuthMissingParameter, AuthCanceled\n+import ipdb",
        "path": "social/backends/zotero.py",
        "position": 9,
        "original_position": 9,
        "commit_id": "cb2792cd043f1f4922d85ec72cb2de5532dc1cea",
        "original_commit_id": "cb2792cd043f1f4922d85ec72cb2de5532dc1cea",
        "user": {
            "login": "cdeblois",
            "id": 625867,
            "node_id": "MDQ6VXNlcjYyNTg2Nw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/625867?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdeblois",
            "html_url": "https://github.com/cdeblois",
            "followers_url": "https://api.github.com/users/cdeblois/followers",
            "following_url": "https://api.github.com/users/cdeblois/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdeblois/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdeblois/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdeblois/subscriptions",
            "organizations_url": "https://api.github.com/users/cdeblois/orgs",
            "repos_url": "https://api.github.com/users/cdeblois/repos",
            "events_url": "https://api.github.com/users/cdeblois/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdeblois/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Need to remove this line for Travis CI I guess.  Thanks!\n",
        "created_at": "2015-02-18T21:37:35Z",
        "updated_at": "2015-02-18T21:37:35Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/514#discussion_r24943352",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/514",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/24943352"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/514#discussion_r24943352"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/514"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442606",
        "pull_request_review_id": null,
        "id": 26442606,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDQyNjA2",
        "diff_hunk": "@@ -0,0 +1,84 @@\n+\"\"\"\n+Vend  OAuth2 backend:\n+\n+\"\"\"\n+from requests import HTTPError\n+from social.backends.oauth import BaseOAuth2\n+from social.exceptions import AuthCanceled, AuthUnknownError\n+\n+\n+class VendOAuth2(BaseOAuth2):\n+    name = 'vend'\n+    AUTHORIZATION_URL = 'https://secure.vendhq.com/connect'\n+    ACCESS_TOKEN_URL = ''\n+    SCOPE_SEPARATOR = ' '\n+    REDIRECT_STATE = False\n+    REDIRECT_URI_PARAMETER_NAME = 'redirect_uri'\n+    EXTRA_DATA = [\n+                     ('refresh_token', 'refresh_token'),\n+                     ('domain_prefix','domain_prefix')\n+    ]\n+    def get_user_id(self, details, response):\n+        return None",
        "path": "social/backends/vend.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "original_commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is required to later identify the account association on login.\n",
        "created_at": "2015-03-14T22:53:15Z",
        "updated_at": "2015-03-14T22:53:15Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442606",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/549",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442606"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442606"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/549"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442628",
        "pull_request_review_id": null,
        "id": 26442628,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDQyNjI4",
        "diff_hunk": "@@ -0,0 +1,84 @@\n+\"\"\"\n+Vend  OAuth2 backend:\n+\n+\"\"\"\n+from requests import HTTPError\n+from social.backends.oauth import BaseOAuth2\n+from social.exceptions import AuthCanceled, AuthUnknownError\n+\n+\n+class VendOAuth2(BaseOAuth2):\n+    name = 'vend'\n+    AUTHORIZATION_URL = 'https://secure.vendhq.com/connect'\n+    ACCESS_TOKEN_URL = ''\n+    SCOPE_SEPARATOR = ' '\n+    REDIRECT_STATE = False\n+    REDIRECT_URI_PARAMETER_NAME = 'redirect_uri'\n+    EXTRA_DATA = [\n+                     ('refresh_token', 'refresh_token'),\n+                     ('domain_prefix','domain_prefix')\n+    ]\n+    def get_user_id(self, details, response):\n+        return None\n+    def get_user_details(self, response):\n+        return {}\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+\n+        return None\n+\n+\n+    def access_token_url(self):\n+        return self.ACCESS_TOKEN_URL",
        "path": "social/backends/vend.py",
        "position": 32,
        "original_position": 32,
        "commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "original_commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is the default behavior, why override? I see that it requires a `domain_prefix` a few lines below, if that's the case, then that logic should be put here.\n",
        "created_at": "2015-03-14T22:54:28Z",
        "updated_at": "2015-03-14T22:54:28Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442628",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/549",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442628"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442628"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/549"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442630",
        "pull_request_review_id": null,
        "id": 26442630,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDQyNjMw",
        "diff_hunk": "@@ -0,0 +1,84 @@\n+\"\"\"\n+Vend  OAuth2 backend:\n+\n+\"\"\"\n+from requests import HTTPError\n+from social.backends.oauth import BaseOAuth2\n+from social.exceptions import AuthCanceled, AuthUnknownError\n+\n+\n+class VendOAuth2(BaseOAuth2):\n+    name = 'vend'\n+    AUTHORIZATION_URL = 'https://secure.vendhq.com/connect'\n+    ACCESS_TOKEN_URL = ''\n+    SCOPE_SEPARATOR = ' '\n+    REDIRECT_STATE = False\n+    REDIRECT_URI_PARAMETER_NAME = 'redirect_uri'\n+    EXTRA_DATA = [\n+                     ('refresh_token', 'refresh_token'),\n+                     ('domain_prefix','domain_prefix')\n+    ]\n+    def get_user_id(self, details, response):\n+        return None\n+    def get_user_details(self, response):\n+        return {}\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+\n+        return None\n+\n+\n+    def access_token_url(self):\n+        return self.ACCESS_TOKEN_URL\n+\n+\n+\n+",
        "path": "social/backends/vend.py",
        "position": 36,
        "original_position": 36,
        "commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "original_commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Too many blank lines, PEP8?\n",
        "created_at": "2015-03-14T22:54:44Z",
        "updated_at": "2015-03-14T22:54:44Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442630",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/549",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442630"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442630"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/549"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442665",
        "pull_request_review_id": null,
        "id": 26442665,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDQyNjY1",
        "diff_hunk": "@@ -0,0 +1,84 @@\n+\"\"\"\n+Vend  OAuth2 backend:\n+\n+\"\"\"\n+from requests import HTTPError\n+from social.backends.oauth import BaseOAuth2\n+from social.exceptions import AuthCanceled, AuthUnknownError\n+\n+\n+class VendOAuth2(BaseOAuth2):\n+    name = 'vend'\n+    AUTHORIZATION_URL = 'https://secure.vendhq.com/connect'\n+    ACCESS_TOKEN_URL = ''\n+    SCOPE_SEPARATOR = ' '\n+    REDIRECT_STATE = False\n+    REDIRECT_URI_PARAMETER_NAME = 'redirect_uri'\n+    EXTRA_DATA = [\n+                     ('refresh_token', 'refresh_token'),\n+                     ('domain_prefix','domain_prefix')\n+    ]\n+    def get_user_id(self, details, response):\n+        return None\n+    def get_user_details(self, response):\n+        return {}\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+\n+        return None\n+\n+\n+    def access_token_url(self):\n+        return self.ACCESS_TOKEN_URL\n+\n+\n+\n+\n+    def process_error(self, data):\n+        error = data.get('error')\n+        if error:\n+            if error == 'access_denied':\n+                raise AuthCanceled(self)\n+            else:\n+                raise AuthUnknownError(self, 'Vend error was {0}'.format(\n+                    error\n+                ))\n+        return super(VendOAuth2, self).process_error(data)\n+\n+    def auth_complete_params(self, state=None):\n+        client_id, client_secret = self.get_key_and_secret()\n+        return {\n+           'code': self.data.get('code', '').encode('ascii', 'ignore'),  # server response code\n+            'client_id': client_id,\n+            'client_secret': client_secret,\n+            'grant_type': 'authorization_code',  # request auth code\n+            'redirect_uri': self.get_redirect_uri(state)\n+        }\n+\n+    def auth_complete(self, *args, **kwargs):\n+        \"\"\"Completes loging process, must return user instance\"\"\"\n+\n+        #Handle dynamic login access_token_url\n+        self.ACCESS_TOKEN_URL = 'https://{0}.vendhq.com/api/1.0/token'.format(self.data[\"domain_prefix\"])",
        "path": "social/backends/vend.py",
        "position": 62,
        "original_position": 62,
        "commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "original_commit_id": "f9597b9d0796dc555517fcd4d6cf67d9a7f76e9c",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If this is moved to the `access_token_url` then this whole method override can be removed.\n",
        "created_at": "2015-03-14T22:57:34Z",
        "updated_at": "2015-03-14T22:57:34Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442665",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/549",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26442665"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/549#discussion_r26442665"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/549"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26946722",
        "pull_request_review_id": null,
        "id": 26946722,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ2NzIy",
        "diff_hunk": "@@ -39,17 +50,11 @@ def get_username(strategy, details, user=None, *args, **kwargs):\n         else:\n             username = uuid4().hex\n \n-        short_username = username[:max_length - uuid_length]\n         final_username = slug_func(clean_func(username[:max_length]))\n \n-        # Generate a unique username for current user using username\n-        # as base but adding a unique hash at the end. Original\n-        # username is cut to avoid any field max_length.\n-        while storage.user.user_exists(username=final_username):\n-            username = short_username + uuid4().hex[:uuid_length]\n-            final_username = slug_func(clean_func(username[:max_length]))",
        "path": "social/pipeline/user.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "647a51b1a57bbb7e66337e84d6d66daa82278a94",
        "original_commit_id": "45234eb634472cf5fa03d4588498ba846df4e8de",
        "user": {
            "login": "jeromelefeuvre",
            "id": 6428,
            "node_id": "MDQ6VXNlcjY0Mjg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeromelefeuvre",
            "html_url": "https://github.com/jeromelefeuvre",
            "followers_url": "https://api.github.com/users/jeromelefeuvre/followers",
            "following_url": "https://api.github.com/users/jeromelefeuvre/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeromelefeuvre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeromelefeuvre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeromelefeuvre/subscriptions",
            "organizations_url": "https://api.github.com/users/jeromelefeuvre/orgs",
            "repos_url": "https://api.github.com/users/jeromelefeuvre/repos",
            "events_url": "https://api.github.com/users/jeromelefeuvre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeromelefeuvre/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@omab My only concern is about this and why you added it.\n",
        "created_at": "2015-03-23T15:27:17Z",
        "updated_at": "2015-03-23T15:28:35Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/559#discussion_r26946722",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/559",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26946722"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/559#discussion_r26946722"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26948438",
        "pull_request_review_id": null,
        "id": 26948438,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTQ4NDM4",
        "diff_hunk": "@@ -39,17 +50,11 @@ def get_username(strategy, details, user=None, *args, **kwargs):\n         else:\n             username = uuid4().hex\n \n-        short_username = username[:max_length - uuid_length]\n         final_username = slug_func(clean_func(username[:max_length]))\n \n-        # Generate a unique username for current user using username\n-        # as base but adding a unique hash at the end. Original\n-        # username is cut to avoid any field max_length.\n-        while storage.user.user_exists(username=final_username):\n-            username = short_username + uuid4().hex[:uuid_length]\n-            final_username = slug_func(clean_func(username[:max_length]))",
        "path": "social/pipeline/user.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "647a51b1a57bbb7e66337e84d6d66daa82278a94",
        "original_commit_id": "45234eb634472cf5fa03d4588498ba846df4e8de",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jeromelefeuvre, username is usually protected with a unique constraint, this is to avoid clashing other username when registering from different sites.\n",
        "created_at": "2015-03-23T15:43:24Z",
        "updated_at": "2015-03-23T15:43:24Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/559#discussion_r26948438",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/559",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26948438"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/559#discussion_r26948438"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26963266",
        "pull_request_review_id": null,
        "id": 26963266,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTYzMjY2",
        "diff_hunk": "@@ -39,17 +50,11 @@ def get_username(strategy, details, user=None, *args, **kwargs):\n         else:\n             username = uuid4().hex\n \n-        short_username = username[:max_length - uuid_length]\n         final_username = slug_func(clean_func(username[:max_length]))\n \n-        # Generate a unique username for current user using username\n-        # as base but adding a unique hash at the end. Original\n-        # username is cut to avoid any field max_length.\n-        while storage.user.user_exists(username=final_username):\n-            username = short_username + uuid4().hex[:uuid_length]\n-            final_username = slug_func(clean_func(username[:max_length]))",
        "path": "social/pipeline/user.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "647a51b1a57bbb7e66337e84d6d66daa82278a94",
        "original_commit_id": "45234eb634472cf5fa03d4588498ba846df4e8de",
        "user": {
            "login": "jeromelefeuvre",
            "id": 6428,
            "node_id": "MDQ6VXNlcjY0Mjg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeromelefeuvre",
            "html_url": "https://github.com/jeromelefeuvre",
            "followers_url": "https://api.github.com/users/jeromelefeuvre/followers",
            "following_url": "https://api.github.com/users/jeromelefeuvre/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeromelefeuvre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeromelefeuvre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeromelefeuvre/subscriptions",
            "organizations_url": "https://api.github.com/users/jeromelefeuvre/orgs",
            "repos_url": "https://api.github.com/users/jeromelefeuvre/repos",
            "events_url": "https://api.github.com/users/jeromelefeuvre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeromelefeuvre/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should store the provider and the uid in the User table to know from which server login comes from. Like that, search should be easy on the uid.\n\nStep 2 could be to have a UserProvider table to merge all providers on a user if client has multiples login possibilities.\n",
        "created_at": "2015-03-23T18:13:05Z",
        "updated_at": "2015-03-23T18:13:05Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/559#discussion_r26963266",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/559",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26963266"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/559#discussion_r26963266"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26965673",
        "pull_request_review_id": null,
        "id": 26965673,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY1Njcz",
        "diff_hunk": "@@ -39,17 +50,11 @@ def get_username(strategy, details, user=None, *args, **kwargs):\n         else:\n             username = uuid4().hex\n \n-        short_username = username[:max_length - uuid_length]\n         final_username = slug_func(clean_func(username[:max_length]))\n \n-        # Generate a unique username for current user using username\n-        # as base but adding a unique hash at the end. Original\n-        # username is cut to avoid any field max_length.\n-        while storage.user.user_exists(username=final_username):\n-            username = short_username + uuid4().hex[:uuid_length]\n-            final_username = slug_func(clean_func(username[:max_length]))",
        "path": "social/pipeline/user.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "647a51b1a57bbb7e66337e84d6d66daa82278a94",
        "original_commit_id": "45234eb634472cf5fa03d4588498ba846df4e8de",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What you describe accomplishes the same that's implemented, but doesn't force modification on the User table, which is usually provided by the project, framework, or third-party application (take for instance the commonly used User model in Django projects).\n\nPython-social-auth stores the `uid`, `user id` and `provider` is stored in the `UserSocialAuth` model (`social_auth_usersocialauth` DB table), the search is easy on `uid` and `provider`, the related user is just a side effect.\n",
        "created_at": "2015-03-23T18:37:21Z",
        "updated_at": "2015-03-23T18:37:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/559#discussion_r26965673",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/559",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26965673"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/559#discussion_r26965673"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26966694",
        "pull_request_review_id": null,
        "id": 26966694,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2OTY2Njk0",
        "diff_hunk": "@@ -39,17 +50,11 @@ def get_username(strategy, details, user=None, *args, **kwargs):\n         else:\n             username = uuid4().hex\n \n-        short_username = username[:max_length - uuid_length]\n         final_username = slug_func(clean_func(username[:max_length]))\n \n-        # Generate a unique username for current user using username\n-        # as base but adding a unique hash at the end. Original\n-        # username is cut to avoid any field max_length.\n-        while storage.user.user_exists(username=final_username):\n-            username = short_username + uuid4().hex[:uuid_length]\n-            final_username = slug_func(clean_func(username[:max_length]))",
        "path": "social/pipeline/user.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "647a51b1a57bbb7e66337e84d6d66daa82278a94",
        "original_commit_id": "45234eb634472cf5fa03d4588498ba846df4e8de",
        "user": {
            "login": "jeromelefeuvre",
            "id": 6428,
            "node_id": "MDQ6VXNlcjY0Mjg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeromelefeuvre",
            "html_url": "https://github.com/jeromelefeuvre",
            "followers_url": "https://api.github.com/users/jeromelefeuvre/followers",
            "following_url": "https://api.github.com/users/jeromelefeuvre/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeromelefeuvre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeromelefeuvre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeromelefeuvre/subscriptions",
            "organizations_url": "https://api.github.com/users/jeromelefeuvre/orgs",
            "repos_url": "https://api.github.com/users/jeromelefeuvre/repos",
            "events_url": "https://api.github.com/users/jeromelefeuvre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeromelefeuvre/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh I think I got it. I used disconnect to logout but it deleted the entry in the db. Was my problem to found the user after disconnect. Session deletion is enough ! \n",
        "created_at": "2015-03-23T18:46:37Z",
        "updated_at": "2015-03-23T18:46:37Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/559#discussion_r26966694",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/559",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/26966694"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/559#discussion_r26966694"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/559"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/27433088",
        "pull_request_review_id": null,
        "id": 27433088,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDMzMDg4",
        "diff_hunk": "@@ -0,0 +1,70 @@\n+import json\n+from urllib import urlencode, urlopen\n+from requests_oauthlib import OAuth1\n+\n+from social.backends.oauth import BaseOAuth2\n+import six\n+\n+class NKOAuth2(BaseOAuth2):\n+    \"\"\"NK OAuth authentication backend\"\"\"\n+    name = 'nk'\n+    AUTHORIZATION_URL = 'https://nk.pl/oauth2/login'\n+    ACCESS_TOKEN_URL = 'https://nk.pl/oauth2/token'\n+    SCOPE_SEPARATOR = ','\n+    ACCESS_TOKEN_METHOD = 'POST'\n+    SIGNATURE_TYPE_AUTH_HEADER = 'AUTH_HEADER'\n+    EXTRA_DATA = [\n+        ('id', 'id'),\n+    ]\n+\n+    def get_user_details(self, response):\n+        \"\"\"Return user details from NK account\"\"\"\n+        entry = response['entry']\n+        return {'username': entry.get('displayName'),\n+                'email': entry['emails'][0]['value'],\n+                'first_name': entry.get('displayName').split(\" \")[0],\n+                'id':entry.get('id')}\n+\n+    def auth_complete_params(self, state=None):\n+        client_id, client_secret = self.get_key_and_secret()\n+        return {\n+            'grant_type': 'authorization_code',  # request auth code\n+            'code': self.data.get('code', ''),  # server response code\n+            'client_id': client_id,\n+            'client_secret': client_secret,\n+            'redirect_uri': self.get_redirect_uri(state),\n+            'scope':self.get_scope_argument()\n+        }\n+\n+    def get_user_id(self, details, response):\n+        \"\"\"Return a unique ID for the current user, by default from server\n+        response.\"\"\"\n+        return details.get(self.ID_KEY)\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+        \"\"\"Loads user data from service\"\"\"\n+        url = 'http://opensocial.nk-net.pl/v09/social/rest/people/@me?' + urlencode({\n+            'nk_token': access_token,\n+            'fields': 'name,surname,avatar,localization,age,gender,emails,birthdate'\n+        })\n+        return self.get_json(\n+            url,\n+            auth=self.oauth_auth(access_token)\n+        )\n+\n+    def oauth_auth(self, token=None, oauth_verifier=None,",
        "path": "social/backends/nk.py",
        "position": 55,
        "original_position": 55,
        "commit_id": "3d182459b8556178584a184450cdd278e71cea97",
        "original_commit_id": "3d182459b8556178584a184450cdd278e71cea97",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is an OAuth2 backend, why do you need to define this method that comes from the OAuth1 base class?\n",
        "created_at": "2015-03-30T21:19:28Z",
        "updated_at": "2015-03-30T21:19:28Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/570#discussion_r27433088",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/570",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/27433088"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/570#discussion_r27433088"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/570"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855317",
        "pull_request_review_id": null,
        "id": 30855317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1MzE3",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These constants are specific to the education market - given the generic nature of SAML, should they default to more generic properties with the ability for a developer to either provide the mapping via settings and then use the mapping in `get_user_details()`?\n",
        "created_at": "2015-05-21T22:39:56Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855317",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855317"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855473",
        "pull_request_review_id": null,
        "id": 30855473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1NDcz",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"\n+OID_EDU_PERSON_ENTITLEMENT = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.7\"\n+OID_GIVEN_NAME = \"urn:oid:2.5.4.42\"\n+OID_MAIL = \"urn:oid:0.9.2342.19200300.100.1.3\"\n+OID_SURNAME = \"urn:oid:2.5.4.4\"\n+OID_USERID = \"urn:oid:0.9.2342.19200300.100.1.1\"\n+\n+\n+class SAMLIdentityProvider(object):\n+    \"\"\"\n+    Wrapper around configuration for a SAML Identity provider\n+    \"\"\"\n+\n+    def __init__(self, name, **kwargs):\n+        \"\"\" Load and parse configuration \"\"\"\n+        self.name = name\n+        # name should be a slug and must not contain a colon, which could conflict with uid prefixing:\n+        assert ':' not in self.name and ' ' not in self.name, \"IdP 'name' should be a slug (short, no spaces)\"\n+        self.conf = kwargs\n+\n+    def get_user_permanent_id(self, attributes):\n+        \"\"\"\n+        The most important method: Get a permanent, unique identifier for this user from the\n+        attributes supplied by the IdP.\n+\n+        If you want to use the NameID, it's available via attributes['name_id']\n+        \"\"\"\n+        return attributes[self.conf.get('attr_user_permanent_id', OID_USERID)][0]\n+\n+    # Attributes processing:\n+    def get_user_details(self, attributes):\n+        \"\"\"\n+        Given the SAML attributes extracted from the SSO response, get the user data like name.\n+        \"\"\"\n+        return {\n+            'fullname': self.get_attr(attributes, 'attr_full_name', OID_COMMON_NAME),\n+            'first_name': self.get_attr(attributes, 'attr_first_name', OID_GIVEN_NAME),\n+            'last_name': self.get_attr(attributes, 'attr_last_name', OID_SURNAME),\n+            'username': self.get_attr(attributes, 'attr_username', OID_USERID),\n+            'email': self.get_attr(attributes, 'attr_email', OID_MAIL),\n+        }\n+\n+    def get_attr(self, attributes, conf_key, default_attribute):\n+        \"\"\"\n+        Internal helper method.\n+        Get the attribute 'default_attribute' out of the attributes, unless self.conf[conf_key]\n+        overrides the default by specifying another attribute to use.\n+        \"\"\"\n+        key = self.conf.get(conf_key, default_attribute)\n+        return attributes[key][0] if key in attributes else None\n+\n+    @property\n+    def entity_id(self):\n+        \"\"\" Get the entity ID for this IdP \"\"\"\n+        return self.conf['entity_id']  # Required. e.g. \"https://idp.testshib.org/idp/shibboleth\"\n+\n+    @property\n+    def sso_url(self):\n+        \"\"\" Get the SSO URL for this IdP \"\"\"\n+        return self.conf['url']  # Required. e.g. \"https://idp.testshib.org/idp/profile/SAML2/Redirect/SSO\"\n+\n+    @property\n+    def x509cert(self):\n+        \"\"\" X.509 Public Key Certificate for this IdP \"\"\"\n+        return self.conf['x509cert']\n+\n+    @property\n+    def saml_config_dict(self):\n+        \"\"\" Get the IdP configuration dict in the format required by python-saml \"\"\"\n+        return {\n+            \"entityId\": self.entity_id,\n+            \"singleSignOnService\": {\n+                \"url\": self.sso_url,\n+                \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\",  # python-saml only supports Redirect\n+            },\n+            \"x509cert\": self.x509cert,\n+        }\n+\n+\n+class DummySAMLIdentityProvider(SAMLIdentityProvider):\n+    \"\"\"\n+    A placeholder IdP used when we must specify something, e.g. when generating SP metadata.\n+\n+    If OneLogin_Saml2_Auth is modified to not always require IdP config, this can be removed.\n+    \"\"\"\n+    def __init__(self):\n+        super(DummySAMLIdentityProvider, self).__init__(\n+            \"dummy\",\n+            entity_id=\"https://dummy.none/saml2\",\n+            url=\"https://dummy.none/SSO\",\n+            x509cert='',\n+        )\n+\n+\n+class SAMLAuth(BaseAuth):\n+    \"\"\"\n+    PSA Backend that implements SAML 2.0 Service Provider (SP) functionality.\n+\n+    Unlike all of the other backends, this one can be configured to work with\n+    many identity providers (IdPs). For example, a University that belongs to a\n+    Shibboleth federation may support authentication via ~100 partner\n+    universities. Also, the IdP configuration can be changed at runtime if you\n+    require that functionality - just subclass this and override `get_idp()`.\n+\n+    Several settings are required. Here's an example:\n+\n+    SOCIAL_AUTH_SAML_SP_ENTITY_ID = \"https://saml.example.com/\"",
        "path": "social/backends/saml.py",
        "position": 122,
        "original_position": 122,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is the SP referring to in these settings?\n",
        "created_at": "2015-05-21T22:42:31Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855473",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855473"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855545",
        "pull_request_review_id": null,
        "id": 30855545,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1NTQ1",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "bradenmacdonald",
            "id": 945577,
            "node_id": "MDQ6VXNlcjk0NTU3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/945577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradenmacdonald",
            "html_url": "https://github.com/bradenmacdonald",
            "followers_url": "https://api.github.com/users/bradenmacdonald/followers",
            "following_url": "https://api.github.com/users/bradenmacdonald/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradenmacdonald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradenmacdonald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradenmacdonald/subscriptions",
            "organizations_url": "https://api.github.com/users/bradenmacdonald/orgs",
            "repos_url": "https://api.github.com/users/bradenmacdonald/repos",
            "events_url": "https://api.github.com/users/bradenmacdonald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradenmacdonald/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That is what I've done here. `OID_EDU_PERSON_PRINCIPAL_NAME` and `OID_EDU_PERSON_ENTITLEMENT` are defined as a convenience but neither are used by default. \n",
        "created_at": "2015-05-21T22:43:39Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855545",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855545"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855545"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855614",
        "pull_request_review_id": null,
        "id": 30855614,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1NjE0",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"\n+OID_EDU_PERSON_ENTITLEMENT = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.7\"\n+OID_GIVEN_NAME = \"urn:oid:2.5.4.42\"\n+OID_MAIL = \"urn:oid:0.9.2342.19200300.100.1.3\"\n+OID_SURNAME = \"urn:oid:2.5.4.4\"\n+OID_USERID = \"urn:oid:0.9.2342.19200300.100.1.1\"\n+\n+\n+class SAMLIdentityProvider(object):\n+    \"\"\"\n+    Wrapper around configuration for a SAML Identity provider\n+    \"\"\"\n+\n+    def __init__(self, name, **kwargs):\n+        \"\"\" Load and parse configuration \"\"\"\n+        self.name = name\n+        # name should be a slug and must not contain a colon, which could conflict with uid prefixing:\n+        assert ':' not in self.name and ' ' not in self.name, \"IdP 'name' should be a slug (short, no spaces)\"\n+        self.conf = kwargs\n+\n+    def get_user_permanent_id(self, attributes):\n+        \"\"\"\n+        The most important method: Get a permanent, unique identifier for this user from the\n+        attributes supplied by the IdP.\n+\n+        If you want to use the NameID, it's available via attributes['name_id']\n+        \"\"\"\n+        return attributes[self.conf.get('attr_user_permanent_id', OID_USERID)][0]\n+\n+    # Attributes processing:\n+    def get_user_details(self, attributes):\n+        \"\"\"\n+        Given the SAML attributes extracted from the SSO response, get the user data like name.\n+        \"\"\"\n+        return {\n+            'fullname': self.get_attr(attributes, 'attr_full_name', OID_COMMON_NAME),\n+            'first_name': self.get_attr(attributes, 'attr_first_name', OID_GIVEN_NAME),\n+            'last_name': self.get_attr(attributes, 'attr_last_name', OID_SURNAME),\n+            'username': self.get_attr(attributes, 'attr_username', OID_USERID),\n+            'email': self.get_attr(attributes, 'attr_email', OID_MAIL),\n+        }\n+\n+    def get_attr(self, attributes, conf_key, default_attribute):\n+        \"\"\"\n+        Internal helper method.\n+        Get the attribute 'default_attribute' out of the attributes, unless self.conf[conf_key]\n+        overrides the default by specifying another attribute to use.\n+        \"\"\"\n+        key = self.conf.get(conf_key, default_attribute)\n+        return attributes[key][0] if key in attributes else None\n+\n+    @property\n+    def entity_id(self):\n+        \"\"\" Get the entity ID for this IdP \"\"\"\n+        return self.conf['entity_id']  # Required. e.g. \"https://idp.testshib.org/idp/shibboleth\"\n+\n+    @property\n+    def sso_url(self):\n+        \"\"\" Get the SSO URL for this IdP \"\"\"\n+        return self.conf['url']  # Required. e.g. \"https://idp.testshib.org/idp/profile/SAML2/Redirect/SSO\"\n+\n+    @property\n+    def x509cert(self):\n+        \"\"\" X.509 Public Key Certificate for this IdP \"\"\"\n+        return self.conf['x509cert']\n+\n+    @property\n+    def saml_config_dict(self):\n+        \"\"\" Get the IdP configuration dict in the format required by python-saml \"\"\"\n+        return {\n+            \"entityId\": self.entity_id,\n+            \"singleSignOnService\": {\n+                \"url\": self.sso_url,\n+                \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\",  # python-saml only supports Redirect\n+            },\n+            \"x509cert\": self.x509cert,\n+        }\n+\n+\n+class DummySAMLIdentityProvider(SAMLIdentityProvider):\n+    \"\"\"\n+    A placeholder IdP used when we must specify something, e.g. when generating SP metadata.\n+\n+    If OneLogin_Saml2_Auth is modified to not always require IdP config, this can be removed.\n+    \"\"\"\n+    def __init__(self):\n+        super(DummySAMLIdentityProvider, self).__init__(\n+            \"dummy\",\n+            entity_id=\"https://dummy.none/saml2\",\n+            url=\"https://dummy.none/SSO\",\n+            x509cert='',\n+        )\n+\n+\n+class SAMLAuth(BaseAuth):\n+    \"\"\"\n+    PSA Backend that implements SAML 2.0 Service Provider (SP) functionality.\n+\n+    Unlike all of the other backends, this one can be configured to work with\n+    many identity providers (IdPs). For example, a University that belongs to a\n+    Shibboleth federation may support authentication via ~100 partner\n+    universities. Also, the IdP configuration can be changed at runtime if you\n+    require that functionality - just subclass this and override `get_idp()`.\n+\n+    Several settings are required. Here's an example:\n+\n+    SOCIAL_AUTH_SAML_SP_ENTITY_ID = \"https://saml.example.com/\"",
        "path": "social/backends/saml.py",
        "position": 122,
        "original_position": 122,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "bradenmacdonald",
            "id": 945577,
            "node_id": "MDQ6VXNlcjk0NTU3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/945577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradenmacdonald",
            "html_url": "https://github.com/bradenmacdonald",
            "followers_url": "https://api.github.com/users/bradenmacdonald/followers",
            "following_url": "https://api.github.com/users/bradenmacdonald/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradenmacdonald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradenmacdonald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradenmacdonald/subscriptions",
            "organizations_url": "https://api.github.com/users/bradenmacdonald/orgs",
            "repos_url": "https://api.github.com/users/bradenmacdonald/repos",
            "events_url": "https://api.github.com/users/bradenmacdonald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradenmacdonald/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"Service Provider\"\n",
        "created_at": "2015-05-21T22:44:49Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855614",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855614"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855614"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855668",
        "pull_request_review_id": null,
        "id": 30855668,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1NjY4",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are there more generic defaults that could be used?\n",
        "created_at": "2015-05-21T22:45:49Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855668",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855668"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855668"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855685",
        "pull_request_review_id": null,
        "id": 30855685,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU1Njg1",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"\n+OID_EDU_PERSON_ENTITLEMENT = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.7\"\n+OID_GIVEN_NAME = \"urn:oid:2.5.4.42\"\n+OID_MAIL = \"urn:oid:0.9.2342.19200300.100.1.3\"\n+OID_SURNAME = \"urn:oid:2.5.4.4\"\n+OID_USERID = \"urn:oid:0.9.2342.19200300.100.1.1\"\n+\n+\n+class SAMLIdentityProvider(object):\n+    \"\"\"\n+    Wrapper around configuration for a SAML Identity provider\n+    \"\"\"\n+\n+    def __init__(self, name, **kwargs):\n+        \"\"\" Load and parse configuration \"\"\"\n+        self.name = name\n+        # name should be a slug and must not contain a colon, which could conflict with uid prefixing:\n+        assert ':' not in self.name and ' ' not in self.name, \"IdP 'name' should be a slug (short, no spaces)\"\n+        self.conf = kwargs\n+\n+    def get_user_permanent_id(self, attributes):\n+        \"\"\"\n+        The most important method: Get a permanent, unique identifier for this user from the\n+        attributes supplied by the IdP.\n+\n+        If you want to use the NameID, it's available via attributes['name_id']\n+        \"\"\"\n+        return attributes[self.conf.get('attr_user_permanent_id', OID_USERID)][0]\n+\n+    # Attributes processing:\n+    def get_user_details(self, attributes):\n+        \"\"\"\n+        Given the SAML attributes extracted from the SSO response, get the user data like name.\n+        \"\"\"\n+        return {\n+            'fullname': self.get_attr(attributes, 'attr_full_name', OID_COMMON_NAME),\n+            'first_name': self.get_attr(attributes, 'attr_first_name', OID_GIVEN_NAME),\n+            'last_name': self.get_attr(attributes, 'attr_last_name', OID_SURNAME),\n+            'username': self.get_attr(attributes, 'attr_username', OID_USERID),\n+            'email': self.get_attr(attributes, 'attr_email', OID_MAIL),\n+        }\n+\n+    def get_attr(self, attributes, conf_key, default_attribute):\n+        \"\"\"\n+        Internal helper method.\n+        Get the attribute 'default_attribute' out of the attributes, unless self.conf[conf_key]\n+        overrides the default by specifying another attribute to use.\n+        \"\"\"\n+        key = self.conf.get(conf_key, default_attribute)\n+        return attributes[key][0] if key in attributes else None\n+\n+    @property\n+    def entity_id(self):\n+        \"\"\" Get the entity ID for this IdP \"\"\"\n+        return self.conf['entity_id']  # Required. e.g. \"https://idp.testshib.org/idp/shibboleth\"\n+\n+    @property\n+    def sso_url(self):\n+        \"\"\" Get the SSO URL for this IdP \"\"\"\n+        return self.conf['url']  # Required. e.g. \"https://idp.testshib.org/idp/profile/SAML2/Redirect/SSO\"\n+\n+    @property\n+    def x509cert(self):\n+        \"\"\" X.509 Public Key Certificate for this IdP \"\"\"\n+        return self.conf['x509cert']\n+\n+    @property\n+    def saml_config_dict(self):\n+        \"\"\" Get the IdP configuration dict in the format required by python-saml \"\"\"\n+        return {\n+            \"entityId\": self.entity_id,\n+            \"singleSignOnService\": {\n+                \"url\": self.sso_url,\n+                \"binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\",  # python-saml only supports Redirect\n+            },\n+            \"x509cert\": self.x509cert,\n+        }\n+\n+\n+class DummySAMLIdentityProvider(SAMLIdentityProvider):\n+    \"\"\"\n+    A placeholder IdP used when we must specify something, e.g. when generating SP metadata.\n+\n+    If OneLogin_Saml2_Auth is modified to not always require IdP config, this can be removed.\n+    \"\"\"\n+    def __init__(self):\n+        super(DummySAMLIdentityProvider, self).__init__(\n+            \"dummy\",\n+            entity_id=\"https://dummy.none/saml2\",\n+            url=\"https://dummy.none/SSO\",\n+            x509cert='',\n+        )\n+\n+\n+class SAMLAuth(BaseAuth):\n+    \"\"\"\n+    PSA Backend that implements SAML 2.0 Service Provider (SP) functionality.\n+\n+    Unlike all of the other backends, this one can be configured to work with\n+    many identity providers (IdPs). For example, a University that belongs to a\n+    Shibboleth federation may support authentication via ~100 partner\n+    universities. Also, the IdP configuration can be changed at runtime if you\n+    require that functionality - just subclass this and override `get_idp()`.\n+\n+    Several settings are required. Here's an example:\n+\n+    SOCIAL_AUTH_SAML_SP_ENTITY_ID = \"https://saml.example.com/\"",
        "path": "social/backends/saml.py",
        "position": 122,
        "original_position": 122,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Excellent - thanks for clarifying.\n",
        "created_at": "2015-05-21T22:46:01Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855685",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30855685"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30855685"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856033",
        "pull_request_review_id": null,
        "id": 30856033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU2MDMz",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "bradenmacdonald",
            "id": 945577,
            "node_id": "MDQ6VXNlcjk0NTU3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/945577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradenmacdonald",
            "html_url": "https://github.com/bradenmacdonald",
            "followers_url": "https://api.github.com/users/bradenmacdonald/followers",
            "following_url": "https://api.github.com/users/bradenmacdonald/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradenmacdonald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradenmacdonald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradenmacdonald/subscriptions",
            "organizations_url": "https://api.github.com/users/bradenmacdonald/orgs",
            "repos_url": "https://api.github.com/users/bradenmacdonald/repos",
            "events_url": "https://api.github.com/users/bradenmacdonald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradenmacdonald/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The defaults I'm using here the ones listed below in `get_user_details` on line 51. (e.g. `OID_COMMON_NAME` for the user's name) I think they're the most generic, but please let me know if there are any better defaults.\n",
        "created_at": "2015-05-21T22:49:39Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856033",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856033"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856460",
        "pull_request_review_id": null,
        "id": 30856460,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU2NDYw",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think what I am confused about is that \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\" for example. I may be naive but isn't `urn:oid:1.3.6.1.4.1.5923.1.1.1.6` defined specifically as an attribute for Principle Name for the purposes of University/Higher Education LDAP systems? If it was an LDAP for a corporation, it would use a different attribute?\n",
        "created_at": "2015-05-21T22:56:06Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856460",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856460"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856460"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856581",
        "pull_request_review_id": null,
        "id": 30856581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU2NTgx",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "ashchristopher",
            "id": 34359,
            "node_id": "MDQ6VXNlcjM0MzU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/34359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashchristopher",
            "html_url": "https://github.com/ashchristopher",
            "followers_url": "https://api.github.com/users/ashchristopher/followers",
            "following_url": "https://api.github.com/users/ashchristopher/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashchristopher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashchristopher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashchristopher/subscriptions",
            "organizations_url": "https://api.github.com/users/ashchristopher/orgs",
            "repos_url": "https://api.github.com/users/ashchristopher/repos",
            "events_url": "https://api.github.com/users/ashchristopher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashchristopher/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just looking at this document which I think defines the spec as per SAML2.0.\n\nhttps://www.oasis-open.org/committees/download.php/28042/sstc-saml-attribute-x500-cs-01.pdf\n\nAre the additional attributes defined by different industries - in this case Universities?\n",
        "created_at": "2015-05-21T22:58:12Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856581",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856581"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856950",
        "pull_request_review_id": null,
        "id": 30856950,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODU2OTUw",
        "diff_hunk": "@@ -0,0 +1,289 @@\n+\"\"\"\n+Backend for SAML 2.0 support\n+\n+Terminology:\n+\n+\"Service Provider\" (SP): Your web app\n+\"Identity Provider\" (IdP): The third-party site that is authenticating users via SAML\n+\"\"\"\n+from onelogin.saml2.auth import OneLogin_Saml2_Auth\n+from onelogin.saml2.settings import OneLogin_Saml2_Settings\n+from social.backends.base import BaseAuth\n+from social.exceptions import AuthFailed\n+\n+# Helpful constants:\n+OID_COMMON_NAME = \"urn:oid:2.5.4.3\"\n+OID_EDU_PERSON_PRINCIPAL_NAME = \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"",
        "path": "social/backends/saml.py",
        "position": 16,
        "original_position": 16,
        "commit_id": "3a6be39a32874d032337fb7cd50f27c5cafcec17",
        "original_commit_id": "02ab628b8961b969021de87aeb23551da4e751b7",
        "user": {
            "login": "bradenmacdonald",
            "id": 945577,
            "node_id": "MDQ6VXNlcjk0NTU3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/945577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradenmacdonald",
            "html_url": "https://github.com/bradenmacdonald",
            "followers_url": "https://api.github.com/users/bradenmacdonald/followers",
            "following_url": "https://api.github.com/users/bradenmacdonald/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradenmacdonald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradenmacdonald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradenmacdonald/subscriptions",
            "organizations_url": "https://api.github.com/users/bradenmacdonald/orgs",
            "repos_url": "https://api.github.com/users/bradenmacdonald/repos",
            "events_url": "https://api.github.com/users/bradenmacdonald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradenmacdonald/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, that one (eduPersonPrincipalName) is education-specific, but it's not actually used in this implementation at all. It's just defined as a string at the top here as a convenience for people who want to override the class and use that instead of the defaults, which are more generic values. You could delete that line above and this code would work unchanged.\n",
        "created_at": "2015-05-21T23:04:59Z",
        "updated_at": "2015-06-18T18:59:21Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856950",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/616",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/30856950"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/616#discussion_r30856950"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/616"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/33437856",
        "pull_request_review_id": null,
        "id": 33437856,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNDM3ODU2",
        "diff_hunk": "@@ -32,8 +32,9 @@ def get_user_details(self, response):\n         fullname, first_name, last_name = self.get_user_names(\n             response.get('display_name')\n         )\n-        return {'username': response.get('id'),\n-                'email': response.get('email'),\n+        username = response.get('id')\n+        return {'username': username,\n+                'email': response.get('email', '{0}@spotifyDOTcom'.format(username)),",
        "path": "social/backends/spotify.py",
        "position": 17,
        "original_position": 17,
        "commit_id": "e6f481e63562b0190c2022da4a7ad4900891c054",
        "original_commit_id": "e6f481e63562b0190c2022da4a7ad4900891c054",
        "user": {
            "login": "Menda",
            "id": 23944,
            "node_id": "MDQ6VXNlcjIzOTQ0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/23944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Menda",
            "html_url": "https://github.com/Menda",
            "followers_url": "https://api.github.com/users/Menda/followers",
            "following_url": "https://api.github.com/users/Menda/following{/other_user}",
            "gists_url": "https://api.github.com/users/Menda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Menda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Menda/subscriptions",
            "organizations_url": "https://api.github.com/users/Menda/orgs",
            "repos_url": "https://api.github.com/users/Menda/repos",
            "events_url": "https://api.github.com/users/Menda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Menda/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`spotifyDOTcom`? Is it really like this?\n",
        "created_at": "2015-06-29T06:52:10Z",
        "updated_at": "2015-06-29T06:52:10Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/614#discussion_r33437856",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/614",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/33437856"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/614#discussion_r33437856"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/614"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/36617196",
        "pull_request_review_id": null,
        "id": 36617196,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3MTk2",
        "diff_hunk": "@@ -277,14 +280,44 @@ class OpenIdConnectAuth(BaseOAuth2):\n \n     Currently only the code response type is supported.\n     \"\"\"\n-    ID_TOKEN_ISSUER = None\n-    DEFAULT_SCOPE = ['openid']\n+    # Override OIDC_ENDPOINT in your subclass to enable autoconfig of OIDC\n+    OIDC_ENDPOINT = None\n+\n+    DEFAULT_SCOPE = ['openid', 'profile', 'email']\n     EXTRA_DATA = ['id_token', 'refresh_token', ('sub', 'id')]\n-    # Set after access_token is retrieved\n-    id_token = None\n+    REDIRECT_STATE = False\n+    ACCESS_TOKEN_METHOD = 'POST'\n+    REVOKE_TOKEN_METHOD = 'GET'\n+\n+    # Will be autoconfigured\n+    oidc_config = None\n+    ID_TOKEN_ISSUER = None\n+    JWKS_KEYS = None\n+    ACCESS_TOKEN_URL = None\n+    AUTHORIZATION_URL = None\n+    REVOKE_TOKEN_URL = None\n+    SIGNING_ALGS = None\n+\n+    def init_oidc_config(self):\n+        if self.oidc_config is None and self.OIDC_ENDPOINT:\n+            # Cache these settings by setting class variables\n+            cls = self.__class__\n+            cls.oidc_config = self.get_json(self.OIDC_ENDPOINT + '/.well-known/openid-configuration')\n+            cls.ACCESS_TOKEN_URL = self.oidc_config['token_endpoint']\n+            cls.AUTHORIZATION_URL = self.oidc_config['authorization_endpoint']\n+            cls.REVOKE_TOKEN_URL = self.oidc_config['revocation_endpoint']",
        "path": "social/backends/open_id.py",
        "position": null,
        "original_position": 45,
        "commit_id": "271710f0a3e29488e61ad909d6c6b4a0e06017f1",
        "original_commit_id": "ae4dac0f5b32d5bd11307c87682f2dfcb3d6555f",
        "user": {
            "login": "Sjord",
            "id": 113030,
            "node_id": "MDQ6VXNlcjExMzAzMA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/113030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjord",
            "html_url": "https://github.com/Sjord",
            "followers_url": "https://api.github.com/users/Sjord/followers",
            "following_url": "https://api.github.com/users/Sjord/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sjord/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sjord/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sjord/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjord/orgs",
            "repos_url": "https://api.github.com/users/Sjord/repos",
            "events_url": "https://api.github.com/users/Sjord/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sjord/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line raised an exception for me because I don't have `revocation_endpoint` in my openid config.\n\nThe exception happens after `cls.oidc_config` has already been set. So the next time this won't get run and you won't get an exception, but you do end up with empty values for `cls.USERINFO_URL` and all other config defined below this line.\n",
        "created_at": "2015-08-10T10:09:31Z",
        "updated_at": "2015-09-04T14:40:36Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/693#discussion_r36617196",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/693",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/36617196"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/693#discussion_r36617196"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/693"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40474467",
        "pull_request_review_id": null,
        "id": 40474467,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0NDY3",
        "diff_hunk": "@@ -5,6 +5,7 @@\n from django.contrib.auth import authenticate\n from django.shortcuts import redirect\n from django.template import TemplateDoesNotExist, RequestContext, loader\n+from django.template import enginesssssssssssssssssssss",
        "path": "social/strategies/django_strategy.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "aca207abf20e34c292db3305ebc2cb8672ba9414",
        "original_commit_id": "aca207abf20e34c292db3305ebc2cb8672ba9414",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's that?\n",
        "created_at": "2015-09-25T20:54:17Z",
        "updated_at": "2015-09-25T20:54:17Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/731#discussion_r40474467",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/731",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40474467"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/731#discussion_r40474467"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/731"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40493125",
        "pull_request_review_id": null,
        "id": 40493125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzMTI1",
        "diff_hunk": "@@ -5,6 +5,7 @@\n from django.contrib.auth import authenticate\n from django.shortcuts import redirect\n from django.template import TemplateDoesNotExist, RequestContext, loader\n+from django.template import enginesssssssssssssssssssss",
        "path": "social/strategies/django_strategy.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "aca207abf20e34c292db3305ebc2cb8672ba9414",
        "original_commit_id": "aca207abf20e34c292db3305ebc2cb8672ba9414",
        "user": {
            "login": "muhammad-ammar",
            "id": 6767924,
            "node_id": "MDQ6VXNlcjY3Njc5MjQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6767924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/muhammad-ammar",
            "html_url": "https://github.com/muhammad-ammar",
            "followers_url": "https://api.github.com/users/muhammad-ammar/followers",
            "following_url": "https://api.github.com/users/muhammad-ammar/following{/other_user}",
            "gists_url": "https://api.github.com/users/muhammad-ammar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/muhammad-ammar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/muhammad-ammar/subscriptions",
            "organizations_url": "https://api.github.com/users/muhammad-ammar/orgs",
            "repos_url": "https://api.github.com/users/muhammad-ammar/repos",
            "events_url": "https://api.github.com/users/muhammad-ammar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/muhammad-ammar/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oops..was testing something...closing it\n",
        "created_at": "2015-09-26T12:23:39Z",
        "updated_at": "2015-09-26T12:23:39Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/731#discussion_r40493125",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/731",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40493125"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/731#discussion_r40493125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/731"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826362",
        "pull_request_review_id": null,
        "id": 40826362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MzYy",
        "diff_hunk": "@@ -360,3 +437,16 @@ def request_access_token(self, *args, **kwargs):\n         response = self.get_json(*args, **kwargs)\n         self.id_token = self.validate_and_return_id_token(response['id_token'])\n         return response\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+        return self.get_json(self.USERINFO_URL,\n+                             headers={'Authorization': 'Bearer {0}'.format(access_token)})\n+\n+    def get_user_details(self, response):\n+        return {\n+            'username': response.get('preferred_username'),\n+            'email': response.get('email'),\n+            'fullname': response.get('name'),\n+            'first_name': response.get('given_name'),\n+            'last_name': response.get('family_name'),\n+        }",
        "path": "social/backends/open_id.py",
        "position": 218,
        "original_position": 205,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "nickcatal",
            "id": 474748,
            "node_id": "MDQ6VXNlcjQ3NDc0OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/474748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickcatal",
            "html_url": "https://github.com/nickcatal",
            "followers_url": "https://api.github.com/users/nickcatal/followers",
            "following_url": "https://api.github.com/users/nickcatal/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickcatal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickcatal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickcatal/subscriptions",
            "organizations_url": "https://api.github.com/users/nickcatal/orgs",
            "repos_url": "https://api.github.com/users/nickcatal/repos",
            "events_url": "https://api.github.com/users/nickcatal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickcatal/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be closer to\n\n``` python\n        values = {'username': '', 'email': '', 'fullname': '',\n                  'first_name': '', 'last_name': ''}\n\n        fullname = values.get('name') or ''\n        first_name = values.get('given_name') or ''\n        last_name = values.get('family_name') or ''\n        email = values.get('email') or ''\n\n        if not fullname and first_name and last_name:\n            fullname = first_name + ' ' + last_name\n        elif fullname:\n            try:\n                first_name, last_name = fullname.rsplit(' ', 1)\n            except ValueError:\n                last_name = fullname\n\n        username_key = self.setting('USERNAME_KEY') or self.USERNAME_KEY\n        values.update({'fullname': fullname, 'first_name': first_name,\n                       'last_name': last_name,\n                       'username': values.get(username_key) or\n                                   (first_name.title() + last_name.title()),\n                       'email': email})\n        return values\n```\n",
        "created_at": "2015-09-30T17:47:56Z",
        "updated_at": "2015-10-06T08:02:27Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826362",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826362"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826435",
        "pull_request_review_id": null,
        "id": 40826435,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NDM1",
        "diff_hunk": "@@ -271,17 +275,78 @@ def __init__(self, handle, secret='', issued=0, lifetime=0, assoc_type=''):\n         self.assoc_type = assoc_type  # as state\n \n \n+class _cache(object):\n+    \"\"\"\n+    Cache decorator that caches the return value of a method for a specified time.\n+\n+    It maintains a cache per class, so subclasses have a different cache entry\n+    for the same cached method.\n+\n+    Does not work for methods with arguments.\n+    \"\"\"\n+    def __init__(self, ttl):\n+        self.ttl = ttl\n+        self.cache = {}\n+\n+    def __call__(self, fn):\n+        def wrapped(this):\n+            now = time.time()\n+            last_updated = None\n+            cached_value = None\n+            if this.__class__ in self.cache:\n+                last_updated, cached_value = self.cache[this.__class__]\n+            if not cached_value or now - last_updated > self.ttl:\n+                cached_value = fn(this)\n+                self.cache[this.__class__] = (now, cached_value)\n+            return cached_value\n+        return wrapped\n+\n+\n+def _autoconf(name):\n+    \"\"\"\n+    fget helper function to fetch the value of a property from the OIDC\n+    configuration\n+    \"\"\"\n+    def getter(self):\n+        return self.oidc_config().get(name)\n+    return getter\n+\n+\n class OpenIdConnectAuth(BaseOAuth2):\n     \"\"\"\n     Base class for Open ID Connect backends.\n \n     Currently only the code response type is supported.\n     \"\"\"\n-    ID_TOKEN_ISSUER = None\n-    DEFAULT_SCOPE = ['openid']\n+    # Override OIDC_ENDPOINT in your subclass to enable autoconfig of OIDC\n+    OIDC_ENDPOINT = None\n+\n+    DEFAULT_SCOPE = ['openid', 'profile', 'email']\n     EXTRA_DATA = ['id_token', 'refresh_token', ('sub', 'id')]\n-    # Set after access_token is retrieved\n-    id_token = None\n+    REDIRECT_STATE = False\n+    ACCESS_TOKEN_METHOD = 'POST'\n+    REVOKE_TOKEN_METHOD = 'GET'",
        "path": "social/backends/open_id.py",
        "position": 77,
        "original_position": 71,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "nickcatal",
            "id": 474748,
            "node_id": "MDQ6VXNlcjQ3NDc0OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/474748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickcatal",
            "html_url": "https://github.com/nickcatal",
            "followers_url": "https://api.github.com/users/nickcatal/followers",
            "following_url": "https://api.github.com/users/nickcatal/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickcatal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickcatal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickcatal/subscriptions",
            "organizations_url": "https://api.github.com/users/nickcatal/orgs",
            "repos_url": "https://api.github.com/users/nickcatal/repos",
            "events_url": "https://api.github.com/users/nickcatal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickcatal/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There should be a `USERNAME_KEY = 'preferred_username'`\n",
        "created_at": "2015-09-30T17:48:30Z",
        "updated_at": "2015-10-06T08:02:27Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826435",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826435"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826435"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826612",
        "pull_request_review_id": null,
        "id": 40826612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NjEy",
        "diff_hunk": "@@ -350,6 +413,20 @@ def validate_and_return_id_token(self, id_token):\n             self.remove_nonce(nonce_obj.id)\n         else:\n             raise AuthTokenError(self, 'Incorrect id_token: nonce')\n+\n+    def validate_and_return_id_token(self, jws):\n+        \"\"\"\n+        Validates the id_token according to the steps at\n+        http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation.\n+        \"\"\"\n+        try:\n+            # Decode the JWT and raise an error if the sig is invalid\n+            id_token = JWS().verify_compact(jws.encode('utf-8'), self.get_jwks_keys())",
        "path": "social/backends/open_id.py",
        "position": null,
        "original_position": 180,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "nickcatal",
            "id": 474748,
            "node_id": "MDQ6VXNlcjQ3NDc0OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/474748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickcatal",
            "html_url": "https://github.com/nickcatal",
            "followers_url": "https://api.github.com/users/nickcatal/followers",
            "following_url": "https://api.github.com/users/nickcatal/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickcatal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickcatal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickcatal/subscriptions",
            "organizations_url": "https://api.github.com/users/nickcatal/orgs",
            "repos_url": "https://api.github.com/users/nickcatal/repos",
            "events_url": "https://api.github.com/users/nickcatal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickcatal/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These long lines should likely be at or below 80 characters to match the rest of the file/app\n",
        "created_at": "2015-09-30T17:49:56Z",
        "updated_at": "2015-10-06T08:02:27Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826612",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40826612"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r40826612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40896205",
        "pull_request_review_id": null,
        "id": 40896205,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2MjA1",
        "diff_hunk": "@@ -360,3 +437,16 @@ def request_access_token(self, *args, **kwargs):\n         response = self.get_json(*args, **kwargs)\n         self.id_token = self.validate_and_return_id_token(response['id_token'])\n         return response\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+        return self.get_json(self.USERINFO_URL,\n+                             headers={'Authorization': 'Bearer {0}'.format(access_token)})\n+\n+    def get_user_details(self, response):\n+        return {\n+            'username': response.get('preferred_username'),\n+            'email': response.get('email'),\n+            'fullname': response.get('name'),\n+            'first_name': response.get('given_name'),\n+            'last_name': response.get('family_name'),\n+        }",
        "path": "social/backends/open_id.py",
        "position": 218,
        "original_position": 205,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "mvschaik",
            "id": 1256916,
            "node_id": "MDQ6VXNlcjEyNTY5MTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1256916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvschaik",
            "html_url": "https://github.com/mvschaik",
            "followers_url": "https://api.github.com/users/mvschaik/followers",
            "following_url": "https://api.github.com/users/mvschaik/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvschaik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvschaik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvschaik/subscriptions",
            "organizations_url": "https://api.github.com/users/mvschaik/orgs",
            "repos_url": "https://api.github.com/users/mvschaik/repos",
            "events_url": "https://api.github.com/users/mvschaik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvschaik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I appreciate your suggestion, but these fields have been standardized for OIDC in http://openid.net/specs/openid-connect-core-1_0.html#rfc.section.5.1. I therefore would prefer to use these as a sensible default. I guess most users would override the OpenIdConnectAuth to customize this for the actual values the backend provides (if the backend doesn't adhere to the RFC).\n",
        "created_at": "2015-10-01T09:50:19Z",
        "updated_at": "2015-10-06T08:02:27Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r40896205",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40896205"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r40896205"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40940781",
        "pull_request_review_id": null,
        "id": 40940781,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwNzgx",
        "diff_hunk": "@@ -360,3 +437,16 @@ def request_access_token(self, *args, **kwargs):\n         response = self.get_json(*args, **kwargs)\n         self.id_token = self.validate_and_return_id_token(response['id_token'])\n         return response\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+        return self.get_json(self.USERINFO_URL,\n+                             headers={'Authorization': 'Bearer {0}'.format(access_token)})\n+\n+    def get_user_details(self, response):\n+        return {\n+            'username': response.get('preferred_username'),\n+            'email': response.get('email'),\n+            'fullname': response.get('name'),\n+            'first_name': response.get('given_name'),\n+            'last_name': response.get('family_name'),\n+        }",
        "path": "social/backends/open_id.py",
        "position": 218,
        "original_position": 205,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "nickcatal",
            "id": 474748,
            "node_id": "MDQ6VXNlcjQ3NDc0OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/474748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickcatal",
            "html_url": "https://github.com/nickcatal",
            "followers_url": "https://api.github.com/users/nickcatal/followers",
            "following_url": "https://api.github.com/users/nickcatal/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickcatal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickcatal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickcatal/subscriptions",
            "organizations_url": "https://api.github.com/users/nickcatal/orgs",
            "repos_url": "https://api.github.com/users/nickcatal/repos",
            "events_url": "https://api.github.com/users/nickcatal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickcatal/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was mostly talking about `username_key = self.setting('USERNAME_KEY') or self.USERNAME_KEY`\n\nWhich lets users override the username in their own settings file and exists in other backends.\n",
        "created_at": "2015-10-01T17:22:37Z",
        "updated_at": "2015-10-06T08:02:27Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r40940781",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40940781"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r40940781"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41234811",
        "pull_request_review_id": null,
        "id": 41234811,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM0ODEx",
        "diff_hunk": "@@ -360,3 +437,16 @@ def request_access_token(self, *args, **kwargs):\n         response = self.get_json(*args, **kwargs)\n         self.id_token = self.validate_and_return_id_token(response['id_token'])\n         return response\n+\n+    def user_data(self, access_token, *args, **kwargs):\n+        return self.get_json(self.USERINFO_URL,\n+                             headers={'Authorization': 'Bearer {0}'.format(access_token)})\n+\n+    def get_user_details(self, response):\n+        return {\n+            'username': response.get('preferred_username'),\n+            'email': response.get('email'),\n+            'fullname': response.get('name'),\n+            'first_name': response.get('given_name'),\n+            'last_name': response.get('family_name'),\n+        }",
        "path": "social/backends/open_id.py",
        "position": 218,
        "original_position": 205,
        "commit_id": "db81203f540eefb831fee300a9aef6c1bf8a79a7",
        "original_commit_id": "c21874edbe087e41f16469e4ebe6141007d0fa80",
        "user": {
            "login": "mvschaik",
            "id": 1256916,
            "node_id": "MDQ6VXNlcjEyNTY5MTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1256916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mvschaik",
            "html_url": "https://github.com/mvschaik",
            "followers_url": "https://api.github.com/users/mvschaik/followers",
            "following_url": "https://api.github.com/users/mvschaik/following{/other_user}",
            "gists_url": "https://api.github.com/users/mvschaik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mvschaik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mvschaik/subscriptions",
            "organizations_url": "https://api.github.com/users/mvschaik/orgs",
            "repos_url": "https://api.github.com/users/mvschaik/repos",
            "events_url": "https://api.github.com/users/mvschaik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mvschaik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've added the USERNAME_KEY setting.\n",
        "created_at": "2015-10-06T08:03:23Z",
        "updated_at": "2015-10-06T08:03:23Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/747#discussion_r41234811",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/747",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41234811"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/747#discussion_r41234811"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/747"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41724694",
        "pull_request_review_id": null,
        "id": 41724694,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0Njk0",
        "diff_hunk": "@@ -1,27 +1,44 @@\n \"\"\"URLs module\"\"\"\n+from django import VERSION\n from django.conf import settings\n-try:\n-    from django.conf.urls import patterns, url\n-except ImportError:\n-    # Django < 1.4\n-    from django.conf.urls.defaults import patterns, url\n-\n-\n from social.utils import setting_name\n \n \n extra = getattr(settings, setting_name('TRAILING_SLASH'), True) and '/' or ''\n \n+if VERSION >= (1, 8):\n+    from django.conf.urls import url\n+    from social.apps.django_app import views\n+\n+    urlpatterns = [\n+        # authentication / association\n+        url(r'^login/(?P<backend>[^/]+){0}$'.format(extra), views.auth,\n+            name='begin'),\n+        url(r'^complete/(?P<backend>[^/]+){0}$'.format(extra), views.complete,\n+            name='complete'),\n+        # disconnection\n+        url(r'^disconnect/(?P<backend>[^/]+){0}$'.format(extra), views.disconnect,\n+            name='disconnect'),\n+        url(r'^disconnect/(?P<backend>[^/]+)/(?P<association_id>[^/]+){0}$'\n+            .format(extra), views.disconnect, name='disconnect_individual'),\n+    ]\n+else:  # Django < 1.8, deprecated code, remove it after Django 1.9 release (in December 2015)",
        "path": "social/apps/django_app/urls.py",
        "position": 32,
        "original_position": 32,
        "commit_id": "b466321eb04fb85f590a6428350508143d31032d",
        "original_commit_id": "b466321eb04fb85f590a6428350508143d31032d",
        "user": null,
        "body": "https://www.djangoproject.com/download/\n\nlook for supported versions\n\nsupport for Django < 1.7 is potential security threat for users\n",
        "created_at": "2015-10-12T05:30:45Z",
        "updated_at": "2015-10-12T05:30:45Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/758#discussion_r41724694",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/758",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41724694"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/758#discussion_r41724694"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41724720",
        "pull_request_review_id": null,
        "id": 41724720,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI0NzIw",
        "diff_hunk": "@@ -10,8 +14,13 @@\n except ImportError:\n     from django.utils.encoding import smart_text\n \n+if VERSION >= (1, 8):\n+    _JSONFieldBase = models.TextField\n+else:  # Django < 1.8, deprecated code, remove it after Django 1.9 release (in December 2015)",
        "path": "social/apps/django_app/default/fields.py",
        "position": 17,
        "original_position": 17,
        "commit_id": "b466321eb04fb85f590a6428350508143d31032d",
        "original_commit_id": "b466321eb04fb85f590a6428350508143d31032d",
        "user": null,
        "body": "https://www.djangoproject.com/download/\n\nlook for supported versions\n\nsupport for Django < 1.7 is potential security threat for users\n",
        "created_at": "2015-10-12T05:31:09Z",
        "updated_at": "2015-10-12T05:31:09Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/758#discussion_r41724720",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/758",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/41724720"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/758#discussion_r41724720"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/758"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/46722669",
        "pull_request_review_id": null,
        "id": 46722669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIyNjY5",
        "diff_hunk": "@@ -12,7 +12,7 @@\n class InstagramOAuth2(BaseOAuth2):\n     name = 'instagram'\n     AUTHORIZATION_URL = 'https://instagram.com/oauth/authorize'",
        "path": "social/backends/instagram.py",
        "position": 3,
        "original_position": 3,
        "commit_id": "63c5fa2b1b2536a7bca3d5c2f47c203e4d8e0ba5",
        "original_commit_id": "63c5fa2b1b2536a7bca3d5c2f47c203e4d8e0ba5",
        "user": {
            "login": "dvdhpkns",
            "id": 2280020,
            "node_id": "MDQ6VXNlcjIyODAwMjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2280020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dvdhpkns",
            "html_url": "https://github.com/dvdhpkns",
            "followers_url": "https://api.github.com/users/dvdhpkns/followers",
            "following_url": "https://api.github.com/users/dvdhpkns/following{/other_user}",
            "gists_url": "https://api.github.com/users/dvdhpkns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dvdhpkns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dvdhpkns/subscriptions",
            "organizations_url": "https://api.github.com/users/dvdhpkns/orgs",
            "repos_url": "https://api.github.com/users/dvdhpkns/repos",
            "events_url": "https://api.github.com/users/dvdhpkns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dvdhpkns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@matthowland the AUTH URL needs to change as well.  \n",
        "created_at": "2015-12-04T19:37:12Z",
        "updated_at": "2015-12-04T19:37:12Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/795#discussion_r46722669",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/795",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/46722669"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/795#discussion_r46722669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/795"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40765469",
        "pull_request_review_id": null,
        "id": 40765469,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDY5",
        "diff_hunk": "@@ -24,7 +24,7 @@ class User(BaseModel):\n     cache = {}\n     _is_active = True\n \n-    def __init__(self, username, email=None):\n+    def __init__(self, username, email=None, **extra_user_fields):",
        "path": "social/tests/models.py",
        "position": 5,
        "original_position": 5,
        "commit_id": "d8d711946bbf6c4eddfb8d43c1cf37f1fc03e89c",
        "original_commit_id": "592154b9489dc76ec909c352135005e5b7ef92af",
        "user": {
            "login": "nickcatal",
            "id": 474748,
            "node_id": "MDQ6VXNlcjQ3NDc0OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/474748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickcatal",
            "html_url": "https://github.com/nickcatal",
            "followers_url": "https://api.github.com/users/nickcatal/followers",
            "following_url": "https://api.github.com/users/nickcatal/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickcatal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickcatal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickcatal/subscriptions",
            "organizations_url": "https://api.github.com/users/nickcatal/orgs",
            "repos_url": "https://api.github.com/users/nickcatal/repos",
            "events_url": "https://api.github.com/users/nickcatal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickcatal/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Added this here to better mimic what Django allows during the create_user step and thus better test `USER_FIELDS`\n",
        "created_at": "2015-09-30T07:33:43Z",
        "updated_at": "2016-01-02T06:45:00Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/750#discussion_r40765469",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/750",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/40765469"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/750#discussion_r40765469"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/750"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/52588708",
        "pull_request_review_id": null,
        "id": 52588708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg4NzA4",
        "diff_hunk": "@@ -63,6 +68,11 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n+        if self.setting(\"RESPECT_X_FORWARDED_HEADERS\", False):\n+            forwarded_host = self.request.META.get('HTTP_X_FORWARDED_PORT')\n+            if forwarded_host:\n+                return forwarded_host",
        "path": "social/strategies/django_strategy.py",
        "position": null,
        "original_position": 19,
        "commit_id": "cf2c6f89e287c827808e00180e55e0dc62be1f4a",
        "original_commit_id": "172d90e15f361dd5f0061307e8650b0c0e5997ca",
        "user": {
            "login": "omarkhan",
            "id": 793379,
            "node_id": "MDQ6VXNlcjc5MzM3OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/793379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omarkhan",
            "html_url": "https://github.com/omarkhan",
            "followers_url": "https://api.github.com/users/omarkhan/followers",
            "following_url": "https://api.github.com/users/omarkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/omarkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omarkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omarkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/omarkhan/orgs",
            "repos_url": "https://api.github.com/users/omarkhan/repos",
            "events_url": "https://api.github.com/users/omarkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omarkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@e-kolpakov don't you want to return the port here rather than the host?\n",
        "created_at": "2016-02-11T11:20:40Z",
        "updated_at": "2016-02-11T11:25:18Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/741#discussion_r52588708",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/741",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/52588708"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/741#discussion_r52588708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/52589268",
        "pull_request_review_id": null,
        "id": 52589268,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg5MjY4",
        "diff_hunk": "@@ -63,6 +68,11 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n+        if self.setting(\"RESPECT_X_FORWARDED_HEADERS\", False):\n+            forwarded_host = self.request.META.get('HTTP_X_FORWARDED_PORT')\n+            if forwarded_host:\n+                return forwarded_host",
        "path": "social/strategies/django_strategy.py",
        "position": null,
        "original_position": 19,
        "commit_id": "cf2c6f89e287c827808e00180e55e0dc62be1f4a",
        "original_commit_id": "172d90e15f361dd5f0061307e8650b0c0e5997ca",
        "user": {
            "login": "e-kolpakov",
            "id": 3330048,
            "node_id": "MDQ6VXNlcjMzMzAwNDg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3330048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/e-kolpakov",
            "html_url": "https://github.com/e-kolpakov",
            "followers_url": "https://api.github.com/users/e-kolpakov/followers",
            "following_url": "https://api.github.com/users/e-kolpakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/e-kolpakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/e-kolpakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/e-kolpakov/subscriptions",
            "organizations_url": "https://api.github.com/users/e-kolpakov/orgs",
            "repos_url": "https://api.github.com/users/e-kolpakov/repos",
            "events_url": "https://api.github.com/users/e-kolpakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/e-kolpakov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@omarkhan good catch\n",
        "created_at": "2016-02-11T11:25:45Z",
        "updated_at": "2016-02-11T11:25:45Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/741#discussion_r52589268",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/741",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/52589268"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/741#discussion_r52589268"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/741"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/55727886",
        "pull_request_review_id": null,
        "id": 55727886,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzI3ODg2",
        "diff_hunk": "@@ -27,7 +27,7 @@ def get_user_details(self, response):\n         \"\"\"Return user details from Twitter account\"\"\"\n         fullname, first_name, last_name = self.get_user_names(response['name'])\n         return {'username': response['screen_name'],\n-                'email': '',  # not supplied\n+                'email': response.get('email'),",
        "path": "social/backends/twitter.py",
        "position": null,
        "original_position": 5,
        "commit_id": "3ef264ea86f0ad88e402d84d1be61420c39eb39b",
        "original_commit_id": "c184dfb08b9b543ba597eee564f9742c6dcd85ae",
        "user": {
            "login": "yprez",
            "id": 667418,
            "node_id": "MDQ6VXNlcjY2NzQxOA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/667418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yprez",
            "html_url": "https://github.com/yprez",
            "followers_url": "https://api.github.com/users/yprez/followers",
            "following_url": "https://api.github.com/users/yprez/following{/other_user}",
            "gists_url": "https://api.github.com/users/yprez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yprez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yprez/subscriptions",
            "organizations_url": "https://api.github.com/users/yprez/orgs",
            "repos_url": "https://api.github.com/users/yprez/repos",
            "events_url": "https://api.github.com/users/yprez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yprez/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it should be `response.get('email','')` for backwards compatibility (empty string and not None when email is missing).\n",
        "created_at": "2016-03-10T18:42:48Z",
        "updated_at": "2016-03-11T21:03:09Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/853#discussion_r55727886",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/853",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/55727886"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/853#discussion_r55727886"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/853"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/55888000",
        "pull_request_review_id": null,
        "id": 55888000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODg4MDAw",
        "diff_hunk": "@@ -27,7 +27,7 @@ def get_user_details(self, response):\n         \"\"\"Return user details from Twitter account\"\"\"\n         fullname, first_name, last_name = self.get_user_names(response['name'])\n         return {'username': response['screen_name'],\n-                'email': '',  # not supplied\n+                'email': response.get('email'),",
        "path": "social/backends/twitter.py",
        "position": null,
        "original_position": 5,
        "commit_id": "3ef264ea86f0ad88e402d84d1be61420c39eb39b",
        "original_commit_id": "c184dfb08b9b543ba597eee564f9742c6dcd85ae",
        "user": {
            "login": "hellvix",
            "id": 16166414,
            "node_id": "MDQ6VXNlcjE2MTY2NDE0",
            "avatar_url": "https://avatars1.githubusercontent.com/u/16166414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hellvix",
            "html_url": "https://github.com/hellvix",
            "followers_url": "https://api.github.com/users/hellvix/followers",
            "following_url": "https://api.github.com/users/hellvix/following{/other_user}",
            "gists_url": "https://api.github.com/users/hellvix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hellvix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hellvix/subscriptions",
            "organizations_url": "https://api.github.com/users/hellvix/orgs",
            "repos_url": "https://api.github.com/users/hellvix/repos",
            "events_url": "https://api.github.com/users/hellvix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hellvix/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You are right.\n",
        "created_at": "2016-03-11T21:02:10Z",
        "updated_at": "2016-03-11T21:03:09Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/853#discussion_r55888000",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/853",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/55888000"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/853#discussion_r55888000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/853"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58319704",
        "pull_request_review_id": null,
        "id": 58319704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzE5NzA0",
        "diff_hunk": "@@ -24,10 +25,11 @@ def social_user(backend, uid, user=None, *args, **kwargs):\n             raise AuthAlreadyAssociated(backend, msg)\n         elif not user:\n             user = social.user\n+        new_association = False\n     return {'social': social,\n             'user': user,\n             'is_new': user is None,\n-            'new_association': False}\n+            'new_association': new_association}",
        "path": "social/pipeline/social_auth.py",
        "position": 17,
        "original_position": 17,
        "commit_id": "63bcd3135d9655505717f598af366fba7348d062",
        "original_commit_id": "63bcd3135d9655505717f598af366fba7348d062",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should be simplified to `new_association: social is None`.\n",
        "created_at": "2016-04-03T23:29:04Z",
        "updated_at": "2016-04-03T23:29:04Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/800#discussion_r58319704",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/800",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58319704"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/800#discussion_r58319704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/800"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58141756",
        "pull_request_review_id": null,
        "id": 58141756,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTQxNzU2",
        "diff_hunk": "@@ -166,7 +166,22 @@ def partial_pipeline_data(backend, user=None, *args, **kwargs):\n     if partial:\n         idx, backend_name, xargs, xkwargs = \\\n             backend.strategy.partial_from_session(partial)\n+\n+        partial_matches_request = False\n+\n         if backend_name == backend.name:\n+            partial_matches_request = True\n+\n+            req_data = backend.strategy.request_data()\n+            # only need to check if current request specifies the ID_KEY\n+            if backend.ID_KEY in req_data:",
        "path": "social/utils.py",
        "position": null,
        "original_position": 12,
        "commit_id": "7da22bfe2106b6041b4ac72dda177ff732291fc2",
        "original_commit_id": "c787aec965f06b65c2bed6ef0d0d1f9d557fa0d2",
        "user": {
            "login": "SeanHayes",
            "id": 134373,
            "node_id": "MDQ6VXNlcjEzNDM3Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134373?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanHayes",
            "html_url": "https://github.com/SeanHayes",
            "followers_url": "https://api.github.com/users/SeanHayes/followers",
            "following_url": "https://api.github.com/users/SeanHayes/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanHayes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanHayes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanHayes/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanHayes/orgs",
            "repos_url": "https://api.github.com/users/SeanHayes/repos",
            "events_url": "https://api.github.com/users/SeanHayes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanHayes/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Normally when resuming a pipeline, `request_data` will be empty. We only need to check if new data was provided.\n",
        "created_at": "2016-03-31T23:01:04Z",
        "updated_at": "2016-04-04T21:08:23Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/882#discussion_r58141756",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/882",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58141756"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/882#discussion_r58141756"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/882"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58591089",
        "pull_request_review_id": null,
        "id": 58591089,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTkxMDg5",
        "diff_hunk": "@@ -63,7 +62,14 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n-        return self.request.META['SERVER_PORT']\n+        try:  # django >= 1.9\n+            return self.request.get_port()\n+        except AttributeError:  # django < 1.9\n+            host_parts = self.request.get_host().split(':')\n+            try:\n+                return host_parts[1]\n+            except IndexError:\n+                return None",
        "path": "social/strategies/django_strategy.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "original_commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "user": {
            "login": "dcmoore-gd",
            "id": 850271,
            "node_id": "MDQ6VXNlcjg1MDI3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/850271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmoore-gd",
            "html_url": "https://github.com/dcmoore-gd",
            "followers_url": "https://api.github.com/users/dcmoore-gd/followers",
            "following_url": "https://api.github.com/users/dcmoore-gd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmoore-gd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmoore-gd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmoore-gd/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmoore-gd/orgs",
            "repos_url": "https://api.github.com/users/dcmoore-gd/repos",
            "events_url": "https://api.github.com/users/dcmoore-gd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmoore-gd/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wouldn't `80` be the default?  Or `self.request.META['SERVER_PORT']`?\n",
        "created_at": "2016-04-05T18:29:07Z",
        "updated_at": "2016-04-05T18:29:07Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/841#discussion_r58591089",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/841",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58591089"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/841#discussion_r58591089"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/841"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58649835",
        "pull_request_review_id": null,
        "id": 58649835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjQ5ODM1",
        "diff_hunk": "@@ -63,7 +62,14 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n-        return self.request.META['SERVER_PORT']\n+        try:  # django >= 1.9\n+            return self.request.get_port()\n+        except AttributeError:  # django < 1.9\n+            host_parts = self.request.get_host().split(':')\n+            try:\n+                return host_parts[1]\n+            except IndexError:\n+                return None",
        "path": "social/strategies/django_strategy.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "original_commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "user": {
            "login": "omarkhan",
            "id": 793379,
            "node_id": "MDQ6VXNlcjc5MzM3OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/793379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omarkhan",
            "html_url": "https://github.com/omarkhan",
            "followers_url": "https://api.github.com/users/omarkhan/followers",
            "following_url": "https://api.github.com/users/omarkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/omarkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omarkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omarkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/omarkhan/orgs",
            "repos_url": "https://api.github.com/users/omarkhan/repos",
            "events_url": "https://api.github.com/users/omarkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omarkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should only hit this code path if the port is 80 or 443, in which case it will be stripped anyway: https://github.com/onelogin/python-saml/blob/efb2515e0a12fb43271d5d6b8bddcbaa4a61f451/src/onelogin/saml2/utils.py#L268-L271\n",
        "created_at": "2016-04-06T04:30:01Z",
        "updated_at": "2016-04-06T04:30:01Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/841#discussion_r58649835",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/841",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58649835"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/841#discussion_r58649835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/841"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58720480",
        "pull_request_review_id": null,
        "id": 58720480,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzIwNDgw",
        "diff_hunk": "@@ -63,7 +62,14 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n-        return self.request.META['SERVER_PORT']\n+        try:  # django >= 1.9\n+            return self.request.get_port()\n+        except AttributeError:  # django < 1.9\n+            host_parts = self.request.get_host().split(':')\n+            try:\n+                return host_parts[1]\n+            except IndexError:\n+                return None",
        "path": "social/strategies/django_strategy.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "original_commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "user": {
            "login": "dcmoore-gd",
            "id": 850271,
            "node_id": "MDQ6VXNlcjg1MDI3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/850271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmoore-gd",
            "html_url": "https://github.com/dcmoore-gd",
            "followers_url": "https://api.github.com/users/dcmoore-gd/followers",
            "following_url": "https://api.github.com/users/dcmoore-gd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmoore-gd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmoore-gd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmoore-gd/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmoore-gd/orgs",
            "repos_url": "https://api.github.com/users/dcmoore-gd/repos",
            "events_url": "https://api.github.com/users/dcmoore-gd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmoore-gd/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So shouldn't the `except AttributeError:` path just return `self.request.META['SERVER_PORT']` then instead of splitting the host?\n\nOr does looking at the port from get_host() emulate using `USE_X_FORWARDED_PORT`?  In that case, it seems like the `except IndexError:` should still fall back to `self.request.META['SERVER_PORT']` so we get at least `80` or `443` rather than `None`?\n",
        "created_at": "2016-04-06T14:58:36Z",
        "updated_at": "2016-04-06T14:58:36Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/841#discussion_r58720480",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/841",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58720480"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/841#discussion_r58720480"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/841"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58818613",
        "pull_request_review_id": null,
        "id": 58818613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODE4NjEz",
        "diff_hunk": "@@ -63,7 +62,14 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n-        return self.request.META['SERVER_PORT']\n+        try:  # django >= 1.9\n+            return self.request.get_port()\n+        except AttributeError:  # django < 1.9\n+            host_parts = self.request.get_host().split(':')\n+            try:\n+                return host_parts[1]\n+            except IndexError:\n+                return None",
        "path": "social/strategies/django_strategy.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "original_commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "user": {
            "login": "omarkhan",
            "id": 793379,
            "node_id": "MDQ6VXNlcjc5MzM3OQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/793379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omarkhan",
            "html_url": "https://github.com/omarkhan",
            "followers_url": "https://api.github.com/users/omarkhan/followers",
            "following_url": "https://api.github.com/users/omarkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/omarkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omarkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omarkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/omarkhan/orgs",
            "repos_url": "https://api.github.com/users/omarkhan/repos",
            "events_url": "https://api.github.com/users/omarkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omarkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`USE_X_FORWARDED_PORT` was introduced in django 1.9, and if we're on the `except AttributeError:` path it means we're using an older version so we can't use that setting. In this case, [`get_host()` will respect the `USE_X_FORWARDED_HOST` setting](https://github.com/django/django/blob/stable/1.8.x/django/http/request.py#L75-L86), and the reverse proxy can be configured to pass the port along with the `X-Forwarded-Host` header.\n\nIf you prefer we can fallback to using `self.request.META['SERVER_PORT']` from `except IndexError:`. The behaviour would be the same, as the port would just be stripped in the python-saml code later on.\n",
        "created_at": "2016-04-07T04:43:12Z",
        "updated_at": "2016-04-07T04:43:12Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/841#discussion_r58818613",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/841",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58818613"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/841#discussion_r58818613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/841"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58896116",
        "pull_request_review_id": null,
        "id": 58896116,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk2MTE2",
        "diff_hunk": "@@ -63,7 +62,14 @@ def request_path(self):\n \n     def request_port(self):\n         \"\"\"Port in use for this request\"\"\"\n-        return self.request.META['SERVER_PORT']\n+        try:  # django >= 1.9\n+            return self.request.get_port()\n+        except AttributeError:  # django < 1.9\n+            host_parts = self.request.get_host().split(':')\n+            try:\n+                return host_parts[1]\n+            except IndexError:\n+                return None",
        "path": "social/strategies/django_strategy.py",
        "position": 22,
        "original_position": 22,
        "commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "original_commit_id": "67e8cdb27bcff4d55adf4ae4e474e95f964aa2df",
        "user": {
            "login": "dcmoore-gd",
            "id": 850271,
            "node_id": "MDQ6VXNlcjg1MDI3MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/850271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcmoore-gd",
            "html_url": "https://github.com/dcmoore-gd",
            "followers_url": "https://api.github.com/users/dcmoore-gd/followers",
            "following_url": "https://api.github.com/users/dcmoore-gd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcmoore-gd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcmoore-gd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcmoore-gd/subscriptions",
            "organizations_url": "https://api.github.com/users/dcmoore-gd/orgs",
            "repos_url": "https://api.github.com/users/dcmoore-gd/repos",
            "events_url": "https://api.github.com/users/dcmoore-gd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcmoore-gd/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I should note - I have not authority over this repo whatsoever, I'm just a fellow user of PSA, trying to help out if I can :)\n\nI'm worried about the behavior staying the same because things other than `python-saml` might be relying on `get_port()`.  Seems like the behavior in PSA shouldn't change dramatically (possibly returning `None` now) because of starting to use `USE_X_FORWARDED_HOST`.  So yeah it seems like falling back to old behavior when nothing else works might be more likely to result in the PR getting merged, but that's just my guess.\n",
        "created_at": "2016-04-07T15:51:52Z",
        "updated_at": "2016-04-07T15:51:52Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/841#discussion_r58896116",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/841",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/58896116"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/841#discussion_r58896116"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/841"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/72669362",
        "pull_request_review_id": null,
        "id": 72669362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNjY5MzYy",
        "diff_hunk": "@@ -96,6 +96,9 @@ class Association(models.Model, DjangoAssociationMixin):\n \n     class Meta:\n         db_table = 'social_auth_association'\n+        unique_together = (",
        "path": "social/apps/django_app/default/models.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "ac42c84a71568ba8289118ece49675f05e1a1ffa",
        "original_commit_id": "ac42c84a71568ba8289118ece49675f05e1a1ffa",
        "user": {
            "login": "adampalay",
            "id": 2748698,
            "node_id": "MDQ6VXNlcjI3NDg2OTg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2748698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adampalay",
            "html_url": "https://github.com/adampalay",
            "followers_url": "https://api.github.com/users/adampalay/followers",
            "following_url": "https://api.github.com/users/adampalay/following{/other_user}",
            "gists_url": "https://api.github.com/users/adampalay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adampalay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adampalay/subscriptions",
            "organizations_url": "https://api.github.com/users/adampalay/orgs",
            "repos_url": "https://api.github.com/users/adampalay/repos",
            "events_url": "https://api.github.com/users/adampalay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adampalay/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@clintonb , does specifying two fields as `unique_together` also index them together?  I know django provides [`index_together`](https://docs.djangoproject.com/en/1.9/ref/models/options/#index-together), but wasn't sure if unique_together would provide the same functionality\n",
        "created_at": "2016-07-28T17:53:11Z",
        "updated_at": "2016-07-28T17:53:11Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/969#discussion_r72669362",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/969",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/72669362"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/969#discussion_r72669362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/969"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/72670174",
        "pull_request_review_id": null,
        "id": 72670174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNjcwMTc0",
        "diff_hunk": "@@ -96,6 +96,9 @@ class Association(models.Model, DjangoAssociationMixin):\n \n     class Meta:\n         db_table = 'social_auth_association'\n+        unique_together = (",
        "path": "social/apps/django_app/default/models.py",
        "position": 4,
        "original_position": 4,
        "commit_id": "ac42c84a71568ba8289118ece49675f05e1a1ffa",
        "original_commit_id": "ac42c84a71568ba8289118ece49675f05e1a1ffa",
        "user": {
            "login": "clintonb",
            "id": 910510,
            "node_id": "MDQ6VXNlcjkxMDUxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clintonb",
            "html_url": "https://github.com/clintonb",
            "followers_url": "https://api.github.com/users/clintonb/followers",
            "following_url": "https://api.github.com/users/clintonb/following{/other_user}",
            "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions",
            "organizations_url": "https://api.github.com/users/clintonb/orgs",
            "repos_url": "https://api.github.com/users/clintonb/repos",
            "events_url": "https://api.github.com/users/clintonb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clintonb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, they behave similarly. `unique_together` takes the extra step of enforcing uniqueness in addition to the indexing.\n",
        "created_at": "2016-07-28T17:57:33Z",
        "updated_at": "2016-07-28T17:57:33Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/969#discussion_r72670174",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/969",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/72670174"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/969#discussion_r72670174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/969"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691806",
        "pull_request_review_id": null,
        "id": 74691806,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NjkxODA2",
        "diff_hunk": "@@ -10,6 +10,8 @@\n \n \n class Migration(migrations.Migration):\n+    replaces = [('social_auth', '0003_alter_email_max_length')]",
        "path": "social/apps/django_app/default/migrations/0003_alter_email_max_length.py",
        "position": null,
        "original_position": 4,
        "commit_id": "361f42235fe51f422af029f325d041407a16036c",
        "original_commit_id": "3e761cf536ac5a30e2755f617121e2287f19b849",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is `social_auth` the right value there?\n",
        "created_at": "2016-08-13T20:26:01Z",
        "updated_at": "2016-08-13T20:34:39Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691806",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/993",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691806"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691806"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/993"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691811",
        "pull_request_review_id": null,
        "id": 74691811,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NjkxODEx",
        "diff_hunk": "@@ -6,6 +6,7 @@\n \n \n class Migration(migrations.Migration):\n+    replaces = [('social_auth', '0004_auto_20160423_0400')]",
        "path": "social/apps/django_app/default/migrations/0004_auto_20160423_0400.py",
        "position": null,
        "original_position": 4,
        "commit_id": "361f42235fe51f422af029f325d041407a16036c",
        "original_commit_id": "3e761cf536ac5a30e2755f617121e2287f19b849",
        "user": {
            "login": "omab",
            "id": 91022,
            "node_id": "MDQ6VXNlcjkxMDIy",
            "avatar_url": "https://avatars0.githubusercontent.com/u/91022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omab",
            "html_url": "https://github.com/omab",
            "followers_url": "https://api.github.com/users/omab/followers",
            "following_url": "https://api.github.com/users/omab/following{/other_user}",
            "gists_url": "https://api.github.com/users/omab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omab/subscriptions",
            "organizations_url": "https://api.github.com/users/omab/orgs",
            "repos_url": "https://api.github.com/users/omab/repos",
            "events_url": "https://api.github.com/users/omab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omab/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is `social_auth` the right value there?\n",
        "created_at": "2016-08-13T20:26:05Z",
        "updated_at": "2016-08-13T20:34:39Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691811",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/993",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691811"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691811"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/993"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691894",
        "pull_request_review_id": null,
        "id": 74691894,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NjkxODk0",
        "diff_hunk": "@@ -10,6 +10,8 @@\n \n \n class Migration(migrations.Migration):\n+    replaces = [('social_auth', '0003_alter_email_max_length')]",
        "path": "social/apps/django_app/default/migrations/0003_alter_email_max_length.py",
        "position": null,
        "original_position": 4,
        "commit_id": "361f42235fe51f422af029f325d041407a16036c",
        "original_commit_id": "3e761cf536ac5a30e2755f617121e2287f19b849",
        "user": {
            "login": "clintonb",
            "id": 910510,
            "node_id": "MDQ6VXNlcjkxMDUxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clintonb",
            "html_url": "https://github.com/clintonb",
            "followers_url": "https://api.github.com/users/clintonb/followers",
            "following_url": "https://api.github.com/users/clintonb/following{/other_user}",
            "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions",
            "organizations_url": "https://api.github.com/users/clintonb/orgs",
            "repos_url": "https://api.github.com/users/clintonb/repos",
            "events_url": "https://api.github.com/users/clintonb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clintonb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2016-08-13T20:34:32Z",
        "updated_at": "2016-08-13T20:34:39Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691894",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/993",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691894"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691894"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/993"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691895",
        "pull_request_review_id": null,
        "id": 74691895,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NjkxODk1",
        "diff_hunk": "@@ -6,6 +6,7 @@\n \n \n class Migration(migrations.Migration):\n+    replaces = [('social_auth', '0004_auto_20160423_0400')]",
        "path": "social/apps/django_app/default/migrations/0004_auto_20160423_0400.py",
        "position": null,
        "original_position": 4,
        "commit_id": "361f42235fe51f422af029f325d041407a16036c",
        "original_commit_id": "3e761cf536ac5a30e2755f617121e2287f19b849",
        "user": {
            "login": "clintonb",
            "id": 910510,
            "node_id": "MDQ6VXNlcjkxMDUxMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clintonb",
            "html_url": "https://github.com/clintonb",
            "followers_url": "https://api.github.com/users/clintonb/followers",
            "following_url": "https://api.github.com/users/clintonb/following{/other_user}",
            "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions",
            "organizations_url": "https://api.github.com/users/clintonb/orgs",
            "repos_url": "https://api.github.com/users/clintonb/repos",
            "events_url": "https://api.github.com/users/clintonb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clintonb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2016-08-13T20:34:35Z",
        "updated_at": "2016-08-13T20:34:39Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691895",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/993",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/74691895"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/993#discussion_r74691895"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/993"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/100037771",
        "pull_request_review_id": 20729291,
        "id": 100037771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDAzNzc3MQ==",
        "diff_hunk": "@@ -1,5 +1,39 @@\n-from social_core.exceptions import SocialAuthBaseException, WrongBackend, \\\n-    MissingBackend, NotAllowedToDisconnect, AuthException, AuthFailed, \\\n-    AuthCanceled, AuthUnknownError, AuthTokenError, AuthMissingParameter, \\\n-    AuthStateMissing, AuthStateForbidden, AuthAlreadyAssociated, \\\n-    AuthTokenRevoked, AuthForbidden, AuthUnreachableProvider, InvalidEmail\n+from social_core.exceptions import AuthAlreadyAssociated\n+from social_core.exceptions import AuthCanceled as AuthCanceledBase\n+from social_core.exceptions import AuthException\n+from social_core.exceptions import AuthFailed as AuthFailedBase\n+from social_core.exceptions import AuthForbidden\n+from social_core.exceptions import AuthMissingParameter\n+from social_core.exceptions import AuthStateForbidden\n+from social_core.exceptions import AuthStateMissing\n+from social_core.exceptions import AuthTokenError\n+from social_core.exceptions import AuthTokenRevoked\n+from social_core.exceptions import AuthUnknownError\n+from social_core.exceptions import AuthUnreachableProvider\n+from social_core.exceptions import InvalidEmail\n+from social_core.exceptions import MissingBackend\n+from social_core.exceptions import NotAllowedToDisconnect\n+from social_core.exceptions import SocialAuthBaseException\n+from social_core.exceptions import WrongBackend\n+\n+\n+class AuthFailed(AuthFailedBase):\n+    \"\"\"Auth process failed for some reason.\"\"\"\n+    def __str__(self):\n+        msg = super(AuthFailed, self).__str__()\n+        if msg == 'access_denied':\n+            return 'Authentication process was cancelled'\n+        return 'Authentication failed: {0}'.format(msg)\n+\n+\n+class AuthCanceled(AuthCanceledBase):\n+    \"\"\"Auth process was canceled by user.\"\"\"\n+    def __init__(self, *args, **kwargs):\n+        self.response = kwargs.pop('response', None)\n+        super(AuthCanceled, self).__init__(*args, **kwargs)\n+\n+    def __str__(self):\n+        msg = super(AuthCanceled, self).__str__()\n+        if msg:\n+            return 'Authentication process cancelled: {0}'.format(msg)",
        "path": "social/exceptions.py",
        "position": 43,
        "original_position": 43,
        "commit_id": "57f963f766f81bca6417dd5ea91bbfd238f20e24",
        "original_commit_id": "57f963f766f81bca6417dd5ea91bbfd238f20e24",
        "user": {
            "login": "SammyM",
            "id": 1324289,
            "node_id": "MDQ6VXNlcjEzMjQyODk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1324289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SammyM",
            "html_url": "https://github.com/SammyM",
            "followers_url": "https://api.github.com/users/SammyM/followers",
            "following_url": "https://api.github.com/users/SammyM/following{/other_user}",
            "gists_url": "https://api.github.com/users/SammyM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SammyM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SammyM/subscriptions",
            "organizations_url": "https://api.github.com/users/SammyM/orgs",
            "repos_url": "https://api.github.com/users/SammyM/repos",
            "events_url": "https://api.github.com/users/SammyM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SammyM/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can this message please be changed to `Connecting to your account has been cancelled`?",
        "created_at": "2017-02-08T10:47:26Z",
        "updated_at": "2017-02-08T10:49:28Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/1088#discussion_r100037771",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/1088",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/100037771"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/1088#discussion_r100037771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/1088"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/100038022",
        "pull_request_review_id": 20729291,
        "id": 100038022,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDAzODAyMg==",
        "diff_hunk": "@@ -1,5 +1,39 @@\n-from social_core.exceptions import SocialAuthBaseException, WrongBackend, \\\n-    MissingBackend, NotAllowedToDisconnect, AuthException, AuthFailed, \\\n-    AuthCanceled, AuthUnknownError, AuthTokenError, AuthMissingParameter, \\\n-    AuthStateMissing, AuthStateForbidden, AuthAlreadyAssociated, \\\n-    AuthTokenRevoked, AuthForbidden, AuthUnreachableProvider, InvalidEmail\n+from social_core.exceptions import AuthAlreadyAssociated\n+from social_core.exceptions import AuthCanceled as AuthCanceledBase\n+from social_core.exceptions import AuthException\n+from social_core.exceptions import AuthFailed as AuthFailedBase\n+from social_core.exceptions import AuthForbidden\n+from social_core.exceptions import AuthMissingParameter\n+from social_core.exceptions import AuthStateForbidden\n+from social_core.exceptions import AuthStateMissing\n+from social_core.exceptions import AuthTokenError\n+from social_core.exceptions import AuthTokenRevoked\n+from social_core.exceptions import AuthUnknownError\n+from social_core.exceptions import AuthUnreachableProvider\n+from social_core.exceptions import InvalidEmail\n+from social_core.exceptions import MissingBackend\n+from social_core.exceptions import NotAllowedToDisconnect\n+from social_core.exceptions import SocialAuthBaseException\n+from social_core.exceptions import WrongBackend\n+\n+\n+class AuthFailed(AuthFailedBase):\n+    \"\"\"Auth process failed for some reason.\"\"\"\n+    def __str__(self):\n+        msg = super(AuthFailed, self).__str__()\n+        if msg == 'access_denied':\n+            return 'Authentication process was cancelled'",
        "path": "social/exceptions.py",
        "position": 30,
        "original_position": 30,
        "commit_id": "57f963f766f81bca6417dd5ea91bbfd238f20e24",
        "original_commit_id": "57f963f766f81bca6417dd5ea91bbfd238f20e24",
        "user": {
            "login": "SammyM",
            "id": 1324289,
            "node_id": "MDQ6VXNlcjEzMjQyODk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1324289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SammyM",
            "html_url": "https://github.com/SammyM",
            "followers_url": "https://api.github.com/users/SammyM/followers",
            "following_url": "https://api.github.com/users/SammyM/following{/other_user}",
            "gists_url": "https://api.github.com/users/SammyM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SammyM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SammyM/subscriptions",
            "organizations_url": "https://api.github.com/users/SammyM/orgs",
            "repos_url": "https://api.github.com/users/SammyM/repos",
            "events_url": "https://api.github.com/users/SammyM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SammyM/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure in what situation this fail class would be called, but could we please change the message to `Connecting to your account has been cancelled`? Or maybe `Connecting to your account has failed`?",
        "created_at": "2017-02-08T10:48:53Z",
        "updated_at": "2017-02-08T10:49:28Z",
        "html_url": "https://github.com/omab/python-social-auth/pull/1088#discussion_r100038022",
        "pull_request_url": "https://api.github.com/repos/omab/python-social-auth/pulls/1088",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/comments/100038022"
            },
            "html": {
                "href": "https://github.com/omab/python-social-auth/pull/1088#discussion_r100038022"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/omab/python-social-auth/pulls/1088"
            }
        }
    }
]