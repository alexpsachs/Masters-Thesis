[
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3419646",
        "pull_request_review_id": null,
        "id": 3419646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MTk2NDY=",
        "diff_hunk": "@@ -67,15 +67,24 @@ define(\n       // and a default function to be called.\n       this.trigger = function() {\n         var $element, type, data, event, defaultFn;\n-        var args = utils.toArray(arguments);\n-        var lastArg = args[args.length - 1];\n+\n+        // unpacking arguments by hand benchmarked faster",
        "path": "lib/component.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4d773d14eb41c1367a84d102cc3c0f3519f1cfb3",
        "original_commit_id": "93171c8d081edc108ffc742d60cc6a80b7b61602",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Looks like you're not using the array methods any more, so you don't need to convert arguments to an array.\nAlso applies in some cases below.\n",
        "created_at": "2013-03-18T20:10:33Z",
        "updated_at": "2013-03-18T21:24:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/77#discussion_r3419646",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/77",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3419646"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/77#discussion_r3419646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3420968",
        "pull_request_review_id": null,
        "id": 3420968,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjA5Njg=",
        "diff_hunk": "@@ -67,15 +67,24 @@ define(\n       // and a default function to be called.\n       this.trigger = function() {\n         var $element, type, data, event, defaultFn;\n-        var args = utils.toArray(arguments);\n-        var lastArg = args[args.length - 1];\n+\n+        // unpacking arguments by hand benchmarked faster",
        "path": "lib/component.js",
        "position": null,
        "original_position": 7,
        "commit_id": "4d773d14eb41c1367a84d102cc3c0f3519f1cfb3",
        "original_commit_id": "93171c8d081edc108ffc742d60cc6a80b7b61602",
        "user": {
            "login": "sayrer",
            "id": 253473,
            "node_id": "MDQ6VXNlcjI1MzQ3Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/253473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sayrer",
            "html_url": "https://github.com/sayrer",
            "followers_url": "https://api.github.com/users/sayrer/followers",
            "following_url": "https://api.github.com/users/sayrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sayrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sayrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sayrer/subscriptions",
            "organizations_url": "https://api.github.com/users/sayrer/orgs",
            "repos_url": "https://api.github.com/users/sayrer/repos",
            "events_url": "https://api.github.com/users/sayrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sayrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2013-03-18T21:12:04Z",
        "updated_at": "2013-03-18T21:24:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/77#discussion_r3420968",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/77",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3420968"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/77#discussion_r3420968"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421007",
        "pull_request_review_id": null,
        "id": 3421007,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjEwMDc=",
        "diff_hunk": "@@ -103,19 +108,24 @@ define(\n \n       this.on = function() {\n         var $element, type, callback, originalCb;\n-        var args = utils.toArray(arguments);\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];",
        "path": "lib/component.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "4d773d14eb41c1367a84d102cc3c0f3519f1cfb3",
        "original_commit_id": "418d5dd53aa09d7383da601242c339ee2dcb1f3d",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this called \"origin\"?\n",
        "created_at": "2013-03-18T21:14:10Z",
        "updated_at": "2013-03-18T21:24:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/77#discussion_r3421007",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/77",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421007"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/77#discussion_r3421007"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421077",
        "pull_request_review_id": null,
        "id": 3421077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjEwNzc=",
        "diff_hunk": "@@ -139,14 +149,20 @@ define(\n \n       this.off = function() {\n         var $element, type, callback;\n-        var args = utils.toArray(arguments);\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];",
        "path": "lib/component.js",
        "position": null,
        "original_position": 62,
        "commit_id": "4d773d14eb41c1367a84d102cc3c0f3519f1cfb3",
        "original_commit_id": "418d5dd53aa09d7383da601242c339ee2dcb1f3d",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "don't need origin here.\n",
        "created_at": "2013-03-18T21:17:27Z",
        "updated_at": "2013-03-18T21:24:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/77#discussion_r3421077",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/77",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421077"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/77#discussion_r3421077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421149",
        "pull_request_review_id": null,
        "id": 3421149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjExNDk=",
        "diff_hunk": "@@ -103,19 +108,24 @@ define(\n \n       this.on = function() {\n         var $element, type, callback, originalCb;\n-        var args = utils.toArray(arguments);\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];",
        "path": "lib/component.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "4d773d14eb41c1367a84d102cc3c0f3519f1cfb3",
        "original_commit_id": "418d5dd53aa09d7383da601242c339ee2dcb1f3d",
        "user": {
            "login": "sayrer",
            "id": 253473,
            "node_id": "MDQ6VXNlcjI1MzQ3Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/253473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sayrer",
            "html_url": "https://github.com/sayrer",
            "followers_url": "https://api.github.com/users/sayrer/followers",
            "following_url": "https://api.github.com/users/sayrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sayrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sayrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sayrer/subscriptions",
            "organizations_url": "https://api.github.com/users/sayrer/orgs",
            "repos_url": "https://api.github.com/users/sayrer/repos",
            "events_url": "https://api.github.com/users/sayrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sayrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I challenged kpk to think of a better name. we couldn't, and besides, it was previously known as \"args.pop()\"\n",
        "created_at": "2013-03-18T21:20:59Z",
        "updated_at": "2013-03-18T21:24:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/77#discussion_r3421149",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/77",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3421149"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/77#discussion_r3421149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/77"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3882946",
        "pull_request_review_id": null,
        "id": 3882946,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5NDY=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+<!DOCTYPE html>\n+<html>\n+  <head>\n+    <meta charset=\"utf-8\">\n+    <title>Flight Mail Unit Tests</title>\n+    <link rel=\"stylesheet\" href=\"../../components/bootstrap/css/bootstrap.css\">\n+    <link rel=\"stylesheet\" href=\"../../components/jasmine/jasmine-bootstrap.css\">\n+\n+    <script src=\"../../components/jquery/jquery.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-shim.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-sham.js\"></script>\n+\n+    <script src=\"../../components/requirejs/require.js\"></script>\n+\n+    <script src=\"../../components/jasmine/jasmine.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-jquery.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-bootstrap.js\"></script>\n+    <script src=\"../../components/flight-jasmine/flight-jasmine.js\"></script>\n+\n+\n+    <script src=\"../../components/phantom-jasmine/console-runner.js\"></script>\n+\n+    <script src=\"../run_tests.js\"></script>\n+\n+    <style>\n+      body { background: #333; }\n+    </style>\n+  </head>\n+\n+  <body>\n+  <script>\n+\n+    require.config({\n+      urlArgs: \"bust=\" + (new Date()).getTime(),\n+      baseUrl: '../../',\n+      paths: {\n+        bower_root: './components'",
        "path": "demo/test/run/jasmine_test.html",
        "position": null,
        "original_position": 37,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "a9f5d3c9bb7bd7b9af66912a16630d4199e8ac8b",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This could alias 'flight' to 'components/flight' instead. Would be cleaner and avoid modifying the flight-jasmine library code.\n",
        "created_at": "2013-04-19T22:40:07Z",
        "updated_at": "2013-04-22T18:23:48Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3882946",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3882946"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3882946"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3888156",
        "pull_request_review_id": null,
        "id": 3888156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNTY=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+<!DOCTYPE html>\n+<html>\n+  <head>\n+    <meta charset=\"utf-8\">\n+    <title>Flight Mail Unit Tests</title>\n+    <link rel=\"stylesheet\" href=\"../../components/bootstrap/css/bootstrap.css\">\n+    <link rel=\"stylesheet\" href=\"../../components/jasmine/jasmine-bootstrap.css\">\n+\n+    <script src=\"../../components/jquery/jquery.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-shim.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-sham.js\"></script>\n+\n+    <script src=\"../../components/requirejs/require.js\"></script>\n+\n+    <script src=\"../../components/jasmine/jasmine.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-jquery.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-bootstrap.js\"></script>\n+    <script src=\"../../components/flight-jasmine/flight-jasmine.js\"></script>\n+\n+\n+    <script src=\"../../components/phantom-jasmine/console-runner.js\"></script>\n+\n+    <script src=\"../run_tests.js\"></script>\n+\n+    <style>\n+      body { background: #333; }\n+    </style>\n+  </head>\n+\n+  <body>\n+  <script>\n+\n+    require.config({\n+      urlArgs: \"bust=\" + (new Date()).getTime(),\n+      baseUrl: '../../',\n+      paths: {\n+        bower_root: './components'",
        "path": "demo/test/run/jasmine_test.html",
        "position": null,
        "original_position": 37,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "a9f5d3c9bb7bd7b9af66912a16630d4199e8ac8b",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2013-04-21T20:04:20Z",
        "updated_at": "2013-04-22T18:23:48Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3888156",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3888156"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3888156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3905588",
        "pull_request_review_id": null,
        "id": 3905588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU1ODg=",
        "diff_hunk": "@@ -15,6 +15,7 @@ define(\n     function composeBox() {\n \n       this.defaultAttrs({\n+        dataStore: dataStore,",
        "path": "demo/app/component_data/compose_box.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this serializable? Looks like a complex object.\n",
        "created_at": "2013-04-22T21:45:50Z",
        "updated_at": "2013-04-22T21:45:50Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3905588",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3905588"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3905588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3905887",
        "pull_request_review_id": null,
        "id": 3905887,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4ODc=",
        "diff_hunk": "@@ -15,6 +15,7 @@ define(\n     function composeBox() {\n \n       this.defaultAttrs({\n+        dataStore: dataStore,",
        "path": "demo/app/component_data/compose_box.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it's serializable\n",
        "created_at": "2013-04-22T22:03:55Z",
        "updated_at": "2013-04-22T22:03:55Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3905887",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3905887"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3905887"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906217",
        "pull_request_review_id": null,
        "id": 3906217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyMTc=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+<!DOCTYPE html>\n+<html>\n+  <head>\n+    <meta charset=\"utf-8\">\n+    <title>Flight Mail Unit Tests</title>\n+    <link rel=\"stylesheet\" href=\"../../components/bootstrap/css/bootstrap.css\">\n+    <link rel=\"stylesheet\" href=\"../../components/jasmine/jasmine-bootstrap.css\">\n+\n+    <script src=\"../../components/jquery/jquery.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-shim.js\"></script>\n+    <script src=\"../../components/es5-shim/es5-sham.js\"></script>\n+\n+    <script src=\"../../components/requirejs/require.js\"></script>\n+\n+    <script src=\"../../components/jasmine/jasmine.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-jquery.js\"></script>\n+    <script src=\"../../components/jasmine/jasmine-bootstrap.js\"></script>\n+    <script src=\"../../components/flight-jasmine/flight-jasmine.js\"></script>\n+\n+\n+    <script src=\"../../components/phantom-jasmine/console-runner.js\"></script>\n+\n+    <script src=\"../run_tests.js\"></script>\n+\n+    <style>\n+      body { background: #333; }\n+    </style>\n+  </head>\n+\n+  <body>\n+  <script>\n+\n+    require.config({\n+      //urlArgs: \"bust=\" + (new Date()).getTime(),\n+      baseUrl: '../../',\n+      paths: {\n+        flight: './components/flight'\n+      },\n+    });\n+\n+    window.consoleReporter = new jasmine.ConsoleReporter();\n+    jasmine.getEnv().addReporter(consoleReporter);\n+\n+    jasmine.getFixtures().fixturesPath = '../fixtures';\n+\n+    if(window.location.search) {",
        "path": "demo/test/run/jasmine_test.html",
        "position": 46,
        "original_position": 46,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't think you need this block.\n",
        "created_at": "2013-04-22T22:25:00Z",
        "updated_at": "2013-04-22T22:25:00Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3906217",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906217"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3906217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906257",
        "pull_request_review_id": null,
        "id": 3906257,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyNTc=",
        "diff_hunk": "@@ -0,0 +1,36 @@\n+\"use strict\";\n+\n+describeComponent('app/component_ui/move_to_selector', function () {",
        "path": "demo/test/tests/component_ui/move_to_selector_spec.js",
        "position": 3,
        "original_position": 3,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not a fan of the space between function and the parens. But, hey, whatever.\n",
        "created_at": "2013-04-22T22:26:51Z",
        "updated_at": "2013-04-22T22:26:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3906257",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906257"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3906257"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906284",
        "pull_request_review_id": null,
        "id": 3906284,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYyODQ=",
        "diff_hunk": "@@ -0,0 +1,58 @@\n+// Flight Test runner\n+var jasmineStarted;\n+var jasmineErrored;\n+\n+function startJasmine(component) {\n+  if (!jasmineStarted) {\n+\n+    afterEach(function(){\n+      component.teardownAll()\n+    });\n+\n+    jasmine.getEnv().addReporter(new jasmine.BootstrapReporter());\n+    jasmine.getEnv().execute();\n+    jasmineStarted = true;\n+  }\n+}\n+\n+function runTests(tests) {\n+\n+  if (window.location.search.length > 1) {",
        "path": "demo/test/run_tests.js",
        "position": 20,
        "original_position": 20,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I recommend removing this block.\n",
        "created_at": "2013-04-22T22:28:12Z",
        "updated_at": "2013-04-22T22:28:12Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3906284",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906284"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3906284"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906339",
        "pull_request_review_id": null,
        "id": 3906339,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzMzk=",
        "diff_hunk": "@@ -0,0 +1,58 @@\n+// Flight Test runner\n+var jasmineStarted;\n+var jasmineErrored;\n+\n+function startJasmine(component) {\n+  if (!jasmineStarted) {\n+\n+    afterEach(function(){\n+      component.teardownAll()\n+    });\n+\n+    jasmine.getEnv().addReporter(new jasmine.BootstrapReporter());\n+    jasmine.getEnv().execute();\n+    jasmineStarted = true;\n+  }\n+}\n+\n+function runTests(tests) {\n+\n+  if (window.location.search.length > 1) {\n+    // this allows you to pass the module name in the querystring.  Used by the documentation HTML.\n+    // example: test.html?module=app/ui/design\n+    if (location.search.match('module=')) {\n+      var moduleId = location.getParameter('module');\n+      var testFile = 'test/' + moduleId + '_spec';\n+      tests = [testFile];\n+    }\n+  }\n+\n+  tests.unshift('components/flight/lib/component');\n+\n+  require(tests, startJasmine)",
        "path": "demo/test/run_tests.js",
        "position": 32,
        "original_position": 32,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "kennethkufluk",
            "id": 156496,
            "node_id": "MDQ6VXNlcjE1NjQ5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/156496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kennethkufluk",
            "html_url": "https://github.com/kennethkufluk",
            "followers_url": "https://api.github.com/users/kennethkufluk/followers",
            "following_url": "https://api.github.com/users/kennethkufluk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kennethkufluk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kennethkufluk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kennethkufluk/subscriptions",
            "organizations_url": "https://api.github.com/users/kennethkufluk/orgs",
            "repos_url": "https://api.github.com/users/kennethkufluk/repos",
            "events_url": "https://api.github.com/users/kennethkufluk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kennethkufluk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this dependable? Do you ever see flakiness from the Jasmines?\n",
        "created_at": "2013-04-22T22:31:03Z",
        "updated_at": "2013-04-22T22:31:03Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3906339",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906339"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3906339"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906481",
        "pull_request_review_id": null,
        "id": 3906481,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0ODE=",
        "diff_hunk": "@@ -0,0 +1,58 @@\n+// Flight Test runner\n+var jasmineStarted;\n+var jasmineErrored;\n+\n+function startJasmine(component) {\n+  if (!jasmineStarted) {\n+\n+    afterEach(function(){\n+      component.teardownAll()\n+    });\n+\n+    jasmine.getEnv().addReporter(new jasmine.BootstrapReporter());\n+    jasmine.getEnv().execute();\n+    jasmineStarted = true;\n+  }\n+}\n+\n+function runTests(tests) {\n+\n+  if (window.location.search.length > 1) {\n+    // this allows you to pass the module name in the querystring.  Used by the documentation HTML.\n+    // example: test.html?module=app/ui/design\n+    if (location.search.match('module=')) {\n+      var moduleId = location.getParameter('module');\n+      var testFile = 'test/' + moduleId + '_spec';\n+      tests = [testFile];\n+    }\n+  }\n+\n+  tests.unshift('components/flight/lib/component');\n+\n+  require(tests, startJasmine)",
        "path": "demo/test/run_tests.js",
        "position": 32,
        "original_position": 32,
        "commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "original_commit_id": "5a0ff581ce2a739b5a3c3903180023ca9bd14944",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "not so far\n",
        "created_at": "2013-04-22T22:39:55Z",
        "updated_at": "2013-04-22T22:39:55Z",
        "html_url": "https://github.com/flightjs/flight/pull/102#discussion_r3906481",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/102",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/3906481"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/102#discussion_r3906481"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/102"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/4503616",
        "pull_request_review_id": null,
        "id": 4503616,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MTY=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+define(\n+  [\n+    './utils',\n+    './registry',\n+    '../tools/debug/debug'\n+  ],\n+  function(utils, registry, debug) {\n+  //common mixin allocates basic functionality - used by all component prototypes\n+  //callback context is bound to component\n+  var componentId = 0;\n+\n+  function teardownInstance(instanceInfo){\n+    instanceInfo.events.slice().forEach(function(event) {\n+      var args = [event.type];\n+\n+      event.element && args.unshift(event.element);\n+      (typeof event.callback == 'function') && args.push(event.callback);\n+\n+      this.off.apply(this, args);\n+    }, instanceInfo.instance);\n+  }\n+\n+  function checkSerializable(type, data) {\n+    try {\n+      window.postMessage(data, '*');\n+    } catch(e) {\n+      console.log('unserializable data for event',type,':',data);\n+      throw new Error(\n+        [\"The event\", type, \"on component\", this.toString(), \"was triggered with non-serializable data\"].join(\" \")\n+      );\n+    }\n+  }\n+\n+  function withBase() {\n+\n+    // delegate trigger, bind and unbind to an element\n+    // if $element not supplied, use component's node\n+    // other arguments are passed on\n+    // event can be either a string specifying the type\n+    // of the event, or a hash specifying both the type\n+    // and a default function to be called.\n+    this.trigger = function() {\n+      var $element, type, data, event, defaultFn;\n+      var lastIndex = arguments.length - 1, lastArg = arguments[lastIndex];\n+\n+      if (typeof lastArg != \"string\" && !(lastArg && lastArg.defaultBehavior)) {\n+        lastIndex--;\n+        data = lastArg;\n+      }\n+\n+      if (lastIndex == 1) {\n+        $element = $(arguments[0]);\n+        event = arguments[1];\n+      } else {\n+        $element = this.$node;\n+        event = arguments[0];\n+      }\n+\n+      if (event.defaultBehavior) {\n+        defaultFn = event.defaultBehavior;\n+        event = $.Event(event.type);\n+      }\n+\n+      type = event.type || event;\n+\n+      if (debug.enabled && window.postMessage) {\n+        checkSerializable.call(this, type, data);\n+      }\n+\n+      if (typeof this.attr.eventData === 'object') {\n+        data = $.extend(true, {}, this.attr.eventData, data);\n+      }\n+\n+      $element.trigger((event || type), data);\n+\n+      if (defaultFn && !event.isDefaultPrevented()) {\n+        (this[defaultFn] || defaultFn).call(this);\n+      }\n+\n+      return $element;\n+    };\n+\n+    this.on = function() {\n+      var $element, type, callback, originalCb;\n+      var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n+\n+      if (typeof origin == \"object\") {\n+        //delegate callback\n+        originalCb = utils.delegate(\n+          this.resolveDelegateRules(origin)\n+        );\n+      } else {\n+        originalCb = origin;\n+      }\n+\n+      if (lastIndex == 2) {\n+        $element = $(arguments[0]);\n+        type = arguments[1];\n+      } else {\n+        $element = this.$node;\n+        type = arguments[0];\n+      }\n+\n+      if (typeof originalCb != 'function' && typeof originalCb != 'object') {\n+        throw new Error(\"Unable to bind to '\" + type + \"' because the given callback is not a function or an object\");\n+      }\n+\n+      callback = originalCb.bind(this);\n+      callback.target = originalCb;\n+\n+      // if the original callback is already branded by jQuery's guid, copy it to the context-bound version\n+      if (originalCb.guid) {\n+        callback.guid = originalCb.guid;\n+      }\n+\n+      $element.on(type, callback);\n+\n+      // get jquery's guid from our bound fn, so unbinding will work\n+      originalCb.guid = callback.guid;\n+\n+      return callback;\n+    };\n+\n+    this.off = function() {\n+      var $element, type, callback;\n+      var lastIndex = arguments.length - 1;\n+\n+      if (typeof arguments[lastIndex] == \"function\") {\n+        callback = arguments[lastIndex];\n+        lastIndex -= 1;\n+      }\n+\n+      if (lastIndex == 1) {\n+        $element = $(arguments[0]);\n+        type = arguments[1];\n+      } else {\n+        $element = this.$node;\n+        type = arguments[0];\n+      }\n+\n+      return $element.off(type, callback);\n+    };\n+\n+    this.resolveDelegateRules = function(ruleInfo) {\n+      var rules = {};\n+\n+      Object.keys(ruleInfo).forEach(function(r) {\n+        if (!r in this.attr) {\n+          throw new Error('Component \"' + this.toString() + '\" wants to listen on \"' + r + '\" but no such attribute was defined.');\n+        }\n+        rules[this.attr[r]] = ruleInfo[r];\n+      }, this);\n+\n+      return rules;\n+    };\n+\n+    this.defaultAttrs = function(defaults) {\n+      utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n+    };\n+\n+    this.select = function(attributeKey) {\n+      return this.$node.find(this.attr[attributeKey]);\n+    };\n+\n+    this.initialize = function(node, attrs) {\n+      attrs = attrs || {};\n+      this.identity = componentId++;\n+\n+      if (!node) {\n+        throw new Error(\"Component needs a node\");\n+      }\n+\n+      if (node.jquery) {\n+        this.node = node[0];\n+        this.$node = node;\n+      } else {\n+        this.node = node;\n+        this.$node = $(node);\n+      }\n+\n+      //merge defaults with supplied options\n+      //put options in attr.__proto__ to avoid merge overhead\n+      var attr = Object.create(attrs);\n+      for (var key in this.defaults) {\n+        if (!attrs.hasOwnProperty(key)) {\n+          attr[key] = this.defaults[key];\n+        }\n+      }\n+\n+      this.attr = attr;\n+\n+      Object.keys(this.defaults || {}).forEach(function(key) {\n+        if (this.defaults[key] === null && this.attr[key] === null) {\n+          throw new Error('Required attribute \"' + key + '\" not specified in attachTo for component \"' + this.toString() + '\".');\n+        }\n+      }, this);\n+\n+      return this;\n+    }\n+\n+    this.teardown = function() {\n+      teardownInstance(registry.findInstanceInfo(this));\n+    };\n+  }\n+\n+  return withBase;\n+});",
        "path": "lib/base.js",
        "position": 207,
        "original_position": 207,
        "commit_id": "54544c80e13a62e974ddc70fbd85922551c6aba3",
        "original_commit_id": "54544c80e13a62e974ddc70fbd85922551c6aba3",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no newline at end fo file\n",
        "created_at": "2013-06-03T16:43:30Z",
        "updated_at": "2013-06-03T16:43:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/118#discussion_r4503616",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/118",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/4503616"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/118#discussion_r4503616"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/118"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262236",
        "pull_request_review_id": null,
        "id": 5262236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMzY=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+# Base API\n+\n+The base API shared by Flight [components](component_api.md) and\n+[mixins](mixin_api.md).\n+\n+## this.defaultAttrs(object)\n+\n+Most components and mixins need to define attributes. In Flight, default values\n+are assigned by passing an object to the `defaultAttrs` function.\n+\n+```js\n+this.defaultAttrs({\n+  buttonClass: 'js-button',\n+  text: 'Click me'\n+});\n+```\n+\n+The object will be assigned to, or merged with, the `attr` property of the\n+component or mixin. It can be accessed accordingly:\n+\n+```js\n+this.attr.buttonClass;\n+```\n+\n+These can be overridden in options...\n+\n+```js\n+/* attach button with options */\n+\n+Button.attachTo(\"#foo\", {\n+  text: \"Don't click me\",\n+  buttonClass: \"js-not-a-button\"\n+});\n+```\n+\n+...or by [mixins](mixin_api.md).\n+\n+## this.select(selector)\n+\n+The `select` method takes an attribute as its argument. It must be a CSS",
        "path": "doc/base_api.md",
        "position": null,
        "original_position": 40,
        "commit_id": "974348772901e82beb3a9e2bb27718caf2fee53e",
        "original_commit_id": "82f86eec9a1d23eab4644851a095121efa681c14",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't look quite right. The example is referencing a key in the object passed to `defaultAttrs`, rather than a CSS selector.\n",
        "created_at": "2013-07-18T07:32:35Z",
        "updated_at": "2013-07-23T06:25:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/136#discussion_r5262236",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/136",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262236"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/136#discussion_r5262236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/136"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262240",
        "pull_request_review_id": null,
        "id": 5262240,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyNDA=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+# Base API\n+\n+The base API shared by Flight [components](component_api.md) and\n+[mixins](mixin_api.md).\n+\n+## this.defaultAttrs(object)\n+\n+Most components and mixins need to define attributes. In Flight, default values",
        "path": "doc/base_api.md",
        "position": null,
        "original_position": 8,
        "commit_id": "974348772901e82beb3a9e2bb27718caf2fee53e",
        "original_commit_id": "82f86eec9a1d23eab4644851a095121efa681c14",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Capitalize 'Components' and 'Mixins'?\n",
        "created_at": "2013-07-18T07:33:21Z",
        "updated_at": "2013-07-23T06:25:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/136#discussion_r5262240",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/136",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262240"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/136#discussion_r5262240"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/136"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262256",
        "pull_request_review_id": null,
        "id": 5262256,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyNTY=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+# Base API\n+\n+The base API shared by Flight [components](component_api.md) and\n+[mixins](mixin_api.md).\n+\n+## this.defaultAttrs(object)\n+\n+Most components and mixins need to define attributes. In Flight, default values\n+are assigned by passing an object to the `defaultAttrs` function.\n+\n+```js\n+this.defaultAttrs({\n+  buttonClass: 'js-button',\n+  text: 'Click me'\n+});\n+```\n+\n+The object will be assigned to, or merged with, the `attr` property of the\n+component or mixin. It can be accessed accordingly:\n+\n+```js\n+this.attr.buttonClass;\n+```\n+\n+These can be overridden in options...\n+\n+```js\n+/* attach button with options */\n+\n+Button.attachTo(\"#foo\", {\n+  text: \"Don't click me\",\n+  buttonClass: \"js-not-a-button\"\n+});\n+```\n+\n+...or by [mixins](mixin_api.md).\n+\n+## this.select(selector)\n+\n+The `select` method takes an attribute as its argument. It must be a CSS\n+selector. It will return all matching elements within the component's\n+`node`.\n+\n+This is a handy alternative to jQuery's `this.$node.find()` and prevents\n+accidental access to elements outside of `this.node`.\n+\n+```js\n+this.defaultAttrs({\n+  menuItemSelector: '.menu-item',\n+});\n+\n+this.selectMenuItem = function(e) {\n+  this.select('menuItemSelector')\n+};\n+```\n+\n+## this.initialize()\n+\n+This is an empty method attached to the prototype of every component and mixin.\n+It can be used to perform an initial setup routine when a component instance is",
        "path": "doc/base_api.md",
        "position": null,
        "original_position": 60,
        "commit_id": "974348772901e82beb3a9e2bb27718caf2fee53e",
        "original_commit_id": "82f86eec9a1d23eab4644851a095121efa681c14",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Capitalisation of 'component' again.\n",
        "created_at": "2013-07-18T07:34:10Z",
        "updated_at": "2013-07-23T06:25:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/136#discussion_r5262256",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/136",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262256"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/136#discussion_r5262256"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/136"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262296",
        "pull_request_review_id": null,
        "id": 5262296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyOTY=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+# Base API\n+\n+The base API shared by Flight [components](component_api.md) and\n+[mixins](mixin_api.md).\n+\n+## this.defaultAttrs(object)\n+\n+Most components and mixins need to define attributes. In Flight, default values\n+are assigned by passing an object to the `defaultAttrs` function.\n+\n+```js\n+this.defaultAttrs({\n+  buttonClass: 'js-button',\n+  text: 'Click me'\n+});\n+```\n+\n+The object will be assigned to, or merged with, the `attr` property of the\n+component or mixin. It can be accessed accordingly:\n+\n+```js\n+this.attr.buttonClass;\n+```\n+\n+These can be overridden in options...\n+\n+```js\n+/* attach button with options */\n+\n+Button.attachTo(\"#foo\", {\n+  text: \"Don't click me\",\n+  buttonClass: \"js-not-a-button\"\n+});\n+```\n+\n+...or by [mixins](mixin_api.md).\n+\n+## this.select(selector)\n+\n+The `select` method takes an attribute as its argument. It must be a CSS\n+selector. It will return all matching elements within the component's\n+`node`.\n+\n+This is a handy alternative to jQuery's `this.$node.find()` and prevents\n+accidental access to elements outside of `this.node`.\n+\n+```js\n+this.defaultAttrs({\n+  menuItemSelector: '.menu-item',\n+});\n+\n+this.selectMenuItem = function(e) {\n+  this.select('menuItemSelector')\n+};\n+```\n+\n+## this.initialize()\n+\n+This is an empty method attached to the prototype of every component and mixin.\n+It can be used to perform an initial setup routine when a component instance is\n+created.\n+\n+The method is augmented by supplying a function as an argument to the `after`\n+method (see the [advice API](advice_api.md) for more information). This is a\n+good place to set up event listeners that bind to callbacks.\n+\n+```js\n+this.after('initialize', function() {\n+  this.on('click', this.handleClick);\n+});\n+```\n+\n+## this.on([selector,] eventType, handler)\n+\n+This allows a component instance to listen to an event and register a callback to be\n+invoked. Flight will automatically bind the context (`this`) of the callback to\n+the component instance.\n+\n+#### `selector`: String | Element | Element collection\n+\n+Optional. Specify the DOM node(s) that should listen for the event.\n+Defaults to the component instance's `node` value.\n+\n+#### `eventType`: String\n+\n+The event type to listen for.\n+\n+#### `handler`: Function | Object\n+\n+Either a function (callback) to be invoked, or a map of targets and callbacks.\n+\n+Example of `handler` being a function:\n+\n+```js\n+this.after('initialize', function() {\n+  this.on(document, 'dataSent', this.refreshList);\n+  this.on('click', this.selectItem);\n+});\n+```\n+\n+Example of `handler` being an object that maps event targets to callbacks.\n+This is effectively event delegation; selector values are resolved, at event\n+time, by keying into the `attr` property of the component.\n+\n+```js\n+this.defaultAttrs({\n+  menuItemSelector: '.menuItem',\n+  saveButtonSelector: '#save'\n+});\n+\n+this.after('initialize', function() {\n+  this.on('click', {\n+    menuItemSelector: this.selectMenuItem,\n+    saveButtonSelector: this.saveAll\n+  });\n+});\n+```\n+\n+## this.off([selector,] eventType [, handler])\n+\n+If we no longer want a component instance to listen to an event we can use the\n+`off` method to unsubscribe.\n+\n+#### `selector`: String | Element | Element collection\n+\n+Optional. The DOM node(s) listening for the event.\n+Defaults to the component instance's `node` value.\n+\n+#### `eventType`: String | Object\n+\n+The event type being listened to.\n+\n+#### `handler`: Function | Object\n+\n+Optional. The function (callback) to detach from the component instance.\n+Defaults to the detaching all callbacks for the event.\n+\n+```js\n+function disableAllDropdowns() {\n+  this.off('#select', 'click');\n+}\n+\n+function noHighlightOnHover() {\n+  this.off('hover', this.highlight);\n+}\n+```\n+\n+Note: when a component is torn down, it automatically unsubscribes from all\n+events.\n+\n+## this.trigger([selector,] eventType [, eventPayload])\n+\n+Trigger an event.\n+\n+#### `selector`: String | Element | Element collection\n+\n+Optional. The DOM node(s) that the event will be disaptched to.\n+Defaults to the component instance's `node` value.\n+\n+#### `eventType`: String | Object\n+\n+String. The event type to be triggered.\n+\n+You can also specify a default function that will be called by the component,\n+providing nothing in the event's bubble chain invokes `preventDefault`. Default",
        "path": "doc/base_api.md",
        "position": null,
        "original_position": 165,
        "commit_id": "974348772901e82beb3a9e2bb27718caf2fee53e",
        "original_commit_id": "82f86eec9a1d23eab4644851a095121efa681c14",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "providing [that] nothing\u2026\n",
        "created_at": "2013-07-18T07:36:42Z",
        "updated_at": "2013-07-23T06:25:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/136#discussion_r5262296",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/136",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5262296"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/136#discussion_r5262296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/136"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5273630",
        "pull_request_review_id": null,
        "id": 5273630,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MzA=",
        "diff_hunk": "@@ -0,0 +1,207 @@\n+# Base API\n+\n+The base API shared by Flight [components](component_api.md) and\n+[mixins](mixin_api.md).\n+\n+## this.defaultAttrs(object)\n+\n+Most components and mixins need to define attributes. In Flight, default values\n+are assigned by passing an object to the `defaultAttrs` function.\n+\n+```js\n+this.defaultAttrs({\n+  buttonClass: 'js-button',\n+  text: 'Click me'\n+});\n+```\n+\n+The object will be assigned to, or merged with, the `attr` property of the\n+component or mixin. It can be accessed accordingly:\n+\n+```js\n+this.attr.buttonClass;\n+```\n+\n+These can be overridden in options...\n+\n+```js\n+/* attach button with options */\n+\n+Button.attachTo(\"#foo\", {\n+  text: \"Don't click me\",\n+  buttonClass: \"js-not-a-button\"\n+});\n+```\n+\n+...or by [mixins](mixin_api.md).\n+\n+## this.select(selector)\n+\n+The `select` method takes an attribute as its argument. It must be a CSS",
        "path": "doc/base_api.md",
        "position": null,
        "original_position": 40,
        "commit_id": "974348772901e82beb3a9e2bb27718caf2fee53e",
        "original_commit_id": "82f86eec9a1d23eab4644851a095121efa681c14",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"The `select` method takes an `attr` key as its argument. The value of the `attr` must be a CSS Selector.\" \n",
        "created_at": "2013-07-18T17:29:36Z",
        "updated_at": "2013-07-23T06:25:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/136#discussion_r5273630",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/136",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5273630"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/136#discussion_r5273630"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/136"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5254942",
        "pull_request_review_id": null,
        "id": 5254942,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ5NDI=",
        "diff_hunk": "@@ -1,30 +1,35 @@\n # Component API\n \n-## What is a component?\n+The [base API](base_api.md) is mixed into the Component prototype.\n \n-- A Component is nothing more than a constructor with properties mixed into its prototype.\n-- Every Component comes with a set of basic functionality such as event handling and component registration.\n-- Additionally, each Component definition mixes in a set of custom properties which describe its behavior.\n-- When a component is attached to a DOM node, a new instance of that component is created. Each component\n-instance references the DOM node via its `node` property.\n-- Component instances cannot be referenced directly; they communicate with other components via events.\n+## What is a Component?\n \n-## How do I define a component?\n+A Component is just a constructor with properties mixed into its prototype. It\n+comes with a set of basic functionality such as event handling and component\n+registration.\n+\n+Each Component _definition_ mixes in a set of custom properties which describe\n+its behavior.\n+\n+When a Component is attached to a DOM node, a new instance of that Component is\n+created. Each component instance references the DOM node via its `node`\n+property. A Component instance cannot be referenced directly; it communicates",
        "path": "doc/component_api.md",
        "position": null,
        "original_position": 24,
        "commit_id": "9c9df3f4d31c520645b67d4e1ae6a3d28c88bd38",
        "original_commit_id": "11259b73c143e6e03760b773968afe902c5f06d7",
        "user": {
            "login": "brettstimmerman",
            "id": 25062,
            "node_id": "MDQ6VXNlcjI1MDYy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettstimmerman",
            "html_url": "https://github.com/brettstimmerman",
            "followers_url": "https://api.github.com/users/brettstimmerman/followers",
            "following_url": "https://api.github.com/users/brettstimmerman/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettstimmerman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettstimmerman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettstimmerman/subscriptions",
            "organizations_url": "https://api.github.com/users/brettstimmerman/orgs",
            "repos_url": "https://api.github.com/users/brettstimmerman/repos",
            "events_url": "https://api.github.com/users/brettstimmerman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettstimmerman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The last sentence here is an important point, and isn't necessarily related to a component's relationship with the DOM. Should it stand out from the preceding paragraph?\n",
        "created_at": "2013-07-17T21:27:32Z",
        "updated_at": "2013-07-24T17:43:08Z",
        "html_url": "https://github.com/flightjs/flight/pull/137#discussion_r5254942",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5254942"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/137#discussion_r5254942"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5255136",
        "pull_request_review_id": null,
        "id": 5255136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUxMzY=",
        "diff_hunk": "@@ -37,173 +42,90 @@ By passing this function to `defineComponent` we can define a simple\n Component:\n \n ```js\n-/* mySimpleComponent.js */\n+/* my_simple_component.js */\n \n define(function(require) {\n+  var defineComponent = require('flight/lib/component');\n+  var withMyMixin = require('with_my_mixin');\n \n-  var defineComponent = require('components/flight/lib/component');\n-\n-  return defineComponent(mySimpleComponent);\n+  return defineComponent(mySimpleComponent, withMyMixin);\n \n+  // this Component's custom properties\n   function mySimpleComponent() {\n     this.doSomething = function() {\n       //...\n-    }\n+    };\n \n     this.doSomethingElse = function() {\n       //...\n-    }\n+    };\n   }\n-\n });\n ```\n \n Components make no assumptions about the existence of other objects. If you\n-were to remove all other JavaScript on the site, this component would still\n+were to remove all other JavaScript on the site, this Component would still\n work as intended.\n \n-## How do I attach a Component to a DOM node?\n-\n-Each Component constructor has an `attachTo` method which accepts two\n-arguments. The first argument is a DOM node (or a jQuery object or CSS selector\n-representing one or more DOM nodes). The second is an `options` object.  If\n-extra arguments are supplied, they are merged into the first options argument.\n-These options will be merged into the `defaults` object which is a property of\n-the component instance.\n-\n-Invoking `attachTo` will create a new instance and attach it to the supplied\n-DOM node. If the first argument resolves to one or more DOM nodes, an instance\n-will be created for each node.\n-\n-Here we are creating an instance of an Inbox Component and attaching it to a\n-node with id `inbox`. We're also passing in values for a couple of selectors\n-which will override the values defined in the components `defaults` object (if\n-they exist). More on `defaults` below.\n-\n-```js\n-/* attach an inbox component to a node with id 'inbox'*/\n-\n-define(function(require) {\n-\n-  var Inbox = require('components/inbox');\n-\n-  Inbox.attachTo('#inbox', {\n-    'nextPageSelector': '#nextPage',\n-    'previousPageSelector': '#previousPage',\n-  });\n+## defineComponent.teardownAll()\n \n-});\n-```\n-\n-It's important to understand that `attachTo` does not return the new instance,\n-or any other value. You should never need a reference to component instances -\n-they should only respond to events.\n-\n-### Initializing a component\n-\n-When a component is created we usually want it to perform an initial setup\n-routine. Every Component has an empty initialize method attached to its\n-prototype and we can augment this method by supplying a function as an argument\n-to a special `after` method. (We'll talk about `before`, `after` and `around`\n-in detail in the [advice](advice_api.md) section of this document).\n-\n-The initialize function is a good place to set up event listeners that bind to\n-callbacks.\n+On `defineComponent` (i.e., the object exported by `lib/component.js`) this",
        "path": "doc/component_api.md",
        "position": null,
        "original_position": 135,
        "commit_id": "9c9df3f4d31c520645b67d4e1ae6a3d28c88bd38",
        "original_commit_id": "11259b73c143e6e03760b773968afe902c5f06d7",
        "user": {
            "login": "brettstimmerman",
            "id": 25062,
            "node_id": "MDQ6VXNlcjI1MDYy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettstimmerman",
            "html_url": "https://github.com/brettstimmerman",
            "followers_url": "https://api.github.com/users/brettstimmerman/followers",
            "following_url": "https://api.github.com/users/brettstimmerman/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettstimmerman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettstimmerman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettstimmerman/subscriptions",
            "organizations_url": "https://api.github.com/users/brettstimmerman/orgs",
            "repos_url": "https://api.github.com/users/brettstimmerman/repos",
            "events_url": "https://api.github.com/users/brettstimmerman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettstimmerman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Drop the .js from `lib/component.js`? The rest of the docs refer to simply `lib/component`.\n",
        "created_at": "2013-07-17T21:35:00Z",
        "updated_at": "2013-07-24T17:43:08Z",
        "html_url": "https://github.com/flightjs/flight/pull/137#discussion_r5255136",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5255136"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/137#discussion_r5255136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5255294",
        "pull_request_review_id": null,
        "id": 5255294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUyOTQ=",
        "diff_hunk": "@@ -37,173 +42,90 @@ By passing this function to `defineComponent` we can define a simple\n Component:\n \n ```js\n-/* mySimpleComponent.js */\n+/* my_simple_component.js */\n \n define(function(require) {\n+  var defineComponent = require('flight/lib/component');\n+  var withMyMixin = require('with_my_mixin');\n \n-  var defineComponent = require('components/flight/lib/component');\n-\n-  return defineComponent(mySimpleComponent);\n+  return defineComponent(mySimpleComponent, withMyMixin);\n \n+  // this Component's custom properties\n   function mySimpleComponent() {\n     this.doSomething = function() {\n       //...\n-    }\n+    };\n \n     this.doSomethingElse = function() {\n       //...\n-    }\n+    };\n   }\n-\n });\n ```\n \n Components make no assumptions about the existence of other objects. If you\n-were to remove all other JavaScript on the site, this component would still\n+were to remove all other JavaScript on the site, this Component would still\n work as intended.\n \n-## How do I attach a Component to a DOM node?\n-\n-Each Component constructor has an `attachTo` method which accepts two\n-arguments. The first argument is a DOM node (or a jQuery object or CSS selector\n-representing one or more DOM nodes). The second is an `options` object.  If\n-extra arguments are supplied, they are merged into the first options argument.\n-These options will be merged into the `defaults` object which is a property of\n-the component instance.\n-\n-Invoking `attachTo` will create a new instance and attach it to the supplied\n-DOM node. If the first argument resolves to one or more DOM nodes, an instance\n-will be created for each node.\n-\n-Here we are creating an instance of an Inbox Component and attaching it to a\n-node with id `inbox`. We're also passing in values for a couple of selectors\n-which will override the values defined in the components `defaults` object (if\n-they exist). More on `defaults` below.\n-\n-```js\n-/* attach an inbox component to a node with id 'inbox'*/\n-\n-define(function(require) {\n-\n-  var Inbox = require('components/inbox');\n-\n-  Inbox.attachTo('#inbox', {\n-    'nextPageSelector': '#nextPage',\n-    'previousPageSelector': '#previousPage',\n-  });\n+## defineComponent.teardownAll()\n \n-});\n-```\n-\n-It's important to understand that `attachTo` does not return the new instance,\n-or any other value. You should never need a reference to component instances -\n-they should only respond to events.\n-\n-### Initializing a component\n-\n-When a component is created we usually want it to perform an initial setup\n-routine. Every Component has an empty initialize method attached to its\n-prototype and we can augment this method by supplying a function as an argument\n-to a special `after` method. (We'll talk about `before`, `after` and `around`\n-in detail in the [advice](advice_api.md) section of this document).\n-\n-The initialize function is a good place to set up event listeners that bind to\n-callbacks.\n+On `defineComponent` (i.e., the object exported by `lib/component.js`) this\n+method deletes every instance of every component and all their event\n+bindings.\n \n ```js\n define(function(require) {\n-\n   var defineComponent = require('flight/lib/component');\n \n-  return defineComponent(inbox);\n+  return defineComponent(navigationMenu);\n \n-  function inbox() {\n-    //define custom functions here\n-    //...\n+  function navigationMenu() {\n+    this.resetEverything = function() {\n+      // remove every component instance and all event listeners\n+      defineComponent.teardownAll();\n+    };\n \n-    // now initialize the component\n-    this.after('initialize', function() {\n-      this.on('click', doThisThing);\n-      this.on('mouseover', doThatThing);\n-    });\n+    // ...\n   }\n-\n });\n ```\n \n-### Defaults and Options\n+## Component.attachTo(selector[, options])\n \n-In addition to functions, most components need to define attributes too. In\n-Flight, default values are assigned by passing an object to the `defaultAttrs`\n-function.\n+Create a new instance of a Component and attach it to a DOM node.\n \n-```js\n-define(function(require) {\n-  var defineComponent = require('flight/lib/component');\n+#### `selector`: String | Element | Element collection\n \n-  return defineComponent(button);\n+Specify the DOM node(s) that this component should be attached to. A new\n+Component instance will be created for each node.\n \n-  function button() {\n-    this.defaultAttrs({\n-      buttonClass: 'js-button',\n-      text: 'Click me'\n-    });\n+#### `options`: Object\n \n-    this.after('initialize', function() {\n-      //..\n-    });\n-  }\n-});\n-```\n+Optional. An object that will be merged into the `defaults` object, which is a",
        "path": "doc/component_api.md",
        "position": null,
        "original_position": 197,
        "commit_id": "9c9df3f4d31c520645b67d4e1ae6a3d28c88bd38",
        "original_commit_id": "11259b73c143e6e03760b773968afe902c5f06d7",
        "user": {
            "login": "brettstimmerman",
            "id": 25062,
            "node_id": "MDQ6VXNlcjI1MDYy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettstimmerman",
            "html_url": "https://github.com/brettstimmerman",
            "followers_url": "https://api.github.com/users/brettstimmerman/followers",
            "following_url": "https://api.github.com/users/brettstimmerman/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettstimmerman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettstimmerman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettstimmerman/subscriptions",
            "organizations_url": "https://api.github.com/users/brettstimmerman/orgs",
            "repos_url": "https://api.github.com/users/brettstimmerman/repos",
            "events_url": "https://api.github.com/users/brettstimmerman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettstimmerman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The `defaults` object doesn't appear elsewhere in the docs, but I'm assuming should be in the Base API docs, where it's mentioned in passing while describing `defaultAttrs()` and `.attr`.\n",
        "created_at": "2013-07-17T21:40:51Z",
        "updated_at": "2013-07-24T17:43:08Z",
        "html_url": "https://github.com/flightjs/flight/pull/137#discussion_r5255294",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5255294"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/137#discussion_r5255294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5258273",
        "pull_request_review_id": null,
        "id": 5258273,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyNzM=",
        "diff_hunk": "@@ -37,173 +42,90 @@ By passing this function to `defineComponent` we can define a simple\n Component:\n \n ```js\n-/* mySimpleComponent.js */\n+/* my_simple_component.js */\n \n define(function(require) {\n+  var defineComponent = require('flight/lib/component');\n+  var withMyMixin = require('with_my_mixin');\n \n-  var defineComponent = require('components/flight/lib/component');\n-\n-  return defineComponent(mySimpleComponent);\n+  return defineComponent(mySimpleComponent, withMyMixin);\n \n+  // this Component's custom properties\n   function mySimpleComponent() {\n     this.doSomething = function() {\n       //...\n-    }\n+    };\n \n     this.doSomethingElse = function() {\n       //...\n-    }\n+    };\n   }\n-\n });\n ```\n \n Components make no assumptions about the existence of other objects. If you\n-were to remove all other JavaScript on the site, this component would still\n+were to remove all other JavaScript on the site, this Component would still\n work as intended.\n \n-## How do I attach a Component to a DOM node?\n-\n-Each Component constructor has an `attachTo` method which accepts two\n-arguments. The first argument is a DOM node (or a jQuery object or CSS selector\n-representing one or more DOM nodes). The second is an `options` object.  If\n-extra arguments are supplied, they are merged into the first options argument.\n-These options will be merged into the `defaults` object which is a property of\n-the component instance.\n-\n-Invoking `attachTo` will create a new instance and attach it to the supplied\n-DOM node. If the first argument resolves to one or more DOM nodes, an instance\n-will be created for each node.\n-\n-Here we are creating an instance of an Inbox Component and attaching it to a\n-node with id `inbox`. We're also passing in values for a couple of selectors\n-which will override the values defined in the components `defaults` object (if\n-they exist). More on `defaults` below.\n-\n-```js\n-/* attach an inbox component to a node with id 'inbox'*/\n-\n-define(function(require) {\n-\n-  var Inbox = require('components/inbox');\n-\n-  Inbox.attachTo('#inbox', {\n-    'nextPageSelector': '#nextPage',\n-    'previousPageSelector': '#previousPage',\n-  });\n+## defineComponent.teardownAll()\n \n-});\n-```\n-\n-It's important to understand that `attachTo` does not return the new instance,\n-or any other value. You should never need a reference to component instances -\n-they should only respond to events.\n-\n-### Initializing a component\n-\n-When a component is created we usually want it to perform an initial setup\n-routine. Every Component has an empty initialize method attached to its\n-prototype and we can augment this method by supplying a function as an argument\n-to a special `after` method. (We'll talk about `before`, `after` and `around`\n-in detail in the [advice](advice_api.md) section of this document).\n-\n-The initialize function is a good place to set up event listeners that bind to\n-callbacks.\n+On `defineComponent` (i.e., the object exported by `lib/component.js`) this\n+method deletes every instance of every component and all their event\n+bindings.\n \n ```js\n define(function(require) {\n-\n   var defineComponent = require('flight/lib/component');\n \n-  return defineComponent(inbox);\n+  return defineComponent(navigationMenu);\n \n-  function inbox() {\n-    //define custom functions here\n-    //...\n+  function navigationMenu() {\n+    this.resetEverything = function() {\n+      // remove every component instance and all event listeners\n+      defineComponent.teardownAll();\n+    };\n \n-    // now initialize the component\n-    this.after('initialize', function() {\n-      this.on('click', doThisThing);\n-      this.on('mouseover', doThatThing);\n-    });\n+    // ...\n   }\n-\n });\n ```\n \n-### Defaults and Options\n+## Component.attachTo(selector[, options])\n \n-In addition to functions, most components need to define attributes too. In\n-Flight, default values are assigned by passing an object to the `defaultAttrs`\n-function.\n+Create a new instance of a Component and attach it to a DOM node.\n \n-```js\n-define(function(require) {\n-  var defineComponent = require('flight/lib/component');\n+#### `selector`: String | Element | Element collection\n \n-  return defineComponent(button);\n+Specify the DOM node(s) that this component should be attached to. A new\n+Component instance will be created for each node.\n \n-  function button() {\n-    this.defaultAttrs({\n-      buttonClass: 'js-button',\n-      text: 'Click me'\n-    });\n+#### `options`: Object\n \n-    this.after('initialize', function() {\n-      //..\n-    });\n-  }\n-});\n-```\n+Optional. An object that will be merged into the `defaults` object, which is a",
        "path": "doc/component_api.md",
        "position": null,
        "original_position": 197,
        "commit_id": "9c9df3f4d31c520645b67d4e1ae6a3d28c88bd38",
        "original_commit_id": "11259b73c143e6e03760b773968afe902c5f06d7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I wasn't entirely sure what the `defaults` object refers to. @angus-c, how should this be documented? \n",
        "created_at": "2013-07-18T00:13:42Z",
        "updated_at": "2013-07-24T17:43:08Z",
        "html_url": "https://github.com/flightjs/flight/pull/137#discussion_r5258273",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5258273"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/137#discussion_r5258273"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465538",
        "pull_request_review_id": null,
        "id": 5465538,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1Mzg=",
        "diff_hunk": "@@ -4,8 +4,6 @@\n // http://opensource.org/licenses/MIT\n // ==========================================\n \n-\"use strict\";",
        "path": "lib/advice.js",
        "position": null,
        "original_position": 4,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't this be moved inside the function rather than removed?\n",
        "created_at": "2013-07-30T00:02:59Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5465538",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465538"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5465538"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465569",
        "pull_request_review_id": null,
        "id": 5465569,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1Njk=",
        "diff_hunk": "@@ -1,207 +1,218 @@\n+// ==========================================\n+// Copyright 2013 Twitter, Inc\n+// Licensed under The MIT License\n+// http://opensource.org/licenses/MIT\n+// ==========================================\n+\n define(\n+\n   [\n     './utils',\n     './registry',\n     './debug'\n   ],\n+\n   function(utils, registry, debug) {\n-  //common mixin allocates basic functionality - used by all component prototypes\n-  //callback context is bound to component\n-  var componentId = 0;\n+    \"use strict\";\n \n-  function teardownInstance(instanceInfo){\n-    instanceInfo.events.slice().forEach(function(event) {\n-      var args = [event.type];\n+    //common mixin allocates basic functionality - used by all component prototypes\n+    //callback context is bound to component\n+    var componentId = 0;\n \n-      event.element && args.unshift(event.element);\n-      (typeof event.callback == 'function') && args.push(event.callback);\n+    function teardownInstance(instanceInfo){\n+      instanceInfo.events.slice().forEach(function(event) {\n+        var args = [event.type];\n \n-      this.off.apply(this, args);\n-    }, instanceInfo.instance);\n-  }\n+        event.element && args.unshift(event.element);\n+        (typeof event.callback == 'function') && args.push(event.callback);\n \n-  function checkSerializable(type, data) {\n-    try {\n-      window.postMessage(data, '*');\n-    } catch(e) {\n-      console.log('unserializable data for event',type,':',data);\n-      throw new Error(\n-        [\"The event\", type, \"on component\", this.toString(), \"was triggered with non-serializable data\"].join(\" \")\n-      );\n+        this.off.apply(this, args);\n+      }, instanceInfo.instance);\n     }\n-  }\n \n-  function withBase() {\n-\n-    // delegate trigger, bind and unbind to an element\n-    // if $element not supplied, use component's node\n-    // other arguments are passed on\n-    // event can be either a string specifying the type\n-    // of the event, or a hash specifying both the type\n-    // and a default function to be called.\n-    this.trigger = function() {\n-      var $element, type, data, event, defaultFn;\n-      var lastIndex = arguments.length - 1, lastArg = arguments[lastIndex];\n-\n-      if (typeof lastArg != \"string\" && !(lastArg && lastArg.defaultBehavior)) {\n-        lastIndex--;\n-        data = lastArg;\n-      }\n-\n-      if (lastIndex == 1) {\n-        $element = $(arguments[0]);\n-        event = arguments[1];\n-      } else {\n-        $element = this.$node;\n-        event = arguments[0];\n-      }\n-\n-      if (event.defaultBehavior) {\n-        defaultFn = event.defaultBehavior;\n-        event = $.Event(event.type);\n+    function checkSerializable(type, data) {\n+      try {\n+        window.postMessage(data, '*');\n+      } catch(e) {\n+        throw new Error(\n+          [\"The event\", type, \"on component\", this.toString(), \"was triggered with non-serializable data\"].join(\" \")\n+        );\n       }\n+    }\n \n-      type = event.type || event;\n+    function withBase() {\n+      /* jshint validthis: true */",
        "path": "lib/base.js",
        "position": null,
        "original_position": 93,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any reason to have this here rather than at the top of the file?\n",
        "created_at": "2013-07-30T00:04:16Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5465569",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465569"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5465569"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465584",
        "pull_request_review_id": null,
        "id": 5465584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1ODQ=",
        "diff_hunk": "@@ -55,14 +44,16 @@ define(\n \n       var options = utils.merge.apply(utils, args);\n \n+      /* jshint validthis: true */\n       $(selector).each(function(i, node) {\n         var rawNode = node.jQuery ? node[0] : node;\n-        var componentInfo = registry.findComponentInfo(this)\n+        var componentInfo = registry.findComponentInfo(this);\n         if (componentInfo && componentInfo.isAttachedTo(rawNode)) {\n           //already attached\n           return;\n         }\n \n+        /*jshint newcap: false, -W058 */ // W058: Missing '()' invoking a ctor.",
        "path": "lib/component.js",
        "position": null,
        "original_position": 55,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It's kind of ugly to have the linting options dotted around this file rather than aggregated all in one place.\n",
        "created_at": "2013-07-30T00:05:11Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5465584",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465584"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5465584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465595",
        "pull_request_review_id": null,
        "id": 5465595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTU=",
        "diff_hunk": "@@ -1,15 +1,19 @@\n-\"use strict\";\n+/* global console: false */\n+define(\n \n-define([], function() {\n+  [],\n \n-    var logFilter;\n+  function() {\n+    \"use strict\";\n+\n+    // var logFilter;",
        "path": "lib/debug.js",
        "position": null,
        "original_position": 12,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should this be removed?\n",
        "created_at": "2013-07-30T00:05:34Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5465595",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465595"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5465595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465612",
        "pull_request_review_id": null,
        "id": 5465612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MTI=",
        "diff_hunk": "@@ -214,12 +208,13 @@ define(\n         this.around('on', registry.on);\n         this.after('off', registry.off);\n         //debug tools may want to add advice to trigger\n+        /*global DEBUG*/",
        "path": "lib/registry.js",
        "position": null,
        "original_position": 103,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same thing about linting options being spread out.\n",
        "created_at": "2013-07-30T00:06:26Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5465612",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5465612"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5465612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5466149",
        "pull_request_review_id": null,
        "id": 5466149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYxNDk=",
        "diff_hunk": "@@ -4,8 +4,6 @@\n // http://opensource.org/licenses/MIT\n // ==========================================\n \n-\"use strict\";",
        "path": "lib/advice.js",
        "position": null,
        "original_position": 4,
        "commit_id": "31a97ff0e640365abca03249a2f45113e72f69ab",
        "original_commit_id": "91fa1221bbde0951a162eabee631a967a8aac3a7",
        "user": {
            "login": "brettstimmerman",
            "id": 25062,
            "node_id": "MDQ6VXNlcjI1MDYy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/25062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettstimmerman",
            "html_url": "https://github.com/brettstimmerman",
            "followers_url": "https://api.github.com/users/brettstimmerman/followers",
            "following_url": "https://api.github.com/users/brettstimmerman/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettstimmerman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettstimmerman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettstimmerman/subscriptions",
            "organizations_url": "https://api.github.com/users/brettstimmerman/orgs",
            "repos_url": "https://api.github.com/users/brettstimmerman/repos",
            "events_url": "https://api.github.com/users/brettstimmerman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettstimmerman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2013-07-30T00:40:24Z",
        "updated_at": "2013-08-27T23:31:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/158#discussion_r5466149",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/158",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5466149"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/158#discussion_r5466149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/158"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7017152",
        "pull_request_review_id": null,
        "id": 7017152,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTcxNTI=",
        "diff_hunk": "@@ -226,6 +226,22 @@ define(\n             }\n           }, this);\n         };\n+      },\n+\n+      once: function(func) {\n+        var ran, result;\n+\n+        return function() {\n+          if (ran) {\n+            return result;\n+          }\n+          ran = true;",
        "path": "lib/utils.js",
        "position": 26,
        "original_position": 13,
        "commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "original_commit_id": "0a780f266c4ead23c5b4856bc859ab69f87d2ce4",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "shouldn't this appear after the function has been called?\n",
        "created_at": "2013-10-16T21:41:52Z",
        "updated_at": "2013-10-16T23:25:11Z",
        "html_url": "https://github.com/flightjs/flight/pull/186#discussion_r7017152",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/186",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7017152"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/186#discussion_r7017152"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7017297",
        "pull_request_review_id": null,
        "id": 7017297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTcyOTc=",
        "diff_hunk": "@@ -226,6 +226,22 @@ define(\n             }\n           }, this);\n         };\n+      },\n+\n+      once: function(func) {\n+        var ran, result;\n+\n+        return function() {\n+          if (ran) {\n+            return result;\n+          }\n+          ran = true;",
        "path": "lib/utils.js",
        "position": 26,
        "original_position": 13,
        "commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "original_commit_id": "0a780f266c4ead23c5b4856bc859ab69f87d2ce4",
        "user": {
            "login": "psyduk",
            "id": 859336,
            "node_id": "MDQ6VXNlcjg1OTMzNg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/859336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/psyduk",
            "html_url": "https://github.com/psyduk",
            "followers_url": "https://api.github.com/users/psyduk/followers",
            "following_url": "https://api.github.com/users/psyduk/following{/other_user}",
            "gists_url": "https://api.github.com/users/psyduk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/psyduk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/psyduk/subscriptions",
            "organizations_url": "https://api.github.com/users/psyduk/orgs",
            "repos_url": "https://api.github.com/users/psyduk/repos",
            "events_url": "https://api.github.com/users/psyduk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/psyduk/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "will change.\n",
        "created_at": "2013-10-16T21:46:55Z",
        "updated_at": "2013-10-16T23:25:11Z",
        "html_url": "https://github.com/flightjs/flight/pull/186#discussion_r7017297",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/186",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7017297"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/186#discussion_r7017297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7019490",
        "pull_request_review_id": null,
        "id": 7019490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0OTA=",
        "diff_hunk": "@@ -226,6 +226,33 @@ define(\n             }\n           }, this);\n         };\n+      },\n+\n+      // ensures that a function will only be called once.\n+      // usage:\n+      // will only create the application once\n+      //   var initialize = utils.once(createApplication)\n+      //     initialize();\n+      //     initialize();\n+      //\n+      // will only delete a record once\n+      //   var myHanlder = function () {\n+      //     $.ajax({type: 'DELETE', url: 'someurl.com', data: {id: 1}});\n+      //   };\n+      //   this.on('click', utils.once(myHandler));",
        "path": "lib/utils.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "original_commit_id": "8992c5763229567afcf5f6de308cfa15da46cd72",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "would add this example to the docs too\n",
        "created_at": "2013-10-16T23:15:50Z",
        "updated_at": "2013-10-16T23:25:11Z",
        "html_url": "https://github.com/flightjs/flight/pull/186#discussion_r7019490",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/186",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7019490"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/186#discussion_r7019490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7019494",
        "pull_request_review_id": null,
        "id": 7019494,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTk0OTQ=",
        "diff_hunk": "@@ -226,6 +226,22 @@ define(\n             }\n           }, this);\n         };\n+      },\n+\n+      once: function(func) {\n+        var ran, result;\n+\n+        return function() {\n+          if (ran) {\n+            return result;\n+          }\n+          ran = true;",
        "path": "lib/utils.js",
        "position": 26,
        "original_position": 13,
        "commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "original_commit_id": "0a780f266c4ead23c5b4856bc859ab69f87d2ce4",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "still needs to be fixed\n",
        "created_at": "2013-10-16T23:15:57Z",
        "updated_at": "2013-10-16T23:25:11Z",
        "html_url": "https://github.com/flightjs/flight/pull/186#discussion_r7019494",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/186",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7019494"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/186#discussion_r7019494"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7020421",
        "pull_request_review_id": null,
        "id": 7020421,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjA0MjE=",
        "diff_hunk": "@@ -291,4 +291,14 @@ define(['lib/component', 'lib/utils'], function (defineComponent, utils) {\n     });\n   });\n \n+  describe('once()', function () {\n+    it('should only call a function once', function () {\n+      var sum = 0;\n+      var increment = utils.once(function () { sum++; });",
        "path": "test/spec/utils_spec.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "original_commit_id": "8f594246a0f968b334dba01538f2a70f1f9dd067",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/utils/util\n",
        "created_at": "2013-10-17T00:04:43Z",
        "updated_at": "2013-10-17T00:04:43Z",
        "html_url": "https://github.com/flightjs/flight/pull/186#discussion_r7020421",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/186",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7020421"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/186#discussion_r7020421"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7193598",
        "pull_request_review_id": null,
        "id": 7193598,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxOTM1OTg=",
        "diff_hunk": "@@ -108,5 +108,33 @@ define(['lib/component'], function (defineComponent) {\n       }).toThrow('utils.push attempted to overwrite \"core\" while running in protected mode');\n     });\n \n+    ddescribe('teardownAll', function () {",
        "path": "test/spec/constructor_spec.js",
        "position": null,
        "original_position": 4,
        "commit_id": "81641cd9cadd465ea3176c5483444ee2bd709b35",
        "original_commit_id": "64de5d214a7f8e7adf976d295277d5a8710a9e09",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "change to 'describe' :)\n",
        "created_at": "2013-10-24T16:50:49Z",
        "updated_at": "2013-10-26T11:00:53Z",
        "html_url": "https://github.com/flightjs/flight/pull/194#discussion_r7193598",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/194",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7193598"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/194#discussion_r7193598"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7193695",
        "pull_request_review_id": null,
        "id": 7193695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxOTM2OTU=",
        "diff_hunk": "@@ -108,5 +108,33 @@ define(['lib/component'], function (defineComponent) {\n       }).toThrow('utils.push attempted to overwrite \"core\" while running in protected mode');\n     });\n \n+    ddescribe('teardownAll', function () {\n+\n+      it('should teardown all instances', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        spyOn(instance1, 'teardown').andCallThrough();\n+        spyOn(instance2, 'teardown').andCallThrough();\n+        TestComponent.teardownAll();\n+        expect(instance1.teardown).toHaveBeenCalled();\n+        expect(instance2.teardown).toHaveBeenCalled();\n+      });\n+\n+      it('should support teardowns that cause other teardowns', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        var original = instance1.teardown;\n+        instance1.teardown = function () {\n+          instance2.teardown();\n+          original.call(this);\n+        }.bind(instance1);",
        "path": "test/spec/constructor_spec.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "81641cd9cadd465ea3176c5483444ee2bd709b35",
        "original_commit_id": "64de5d214a7f8e7adf976d295277d5a8710a9e09",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this missing assertions?\n",
        "created_at": "2013-10-24T16:54:03Z",
        "updated_at": "2013-10-26T11:00:53Z",
        "html_url": "https://github.com/flightjs/flight/pull/194#discussion_r7193695",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/194",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7193695"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/194#discussion_r7193695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7194437",
        "pull_request_review_id": null,
        "id": 7194437,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxOTQ0Mzc=",
        "diff_hunk": "@@ -108,5 +108,33 @@ define(['lib/component'], function (defineComponent) {\n       }).toThrow('utils.push attempted to overwrite \"core\" while running in protected mode');\n     });\n \n+    ddescribe('teardownAll', function () {",
        "path": "test/spec/constructor_spec.js",
        "position": null,
        "original_position": 4,
        "commit_id": "81641cd9cadd465ea3176c5483444ee2bd709b35",
        "original_commit_id": "64de5d214a7f8e7adf976d295277d5a8710a9e09",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops!\n",
        "created_at": "2013-10-24T17:17:47Z",
        "updated_at": "2013-10-26T11:00:53Z",
        "html_url": "https://github.com/flightjs/flight/pull/194#discussion_r7194437",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/194",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7194437"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/194#discussion_r7194437"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7194442",
        "pull_request_review_id": null,
        "id": 7194442,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxOTQ0NDI=",
        "diff_hunk": "@@ -108,5 +108,33 @@ define(['lib/component'], function (defineComponent) {\n       }).toThrow('utils.push attempted to overwrite \"core\" while running in protected mode');\n     });\n \n+    ddescribe('teardownAll', function () {\n+\n+      it('should teardown all instances', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        spyOn(instance1, 'teardown').andCallThrough();\n+        spyOn(instance2, 'teardown').andCallThrough();\n+        TestComponent.teardownAll();\n+        expect(instance1.teardown).toHaveBeenCalled();\n+        expect(instance2.teardown).toHaveBeenCalled();\n+      });\n+\n+      it('should support teardowns that cause other teardowns', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        var original = instance1.teardown;\n+        instance1.teardown = function () {\n+          instance2.teardown();\n+          original.call(this);\n+        }.bind(instance1);",
        "path": "test/spec/constructor_spec.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "81641cd9cadd465ea3176c5483444ee2bd709b35",
        "original_commit_id": "64de5d214a7f8e7adf976d295277d5a8710a9e09",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hah. Man. I was asleep.\n",
        "created_at": "2013-10-24T17:18:00Z",
        "updated_at": "2013-10-26T11:00:53Z",
        "html_url": "https://github.com/flightjs/flight/pull/194#discussion_r7194442",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/194",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7194442"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/194#discussion_r7194442"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7299427",
        "pull_request_review_id": null,
        "id": 7299427,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyOTk0Mjc=",
        "diff_hunk": "@@ -108,5 +108,33 @@ define(['lib/component'], function (defineComponent) {\n       }).toThrow('utils.push attempted to overwrite \"core\" while running in protected mode');\n     });\n \n+    ddescribe('teardownAll', function () {\n+\n+      it('should teardown all instances', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        spyOn(instance1, 'teardown').andCallThrough();\n+        spyOn(instance2, 'teardown').andCallThrough();\n+        TestComponent.teardownAll();\n+        expect(instance1.teardown).toHaveBeenCalled();\n+        expect(instance2.teardown).toHaveBeenCalled();\n+      });\n+\n+      it('should support teardowns that cause other teardowns', function () {\n+        var TestComponent = defineComponent(testComponent);\n+        var instance1 = (new TestComponent).initialize(document.body)\n+        var instance2 = (new TestComponent).initialize(document.body);\n+        var original = instance1.teardown;\n+        instance1.teardown = function () {\n+          instance2.teardown();\n+          original.call(this);\n+        }.bind(instance1);",
        "path": "test/spec/constructor_spec.js",
        "position": 25,
        "original_position": 25,
        "commit_id": "81641cd9cadd465ea3176c5483444ee2bd709b35",
        "original_commit_id": "64de5d214a7f8e7adf976d295277d5a8710a9e09",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just to note \u2013 this actually didn't really need assertions because the test was just that it didn't throw \u2013 but better to make it explicit.\n",
        "created_at": "2013-10-30T00:08:16Z",
        "updated_at": "2013-10-30T00:08:16Z",
        "html_url": "https://github.com/flightjs/flight/pull/194#discussion_r7299427",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/194",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7299427"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/194#discussion_r7299427"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/194"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7770683",
        "pull_request_review_id": null,
        "id": 7770683,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzA2ODM=",
        "diff_hunk": "@@ -101,7 +101,7 @@ this.after('initialize', function() {\n   this.on('click', this.selectItem);\n });\n ```\n-\n+ef",
        "path": "doc/base_api.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "wwwsevolod",
            "id": 1140057,
            "node_id": "MDQ6VXNlcjExNDAwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1140057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wwwsevolod",
            "html_url": "https://github.com/wwwsevolod",
            "followers_url": "https://api.github.com/users/wwwsevolod/followers",
            "following_url": "https://api.github.com/users/wwwsevolod/following{/other_user}",
            "gists_url": "https://api.github.com/users/wwwsevolod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wwwsevolod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wwwsevolod/subscriptions",
            "organizations_url": "https://api.github.com/users/wwwsevolod/orgs",
            "repos_url": "https://api.github.com/users/wwwsevolod/repos",
            "events_url": "https://api.github.com/users/wwwsevolod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wwwsevolod/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "-ef\n",
        "created_at": "2013-11-19T20:06:51Z",
        "updated_at": "2013-11-19T20:06:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7770683",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7770683"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7770683"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7770704",
        "pull_request_review_id": null,
        "id": 7770704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzA3MDQ=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "wwwsevolod",
            "id": 1140057,
            "node_id": "MDQ6VXNlcjExNDAwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1140057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wwwsevolod",
            "html_url": "https://github.com/wwwsevolod",
            "followers_url": "https://api.github.com/users/wwwsevolod/followers",
            "following_url": "https://api.github.com/users/wwwsevolod/following{/other_user}",
            "gists_url": "https://api.github.com/users/wwwsevolod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wwwsevolod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wwwsevolod/subscriptions",
            "organizations_url": "https://api.github.com/users/wwwsevolod/orgs",
            "repos_url": "https://api.github.com/users/wwwsevolod/repos",
            "events_url": "https://api.github.com/users/wwwsevolod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wwwsevolod/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what about target/currentTarget in event object passed to callback? maybe i misunderstood something\n",
        "created_at": "2013-11-19T20:07:22Z",
        "updated_at": "2013-11-19T20:07:35Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7770704",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7770704"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7770704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771428",
        "pull_request_review_id": null,
        "id": 7771428,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE0Mjg=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Since you are doing event delegation on `selector` it is correct to use `data.el`.\nIn fact the latter is `$(e.target).closest(selector)`.\n\nConsider this markup\n\n``` html\n<a class=\"foo\"><span>yo</span></a>\n```\n\nand this js\n\n``` javascript\nthis.on('click', {\n  linkSelector: this.doSomething\n});\n```\n\nif you click yo.. `event.target`  would be the `span` rather then the `a.foo`.\n\nThat said we might argue that having `el` in `data` can be unsafe.\nMaybe I would have added `el` to the `event` eg: `event._el`, `event._target` or something like that\n",
        "created_at": "2013-11-19T20:28:24Z",
        "updated_at": "2013-11-19T20:28:24Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771428",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771428"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771428"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771429",
        "pull_request_review_id": null,
        "id": 7771429,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE0Mjk=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "joecritch",
            "id": 24449,
            "node_id": "MDQ6VXNlcjI0NDQ5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/24449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joecritch",
            "html_url": "https://github.com/joecritch",
            "followers_url": "https://api.github.com/users/joecritch/followers",
            "following_url": "https://api.github.com/users/joecritch/following{/other_user}",
            "gists_url": "https://api.github.com/users/joecritch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joecritch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joecritch/subscriptions",
            "organizations_url": "https://api.github.com/users/joecritch/orgs",
            "repos_url": "https://api.github.com/users/joecritch/repos",
            "events_url": "https://api.github.com/users/joecritch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joecritch/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "See line 202 of the precompiled Flight \u2014 http://flightjs.github.io/release/latest/flight.js \u2014 the 'data.el' which is added to the payload is the only way to reference the intended target, not the delegated target. (AFAIK)\n",
        "created_at": "2013-11-19T20:28:31Z",
        "updated_at": "2013-11-19T20:28:31Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771429",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771429"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771429"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771530",
        "pull_request_review_id": null,
        "id": 7771530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE1MzA=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is not the only way, but yeah that's fine.\nUsually I do `$(e.target).closest(selector)` again, since `data.el` could be overridden by other stuff in the payload\n",
        "created_at": "2013-11-19T20:32:20Z",
        "updated_at": "2013-11-19T20:32:20Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771530",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771530"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771612",
        "pull_request_review_id": null,
        "id": 7771612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE2MTI=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "wwwsevolod",
            "id": 1140057,
            "node_id": "MDQ6VXNlcjExNDAwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1140057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wwwsevolod",
            "html_url": "https://github.com/wwwsevolod",
            "followers_url": "https://api.github.com/users/wwwsevolod/followers",
            "following_url": "https://api.github.com/users/wwwsevolod/following{/other_user}",
            "gists_url": "https://api.github.com/users/wwwsevolod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wwwsevolod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wwwsevolod/subscriptions",
            "organizations_url": "https://api.github.com/users/wwwsevolod/orgs",
            "repos_url": "https://api.github.com/users/wwwsevolod/repos",
            "events_url": "https://api.github.com/users/wwwsevolod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wwwsevolod/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@giuseppeg what about e.currentTarget, it's pointing to element that you need\n",
        "created_at": "2013-11-19T20:34:51Z",
        "updated_at": "2013-11-19T20:34:51Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771612",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771612"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771897",
        "pull_request_review_id": null,
        "id": 7771897,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE4OTc=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@wwwsevolod correct. Open an issue? :)\n",
        "created_at": "2013-11-19T20:42:41Z",
        "updated_at": "2013-11-19T20:42:41Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771897",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771897"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771897"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771955",
        "pull_request_review_id": null,
        "id": 7771955,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc3NzE5NTU=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "joecritch",
            "id": 24449,
            "node_id": "MDQ6VXNlcjI0NDQ5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/24449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joecritch",
            "html_url": "https://github.com/joecritch",
            "followers_url": "https://api.github.com/users/joecritch/followers",
            "following_url": "https://api.github.com/users/joecritch/following{/other_user}",
            "gists_url": "https://api.github.com/users/joecritch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joecritch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joecritch/subscriptions",
            "organizations_url": "https://api.github.com/users/joecritch/orgs",
            "repos_url": "https://api.github.com/users/joecritch/repos",
            "events_url": "https://api.github.com/users/joecritch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joecritch/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@wwwsevolod \u2014 Not for me. That returns the delegated element (the 'closest')\n@giuseppeg \u2014 I agree that it would be much more suited to be returned in the event object, especially when it is augmenting the original event anyway.\n",
        "created_at": "2013-11-19T20:44:54Z",
        "updated_at": "2013-11-19T20:45:05Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r7771955",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/7771955"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r7771955"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/8590055",
        "pull_request_review_id": null,
        "id": 8590055,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTAwNTU=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@wwwsevolod e.currentTarget points to the node which does the binding (by default `component.node`) not the node for the current delegation\n\ne.g. in the following `e.currentTarget` is `document` not  `linkSelector` \n\n``` js\nthis.on(document, 'click', function() {\n  linkSelector: this.linkHandler\n});\n```\n",
        "created_at": "2013-12-30T19:31:17Z",
        "updated_at": "2013-12-30T19:31:45Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r8590055",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/8590055"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r8590055"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/8590561",
        "pull_request_review_id": null,
        "id": 8590561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTA1NjE=",
        "diff_hunk": "@@ -113,7 +113,7 @@ this.on(document, 'dataSent', function (ev, data) {\n \n Example of `handler` being an object that maps event targets to callbacks.\n This is effectively event delegation; selector values are resolved, at event\n-time, by keying into the `attr` property of the component.\n+time, by keying into the `attr` property of the component. The target element is exposed in the handler's data payload as `el`",
        "path": "doc/base_api.md",
        "position": 14,
        "original_position": 14,
        "commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "original_commit_id": "c429c49078a346ace216cfd12e5944cf59f3bab2",
        "user": {
            "login": "wwwsevolod",
            "id": 1140057,
            "node_id": "MDQ6VXNlcjExNDAwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1140057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wwwsevolod",
            "html_url": "https://github.com/wwwsevolod",
            "followers_url": "https://api.github.com/users/wwwsevolod/followers",
            "following_url": "https://api.github.com/users/wwwsevolod/following{/other_user}",
            "gists_url": "https://api.github.com/users/wwwsevolod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wwwsevolod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wwwsevolod/subscriptions",
            "organizations_url": "https://api.github.com/users/wwwsevolod/orgs",
            "repos_url": "https://api.github.com/users/wwwsevolod/repos",
            "events_url": "https://api.github.com/users/wwwsevolod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wwwsevolod/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "may be `e.target`, i confuse with them some times :)\n",
        "created_at": "2013-12-30T20:00:21Z",
        "updated_at": "2013-12-30T20:00:21Z",
        "html_url": "https://github.com/flightjs/flight/pull/199#discussion_r8590561",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/199",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/8590561"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/199#discussion_r8590561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/199"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11717021",
        "pull_request_review_id": null,
        "id": 11717021,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE3MDIx",
        "diff_hunk": "@@ -101,7 +101,13 @@ define(\n       Component.attachTo = attachTo;\n       // enables extension of existing \"base\" Components\n       Component.mixin = function() {\n-        compose.mixin(Component.prototype, arguments)\n+        var newComponent = define(); //TODO: fix pretty print\n+        var newPrototype = Object.create(Component.prototype);\n+        newPrototype.mixedIn = [].concat(Component.prototype.mixedIn);\n+        compose.mixin(newPrototype, arguments);\n+        newComponent.prototype = newPrototype;\n+        newComponent.prototype.constructor = newComponent;",
        "path": "lib/component.js",
        "position": 10,
        "original_position": 10,
        "commit_id": "7675f0fe2af63acd1147b43fe1584f332f9c37d2",
        "original_commit_id": "7675f0fe2af63acd1147b43fe1584f332f9c37d2",
        "user": {
            "login": "sayrer",
            "id": 253473,
            "node_id": "MDQ6VXNlcjI1MzQ3Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/253473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sayrer",
            "html_url": "https://github.com/sayrer",
            "followers_url": "https://api.github.com/users/sayrer/followers",
            "following_url": "https://api.github.com/users/sayrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sayrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sayrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sayrer/subscriptions",
            "organizations_url": "https://api.github.com/users/sayrer/orgs",
            "repos_url": "https://api.github.com/users/sayrer/repos",
            "events_url": "https://api.github.com/users/sayrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sayrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nit: would assign this to newPrototype rather two dots deep.\n",
        "created_at": "2014-04-17T02:50:47Z",
        "updated_at": "2014-04-17T02:50:47Z",
        "html_url": "https://github.com/flightjs/flight/pull/242#discussion_r11717021",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/242",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11717021"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/242#discussion_r11717021"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/5428095",
        "pull_request_review_id": null,
        "id": 5428095,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgwOTU=",
        "diff_hunk": "@@ -31,8 +31,41 @@ define(\n     }\n   }\n \n-  function withBase() {\n+  function initAttributes(attrs) {\n+    var definedKeys, incomingKeys;\n+\n+    if (!this.attrDef) {\n+      this.attr = {};\n+      return;\n+    }\n+\n+    this.attr = new this.attrDef;\n+\n+    if (debug.enabled && window.console) {\n+      definedKeys = Object.keys(this.attr);",
        "path": "lib/base.js",
        "position": null,
        "original_position": 16,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "f97f5dc4fe4a433cc96b8fcc4ea990a85e4f2d23",
        "user": {
            "login": "sayrer",
            "id": 253473,
            "node_id": "MDQ6VXNlcjI1MzQ3Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/253473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sayrer",
            "html_url": "https://github.com/sayrer",
            "followers_url": "https://api.github.com/users/sayrer/followers",
            "following_url": "https://api.github.com/users/sayrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sayrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sayrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sayrer/subscriptions",
            "organizations_url": "https://api.github.com/users/sayrer/orgs",
            "repos_url": "https://api.github.com/users/sayrer/repos",
            "events_url": "https://api.github.com/users/sayrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sayrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should this be for-in? I'm not sure. We discussed in person.\n",
        "created_at": "2013-07-26T17:37:34Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r5428095",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/5428095"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r5428095"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613227",
        "pull_request_review_id": null,
        "id": 11613227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjEzMjI3",
        "diff_hunk": "@@ -3,38 +3,58 @@\n The base API shared by Flight [components](component_api.md) and\n [mixins](mixin_api.md).\n \n-<a name=\"this.defaultAttrs\"></a>\n-## this.defaultAttrs(object)\n+<a name=\"this.attributes\"></a>\n+## this.attributes(object)\n \n Most Components and Mixins need to define attributes. In Flight, default values\n-are assigned by passing an object to the `defaultAttrs` function.\n+are assigned by passing an object to the `attributes` function.\n \n ```js\n-this.defaultAttrs({\n+this.attributes({\n   buttonClass: 'js-button',\n-  text: 'Click me'\n+  text: 'Click me',\n+  hoverClass: null\n });\n ```\n \n-The object will be assigned to, or merged with, the `attr` property of the\n-Component or Mixin. It can be accessed accordingly:\n+This defines a set of attributes that the mixin makes use of.  If you define a value it",
        "path": "doc/base_api.md",
        "position": 25,
        "original_position": 25,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "bbd4bf02461068db8bef1dcb9b15df030e16c055",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use single spaces after `.`\n",
        "created_at": "2014-04-14T23:15:19Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11613227",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613227"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11613227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613236",
        "pull_request_review_id": null,
        "id": 11613236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjEzMjM2",
        "diff_hunk": "@@ -3,38 +3,58 @@\n The base API shared by Flight [components](component_api.md) and\n [mixins](mixin_api.md).\n \n-<a name=\"this.defaultAttrs\"></a>\n-## this.defaultAttrs(object)\n+<a name=\"this.attributes\"></a>\n+## this.attributes(object)\n \n Most Components and Mixins need to define attributes. In Flight, default values\n-are assigned by passing an object to the `defaultAttrs` function.\n+are assigned by passing an object to the `attributes` function.\n \n ```js\n-this.defaultAttrs({\n+this.attributes({\n   buttonClass: 'js-button',\n-  text: 'Click me'\n+  text: 'Click me',\n+  hoverClass: null\n });\n ```\n \n-The object will be assigned to, or merged with, the `attr` property of the\n-Component or Mixin. It can be accessed accordingly:\n+This defines a set of attributes that the mixin makes use of.  If you define a value it\n+serves as a default value in the case that its not specified in the attachTo call.  If you",
        "path": "doc/base_api.md",
        "position": 26,
        "original_position": 26,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "bbd4bf02461068db8bef1dcb9b15df030e16c055",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "its -> it's\nattachTo -> `attachTo`\n",
        "created_at": "2014-04-14T23:15:34Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11613236",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613236"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11613236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613245",
        "pull_request_review_id": null,
        "id": 11613245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjEzMjQ1",
        "diff_hunk": "@@ -3,38 +3,58 @@\n The base API shared by Flight [components](component_api.md) and\n [mixins](mixin_api.md).\n \n-<a name=\"this.defaultAttrs\"></a>\n-## this.defaultAttrs(object)\n+<a name=\"this.attributes\"></a>\n+## this.attributes(object)\n \n Most Components and Mixins need to define attributes. In Flight, default values\n-are assigned by passing an object to the `defaultAttrs` function.\n+are assigned by passing an object to the `attributes` function.\n \n ```js\n-this.defaultAttrs({\n+this.attributes({\n   buttonClass: 'js-button',\n-  text: 'Click me'\n+  text: 'Click me',\n+  hoverClass: null\n });\n ```\n \n-The object will be assigned to, or merged with, the `attr` property of the\n-Component or Mixin. It can be accessed accordingly:\n+This defines a set of attributes that the mixin makes use of.  If you define a value it\n+serves as a default value in the case that its not specified in the attachTo call.  If you\n+give it a value of null it means that this value must be specified in the attachTo call and",
        "path": "doc/base_api.md",
        "position": 27,
        "original_position": 27,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "bbd4bf02461068db8bef1dcb9b15df030e16c055",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "null -> `null`\nattachTo -> `attachTo`\n",
        "created_at": "2014-04-14T23:15:54Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11613245",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613245"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11613245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613302",
        "pull_request_review_id": null,
        "id": 11613302,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjEzMzAy",
        "diff_hunk": "@@ -3,38 +3,58 @@\n The base API shared by Flight [components](component_api.md) and\n [mixins](mixin_api.md).\n \n-<a name=\"this.defaultAttrs\"></a>\n-## this.defaultAttrs(object)\n+<a name=\"this.attributes\"></a>\n+## this.attributes(object)\n \n Most Components and Mixins need to define attributes. In Flight, default values\n-are assigned by passing an object to the `defaultAttrs` function.\n+are assigned by passing an object to the `attributes` function.\n \n ```js\n-this.defaultAttrs({\n+this.attributes({\n   buttonClass: 'js-button',\n-  text: 'Click me'\n+  text: 'Click me',\n+  hoverClass: null\n });\n ```\n \n-The object will be assigned to, or merged with, the `attr` property of the\n-Component or Mixin. It can be accessed accordingly:\n+This defines a set of attributes that the mixin makes use of.  If you define a value it\n+serves as a default value in the case that its not specified in the attachTo call.  If you\n+give it a value of null it means that this value must be specified in the attachTo call and\n+will raise an error if the value is missing.\n+\n+For instance, this would raise an error because hoverClass is not defined:",
        "path": "doc/base_api.md",
        "position": 30,
        "original_position": 30,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "bbd4bf02461068db8bef1dcb9b15df030e16c055",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You might want to make it a bit clearer that the example below is related to the previous code example (which I didn't initially realise was the `Button` component definition)\n\nhoverClass -> `hoverClass`\n",
        "created_at": "2014-04-14T23:18:07Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11613302",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613302"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11613302"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613463",
        "pull_request_review_id": null,
        "id": 11613463,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjEzNDYz",
        "diff_hunk": "@@ -105,7 +105,7 @@ define(['lib/component', 'lib/registry'], function (defineComponent, registry) {\n       var instance = (new Component).initialize(window.outerDiv);\n       var data = {actor: 'Brent Spiner'};\n \n-      // Declare an event proxy from 'sourceEvent' \u2192 'targetEvent'\n+      // Declare an event proxy from 'sourceEvent' \u00e2\u2020\u2019 'targetEvent'",
        "path": "test/spec/events_spec.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "bbd4bf02461068db8bef1dcb9b15df030e16c055",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "did your editor do something weird here?\n",
        "created_at": "2014-04-14T23:23:07Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11613463",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11613463"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11613463"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11759471",
        "pull_request_review_id": null,
        "id": 11759471,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzU5NDcx",
        "diff_hunk": "@@ -182,56 +235,62 @@ define(\n         return rules;\n       };\n \n-      this.defaultAttrs = function(defaults) {\n-        utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n-      };\n+    this.select = function(attributeKey) {\n+      return this.$node.find(this.attr[attributeKey]);\n+    };\n \n-      this.select = function(attributeKey) {\n-        return this.$node.find(this.attr[attributeKey]);\n-      };\n+    // New-style attributes\n \n-      this.initialize = function(node, attrs) {\n-        attrs || (attrs = {});\n-        //only assign identity if there isn't one (initialize can be called multiple times)\n-        this.identity || (this.identity = componentId++);\n+    this.attributes = function(attrs) {\n \n-        if (!node) {\n-          throw new Error('Component needs a node');\n-        }\n+      var Attributes = function() {};\n \n-        if (node.jquery) {\n-          this.node = node[0];\n-          this.$node = node;\n-        } else {\n-          this.node = node;\n-          this.$node = $(node);\n-        }\n+      if (this.attrDef) {\n+        Attributes.prototype = new this.attrDef;\n+      }\n \n-        // merge defaults with supplied options\n-        // put options in attr.__proto__ to avoid merge overhead\n-        var attr = Object.create(attrs);\n-        for (var key in this.defaults) {\n-          if (!attrs.hasOwnProperty(key)) {\n-            attr[key] = this.defaults[key];\n-          }\n-        }\n+      for (var name in attrs) {\n+        Attributes.prototype[name] = attrs[name];\n+      }\n \n-        this.attr = attr;\n+      this.attrDef = Attributes;\n+    };\n \n-        Object.keys(this.defaults || {}).forEach(function(key) {\n-          if (this.defaults[key] === null && this.attr[key] === null) {\n-            throw new Error('Required attribute \"' + key + '\" not specified in attachTo for component \"' + this.toString() + '\".');\n-          }\n-        }, this);\n+    // Deprecated attributes\n \n-        return this;\n-      };\n+    this.defaultAttrs = function(defaults) {\n+      utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n+    };\n \n-      this.teardown = function() {\n-        teardownInstance(registry.findInstanceInfo(this));\n-      };\n-    }\n+    this.initialize = function(node, attrs) {\n+      attrs = attrs || {};\n+      this.identity = componentId++;",
        "path": "lib/base.js",
        "position": null,
        "original_position": 149,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "8d9fede0bfcf202547856419484198bc39284c34",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we should only assign an identity if there isn't already one - initialize can be called multiple times\n\nthis.identity || (this.identity = componentId++)\n",
        "created_at": "2014-04-17T23:43:43Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11759471",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11759471"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11759471"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11760099",
        "pull_request_review_id": null,
        "id": 11760099,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzYwMDk5",
        "diff_hunk": "@@ -182,56 +235,62 @@ define(\n         return rules;\n       };\n \n-      this.defaultAttrs = function(defaults) {\n-        utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n-      };\n+    this.select = function(attributeKey) {\n+      return this.$node.find(this.attr[attributeKey]);\n+    };\n \n-      this.select = function(attributeKey) {\n-        return this.$node.find(this.attr[attributeKey]);\n-      };\n+    // New-style attributes\n \n-      this.initialize = function(node, attrs) {\n-        attrs || (attrs = {});\n-        //only assign identity if there isn't one (initialize can be called multiple times)\n-        this.identity || (this.identity = componentId++);\n+    this.attributes = function(attrs) {\n \n-        if (!node) {\n-          throw new Error('Component needs a node');\n-        }\n+      var Attributes = function() {};\n \n-        if (node.jquery) {\n-          this.node = node[0];\n-          this.$node = node;\n-        } else {\n-          this.node = node;\n-          this.$node = $(node);\n-        }\n+      if (this.attrDef) {\n+        Attributes.prototype = new this.attrDef;\n+      }\n \n-        // merge defaults with supplied options\n-        // put options in attr.__proto__ to avoid merge overhead\n-        var attr = Object.create(attrs);\n-        for (var key in this.defaults) {\n-          if (!attrs.hasOwnProperty(key)) {\n-            attr[key] = this.defaults[key];\n-          }\n-        }\n+      for (var name in attrs) {\n+        Attributes.prototype[name] = attrs[name];\n+      }\n \n-        this.attr = attr;\n+      this.attrDef = Attributes;\n+    };\n \n-        Object.keys(this.defaults || {}).forEach(function(key) {\n-          if (this.defaults[key] === null && this.attr[key] === null) {\n-            throw new Error('Required attribute \"' + key + '\" not specified in attachTo for component \"' + this.toString() + '\".');\n-          }\n-        }, this);\n+    // Deprecated attributes\n \n-        return this;\n-      };\n+    this.defaultAttrs = function(defaults) {\n+      utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n+    };\n \n-      this.teardown = function() {\n-        teardownInstance(registry.findInstanceInfo(this));\n-      };\n-    }\n+    this.initialize = function(node, attrs) {\n+      attrs = attrs || {};\n+      this.identity = componentId++;",
        "path": "lib/base.js",
        "position": null,
        "original_position": 149,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "8d9fede0bfcf202547856419484198bc39284c34",
        "user": {
            "login": "danwrong",
            "id": 110,
            "node_id": "MDQ6VXNlcjExMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danwrong",
            "html_url": "https://github.com/danwrong",
            "followers_url": "https://api.github.com/users/danwrong/followers",
            "following_url": "https://api.github.com/users/danwrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/danwrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danwrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danwrong/subscriptions",
            "organizations_url": "https://api.github.com/users/danwrong/orgs",
            "repos_url": "https://api.github.com/users/danwrong/repos",
            "events_url": "https://api.github.com/users/danwrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danwrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That is a good plan, its not part of my patch though, I just moved it around. Maybe address as a separate commit?\n",
        "created_at": "2014-04-18T00:09:48Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11760099",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11760099"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11760099"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/11760121",
        "pull_request_review_id": null,
        "id": 11760121,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzYwMTIx",
        "diff_hunk": "@@ -182,56 +235,62 @@ define(\n         return rules;\n       };\n \n-      this.defaultAttrs = function(defaults) {\n-        utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n-      };\n+    this.select = function(attributeKey) {\n+      return this.$node.find(this.attr[attributeKey]);\n+    };\n \n-      this.select = function(attributeKey) {\n-        return this.$node.find(this.attr[attributeKey]);\n-      };\n+    // New-style attributes\n \n-      this.initialize = function(node, attrs) {\n-        attrs || (attrs = {});\n-        //only assign identity if there isn't one (initialize can be called multiple times)\n-        this.identity || (this.identity = componentId++);\n+    this.attributes = function(attrs) {\n \n-        if (!node) {\n-          throw new Error('Component needs a node');\n-        }\n+      var Attributes = function() {};\n \n-        if (node.jquery) {\n-          this.node = node[0];\n-          this.$node = node;\n-        } else {\n-          this.node = node;\n-          this.$node = $(node);\n-        }\n+      if (this.attrDef) {\n+        Attributes.prototype = new this.attrDef;\n+      }\n \n-        // merge defaults with supplied options\n-        // put options in attr.__proto__ to avoid merge overhead\n-        var attr = Object.create(attrs);\n-        for (var key in this.defaults) {\n-          if (!attrs.hasOwnProperty(key)) {\n-            attr[key] = this.defaults[key];\n-          }\n-        }\n+      for (var name in attrs) {\n+        Attributes.prototype[name] = attrs[name];\n+      }\n \n-        this.attr = attr;\n+      this.attrDef = Attributes;\n+    };\n \n-        Object.keys(this.defaults || {}).forEach(function(key) {\n-          if (this.defaults[key] === null && this.attr[key] === null) {\n-            throw new Error('Required attribute \"' + key + '\" not specified in attachTo for component \"' + this.toString() + '\".');\n-          }\n-        }, this);\n+    // Deprecated attributes\n \n-        return this;\n-      };\n+    this.defaultAttrs = function(defaults) {\n+      utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n+    };\n \n-      this.teardown = function() {\n-        teardownInstance(registry.findInstanceInfo(this));\n-      };\n-    }\n+    this.initialize = function(node, attrs) {\n+      attrs = attrs || {};\n+      this.identity = componentId++;",
        "path": "lib/base.js",
        "position": null,
        "original_position": 149,
        "commit_id": "4152f9c21397ed576391d3e79832fde02daab937",
        "original_commit_id": "8d9fede0bfcf202547856419484198bc39284c34",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It was done in the pre-patch code :)\n",
        "created_at": "2014-04-18T00:11:21Z",
        "updated_at": "2014-04-21T20:51:25Z",
        "html_url": "https://github.com/flightjs/flight/pull/150#discussion_r11760121",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/150",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/11760121"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/150#discussion_r11760121"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14203390",
        "pull_request_review_id": null,
        "id": 14203390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAzMzkw",
        "diff_hunk": "@@ -35,17 +35,6 @@ define(\n       });\n     }\n \n-    function checkSerializable(type, data) {",
        "path": "lib/component.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "db53caebada23433fd6dedde2356b12bf4572d6b",
        "original_commit_id": "db53caebada23433fd6dedde2356b12bf4572d6b",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "can we retain this method please - the call got unhooked, will hook it up again\n",
        "created_at": "2014-06-25T18:29:35Z",
        "updated_at": "2014-06-25T18:29:35Z",
        "html_url": "https://github.com/flightjs/flight/pull/271#discussion_r14203390",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/271",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14203390"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/271#discussion_r14203390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/271"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14203743",
        "pull_request_review_id": null,
        "id": 14203743,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjAzNzQz",
        "diff_hunk": "@@ -35,17 +35,6 @@ define(\n       });\n     }\n \n-    function checkSerializable(type, data) {",
        "path": "lib/component.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "db53caebada23433fd6dedde2356b12bf4572d6b",
        "original_commit_id": "db53caebada23433fd6dedde2356b12bf4572d6b",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok - my bad - good to go\n",
        "created_at": "2014-06-25T18:35:34Z",
        "updated_at": "2014-06-25T18:35:34Z",
        "html_url": "https://github.com/flightjs/flight/pull/271#discussion_r14203743",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/271",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14203743"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/271#discussion_r14203743"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/271"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14109558",
        "pull_request_review_id": null,
        "id": 14109558,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA5NTU4",
        "diff_hunk": "@@ -35,7 +34,12 @@ define(\n       },\n \n       toArray: function(obj, from) {\n-        return arry.slice.call(obj, from);\n+        var arr = [], len = obj.length;",
        "path": "lib/utils.js",
        "position": null,
        "original_position": 13,
        "commit_id": "720a747a70d2456540558c28c8b22216cc58bb53",
        "original_commit_id": "722b9b96b086173648b5be05eb2265dd30988182",
        "user": {
            "login": "sayrer",
            "id": 253473,
            "node_id": "MDQ6VXNlcjI1MzQ3Mw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/253473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sayrer",
            "html_url": "https://github.com/sayrer",
            "followers_url": "https://api.github.com/users/sayrer/followers",
            "following_url": "https://api.github.com/users/sayrer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sayrer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sayrer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sayrer/subscriptions",
            "organizations_url": "https://api.github.com/users/sayrer/orgs",
            "repos_url": "https://api.github.com/users/sayrer/repos",
            "events_url": "https://api.github.com/users/sayrer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sayrer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "len is unused, allocate array with new Array() and the correct length\n",
        "created_at": "2014-06-24T01:47:50Z",
        "updated_at": "2014-06-25T22:46:12Z",
        "html_url": "https://github.com/flightjs/flight/pull/266#discussion_r14109558",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/266",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14109558"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/266#discussion_r14109558"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/266"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14109614",
        "pull_request_review_id": null,
        "id": 14109614,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA5NjE0",
        "diff_hunk": "@@ -35,7 +34,12 @@ define(\n       },\n \n       toArray: function(obj, from) {\n-        return arry.slice.call(obj, from);\n+        var arr = [], len = obj.length;",
        "path": "lib/utils.js",
        "position": null,
        "original_position": 13,
        "commit_id": "720a747a70d2456540558c28c8b22216cc58bb53",
        "original_commit_id": "722b9b96b086173648b5be05eb2265dd30988182",
        "user": {
            "login": "alexgorbatchev",
            "id": 65633,
            "node_id": "MDQ6VXNlcjY1NjMz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/65633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexgorbatchev",
            "html_url": "https://github.com/alexgorbatchev",
            "followers_url": "https://api.github.com/users/alexgorbatchev/followers",
            "following_url": "https://api.github.com/users/alexgorbatchev/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexgorbatchev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexgorbatchev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexgorbatchev/subscriptions",
            "organizations_url": "https://api.github.com/users/alexgorbatchev/orgs",
            "repos_url": "https://api.github.com/users/alexgorbatchev/repos",
            "events_url": "https://api.github.com/users/alexgorbatchev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexgorbatchev/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2014-06-24T01:50:13Z",
        "updated_at": "2014-06-25T22:46:12Z",
        "html_url": "https://github.com/flightjs/flight/pull/266#discussion_r14109614",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/266",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14109614"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/266#discussion_r14109614"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/266"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14223304",
        "pull_request_review_id": null,
        "id": 14223304,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjIzMzA0",
        "diff_hunk": "@@ -0,0 +1,17 @@\n+var BannerPlugin = require('webpack/lib/BannerPlugin');\n+var version = require('./package.json').version;\n+var webpack = require('webpack');",
        "path": "webpack.config.js",
        "position": null,
        "original_position": 3,
        "commit_id": "67b8c6d892ed594ff01c15f9a2086ee569e56e23",
        "original_commit_id": "a021a98501512399b064746d2f0ffb099ebce0b2",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "need to remove this before merge.\n",
        "created_at": "2014-06-26T02:42:28Z",
        "updated_at": "2014-06-26T21:09:20Z",
        "html_url": "https://github.com/flightjs/flight/pull/272#discussion_r14223304",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/272",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14223304"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/272#discussion_r14223304"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/272"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15617133",
        "pull_request_review_id": null,
        "id": 15617133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjE3MTMz",
        "diff_hunk": "@@ -0,0 +1,35 @@\n+{",
        "path": ".jscs.json",
        "position": 1,
        "original_position": 1,
        "commit_id": "808ca3247d3ce84205c3c8c72dfc4f390e3886c1",
        "original_commit_id": "4f610d2e75ac0fd9777795823b87abc3f01ecb27",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should use 2 space indentation\n",
        "created_at": "2014-07-30T22:34:48Z",
        "updated_at": "2014-07-30T23:26:21Z",
        "html_url": "https://github.com/flightjs/flight/pull/291#discussion_r15617133",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/291",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15617133"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/291#discussion_r15617133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/291"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14220178",
        "pull_request_review_id": null,
        "id": 14220178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjIwMTc4",
        "diff_hunk": "@@ -0,0 +1,17 @@\n+var BannerPlugin = require('webpack/lib/BannerPlugin');\n+var version = require('./package.json').version;\n+var webpack = require('webpack');",
        "path": "webpack.config.js",
        "position": null,
        "original_position": 3,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "0e390c8900567a4b14f8f81316a7fbab218a7847",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "used?\n",
        "created_at": "2014-06-26T00:22:31Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r14220178",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14220178"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r14220178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14223292",
        "pull_request_review_id": null,
        "id": 14223292,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjIzMjky",
        "diff_hunk": "@@ -0,0 +1,17 @@\n+var BannerPlugin = require('webpack/lib/BannerPlugin');\n+var version = require('./package.json').version;\n+var webpack = require('webpack');",
        "path": "webpack.config.js",
        "position": null,
        "original_position": 3,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "0e390c8900567a4b14f8f81316a7fbab218a7847",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh yeah, good spot\n",
        "created_at": "2014-06-26T02:41:59Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r14223292",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14223292"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r14223292"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/14475704",
        "pull_request_review_id": null,
        "id": 14475704,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDc1NzA0",
        "diff_hunk": "@@ -68,27 +68,18 @@ yo flight-package foo\n ## Installation\n \n If you prefer not to use the Flight generators, it's highly recommended that\n-you install Flight as an AMD package (including all the correct dependencies).\n-This is best done with [Bower](http://bower.io/), a package manager for the web.\n+you install Flight as a module. This is best done using a package manager:\n+[npm](https://www.npmjs.org/) or [Bower](http://bower.io/).\n \n ```\n-npm install -g bower\n-bower install --save flight\n+npm install flightjs\n+bower install flight\n ```\n \n-You will have to reference Flight's installed dependencies \u2013\n-[ES5-shim](https://github.com/kriskowal/es5-shim) and\n-[jQuery](http://jquery.com) \u2013 and use an AMD module loader like\n-[Require.js](http://requirejs.org/) or\n+You will have to reference [jQuery](http://jquery.com) and use a CommonJS build",
        "path": "README.md",
        "position": null,
        "original_position": 20,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "0e390c8900567a4b14f8f81316a7fbab218a7847",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "need to add webpack here\n",
        "created_at": "2014-07-02T18:43:59Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r14475704",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/14475704"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r14475704"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15660897",
        "pull_request_review_id": null,
        "id": 15660897,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjYwODk3",
        "diff_hunk": "@@ -6,7 +6,10 @@ VERSION = `node -pe \"require('./package.json').version\"`\n clean:\n \t@ rm -rf $(BUILD_DIR)\n \n-standalone: clean\n+setup:",
        "path": "Makefile",
        "position": null,
        "original_position": 5,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "bef467cd6d3aaf5298f3c2a53658c718b51bd9c6",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do this in a separate PR so we can apply it now; not related to the commonjs port\n",
        "created_at": "2014-07-31T18:38:53Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r15660897",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15660897"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r15660897"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661000",
        "pull_request_review_id": null,
        "id": 15661000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjYxMDAw",
        "diff_hunk": "@@ -13,11 +13,66 @@ created at Twitter, and is used by the [twitter.com](https://twitter.com/) and\n * [Flight's Google Group](https://groups.google.com/forum/?fromgroups#!forum/twitter-flight)\n * [Flight on Twitter](https://twitter.com/flight)\n \n+## Example",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "bef467cd6d3aaf5298f3c2a53658c718b51bd9c6",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do this in a separate PR so we can apply it now; not related to the commonjs port\n",
        "created_at": "2014-07-31T18:40:34Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r15661000",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661000"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r15661000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661024",
        "pull_request_review_id": null,
        "id": 15661024,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjYxMDI0",
        "diff_hunk": "@@ -4,15 +4,14 @@\n   \"main\": \"lib/index.js\",\n   \"version\": \"1.2.0\",\n   \"ignore\": [\n+    \".*\",",
        "path": "bower.json",
        "position": null,
        "original_position": 4,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "bef467cd6d3aaf5298f3c2a53658c718b51bd9c6",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do this in a separate PR so we can apply it now; not related to the commonjs port\n",
        "created_at": "2014-07-31T18:40:54Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r15661024",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661024"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r15661024"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661030",
        "pull_request_review_id": null,
        "id": 15661030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjYxMDMw",
        "diff_hunk": "@@ -4,7 +4,7 @@\n   * [this.before](advice_api.md#this.before)\n   * [this.after](advice_api.md#this.after)\n   * [this.around](advice_api.md#this.around)\n-  * [advice.withAdvice](advice_api.md#advice.withAdvice)\n+  * [flight.advice.withAdvice](advice_api.md#advice.withAdvice)",
        "path": "doc/README.md",
        "position": null,
        "original_position": 5,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "bef467cd6d3aaf5298f3c2a53658c718b51bd9c6",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do this in a separate PR so we can apply it now; not related to the commonjs port\n",
        "created_at": "2014-07-31T18:40:59Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r15661030",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661030"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r15661030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661078",
        "pull_request_review_id": null,
        "id": 15661078,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjYxMDc4",
        "diff_hunk": "@@ -23,15 +23,11 @@ The name of the existing function (`existingFunc`) you want to augment.\n The function to be invoked before `existingFunc`.\n \n ```js\n-define(function() {\n-  function withDrama() {\n-    this.before('announce', function() {\n-      clearThroat();\n-    });\n-  }\n-\n-  return withDrama;\n-});\n+function withDrama() {",
        "path": "doc/advice_api.md",
        "position": null,
        "original_position": 13,
        "commit_id": "7ebcfbc638c0bf40634e0c277a7a6a225906866d",
        "original_commit_id": "bef467cd6d3aaf5298f3c2a53658c718b51bd9c6",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "do this in a separate PR so we can apply it now; not strictly related to the commonjs port\n",
        "created_at": "2014-07-31T18:41:43Z",
        "updated_at": "2014-08-06T18:06:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/269#discussion_r15661078",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/269",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/15661078"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/269#discussion_r15661078"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/269"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16647245",
        "pull_request_review_id": null,
        "id": 16647245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjQ3MjQ1",
        "diff_hunk": "@@ -166,7 +174,7 @@ define(\n         var instance = registry.findInstanceInfo(this), boundCallback;\n \n         // unpacking arguments by hand benchmarked faster\n-        var l = arguments.length, i = 1;\n+        var l = arguments.length, i = 1, proxied;",
        "path": "lib/registry.js",
        "position": null,
        "original_position": 43,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "2cd45e2e685db71bc96ecc05c90ec8bd9af962d8",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not using this anymore (was part of some experiment I was doing on dev).\nGot to drop it.\n",
        "created_at": "2014-08-25T09:06:15Z",
        "updated_at": "2014-08-25T18:24:33Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16647245",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16647245"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16647245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16671167",
        "pull_request_review_id": null,
        "id": 16671167,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjcxMTY3",
        "diff_hunk": "@@ -166,7 +174,7 @@ define(\n         var instance = registry.findInstanceInfo(this), boundCallback;\n \n         // unpacking arguments by hand benchmarked faster\n-        var l = arguments.length, i = 1;\n+        var l = arguments.length, i = 1, proxied;",
        "path": "lib/registry.js",
        "position": null,
        "original_position": 43,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "2cd45e2e685db71bc96ecc05c90ec8bd9af962d8",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fixed\n",
        "created_at": "2014-08-25T18:25:59Z",
        "updated_at": "2014-08-25T18:25:59Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16671167",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16671167"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16671167"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16809993",
        "pull_request_review_id": null,
        "id": 16809993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODA5OTkz",
        "diff_hunk": "@@ -188,11 +188,15 @@ define(\n       };\n \n       this.off = function() {\n-        var $element, type, callback;\n-        var lastIndex = arguments.length - 1;\n+        var $element, type, proxiedTo, callback;\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n \n-        if (typeof arguments[lastIndex] == 'function') {\n-          callback = arguments[lastIndex];\n+        // proxied event?\n+        if (typeof origin == 'string' && typeof arguments[lastIndex - 1] == 'string') {",
        "path": "lib/base.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "could this be a false positive for the case:\nthis.off('mySelector', 'click');?\n",
        "created_at": "2014-08-27T22:41:08Z",
        "updated_at": "2014-08-27T22:41:08Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16809993",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16809993"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16809993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16810015",
        "pull_request_review_id": null,
        "id": 16810015,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODEwMDE1",
        "diff_hunk": "@@ -20,6 +20,12 @@ define(\n         end -= 1;\n       }\n \n+      // proxied event?\n+      if (typeof args[end - 1] === 'string' && typeof args[end - 2] === 'string') {",
        "path": "lib/registry.js",
        "position": 14,
        "original_position": 14,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "could this be a false positive for the case:\nthis.off('mySelector', 'click');?\n",
        "created_at": "2014-08-27T22:41:37Z",
        "updated_at": "2014-08-27T22:41:37Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16810015",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16810015"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16810015"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16829248",
        "pull_request_review_id": null,
        "id": 16829248,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODI5MjQ4",
        "diff_hunk": "@@ -188,11 +188,15 @@ define(\n       };\n \n       this.off = function() {\n-        var $element, type, callback;\n-        var lastIndex = arguments.length - 1;\n+        var $element, type, proxiedTo, callback;\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n \n-        if (typeof arguments[lastIndex] == 'function') {\n-          callback = arguments[lastIndex];\n+        // proxied event?\n+        if (typeof origin == 'string' && typeof arguments[lastIndex - 1] == 'string') {",
        "path": "lib/base.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh right. \nHow about we do something like this: https://gist.github.com/giuseppeg/bf609a4bd86121e995fa\n",
        "created_at": "2014-08-28T09:28:41Z",
        "updated_at": "2014-08-28T09:28:41Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16829248",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16829248"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16829248"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16859458",
        "pull_request_review_id": null,
        "id": 16859458,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODU5NDU4",
        "diff_hunk": "@@ -188,11 +188,15 @@ define(\n       };\n \n       this.off = function() {\n-        var $element, type, callback;\n-        var lastIndex = arguments.length - 1;\n+        var $element, type, proxiedTo, callback;\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n \n-        if (typeof arguments[lastIndex] == 'function') {\n-          callback = arguments[lastIndex];\n+        // proxied event?\n+        if (typeof origin == 'string' && typeof arguments[lastIndex - 1] == 'string') {",
        "path": "lib/base.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems a bit harder to follow and getting quite fragile. In hindsight I think it was a mistake to infer the arguments from types, we should have been more explicit with argument names\u2013but backwards compat issues would make it hard to do this now.  \n\nOne option is to make a specific offProxy method so the intention is clear\n",
        "created_at": "2014-08-28T18:40:58Z",
        "updated_at": "2014-08-28T18:40:58Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16859458",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16859458"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16859458"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16889121",
        "pull_request_review_id": null,
        "id": 16889121,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODg5MTIx",
        "diff_hunk": "@@ -67,6 +67,11 @@ define(\n           this.attr[key] = attrs[key];\n         }\n       }\n+\n+      if (debug.enabled) {\n+        this.attr[key] = this.attr[key];",
        "path": "lib/base.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "original_commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Worth commenting in here about why it does the copy?\n",
        "created_at": "2014-08-29T09:33:19Z",
        "updated_at": "2014-08-29T09:33:19Z",
        "html_url": "https://github.com/flightjs/flight/pull/305#discussion_r16889121",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/305",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16889121"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/305#discussion_r16889121"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/305"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/16912757",
        "pull_request_review_id": null,
        "id": 16912757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTEyNzU3",
        "diff_hunk": "@@ -188,11 +188,15 @@ define(\n       };\n \n       this.off = function() {\n-        var $element, type, callback;\n-        var lastIndex = arguments.length - 1;\n+        var $element, type, proxiedTo, callback;\n+        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n \n-        if (typeof arguments[lastIndex] == 'function') {\n-          callback = arguments[lastIndex];\n+        // proxied event?\n+        if (typeof origin == 'string' && typeof arguments[lastIndex - 1] == 'string') {",
        "path": "lib/base.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "original_commit_id": "4c07e7df3b8e0b0d1ba32132ff99f0d1cf1eea4f",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can't agree more with you. The complexity/fragility comes from the attempt of patching (hacking) the status quo.\n...and it can only get worse eg. if we decide to support namespaces for events.\n\nIf you want to introduce a new method to the API, I would suggest we go for `this.proxy` and \"fool\" people by saying that by default proxy events are disabled but you can \n\n``` javascript\n/* to enable the proxy */\nthis.proxy(true, otherArgsOrSettingsObject);\n\n/* to disable the proxy again */\nthis.proxy(false, otherArgsOrSettingsObject);\n```\n\nor something else... I mean it feels odd to me that it is possible to proxy with `this.on()` but then have to use `this.offProxy()` to unbind.\n\nRegarding the arguments the only way I can think of is passing an object with all the settings in it (just one argument) to `on` and `off`. If `arguments[0]` is not an object we fallback to the old `on/off` way of unpacking args or to the legacy methods that we could move to... legacy.js (along with this.defaultAttrs and other stuff and make a deprecation plan) - not cool I know. <- I realize that this could be very painful for twitter.com/tweetdeck and other 1, 2 guys ... I am just blabling :)\n",
        "created_at": "2014-08-29T18:20:42Z",
        "updated_at": "2014-08-29T18:20:42Z",
        "html_url": "https://github.com/flightjs/flight/pull/303#discussion_r16912757",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/303",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/16912757"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/303#discussion_r16912757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/17027414",
        "pull_request_review_id": null,
        "id": 17027414,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDI3NDE0",
        "diff_hunk": "@@ -67,6 +67,11 @@ define(\n           this.attr[key] = attrs[key];\n         }\n       }\n+\n+      if (debug.enabled) {\n+        this.attr[key] = this.attr[key];",
        "path": "lib/base.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "original_commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "user": {
            "login": "angus-c",
            "id": 604030,
            "node_id": "MDQ6VXNlcjYwNDAzMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/604030?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/angus-c",
            "html_url": "https://github.com/angus-c",
            "followers_url": "https://api.github.com/users/angus-c/followers",
            "following_url": "https://api.github.com/users/angus-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/angus-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/angus-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/angus-c/subscriptions",
            "organizations_url": "https://api.github.com/users/angus-c/orgs",
            "repos_url": "https://api.github.com/users/angus-c/repos",
            "events_url": "https://api.github.com/users/angus-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/angus-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Are you're copying all prototype attrs down to the instance so that they can be accessed by Object.defineProperty? \n\nI think this is unnecessary. Objects defined on the prototype can't be easily mutated by the instance (not without `__proto__` or `prototype.constructor` anyway - which would be a pretty obvious hack) so I don't think they need locking.\n\nIn any case, even with this safeguard, a dev who knows what they're doing can still delete a writable false property on the instance and then have it access the (unlocked prototype) object directly (see https://gist.github.com/angus-c/ed3607792e4ec02285a3)\n",
        "created_at": "2014-09-03T01:28:58Z",
        "updated_at": "2014-09-03T01:29:35Z",
        "html_url": "https://github.com/flightjs/flight/pull/305#discussion_r17027414",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/305",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/17027414"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/305#discussion_r17027414"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/305"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/17493650",
        "pull_request_review_id": null,
        "id": 17493650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDkzNjUw",
        "diff_hunk": "@@ -59,7 +59,7 @@ define(\n \n       for (var key in this.attrDef.prototype) {\n         if (typeof attrs[key]  == 'undefined') {",
        "path": "lib/base.js",
        "position": 3,
        "original_position": 3,
        "commit_id": "167409a7093223fe26383662431fc895570ec654",
        "original_commit_id": "167409a7093223fe26383662431fc895570ec654",
        "user": {
            "login": "necolas",
            "id": 239676,
            "node_id": "MDQ6VXNlcjIzOTY3Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/239676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/necolas",
            "html_url": "https://github.com/necolas",
            "followers_url": "https://api.github.com/users/necolas/followers",
            "following_url": "https://api.github.com/users/necolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/necolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/necolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/necolas/subscriptions",
            "organizations_url": "https://api.github.com/users/necolas/orgs",
            "repos_url": "https://api.github.com/users/necolas/repos",
            "events_url": "https://api.github.com/users/necolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/necolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "while you're in here, there's an extra space before the `==`\n",
        "created_at": "2014-09-12T18:13:38Z",
        "updated_at": "2014-09-12T18:13:38Z",
        "html_url": "https://github.com/flightjs/flight/pull/310#discussion_r17493650",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/310",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/17493650"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/310#discussion_r17493650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/17601802",
        "pull_request_review_id": null,
        "id": 17601802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjAxODAy",
        "diff_hunk": "@@ -67,6 +67,11 @@ define(\n           this.attr[key] = attrs[key];\n         }\n       }\n+\n+      if (debug.enabled) {\n+        this.attr[key] = this.attr[key];",
        "path": "lib/base.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "original_commit_id": "3fec514a7aa1eb5287eac1a3886409c746f7dabd",
        "user": {
            "login": "danwrong",
            "id": 110,
            "node_id": "MDQ6VXNlcjExMA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danwrong",
            "html_url": "https://github.com/danwrong",
            "followers_url": "https://api.github.com/users/danwrong/followers",
            "following_url": "https://api.github.com/users/danwrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/danwrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danwrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danwrong/subscriptions",
            "organizations_url": "https://api.github.com/users/danwrong/orgs",
            "repos_url": "https://api.github.com/users/danwrong/repos",
            "events_url": "https://api.github.com/users/danwrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danwrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@angus-c It is necessary to lock them because otherwise people can set a new value that wont change the prototype but will change it for that instance and if you dont copy the properties to top level before you lock them then they return null.  \n\nAnd yeah, you can totally get around it if you want to but indicating the right thing to do is enough I think.  If you want to to break it you can but then its your fault.\n",
        "created_at": "2014-09-16T13:54:19Z",
        "updated_at": "2014-09-16T13:54:19Z",
        "html_url": "https://github.com/flightjs/flight/pull/305#discussion_r17601802",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/305",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/17601802"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/305#discussion_r17601802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/305"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/19012330",
        "pull_request_review_id": null,
        "id": 19012330,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDEyMzMw",
        "diff_hunk": "@@ -46,18 +46,30 @@ define(\n         ['before', 'after', 'around'].forEach(function(m) {\n           this[m] = function(method, fn) {\n \n-            utils.mutateProperty(this, method, function() {\n-              if (typeof this[method] == 'function') {\n-                this[method] = advice[m](this[method], fn);\n-              } else {\n-                this[method] = fn;\n-              }\n-\n-              return this[method];\n-            });\n+            method = method.trim();\n \n+            if (method.indexOf(' ') == -1) {",
        "path": "lib/advice.js",
        "position": null,
        "original_position": 15,
        "commit_id": "efc17f9ac6bbce6a78d0f3bb20e604d681e8db4d",
        "original_commit_id": "53bdf9060412303d0e42cb130ac4943401be88d7",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems like this `if` is unnecessary, as split on a string with no spaces with still produce an array.\n",
        "created_at": "2014-10-17T11:15:05Z",
        "updated_at": "2014-10-20T11:46:47Z",
        "html_url": "https://github.com/flightjs/flight/pull/299#discussion_r19012330",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/299",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/19012330"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/299#discussion_r19012330"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/299"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/19080083",
        "pull_request_review_id": null,
        "id": 19080083,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDgwMDgz",
        "diff_hunk": "@@ -46,18 +46,30 @@ define(\n         ['before', 'after', 'around'].forEach(function(m) {\n           this[m] = function(method, fn) {\n \n-            utils.mutateProperty(this, method, function() {\n-              if (typeof this[method] == 'function') {\n-                this[method] = advice[m](this[method], fn);\n-              } else {\n-                this[method] = fn;\n-              }\n-\n-              return this[method];\n-            });\n+            method = method.trim();\n \n+            if (method.indexOf(' ') == -1) {",
        "path": "lib/advice.js",
        "position": null,
        "original_position": 15,
        "commit_id": "efc17f9ac6bbce6a78d0f3bb20e604d681e8db4d",
        "original_commit_id": "53bdf9060412303d0e42cb130ac4943401be88d7",
        "user": {
            "login": "prashaantt",
            "id": 390540,
            "node_id": "MDQ6VXNlcjM5MDU0MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/390540?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prashaantt",
            "html_url": "https://github.com/prashaantt",
            "followers_url": "https://api.github.com/users/prashaantt/followers",
            "following_url": "https://api.github.com/users/prashaantt/following{/other_user}",
            "gists_url": "https://api.github.com/users/prashaantt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prashaantt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prashaantt/subscriptions",
            "organizations_url": "https://api.github.com/users/prashaantt/orgs",
            "repos_url": "https://api.github.com/users/prashaantt/repos",
            "events_url": "https://api.github.com/users/prashaantt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prashaantt/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right, which means I could now refactor the extra method back into the existing code.\n",
        "created_at": "2014-10-20T11:51:57Z",
        "updated_at": "2014-10-20T11:51:57Z",
        "html_url": "https://github.com/flightjs/flight/pull/299#discussion_r19080083",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/299",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/19080083"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/299#discussion_r19080083"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/299"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/35496125",
        "pull_request_review_id": null,
        "id": 35496125,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDk2MTI1",
        "diff_hunk": "@@ -0,0 +1,278 @@\n+/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n+\n+define(function() {\n+  'use strict';\n+\n+  var FlightEvent = (function () {\n+    function FlightEvent(originalEvent) {\n+      Object.defineProperty(this, 'originalEvent', {\n+        value: originalEvent\n+      });\n+\n+      Object.defineProperty(this, 'propagationStopped', {\n+        value: false,\n+        enumerable: false,\n+        writable: true\n+      });\n+\n+      var eventKeys = [\n+        'bubbles', 'cancelable', 'currentTarget',\n+        'detail', 'eventPhase', 'defaultPrevented',\n+        'isTrusted', 'target', 'timeStamp', 'type',\n+        // clipboard events\n+        'clipboardData',\n+        // keyboard events\n+        'altKey', 'charCode', 'ctrlKey', 'key',\n+        'keyCode', 'locale', 'location', 'metaKey',\n+        'repeat', 'shiftKey', 'which',\n+        // focus events\n+        'relatedTarget',\n+        // mouse events\n+        'altKey', 'button', 'buttons', 'clientX', 'clientY',\n+        'ctrlKey', 'metaKey', 'pageX', 'pageY', 'relatedTarget',\n+        'screenX', 'screenY', 'shiftKey',\n+        // touch events\n+        'altKey', 'changedTouches', 'ctrlKey', 'metaKey',\n+        'shiftKey', 'targetTouches', 'touches',\n+        // ui events\n+        'view',\n+        // wheel events\n+        'deltaMode', 'deltaX', 'deltaY', 'deltaZ'\n+      ];\n+\n+      eventKeys.forEach(function (k) {\n+        if (typeof this.originalEvent[k] === 'undefined') {\n+          return;\n+        }\n+        var override;\n+        var overrideSet = false;\n+        Object.defineProperty(this, k, {\n+          configurable: true,\n+          enumerable: true,\n+          get: function () {\n+            return (overrideSet ? override : this.originalEvent[k]);\n+          },\n+          set: function (v) {\n+            override = v;\n+            overrideSet = true;\n+          }\n+        });\n+      }, this);\n+\n+      if (this.detail === null) {\n+        this.detail = undefined;\n+      }\n+    }\n+\n+    var hooks = {\n+      stopPropagation: function () {\n+        this.propagationStopped = true;\n+      }\n+    };\n+\n+    ['preventDefault', 'stopPropagation'].forEach(function (k) {\n+      FlightEvent.prototype[k] = function () {\n+        if (hooks[k]) {\n+          hooks[k].apply(this, arguments);\n+        }\n+        return this.originalEvent[k].apply(this.originalEvent, arguments);\n+      };\n+    });\n+\n+    FlightEvent.prototype.isPropagationStopped = function () {\n+      return this.propagationStopped;\n+    };\n+\n+    return FlightEvent;\n+\n+  }());\n+\n+  function select(selector, context) {\n+    context = context || document;\n+    if (typeof selector === 'undefined' || selector === null) {\n+      throw new Error('Undefined or null selector passed to dom.select');\n+    }\n+\n+    // CSS Selector\n+    if (typeof selector === 'string') {\n+      if (selector === 'document') {\n+        return document.documentElement;\n+      }\n+\n+      return context.querySelector(selector);\n+    }\n+\n+    // Element\n+    if (selector.nodeType) {\n+      return selector;\n+    }\n+\n+    throw new Error('Cannot use given selector');\n+  }\n+\n+  function selectAll(selector, context) {\n+    context = context || document;\n+    if (typeof selector === 'undefined' || selector === null) {\n+      throw new Error('Undefined or null selector passed to dom.select');\n+    }\n+\n+    // CSS Selector\n+    if (typeof selector === 'string') {\n+      if (selector === 'document') {\n+        return [select(selector)];\n+      }\n+\n+      return [].slice.call(\n+        context.querySelectorAll(selector)\n+      );\n+    }\n+\n+    // Element\n+    if (selector.nodeType) {\n+      return [selector];\n+    }\n+\n+    // Nodelist\n+    if ('length' in selector) {\n+      return [].slice.call(selector);\n+    }\n+\n+    throw new Error('Cannot use given selector');\n+  }\n+\n+  function normalizeElementArgument(elementsOrSelector) {\n+    // Useless argument\n+    if (!elementsOrSelector) {\n+      throw new Error('Unknown element or selector');\n+    }\n+\n+    // Selector passed as first argument\n+    if (typeof elementsOrSelector === 'string') {\n+      elementsOrSelector = selectAll(elementsOrSelector);\n+    }\n+\n+    // Convert NodeList to array\n+    if ('length' in elementsOrSelector) {\n+      elementsOrSelector = [].slice.call(elementsOrSelector);\n+    }\n+\n+    // Convert single Node to array\n+    if (!('length' in elementsOrSelector)) {\n+      elementsOrSelector = [elementsOrSelector];\n+    }\n+\n+    return elementsOrSelector;\n+  }\n+\n+  function normalizeTypeArgument(type) {\n+    // Handle 'event object'\n+    if (typeof type === 'object') {\n+      type = type.type;\n+    }\n+\n+    if (typeof type !== 'string') {\n+      throw new Error('Event type is not a string');\n+    }\n+\n+    return '' + type;\n+  }\n+\n+  function normalizeCallbackArgument(callback) {\n+    if (typeof callback !== 'function') {\n+      throw new Error('Callback is not a function');\n+    }\n+\n+    return callback;\n+  }\n+\n+  function on(elementsOrSelector, type, callback) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+    callback = normalizeCallbackArgument(callback);\n+\n+    return elements.map(function (element) {\n+      element.addEventListener(eventType, callback);\n+      return callback;\n+    });\n+  }\n+\n+  function off(elementsOrSelector, type, callback) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+    callback = normalizeCallbackArgument(callback);\n+\n+    return elements.map(function (element) {\n+      element.removeEventListener(eventType, callback);\n+      return element;\n+    });\n+  }\n+\n+  function trigger(elementsOrSelector, type, data) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+\n+    return elements.map(function (element) {\n+      element.dispatchEvent(\n+        new CustomEvent(eventType, {\n+          detail: data,\n+          bubbles: true,\n+          cancelable: true\n+        })\n+      );\n+      return element;\n+    });\n+  }\n+\n+  // Create a callback that lifts the DOM event into a FlightEvent, so we can detect when\n+  // propagation has been stopped.\n+  function wrapCallback(callback, ctx) {\n+    return function wrappedCallback(originalEvent) {\n+      var event = new FlightEvent(originalEvent);\n+      return callback.call(ctx, event, event.detail);\n+    };\n+  }\n+\n+  function parents(node) {\n+    if (!node.parentNode) {\n+      return [];\n+    }\n+    return [node.parentNode].concat(parents(node.parentNode));\n+  }\n+\n+  function closest(contextElement, target, selector) {",
        "path": "lib/dom.js",
        "position": 242,
        "original_position": 242,
        "commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "original_commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You could use `Element.prototype.closest` where supported\n",
        "created_at": "2015-07-26T18:58:30Z",
        "updated_at": "2015-07-26T18:58:30Z",
        "html_url": "https://github.com/flightjs/flight/pull/358#discussion_r35496125",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/358",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/35496125"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/358#discussion_r35496125"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/358"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/35496156",
        "pull_request_review_id": null,
        "id": 35496156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDk2MTU2",
        "diff_hunk": "@@ -0,0 +1,278 @@\n+/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n+\n+define(function() {\n+  'use strict';\n+\n+  var FlightEvent = (function () {\n+    function FlightEvent(originalEvent) {\n+      Object.defineProperty(this, 'originalEvent', {\n+        value: originalEvent\n+      });\n+\n+      Object.defineProperty(this, 'propagationStopped', {\n+        value: false,\n+        enumerable: false,\n+        writable: true\n+      });\n+\n+      var eventKeys = [\n+        'bubbles', 'cancelable', 'currentTarget',\n+        'detail', 'eventPhase', 'defaultPrevented',\n+        'isTrusted', 'target', 'timeStamp', 'type',\n+        // clipboard events\n+        'clipboardData',\n+        // keyboard events\n+        'altKey', 'charCode', 'ctrlKey', 'key',\n+        'keyCode', 'locale', 'location', 'metaKey',\n+        'repeat', 'shiftKey', 'which',\n+        // focus events\n+        'relatedTarget',\n+        // mouse events\n+        'altKey', 'button', 'buttons', 'clientX', 'clientY',\n+        'ctrlKey', 'metaKey', 'pageX', 'pageY', 'relatedTarget',\n+        'screenX', 'screenY', 'shiftKey',\n+        // touch events\n+        'altKey', 'changedTouches', 'ctrlKey', 'metaKey',\n+        'shiftKey', 'targetTouches', 'touches',\n+        // ui events\n+        'view',\n+        // wheel events\n+        'deltaMode', 'deltaX', 'deltaY', 'deltaZ'\n+      ];\n+\n+      eventKeys.forEach(function (k) {\n+        if (typeof this.originalEvent[k] === 'undefined') {\n+          return;\n+        }\n+        var override;\n+        var overrideSet = false;\n+        Object.defineProperty(this, k, {\n+          configurable: true,\n+          enumerable: true,\n+          get: function () {\n+            return (overrideSet ? override : this.originalEvent[k]);\n+          },\n+          set: function (v) {\n+            override = v;\n+            overrideSet = true;\n+          }\n+        });\n+      }, this);\n+\n+      if (this.detail === null) {\n+        this.detail = undefined;\n+      }\n+    }\n+\n+    var hooks = {\n+      stopPropagation: function () {\n+        this.propagationStopped = true;\n+      }\n+    };\n+\n+    ['preventDefault', 'stopPropagation'].forEach(function (k) {\n+      FlightEvent.prototype[k] = function () {\n+        if (hooks[k]) {\n+          hooks[k].apply(this, arguments);\n+        }\n+        return this.originalEvent[k].apply(this.originalEvent, arguments);\n+      };\n+    });\n+\n+    FlightEvent.prototype.isPropagationStopped = function () {\n+      return this.propagationStopped;\n+    };\n+\n+    return FlightEvent;\n+\n+  }());\n+\n+  function select(selector, context) {\n+    context = context || document;\n+    if (typeof selector === 'undefined' || selector === null) {\n+      throw new Error('Undefined or null selector passed to dom.select');\n+    }\n+\n+    // CSS Selector\n+    if (typeof selector === 'string') {\n+      if (selector === 'document') {",
        "path": "lib/dom.js",
        "position": 98,
        "original_position": 98,
        "commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "original_commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You could do the same thing when `selector === 'body'` (and maybe `head`)\n",
        "created_at": "2015-07-26T19:00:17Z",
        "updated_at": "2015-07-26T19:00:17Z",
        "html_url": "https://github.com/flightjs/flight/pull/358#discussion_r35496156",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/358",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/35496156"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/358#discussion_r35496156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/358"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/35498546",
        "pull_request_review_id": null,
        "id": 35498546,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDk4NTQ2",
        "diff_hunk": "@@ -0,0 +1,278 @@\n+/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n+\n+define(function() {\n+  'use strict';\n+\n+  var FlightEvent = (function () {\n+    function FlightEvent(originalEvent) {\n+      Object.defineProperty(this, 'originalEvent', {\n+        value: originalEvent\n+      });\n+\n+      Object.defineProperty(this, 'propagationStopped', {\n+        value: false,\n+        enumerable: false,\n+        writable: true\n+      });\n+\n+      var eventKeys = [\n+        'bubbles', 'cancelable', 'currentTarget',\n+        'detail', 'eventPhase', 'defaultPrevented',\n+        'isTrusted', 'target', 'timeStamp', 'type',\n+        // clipboard events\n+        'clipboardData',\n+        // keyboard events\n+        'altKey', 'charCode', 'ctrlKey', 'key',\n+        'keyCode', 'locale', 'location', 'metaKey',\n+        'repeat', 'shiftKey', 'which',\n+        // focus events\n+        'relatedTarget',\n+        // mouse events\n+        'altKey', 'button', 'buttons', 'clientX', 'clientY',\n+        'ctrlKey', 'metaKey', 'pageX', 'pageY', 'relatedTarget',\n+        'screenX', 'screenY', 'shiftKey',\n+        // touch events\n+        'altKey', 'changedTouches', 'ctrlKey', 'metaKey',\n+        'shiftKey', 'targetTouches', 'touches',\n+        // ui events\n+        'view',\n+        // wheel events\n+        'deltaMode', 'deltaX', 'deltaY', 'deltaZ'\n+      ];\n+\n+      eventKeys.forEach(function (k) {\n+        if (typeof this.originalEvent[k] === 'undefined') {\n+          return;\n+        }\n+        var override;\n+        var overrideSet = false;\n+        Object.defineProperty(this, k, {\n+          configurable: true,\n+          enumerable: true,\n+          get: function () {\n+            return (overrideSet ? override : this.originalEvent[k]);\n+          },\n+          set: function (v) {\n+            override = v;\n+            overrideSet = true;\n+          }\n+        });\n+      }, this);\n+\n+      if (this.detail === null) {\n+        this.detail = undefined;\n+      }\n+    }\n+\n+    var hooks = {\n+      stopPropagation: function () {\n+        this.propagationStopped = true;\n+      }\n+    };\n+\n+    ['preventDefault', 'stopPropagation'].forEach(function (k) {\n+      FlightEvent.prototype[k] = function () {\n+        if (hooks[k]) {\n+          hooks[k].apply(this, arguments);\n+        }\n+        return this.originalEvent[k].apply(this.originalEvent, arguments);\n+      };\n+    });\n+\n+    FlightEvent.prototype.isPropagationStopped = function () {\n+      return this.propagationStopped;\n+    };\n+\n+    return FlightEvent;\n+\n+  }());\n+\n+  function select(selector, context) {\n+    context = context || document;\n+    if (typeof selector === 'undefined' || selector === null) {\n+      throw new Error('Undefined or null selector passed to dom.select');\n+    }\n+\n+    // CSS Selector\n+    if (typeof selector === 'string') {\n+      if (selector === 'document') {\n+        return document.documentElement;\n+      }\n+\n+      return context.querySelector(selector);\n+    }\n+\n+    // Element\n+    if (selector.nodeType) {\n+      return selector;\n+    }\n+\n+    throw new Error('Cannot use given selector');\n+  }\n+\n+  function selectAll(selector, context) {\n+    context = context || document;\n+    if (typeof selector === 'undefined' || selector === null) {\n+      throw new Error('Undefined or null selector passed to dom.select');\n+    }\n+\n+    // CSS Selector\n+    if (typeof selector === 'string') {\n+      if (selector === 'document') {\n+        return [select(selector)];\n+      }\n+\n+      return [].slice.call(\n+        context.querySelectorAll(selector)\n+      );\n+    }\n+\n+    // Element\n+    if (selector.nodeType) {\n+      return [selector];\n+    }\n+\n+    // Nodelist\n+    if ('length' in selector) {\n+      return [].slice.call(selector);\n+    }\n+\n+    throw new Error('Cannot use given selector');\n+  }\n+\n+  function normalizeElementArgument(elementsOrSelector) {\n+    // Useless argument\n+    if (!elementsOrSelector) {\n+      throw new Error('Unknown element or selector');\n+    }\n+\n+    // Selector passed as first argument\n+    if (typeof elementsOrSelector === 'string') {\n+      elementsOrSelector = selectAll(elementsOrSelector);\n+    }\n+\n+    // Convert NodeList to array\n+    if ('length' in elementsOrSelector) {\n+      elementsOrSelector = [].slice.call(elementsOrSelector);\n+    }\n+\n+    // Convert single Node to array\n+    if (!('length' in elementsOrSelector)) {\n+      elementsOrSelector = [elementsOrSelector];\n+    }\n+\n+    return elementsOrSelector;\n+  }\n+\n+  function normalizeTypeArgument(type) {\n+    // Handle 'event object'\n+    if (typeof type === 'object') {\n+      type = type.type;\n+    }\n+\n+    if (typeof type !== 'string') {\n+      throw new Error('Event type is not a string');\n+    }\n+\n+    return '' + type;\n+  }\n+\n+  function normalizeCallbackArgument(callback) {\n+    if (typeof callback !== 'function') {\n+      throw new Error('Callback is not a function');\n+    }\n+\n+    return callback;\n+  }\n+\n+  function on(elementsOrSelector, type, callback) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+    callback = normalizeCallbackArgument(callback);\n+\n+    return elements.map(function (element) {\n+      element.addEventListener(eventType, callback);\n+      return callback;\n+    });\n+  }\n+\n+  function off(elementsOrSelector, type, callback) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+    callback = normalizeCallbackArgument(callback);\n+\n+    return elements.map(function (element) {\n+      element.removeEventListener(eventType, callback);\n+      return element;\n+    });\n+  }\n+\n+  function trigger(elementsOrSelector, type, data) {\n+    var elements = normalizeElementArgument(elementsOrSelector);\n+    var eventType = normalizeTypeArgument(type);\n+\n+    return elements.map(function (element) {\n+      element.dispatchEvent(\n+        new CustomEvent(eventType, {\n+          detail: data,\n+          bubbles: true,\n+          cancelable: true\n+        })\n+      );\n+      return element;\n+    });\n+  }\n+\n+  // Create a callback that lifts the DOM event into a FlightEvent, so we can detect when\n+  // propagation has been stopped.\n+  function wrapCallback(callback, ctx) {\n+    return function wrappedCallback(originalEvent) {\n+      var event = new FlightEvent(originalEvent);\n+      return callback.call(ctx, event, event.detail);\n+    };\n+  }\n+\n+  function parents(node) {\n+    if (!node.parentNode) {\n+      return [];\n+    }\n+    return [node.parentNode].concat(parents(node.parentNode));\n+  }\n+\n+  function closest(contextElement, target, selector) {",
        "path": "lib/dom.js",
        "position": 242,
        "original_position": 242,
        "commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "original_commit_id": "27be6bbb1a4e841e49f8587e7c1568c3ac57084c",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Would you mind adding an issue for this? Thanks! (Ditto with other comments)\n",
        "created_at": "2015-07-26T22:10:06Z",
        "updated_at": "2015-07-26T22:10:06Z",
        "html_url": "https://github.com/flightjs/flight/pull/358#discussion_r35498546",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/358",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/35498546"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/358#discussion_r35498546"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/358"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/42312950",
        "pull_request_review_id": null,
        "id": 42312950,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyOTUw",
        "diff_hunk": "@@ -89,7 +95,8 @@ define(function() {\n \n   // Elements that can be jumped to directly from a string\n   var selectorShortcut = {\n-    document: document.documentElement,\n+    document: document,\n+    window: window,",
        "path": "lib/dom.js",
        "position": 20,
        "original_position": 20,
        "commit_id": "7a2edacd627743840d5829bb532ea4753b4f15ce",
        "original_commit_id": "921f89909ef86b5ac05b70f2b786f9a15facf17d",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should remove these imho\nand add `'html': document.documentElement`\n",
        "created_at": "2015-10-17T19:08:50Z",
        "updated_at": "2015-10-18T01:18:48Z",
        "html_url": "https://github.com/flightjs/flight/pull/369#discussion_r42312950",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/369",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/42312950"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/369#discussion_r42312950"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/369"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/42314677",
        "pull_request_review_id": null,
        "id": 42314677,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0Njc3",
        "diff_hunk": "@@ -15,8 +15,15 @@ define(\n       off: 'x '\n     };\n \n+    var eventNameAliases = {",
        "path": "lib/logger.js",
        "position": null,
        "original_position": 4,
        "commit_id": "7a2edacd627743840d5829bb532ea4753b4f15ce",
        "original_commit_id": "921f89909ef86b5ac05b70f2b786f9a15facf17d",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ouch this should be `elemNameAliases` :D \n",
        "created_at": "2015-10-17T22:03:25Z",
        "updated_at": "2015-10-18T01:18:48Z",
        "html_url": "https://github.com/flightjs/flight/pull/369#discussion_r42314677",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/369",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/42314677"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/369#discussion_r42314677"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/369"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/42679900",
        "pull_request_review_id": null,
        "id": 42679900,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5OTAw",
        "diff_hunk": "@@ -89,7 +95,8 @@ define(function() {\n \n   // Elements that can be jumped to directly from a string\n   var selectorShortcut = {\n-    document: document.documentElement,\n+    document: document,\n+    window: window,",
        "path": "lib/dom.js",
        "position": 20,
        "original_position": 20,
        "commit_id": "7a2edacd627743840d5829bb532ea4753b4f15ce",
        "original_commit_id": "921f89909ef86b5ac05b70f2b786f9a15facf17d",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm. I was trying to match what jQuery does but it looks like I got it wrong. So you're right, we can get rid of them and add an `html` key.\n",
        "created_at": "2015-10-21T20:46:11Z",
        "updated_at": "2015-10-21T20:46:11Z",
        "html_url": "https://github.com/flightjs/flight/pull/369#discussion_r42679900",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/369",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/42679900"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/369#discussion_r42679900"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/369"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/42680993",
        "pull_request_review_id": null,
        "id": 42680993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwOTkz",
        "diff_hunk": "@@ -219,6 +219,11 @@ define(['lib/component', 'lib/registry', 'lib/dom'], function (defineComponent,\n       instance2.on(document, 'click', spy);\n       instance1.trigger('click');\n       expect(spy).toHaveBeenCalled();\n+\n+      spy = jasmine.createSpy();",
        "path": "test/spec/events_spec.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "7a2edacd627743840d5829bb532ea4753b4f15ce",
        "original_commit_id": "7a2edacd627743840d5829bb532ea4753b4f15ce",
        "user": {
            "login": "tgvashworth",
            "id": 320862,
            "node_id": "MDQ6VXNlcjMyMDg2Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/320862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgvashworth",
            "html_url": "https://github.com/tgvashworth",
            "followers_url": "https://api.github.com/users/tgvashworth/followers",
            "following_url": "https://api.github.com/users/tgvashworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgvashworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgvashworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgvashworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tgvashworth/orgs",
            "repos_url": "https://api.github.com/users/tgvashworth/repos",
            "events_url": "https://api.github.com/users/tgvashworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgvashworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you set this up as a separate test, perhaps that has a list of elements and generates a test for  each of them? `[window, document, 'head', 'body'].forEach(...)`\n",
        "created_at": "2015-10-21T20:54:43Z",
        "updated_at": "2015-10-21T20:54:43Z",
        "html_url": "https://github.com/flightjs/flight/pull/369#discussion_r42680993",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/369",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/42680993"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/369#discussion_r42680993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/369"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/43348245",
        "pull_request_review_id": null,
        "id": 43348245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ4MjQ1",
        "diff_hunk": "@@ -221,6 +221,29 @@ define(['lib/component', 'lib/registry', 'lib/dom'], function (defineComponent,\n       expect(spy).toHaveBeenCalled();\n     });\n \n+    it('can be attached to any special element', function () {\n+      var instance1 = (new Component).initialize(window.innerDiv);\n+      var instance2 = (new Component).initialize(window.outerDiv);\n+\n+      var specialElements = [\n+        window,\n+        document,\n+        document.body,\n+        document.documentElement,\n+        'html',\n+        'body'\n+      ];\n+\n+      specialElements.forEach(function (element) {\n+        var spy = jasmine.createSpy(element.toString());\n+        instance2.on(element, 'click', spy);\n+        instance1.trigger('click');\n+        instance2.off(element, 'click');\n+        instance1.trigger('click');\n+        expect(spy.callCount).toBe(1);",
        "path": "test/spec/events_spec.js",
        "position": 89,
        "original_position": 29,
        "commit_id": "bc4b2e3b2a84a31e8b6a6fb7784888f8d035477b",
        "original_commit_id": "bc4b2e3b2a84a31e8b6a6fb7784888f8d035477b",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we are using an old version of jasmine :(\n",
        "created_at": "2015-10-29T04:33:54Z",
        "updated_at": "2016-04-02T22:18:13Z",
        "html_url": "https://github.com/flightjs/flight/pull/371#discussion_r43348245",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/371",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/43348245"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/371#discussion_r43348245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/371"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/flightjs/flight/pulls/comments/43348255",
        "pull_request_review_id": null,
        "id": 43348255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ4MjU1",
        "diff_hunk": "@@ -221,6 +221,29 @@ define(['lib/component', 'lib/registry', 'lib/dom'], function (defineComponent,\n       expect(spy).toHaveBeenCalled();\n     });\n \n+    it('can be attached to any special element', function () {\n+      var instance1 = (new Component).initialize(window.innerDiv);\n+      var instance2 = (new Component).initialize(window.outerDiv);\n+\n+      var specialElements = [\n+        window,\n+        document,\n+        document.body,\n+        document.documentElement,\n+        'html',\n+        'body'\n+      ];\n+\n+      specialElements.forEach(function (element) {\n+        var spy = jasmine.createSpy(element.toString());\n+        instance2.on(element, 'click', spy);\n+        instance1.trigger('click');\n+        instance2.off(element, 'click');",
        "path": "test/spec/events_spec.js",
        "position": 87,
        "original_position": 27,
        "commit_id": "bc4b2e3b2a84a31e8b6a6fb7784888f8d035477b",
        "original_commit_id": "bc4b2e3b2a84a31e8b6a6fb7784888f8d035477b",
        "user": {
            "login": "giuseppeg",
            "id": 711311,
            "node_id": "MDQ6VXNlcjcxMTMxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/711311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuseppeg",
            "html_url": "https://github.com/giuseppeg",
            "followers_url": "https://api.github.com/users/giuseppeg/followers",
            "following_url": "https://api.github.com/users/giuseppeg/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuseppeg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuseppeg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuseppeg/subscriptions",
            "organizations_url": "https://api.github.com/users/giuseppeg/orgs",
            "repos_url": "https://api.github.com/users/giuseppeg/repos",
            "events_url": "https://api.github.com/users/giuseppeg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuseppeg/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "probably overkill to also `off` here\n",
        "created_at": "2015-10-29T04:34:24Z",
        "updated_at": "2016-04-02T22:18:13Z",
        "html_url": "https://github.com/flightjs/flight/pull/371#discussion_r43348255",
        "pull_request_url": "https://api.github.com/repos/flightjs/flight/pulls/371",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/comments/43348255"
            },
            "html": {
                "href": "https://github.com/flightjs/flight/pull/371#discussion_r43348255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/flightjs/flight/pulls/371"
            }
        }
    }
]