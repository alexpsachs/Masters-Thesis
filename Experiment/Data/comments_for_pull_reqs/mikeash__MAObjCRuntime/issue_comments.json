[
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/428030",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/1#issuecomment-428030",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/1",
        "id": 428030,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAzMA==",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2010-09-24T17:06:58Z",
        "updated_at": "2010-09-24T17:06:58Z",
        "author_association": "OWNER",
        "body": "This is great! Thanks a bunch. Is there any need for the `_RTComponentsProperty` class, though? Since there's no way to add properties to a class (that I can see), it doesn't seem like it would be useful.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/428051",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/1#issuecomment-428051",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/1",
        "id": 428051,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA1MQ==",
        "user": {
            "login": "lemnar",
            "id": 13515,
            "node_id": "MDQ6VXNlcjEzNTE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemnar",
            "html_url": "https://github.com/lemnar",
            "followers_url": "https://api.github.com/users/lemnar/followers",
            "following_url": "https://api.github.com/users/lemnar/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemnar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemnar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemnar/subscriptions",
            "organizations_url": "https://api.github.com/users/lemnar/orgs",
            "repos_url": "https://api.github.com/users/lemnar/repos",
            "events_url": "https://api.github.com/users/lemnar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemnar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2010-09-24T17:15:30Z",
        "updated_at": "2010-09-24T17:15:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "No, I suppose there isn't any need for it.  Perhaps I should file a bug requesting a `class_addProperty()` function.  I wonder why it's absent.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/428057",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/1#issuecomment-428057",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/1",
        "id": 428057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA1Nw==",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2010-09-24T17:16:59Z",
        "updated_at": "2010-09-24T17:16:59Z",
        "author_association": "OWNER",
        "body": "Good idea. I'll go ahead and merge this without that class for now, and if Apple ever gets around to adding that function then we can stick it back in. Thanks again!\n\nBy the way, do you have a Twitter handle or such so I can properly credit you in my announcement tweet?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/428062",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/1#issuecomment-428062",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/1",
        "id": 428062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA2Mg==",
        "user": {
            "login": "lemnar",
            "id": 13515,
            "node_id": "MDQ6VXNlcjEzNTE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/13515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemnar",
            "html_url": "https://github.com/lemnar",
            "followers_url": "https://api.github.com/users/lemnar/followers",
            "following_url": "https://api.github.com/users/lemnar/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemnar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemnar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemnar/subscriptions",
            "organizations_url": "https://api.github.com/users/lemnar/orgs",
            "repos_url": "https://api.github.com/users/lemnar/repos",
            "events_url": "https://api.github.com/users/lemnar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemnar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2010-09-24T17:19:04Z",
        "updated_at": "2010-09-24T17:19:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Randy_Becker, and thank you!\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/435828",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/3#issuecomment-435828",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/3",
        "id": 435828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTgyOA==",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2010-09-29T03:36:59Z",
        "updated_at": "2010-09-29T03:36:59Z",
        "author_association": "OWNER",
        "body": "Pulled. Thanks, good stuff as always.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2624842",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/5#issuecomment-2624842",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/5",
        "id": 2624842,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjQ4NDI=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-11-03T23:35:02Z",
        "updated_at": "2011-11-03T23:35:02Z",
        "author_association": "OWNER",
        "body": "What's the advantage over simply doing `[[class rt_class] rt_methods]`? I guess it's a bit confusing. Seems to me that the best approach might be to rename `rt_methods` as `rt_instanceMethods`, then make a new `rt_methods` that fetches the methods that the receiver itself responds to.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2632599",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/5#issuecomment-2632599",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/5",
        "id": 2632599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzI1OTk=",
        "user": {
            "login": "rjregenold",
            "id": 214054,
            "node_id": "MDQ6VXNlcjIxNDA1NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/214054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjregenold",
            "html_url": "https://github.com/rjregenold",
            "followers_url": "https://api.github.com/users/rjregenold/followers",
            "following_url": "https://api.github.com/users/rjregenold/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjregenold/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjregenold/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjregenold/subscriptions",
            "organizations_url": "https://api.github.com/users/rjregenold/orgs",
            "repos_url": "https://api.github.com/users/rjregenold/repos",
            "events_url": "https://api.github.com/users/rjregenold/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjregenold/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-11-04T15:55:46Z",
        "updated_at": "2011-11-04T15:55:46Z",
        "author_association": "NONE",
        "body": "Ah, I didn't think about doing `[[class rt_class] rt_methods]`. I do like the idea of changing `rt_methods` to `rt_instanceMethods` and having `rt_methods` query the methods of the receiver. Are you concerned about breaking backwards compatibility?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2635448",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/5#issuecomment-2635448",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/5",
        "id": 2635448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzU0NDg=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-11-04T19:27:06Z",
        "updated_at": "2011-11-04T19:27:06Z",
        "author_association": "OWNER",
        "body": "I'm not concerned about breaking backwards compatibility, but I wouldn't want to do so silently, so having a new `rt_methods` that does something different from before wouldn't be ideal. Hmm.....\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2970340",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/6#issuecomment-2970340",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/6",
        "id": 2970340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzAzNDA=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-12-01T03:19:18Z",
        "updated_at": "2011-12-01T03:19:18Z",
        "author_association": "OWNER",
        "body": "Thanks! Just curious, do you have an actual use case that involves adding properties at runtime, or is this just for completeness?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2970346",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/7#issuecomment-2970346",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/7",
        "id": 2970346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzAzNDY=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-12-01T03:20:06Z",
        "updated_at": "2011-12-01T03:20:06Z",
        "author_association": "OWNER",
        "body": "Thanks, and fixed. `-[Protocol isEqual:]` is busted. Fortunately there's a `protocol_isEqual` function that works.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2970414",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/6#issuecomment-2970414",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/6",
        "id": 2970414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA0MTQ=",
        "user": {
            "login": "rentzsch",
            "id": 2971,
            "node_id": "MDQ6VXNlcjI5NzE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2971?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rentzsch",
            "html_url": "https://github.com/rentzsch",
            "followers_url": "https://api.github.com/users/rentzsch/followers",
            "following_url": "https://api.github.com/users/rentzsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/rentzsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rentzsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rentzsch/subscriptions",
            "organizations_url": "https://api.github.com/users/rentzsch/orgs",
            "repos_url": "https://api.github.com/users/rentzsch/repos",
            "events_url": "https://api.github.com/users/rentzsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rentzsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-12-01T03:33:40Z",
        "updated_at": "2011-12-01T03:33:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "I indeed have a use-case :)\n\nI have a dependency-injection library that reads @properties to determine dependancies. I'd like for it to work with Nu, with otherwise lacks any support for declaring properties.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2970447",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/6#issuecomment-2970447",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/6",
        "id": 2970447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzA0NDc=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-12-01T03:40:39Z",
        "updated_at": "2011-12-01T03:40:39Z",
        "author_association": "OWNER",
        "body": "Nifty. Thanks again for the patch, much appreciated. It's great to see people making use of this code.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/2990734",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/8#issuecomment-2990734",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/8",
        "id": 2990734,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTA3MzQ=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2011-12-02T14:39:54Z",
        "updated_at": "2011-12-02T14:39:54Z",
        "author_association": "OWNER",
        "body": "On Dec 2, 2011, at 2:43 AM, Vijay Santhanam wrote:\n\n> Just wanted to double check this awesome library is deployable to app store.\n> \n> It's really well written, I use it alot to understand how the runtime works. I didn't realize how dynamic ObjC was until I used your library to runtime inspect how UIAppearance works in iOS5.\n> \n> Nice work!\n\nThank you!\n\nThere should be no problem with the library itself. It only uses public, legal APIs. It is possible to use the library to do things that will get you rejected (like swizzling out private Apple methods), but at that point it's up to you.\n\n## \n\nDue to circumstances beyond your control,\nyou are master of your fate and captain of your soul.\n\nMike Ash - http://www.mikeash.com/, mailto:mike@mikeash.com\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3521849",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3521849",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3521849,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4NDk=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:01:04Z",
        "updated_at": "2012-01-17T02:01:04Z",
        "author_association": "OWNER",
        "body": "Works fine for me. Can you show your code?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522080",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522080",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIwODA=",
        "user": {
            "login": "mbrandonw",
            "id": 135203,
            "node_id": "MDQ6VXNlcjEzNTIwMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbrandonw",
            "html_url": "https://github.com/mbrandonw",
            "followers_url": "https://api.github.com/users/mbrandonw/followers",
            "following_url": "https://api.github.com/users/mbrandonw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbrandonw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbrandonw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbrandonw/subscriptions",
            "organizations_url": "https://api.github.com/users/mbrandonw/orgs",
            "repos_url": "https://api.github.com/users/mbrandonw/repos",
            "events_url": "https://api.github.com/users/mbrandonw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbrandonw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:24:19Z",
        "updated_at": "2012-01-17T02:24:19Z",
        "author_association": "NONE",
        "body": "Sorry, I just realized I'm doing something stupid. I have a setter selector, I convert it into the corresponding getter, and then try to invoke it to get it's return value:\n\n```\nvoid *value = NULL;\n[self rt_returnValue:&value sendSelector:getterSelector];\n```\n\nSince I don't know the return type I just did a void pointer, so of course 4 bytes. And then later I do:\n\n```\n[target rt_returnValue:NULL sendSelector:method.selector, RTARG(value)];\n```\n\nIs it possible to do what I want?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522093",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522093",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522093,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIwOTM=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:25:34Z",
        "updated_at": "2012-01-17T02:25:34Z",
        "author_association": "OWNER",
        "body": "I'm not really sure I follow what you're trying to do. Can you post some more complete code that illustrates the problem?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522227",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522227",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522227,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIyMjc=",
        "user": {
            "login": "mbrandonw",
            "id": 135203,
            "node_id": "MDQ6VXNlcjEzNTIwMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbrandonw",
            "html_url": "https://github.com/mbrandonw",
            "followers_url": "https://api.github.com/users/mbrandonw/followers",
            "following_url": "https://api.github.com/users/mbrandonw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbrandonw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbrandonw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbrandonw/subscriptions",
            "organizations_url": "https://api.github.com/users/mbrandonw/orgs",
            "repos_url": "https://api.github.com/users/mbrandonw/repos",
            "events_url": "https://api.github.com/users/mbrandonw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbrandonw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:40:16Z",
        "updated_at": "2012-01-17T02:40:16Z",
        "author_association": "NONE",
        "body": "The exact snippet is around line 120: https://github.com/mbrandonw/OPUIKit/blob/master/OPUIKit/Source/OPStyle.m\n\nBasically, an OPStyle instance has a bunch of properties that ultimately get transferred to a target. To do that I loop through the methods in [OPStyleProtocol](https://github.com/mbrandonw/OPUIKit/blob/master/OPUIKit/Source/OPStyleProtocol.h, for each setter I find the corresponding getter, and then do the little snippet I posted above to transfer the property.\n\nDoes that make any more sense?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522284",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522284",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522284,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIyODQ=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:46:12Z",
        "updated_at": "2012-01-17T02:46:12Z",
        "author_association": "OWNER",
        "body": "Yes, I think I see. Seems to me like this could be done more cleanly by using KVC. Use `valueForKey:` to get the value, then `setValue:forKey:` to set it. All problems of argument size, primitives, etc. are handled for you by the KVC internals.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522304",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522304",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522304,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIzMDQ=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:48:30Z",
        "updated_at": "2012-01-17T02:48:30Z",
        "author_association": "OWNER",
        "body": "I should mention for completeness that there's no good way to do this with MAObjCRuntime directly. The method invocation stuff there is only intended for cases where you know the types in advance. You could do it directly with `NSInvocation`, but that would be harder than just using KVC.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522349",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522349",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522349,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIzNDk=",
        "user": {
            "login": "mbrandonw",
            "id": 135203,
            "node_id": "MDQ6VXNlcjEzNTIwMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbrandonw",
            "html_url": "https://github.com/mbrandonw",
            "followers_url": "https://api.github.com/users/mbrandonw/followers",
            "following_url": "https://api.github.com/users/mbrandonw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbrandonw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbrandonw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbrandonw/subscriptions",
            "organizations_url": "https://api.github.com/users/mbrandonw/orgs",
            "repos_url": "https://api.github.com/users/mbrandonw/repos",
            "events_url": "https://api.github.com/users/mbrandonw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbrandonw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:53:48Z",
        "updated_at": "2012-01-17T02:53:48Z",
        "author_association": "NONE",
        "body": "Wow, that is much cleaner. So, even though we cannot do something like `[target setValue:CGRectMake(0,0,100,100) forKey:@\"frame\"]` directly, if we retrieve an value from an object we can set it another object, even if it is a primitive?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522387",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522387",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522387,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIzODc=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:58:13Z",
        "updated_at": "2012-01-17T02:58:13Z",
        "author_association": "OWNER",
        "body": "Right. Primitives get wrapped in NSValue objects, and automatically unwrapped on the other side.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522396",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522396",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522396,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIzOTY=",
        "user": {
            "login": "mbrandonw",
            "id": 135203,
            "node_id": "MDQ6VXNlcjEzNTIwMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbrandonw",
            "html_url": "https://github.com/mbrandonw",
            "followers_url": "https://api.github.com/users/mbrandonw/followers",
            "following_url": "https://api.github.com/users/mbrandonw/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbrandonw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbrandonw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbrandonw/subscriptions",
            "organizations_url": "https://api.github.com/users/mbrandonw/orgs",
            "repos_url": "https://api.github.com/users/mbrandonw/repos",
            "events_url": "https://api.github.com/users/mbrandonw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbrandonw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:59:01Z",
        "updated_at": "2012-01-17T02:59:01Z",
        "author_association": "NONE",
        "body": "Terrific, thanks so much for the info.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3522403",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/9#issuecomment-3522403",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/9",
        "id": 3522403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI0MDM=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-01-17T02:59:45Z",
        "updated_at": "2012-01-17T02:59:45Z",
        "author_association": "OWNER",
        "body": "Glad I could help!\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3952967",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3952967",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3952967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI5Njc=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-14T00:55:58Z",
        "updated_at": "2012-02-14T00:55:58Z",
        "author_association": "OWNER",
        "body": "Fine by me! Attribution in the readme would be great, if the amount of code you've used warrants it, but anything which fulfills the terms of the license is ultimately fine by me (or else I wouldn't use that license!). No other comments, except that it's great to see someone building something based on the stuff I've made.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3968892",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3968892",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3968892,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg4OTI=",
        "user": {
            "login": "jagill",
            "id": 495664,
            "node_id": "MDQ6VXNlcjQ5NTY2NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/495664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jagill",
            "html_url": "https://github.com/jagill",
            "followers_url": "https://api.github.com/users/jagill/followers",
            "following_url": "https://api.github.com/users/jagill/following{/other_user}",
            "gists_url": "https://api.github.com/users/jagill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jagill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jagill/subscriptions",
            "organizations_url": "https://api.github.com/users/jagill/orgs",
            "repos_url": "https://api.github.com/users/jagill/repos",
            "events_url": "https://api.github.com/users/jagill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jagill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-14T20:21:05Z",
        "updated_at": "2012-02-14T20:21:05Z",
        "author_association": "NONE",
        "body": "Thanks!  If you want to take a look at it, you can find it at\nhttps://github.com/jagill/JAGPropertyConverter\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3972148",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3972148",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3972148,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzIxNDg=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-14T23:43:48Z",
        "updated_at": "2012-02-14T23:43:48Z",
        "author_association": "OWNER",
        "body": "Neat idea. Reminds me a little of Google Protobuf, but operating at a somewhat higher level.\n\nThis statement in the readme confuses me a bit: \"Since JAGPropertyConverter uses Key-Value coding to get/set values, it doesn't respect custom getters and setters\" I thought KVC dealt fine with those. Have I misunderstood?\n\nAnyway, cool stuff, and just the sort of thing I hoped to enable with my code.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3985976",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3985976",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3985976,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU5NzY=",
        "user": {
            "login": "jagill",
            "id": 495664,
            "node_id": "MDQ6VXNlcjQ5NTY2NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/495664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jagill",
            "html_url": "https://github.com/jagill",
            "followers_url": "https://api.github.com/users/jagill/followers",
            "following_url": "https://api.github.com/users/jagill/following{/other_user}",
            "gists_url": "https://api.github.com/users/jagill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jagill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jagill/subscriptions",
            "organizations_url": "https://api.github.com/users/jagill/orgs",
            "repos_url": "https://api.github.com/users/jagill/repos",
            "events_url": "https://api.github.com/users/jagill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jagill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-15T18:29:46Z",
        "updated_at": "2012-02-15T18:29:46Z",
        "author_association": "NONE",
        "body": "My understanding of KVC (largely based on [this doc](https://developer.apple.com/library/ios/#documentation/Cocoa/Conceptual/KeyValueCoding/Articles/SearchImplementation.html) ) is that when getting/setting a property named foo, they look for methods getFoo, foo, isFoo and setFoo:, respectively.  I haven't delved into this too deeply, so if you know of a way that KVC can handle\n`@property (assign, getter = checkIsActive, setter = makeActive:) BOOL active;`\nI'd love to know about it!\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3986941",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3986941",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3986941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODY5NDE=",
        "user": {
            "login": "jagill",
            "id": 495664,
            "node_id": "MDQ6VXNlcjQ5NTY2NA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/495664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jagill",
            "html_url": "https://github.com/jagill",
            "followers_url": "https://api.github.com/users/jagill/followers",
            "following_url": "https://api.github.com/users/jagill/following{/other_user}",
            "gists_url": "https://api.github.com/users/jagill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jagill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jagill/subscriptions",
            "organizations_url": "https://api.github.com/users/jagill/orgs",
            "repos_url": "https://api.github.com/users/jagill/repos",
            "events_url": "https://api.github.com/users/jagill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jagill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-15T19:18:02Z",
        "updated_at": "2012-02-15T19:18:02Z",
        "author_association": "NONE",
        "body": "Oh, I believe you meant custom-implemented setFoo: and foo methods.  Yes, KVC should handle that -- I'll update the documentation.  Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/3993354",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/10#issuecomment-3993354",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/10",
        "id": 3993354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzNTQ=",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-02-16T01:27:09Z",
        "updated_at": "2012-02-16T01:27:09Z",
        "author_association": "OWNER",
        "body": "Yep, that was my point of confusion. I don't know whether KVC can handle custom accessor names, wouldn't surprise me if it couldn't. That could lead to some \"interesting\" behavior if your backing ivar _does_ match the pattern that KVC looks for.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/4481072",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/8#issuecomment-4481072",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/8",
        "id": 4481072,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODEwNzI=",
        "user": {
            "login": "zachhowe",
            "id": 15156,
            "node_id": "MDQ6VXNlcjE1MTU2",
            "avatar_url": "https://avatars2.githubusercontent.com/u/15156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachhowe",
            "html_url": "https://github.com/zachhowe",
            "followers_url": "https://api.github.com/users/zachhowe/followers",
            "following_url": "https://api.github.com/users/zachhowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachhowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachhowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachhowe/subscriptions",
            "organizations_url": "https://api.github.com/users/zachhowe/orgs",
            "repos_url": "https://api.github.com/users/zachhowe/repos",
            "events_url": "https://api.github.com/users/zachhowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachhowe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-13T18:18:21Z",
        "updated_at": "2012-03-13T18:18:21Z",
        "author_association": "NONE",
        "body": "As stated above, you can use this in an App Store deployed app. Spotify uses it in their iOS app, which is how I found out about this amazing tool. Good work.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11710854",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11710854",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11710854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEwODU0",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T15:58:51Z",
        "updated_at": "2012-12-27T15:58:51Z",
        "author_association": "OWNER",
        "body": "Can you explain what it's supposed to do? In particular, I don't understand the point of using `dispatch_once` to set an associated object like that.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11711594",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11711594",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11711594,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzExNTk0",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T16:28:57Z",
        "updated_at": "2012-12-27T16:28:57Z",
        "author_association": "NONE",
        "body": "Yeah that pattern was [popularized](http://stackoverflow.com/questions/9119042/why-does-apple-recommend-to-use-dispatch-once-for-implementing-the-singleton-pat) for instantiating singletons instead of checking `nil`. My `FIIcon` category snippet uses it for just that. It shouldn't cost any memory or computation until first access.\n\nMy `UIView` category snippet is part of an API that proxies `UIAppearance` selectors directly to arbitrary [sub]layers for better styling since `CALayer` supports CSS-like method selectors. In this case it facilitates getting arbitrary additional sublayers for fancy filters or whatever. GCD ensures they're only added as desired even if by an `UIAppearance` proxy.\n\nIn practice I typically only instantiate ivars once and modify their state thereafter. But I instantiate them in lifecycle methods that categories shouldn't replace. My Associated Object API provides both storage and lazy instantiation.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11712202",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11712202",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11712202,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEyMjAy",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T16:54:10Z",
        "updated_at": "2012-12-27T16:54:10Z",
        "author_association": "OWNER",
        "body": "I'm familiar with the pattern, but this isn't a singleton. You're using a global `dispatch_once` to control the adding of an associated object to a single arbitrary instance in your `-[UIView sublayer]`. This doesn't make any sense to me, and providing an API that takes a `dispatch_once_t *` in general does not seem like the right approach.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11713260",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11713260",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11713260,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEzMjYw",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T17:14:58Z",
        "updated_at": "2012-12-27T17:15:44Z",
        "author_association": "NONE",
        "body": "Ah quite right my sublayer one is messed up. I'll fix it. In essence it needs a unique key per instance.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11713442",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11713442",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11713442,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEzNDQy",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T17:23:27Z",
        "updated_at": "2012-12-27T17:23:27Z",
        "author_association": "OWNER",
        "body": "That doesn't really address the overall concern, though. What is the point of using `dispatch_once` to gate access to an associated object like this? `dispatch_once` is generally used for globals, but associated objects are inherently per-instance, so it seems like a complete mismatch.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11715224",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11715224",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11715224,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzE1MjI0",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T18:45:02Z",
        "updated_at": "2012-12-27T18:45:14Z",
        "author_association": "NONE",
        "body": "Although it's not a singleton it is truly a multiton. Because categories can't have ivars the only alternative is still a `nil` guard or `+ load()` without lazy instantiation. GCD just \"feels\" better to me. It's funny I ran across your blog googling about it just now. What would you do besides a `nil` guard? PS thx :)\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11716318",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11716318",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11716318,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzE2MzE4",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T19:37:20Z",
        "updated_at": "2012-12-27T19:37:20Z",
        "author_association": "OWNER",
        "body": "The thing is that I don't see how the GCD solution works. There appear to only be two cases:\n1. There's a single object, ever.\n2. There are multiple objects.\n\nCase 1 is basically the standard singleton pattern and can be solved without associated objects, by just using a global variable. In case 2, `dispatch_once` doesn't work, because you need to run the code more than once (i.e. once for each object). Case 1 can use `dispatch_once` but doesn't need associated objects. Case 2 needs associated objects but can't use `dispatch_once`. So I don't see where it's ever useful to have an API that combines them like this. Can you give an example of where it would be useful?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11718055",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11718055",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11718055,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzE4MDU1",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T20:49:40Z",
        "updated_at": "2012-12-27T20:49:40Z",
        "author_association": "NONE",
        "body": "Wow what's ridiculous is I'm using a static variable for a singleton dictionary elsewhere in that same class. Guess I had tunnel vision. If I have a reasonable multiton solution I'll share. My use case is implementing category properties like my sublayers without `nil` checks. Closing ticket; great feedback.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11718276",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11718276",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11718276,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzE4Mjc2",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T20:58:41Z",
        "updated_at": "2012-12-27T20:58:41Z",
        "author_association": "OWNER",
        "body": "OK, cool, glad we figured out what the disconnect was. I think you'd want to use associated objects still, but I'm not sure if there's a good way to lazily initialize them. You can do a check-and-set, but it's not thread safe without external synchronization....\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/11721479",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-11721479",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 11721479,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNzIxNDc5",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-27T23:45:04Z",
        "updated_at": "2012-12-27T23:46:02Z",
        "author_association": "NONE",
        "body": "I tried concocting a strategy to use the pointer storage returned by `objc_getassociatedobject(self, key)` to store a `dispatch_once_t` and failed. I just [wrapped](https://gist.github.com/4389039#file-nsobject-dlassociatedobjects-m-L14) it in `@synchronized` for now.\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/13033094",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/12#issuecomment-13033094",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/12",
        "id": 13033094,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDMzMDk0",
        "user": {
            "login": "texastoland",
            "id": 48431,
            "node_id": "MDQ6VXNlcjQ4NDMx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/48431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/texastoland",
            "html_url": "https://github.com/texastoland",
            "followers_url": "https://api.github.com/users/texastoland/followers",
            "following_url": "https://api.github.com/users/texastoland/following{/other_user}",
            "gists_url": "https://api.github.com/users/texastoland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/texastoland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/texastoland/subscriptions",
            "organizations_url": "https://api.github.com/users/texastoland/orgs",
            "repos_url": "https://api.github.com/users/texastoland/repos",
            "events_url": "https://api.github.com/users/texastoland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/texastoland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-02T16:35:17Z",
        "updated_at": "2013-02-02T16:35:17Z",
        "author_association": "NONE",
        "body": "Just wanted to note that anytime I've googled about Obj-C sticking points your blog has unanimously been the authoritative source of documentation. If you had a book I'd read it :neckbeard: \n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/23449222",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/5#issuecomment-23449222",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/5",
        "id": 23449222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ5MjIy",
        "user": {
            "login": "franklinwise",
            "id": 1341543,
            "node_id": "MDQ6VXNlcjEzNDE1NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1341543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/franklinwise",
            "html_url": "https://github.com/franklinwise",
            "followers_url": "https://api.github.com/users/franklinwise/followers",
            "following_url": "https://api.github.com/users/franklinwise/following{/other_user}",
            "gists_url": "https://api.github.com/users/franklinwise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/franklinwise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/franklinwise/subscriptions",
            "organizations_url": "https://api.github.com/users/franklinwise/orgs",
            "repos_url": "https://api.github.com/users/franklinwise/repos",
            "events_url": "https://api.github.com/users/franklinwise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/franklinwise/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-28T21:28:25Z",
        "updated_at": "2013-08-28T21:28:25Z",
        "author_association": "NONE",
        "body": "class_copyMethodList seems to only return instance methods no matter what is passed to it??\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/23450266",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/pull/5#issuecomment-23450266",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/5",
        "id": 23450266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDUwMjY2",
        "user": {
            "login": "franklinwise",
            "id": 1341543,
            "node_id": "MDQ6VXNlcjEzNDE1NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1341543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/franklinwise",
            "html_url": "https://github.com/franklinwise",
            "followers_url": "https://api.github.com/users/franklinwise/followers",
            "following_url": "https://api.github.com/users/franklinwise/following{/other_user}",
            "gists_url": "https://api.github.com/users/franklinwise/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/franklinwise/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/franklinwise/subscriptions",
            "organizations_url": "https://api.github.com/users/franklinwise/orgs",
            "repos_url": "https://api.github.com/users/franklinwise/repos",
            "events_url": "https://api.github.com/users/franklinwise/events{/privacy}",
            "received_events_url": "https://api.github.com/users/franklinwise/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-28T21:44:04Z",
        "updated_at": "2013-08-28T21:44:04Z",
        "author_association": "NONE",
        "body": "actually... found this to work for getting Class Methods\n\n```\nconst char *className = class_getName(self.class);\nClass myClass = (Class)objc_getMetaClass(className);\nMethod *methods = class_copyMethodList(myClass, &methodCount);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/216933316",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/23#issuecomment-216933316",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/23",
        "id": 216933316,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjkzMzMxNg==",
        "user": {
            "login": "redent",
            "id": 1727008,
            "node_id": "MDQ6VXNlcjE3MjcwMDg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1727008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redent",
            "html_url": "https://github.com/redent",
            "followers_url": "https://api.github.com/users/redent/followers",
            "following_url": "https://api.github.com/users/redent/following{/other_user}",
            "gists_url": "https://api.github.com/users/redent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redent/subscriptions",
            "organizations_url": "https://api.github.com/users/redent/orgs",
            "repos_url": "https://api.github.com/users/redent/repos",
            "events_url": "https://api.github.com/users/redent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redent/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-04T17:04:56Z",
        "updated_at": "2016-05-04T17:04:56Z",
        "author_association": "NONE",
        "body": "Hit this issue when trying to compile after updating XCode. Any known workaround?\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/245785928",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/23#issuecomment-245785928",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/23",
        "id": 245785928,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTc4NTkyOA==",
        "user": {
            "login": "boscomonkey",
            "id": 11943,
            "node_id": "MDQ6VXNlcjExOTQz",
            "avatar_url": "https://avatars2.githubusercontent.com/u/11943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boscomonkey",
            "html_url": "https://github.com/boscomonkey",
            "followers_url": "https://api.github.com/users/boscomonkey/followers",
            "following_url": "https://api.github.com/users/boscomonkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/boscomonkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boscomonkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boscomonkey/subscriptions",
            "organizations_url": "https://api.github.com/users/boscomonkey/orgs",
            "repos_url": "https://api.github.com/users/boscomonkey/repos",
            "events_url": "https://api.github.com/users/boscomonkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boscomonkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-09-09T00:39:58Z",
        "updated_at": "2016-09-09T00:40:26Z",
        "author_association": "NONE",
        "body": "I imported objc/Protocol.h at the top of RTProtocol.m and it now compiles.\n\n```\n#import <objc/Protocol.h>\n```\n"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/267761206",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/25#issuecomment-267761206",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/25",
        "id": 267761206,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzc2MTIwNg==",
        "user": {
            "login": "diejmon",
            "id": 413986,
            "node_id": "MDQ6VXNlcjQxMzk4Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/413986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diejmon",
            "html_url": "https://github.com/diejmon",
            "followers_url": "https://api.github.com/users/diejmon/followers",
            "following_url": "https://api.github.com/users/diejmon/following{/other_user}",
            "gists_url": "https://api.github.com/users/diejmon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diejmon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diejmon/subscriptions",
            "organizations_url": "https://api.github.com/users/diejmon/orgs",
            "repos_url": "https://api.github.com/users/diejmon/repos",
            "events_url": "https://api.github.com/users/diejmon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diejmon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-17T12:52:05Z",
        "updated_at": "2016-12-17T12:52:17Z",
        "author_association": "NONE",
        "body": "No. Use -fno-objc-arc"
    },
    {
        "url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/comments/345349584",
        "html_url": "https://github.com/mikeash/MAObjCRuntime/issues/26#issuecomment-345349584",
        "issue_url": "https://api.github.com/repos/mikeash/MAObjCRuntime/issues/26",
        "id": 345349584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTM0OTU4NA==",
        "user": {
            "login": "mikeash",
            "id": 350427,
            "node_id": "MDQ6VXNlcjM1MDQyNw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/350427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeash",
            "html_url": "https://github.com/mikeash",
            "followers_url": "https://api.github.com/users/mikeash/followers",
            "following_url": "https://api.github.com/users/mikeash/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeash/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeash/orgs",
            "repos_url": "https://api.github.com/users/mikeash/repos",
            "events_url": "https://api.github.com/users/mikeash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-17T19:54:20Z",
        "updated_at": "2017-11-17T19:54:20Z",
        "author_association": "OWNER",
        "body": "Sorry, I didn't see this for a while.\r\n\r\nFinding performance problems with a snapshot like this is going to be tricky, since you only capture a single moment in time. It should be possible to get some useful information, though, assuming that it's likely to be in the middle of whatever is taking a lot of time when you trigger the stack trace. You'd have to look at every thread and see if any of them is doing something costly. In your first image, for example, the fact that thread 0 is in `cellForRowAtIndexPath` indicates that might be a hot function. (I assume you inserted a sleep just to make it look slow.)\r\n\r\nAny symbolication solution that works on crash reports should also work on these not-quite-crash reports. They still look just like crash reports.\r\n\r\nFeel free to e-mail me directly rather than continuing here, mike@mikeash.com"
    }
]