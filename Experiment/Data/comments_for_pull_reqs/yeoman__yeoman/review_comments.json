[
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/967417",
        "pull_request_review_id": null,
        "id": 967417,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2NzQxNw==",
        "diff_hunk": "@@ -1,22 +1,104 @@\n module.exports = function(grunt) {\n \n-  // Project configuration:\n+  //\n+  // Grunt configuration:\n+  //\n   // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n   grunt.initConfig({\n-    // the staging directory used during the process\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // pull in package.json data\n+    pkg: '<json:package.json>',\n+    // and build banner from these information\n+    meta: {\n+      banner: '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - ' +\n+        '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n+        '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\n\" : \"\" %>' +\n+        '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +\n+        ' Licensed <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> */'\n+    },\n+\n+    // Dev utilities and configuration\n+    // -------------------------------\n+\n+    // coffee to js compilation\n+    coffee: {\n+      dist: {\n+        src: 'js/**/*.coffee',\n+        dest: 'js'\n+      }\n+    },\n+\n+    // compass compile\n+    // https://github.com/sindresorhus/grunt-shell#grunt-shell\n+    shell: {\n+      compass: {\n+        command: 'compass compile'\n+      }\n+    },\n+\n+    // Jasmine headless test through PhantomJS\n+    // > https://github.com/creynders/grunt-jasmine-task\n+    jasmine: {\n+      all: ['test/**/*.html']\n+    },\n+\n+   // default watch configuration\n+    watch: {\n+      files: '<config:lint.files>',\n+      tasks: 'lint qunit'\n+    },",
        "path": "cli/tasks/init/yeoman/Gruntfile.js",
        "position": null,
        "original_position": 55,
        "commit_id": "a2ef14e8ebf4d34886413ae5c1c02f41f57b6147",
        "original_commit_id": "df1a58f474d62fab289a85b7b4ca4a6f518666a2",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The default watch config should be something like: \n\n``` js\n// default watch configuration\nwatch: {\n  coffee: {\n    files: '<config:coffee.dist.src>',\n    tasks: 'coffee'\n  },\n  compass: {\n    files: 'css/sass/**/*.sass',\n    tasks: 'shell:compass'\n  },\n\n  css: {\n    files: 'css/**/*.css',\n    tasks: 'reload:css'\n  },\n\n  js: {\n    files: 'js/**/*.js',\n    tasks: 'reload:js'\n  }\n},\n```\n\n@sindresorhus  Not sure about the coffee / compass parts, but it should be something similar ?\n\nThe important part for the livereload thing is the css & js watch target. The `reload:js` and `reload:css` are not even strictly necessary anymore, `reload` alone should be ok. The idea is that we listen for every glob patterns we want to hook up with livereload, potentially `img/**/*` here too.\n",
        "created_at": "2012-06-12T14:47:28Z",
        "updated_at": "2012-06-19T21:48:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/57#discussion_r967417",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/57",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/967417"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/57#discussion_r967417"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/968521",
        "pull_request_review_id": null,
        "id": 968521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2ODUyMQ==",
        "diff_hunk": "@@ -1,22 +1,104 @@\n module.exports = function(grunt) {\n \n-  // Project configuration:\n+  //\n+  // Grunt configuration:\n+  //\n   // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n   grunt.initConfig({\n-    // the staging directory used during the process\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // pull in package.json data\n+    pkg: '<json:package.json>',\n+    // and build banner from these information\n+    meta: {\n+      banner: '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - ' +\n+        '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n+        '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\n\" : \"\" %>' +\n+        '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +\n+        ' Licensed <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> */'\n+    },\n+\n+    // Dev utilities and configuration\n+    // -------------------------------\n+\n+    // coffee to js compilation\n+    coffee: {\n+      dist: {\n+        src: 'js/**/*.coffee',\n+        dest: 'js'\n+      }\n+    },\n+\n+    // compass compile\n+    // https://github.com/sindresorhus/grunt-shell#grunt-shell\n+    shell: {\n+      compass: {\n+        command: 'compass compile'\n+      }\n+    },\n+\n+    // Jasmine headless test through PhantomJS\n+    // > https://github.com/creynders/grunt-jasmine-task\n+    jasmine: {\n+      all: ['test/**/*.html']\n+    },\n+\n+   // default watch configuration\n+    watch: {\n+      files: '<config:lint.files>',\n+      tasks: 'lint qunit'\n+    },",
        "path": "cli/tasks/init/yeoman/Gruntfile.js",
        "position": null,
        "original_position": 55,
        "commit_id": "a2ef14e8ebf4d34886413ae5c1c02f41f57b6147",
        "original_commit_id": "df1a58f474d62fab289a85b7b4ca4a6f518666a2",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Almost, compass should also match `scss` files.\n",
        "created_at": "2012-06-12T16:54:01Z",
        "updated_at": "2012-06-19T21:48:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/57#discussion_r968521",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/57",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/968521"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/57#discussion_r968521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/969297",
        "pull_request_review_id": null,
        "id": 969297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2OTI5Nw==",
        "diff_hunk": "@@ -1,22 +1,104 @@\n module.exports = function(grunt) {\n \n-  // Project configuration:\n+  //\n+  // Grunt configuration:\n+  //\n   // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n   grunt.initConfig({\n-    // the staging directory used during the process\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // pull in package.json data\n+    pkg: '<json:package.json>',\n+    // and build banner from these information\n+    meta: {\n+      banner: '/*! <%= pkg.title || pkg.name %> - v<%= pkg.version %> - ' +\n+        '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +\n+        '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\n\" : \"\" %>' +\n+        '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +\n+        ' Licensed <%= _.pluck(pkg.licenses, \"type\").join(\", \") %> */'\n+    },\n+\n+    // Dev utilities and configuration\n+    // -------------------------------\n+\n+    // coffee to js compilation\n+    coffee: {\n+      dist: {\n+        src: 'js/**/*.coffee',\n+        dest: 'js'\n+      }\n+    },\n+\n+    // compass compile\n+    // https://github.com/sindresorhus/grunt-shell#grunt-shell\n+    shell: {\n+      compass: {\n+        command: 'compass compile'\n+      }\n+    },\n+\n+    // Jasmine headless test through PhantomJS\n+    // > https://github.com/creynders/grunt-jasmine-task\n+    jasmine: {\n+      all: ['test/**/*.html']\n+    },\n+\n+   // default watch configuration\n+    watch: {\n+      files: '<config:lint.files>',\n+      tasks: 'lint qunit'\n+    },",
        "path": "cli/tasks/init/yeoman/Gruntfile.js",
        "position": null,
        "original_position": 55,
        "commit_id": "a2ef14e8ebf4d34886413ae5c1c02f41f57b6147",
        "original_commit_id": "df1a58f474d62fab289a85b7b4ca4a6f518666a2",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks! Added in a17d826f347d86fc70fad36e58c717007fa9826c\n",
        "created_at": "2012-06-12T18:05:39Z",
        "updated_at": "2012-06-19T21:48:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/57#discussion_r969297",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/57",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/969297"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/57#discussion_r969297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/57"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1046736",
        "pull_request_review_id": null,
        "id": 1046736,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY3MzY=",
        "diff_hunk": "@@ -45,10 +46,10 @@ yeoman.dir = path.join(__dirname, 'yeoman');\n yeoman.description = 'Init a new project.';\n \n // Welcome message\n-yeoman.welcome = '\\nWelcome to Yeoman, ladies and gentlemen!\\n';\n+yeoman.welcome = '\\nWelcome to Yeoman, ladies and gentlemen!\\n'.rainbow.bold;",
        "path": "cli/tasks/init/yeoman.js",
        "position": 13,
        "original_position": 13,
        "commit_id": "fb80f9ba7744dc2dc0c09f1383564046bac1f392",
        "original_commit_id": "fb80f9ba7744dc2dc0c09f1383564046bac1f392",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "lol. \n",
        "created_at": "2012-06-25T22:33:17Z",
        "updated_at": "2012-06-25T22:33:17Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/108#discussion_r1046736",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/108",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1046736"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/108#discussion_r1046736"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/108"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1046737",
        "pull_request_review_id": null,
        "id": 1046737,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDY3Mzc=",
        "diff_hunk": "@@ -45,10 +46,10 @@ yeoman.dir = path.join(__dirname, 'yeoman');\n yeoman.description = 'Init a new project.';\n \n // Welcome message\n-yeoman.welcome = '\\nWelcome to Yeoman, ladies and gentlemen!\\n';\n+yeoman.welcome = '\\nWelcome to Yeoman, ladies and gentlemen!\\n'.rainbow.bold;",
        "path": "cli/tasks/init/yeoman.js",
        "position": 13,
        "original_position": 13,
        "commit_id": "fb80f9ba7744dc2dc0c09f1383564046bac1f392",
        "original_commit_id": "fb80f9ba7744dc2dc0c09f1383564046bac1f392",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":rainbow:\n",
        "created_at": "2012-06-25T22:33:24Z",
        "updated_at": "2012-06-25T22:33:24Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/108#discussion_r1046737",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/108",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1046737"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/108#discussion_r1046737"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/108"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1221555",
        "pull_request_review_id": null,
        "id": 1221555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjE1NTU=",
        "diff_hunk": "@@ -0,0 +1,92 @@\n+var util = require('util');\n+var path = require('path');\n+\n+module.exports = function( grunt ) {\n+  'use strict';\n+\n+  grunt.initConfig({\n+    lint: {\n+      options: {\n+        options: {\n+          node: true,\n+          browser: true,\n+          es5 : true,\n+          esnext: true,\n+          bitwise: true,\n+          curly: true,\n+          eqeqeq: true,\n+          immed: true,\n+          latedef: true,\n+          newcap: true,\n+          noarg: true,\n+          //regexp: true,\n+          undef: true,\n+          //strict: true,\n+          trailing: true,\n+          smarttabs: true\n+        },\n+        global: {\n+          process: true\n+        }\n+      },\n+      grunt: [\n+        'Gruntfile.js',\n+        'tasks/*.js'\n+      ],\n+      lib: [\n+        'lib/**/*.js'\n+      ],\n+      test: [\n+        'test/**/*.js'\n+      ]\n+    },\n+    watch: {\n+      files: '<config:lint>',\n+      tasks: 'lint'\n+    }\n+  });\n+\n+  grunt.registerTask( 'default', 'lint' );\n+\n+  // Debugging helpers\n+  grunt.registerTask( 'list-helpers', 'List all grunt registered helpers', function( helper ) {\n+    var ls = grunt.log.wordlist( Object.keys( grunt.task._helpers ), grunt.util.linefeed );\n+\n+    if ( !helper ) {\n+      return grunt.log.ok( ls );\n+    }\n+\n+    grunt.log.subhead( helper + ' source:' ).writeln( grunt.task._helpers[ helper ] );\n+  });\n+\n+  grunt.registerTask( 'list-tasks', 'List all grunt registered tasks', function( task ) {\n+    var ls = grunt.log.wordlist( Object.keys( grunt.task._tasks ), grunt.util.linefeed );\n+\n+    if ( !task ) {\n+      return grunt.log.ok( ls );\n+    }\n+\n+    grunt.log.subhead( task + ' source:' ).writeln( util.inspect( grunt.task._tasks[ task ] ) );\n+  });\n+\n+  // Doc generation for the docs task\n+  grunt.registerTask( 'gendocs', 'Generates docs/index.html from wiki pages', function() {",
        "path": "cli/Gruntfile.js",
        "position": 73,
        "original_position": 73,
        "commit_id": "b48d627b44a82281cae2dd620ebb30ccc0047cc9",
        "original_commit_id": "b48d627b44a82281cae2dd620ebb30ccc0047cc9",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@mklabs Is this still in use? I couldn't find a gruntfile in`scripts/docs`.\n",
        "created_at": "2012-07-24T01:28:52Z",
        "updated_at": "2012-07-24T01:28:52Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/162#discussion_r1221555",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/162",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1221555"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/162#discussion_r1221555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/162"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1251317",
        "pull_request_review_id": null,
        "id": 1251317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTEzMTc=",
        "diff_hunk": "@@ -0,0 +1,92 @@\n+var util = require('util');\n+var path = require('path');\n+\n+module.exports = function( grunt ) {\n+  'use strict';\n+\n+  grunt.initConfig({\n+    lint: {\n+      options: {\n+        options: {\n+          node: true,\n+          browser: true,\n+          es5 : true,\n+          esnext: true,\n+          bitwise: true,\n+          curly: true,\n+          eqeqeq: true,\n+          immed: true,\n+          latedef: true,\n+          newcap: true,\n+          noarg: true,\n+          //regexp: true,\n+          undef: true,\n+          //strict: true,\n+          trailing: true,\n+          smarttabs: true\n+        },\n+        global: {\n+          process: true\n+        }\n+      },\n+      grunt: [\n+        'Gruntfile.js',\n+        'tasks/*.js'\n+      ],\n+      lib: [\n+        'lib/**/*.js'\n+      ],\n+      test: [\n+        'test/**/*.js'\n+      ]\n+    },\n+    watch: {\n+      files: '<config:lint>',\n+      tasks: 'lint'\n+    }\n+  });\n+\n+  grunt.registerTask( 'default', 'lint' );\n+\n+  // Debugging helpers\n+  grunt.registerTask( 'list-helpers', 'List all grunt registered helpers', function( helper ) {\n+    var ls = grunt.log.wordlist( Object.keys( grunt.task._helpers ), grunt.util.linefeed );\n+\n+    if ( !helper ) {\n+      return grunt.log.ok( ls );\n+    }\n+\n+    grunt.log.subhead( helper + ' source:' ).writeln( grunt.task._helpers[ helper ] );\n+  });\n+\n+  grunt.registerTask( 'list-tasks', 'List all grunt registered tasks', function( task ) {\n+    var ls = grunt.log.wordlist( Object.keys( grunt.task._tasks ), grunt.util.linefeed );\n+\n+    if ( !task ) {\n+      return grunt.log.ok( ls );\n+    }\n+\n+    grunt.log.subhead( task + ' source:' ).writeln( util.inspect( grunt.task._tasks[ task ] ) );\n+  });\n+\n+  // Doc generation for the docs task\n+  grunt.registerTask( 'gendocs', 'Generates docs/index.html from wiki pages', function() {",
        "path": "cli/Gruntfile.js",
        "position": 73,
        "original_position": 73,
        "commit_id": "b48d627b44a82281cae2dd620ebb30ccc0047cc9",
        "original_commit_id": "b48d627b44a82281cae2dd620ebb30ccc0047cc9",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oupps sorry Sindre, missed the notif.\n\nNope, not used anymore.\n",
        "created_at": "2012-07-27T09:32:30Z",
        "updated_at": "2012-07-27T09:32:30Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/162#discussion_r1251317",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/162",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1251317"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/162#discussion_r1251317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/162"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259785",
        "pull_request_review_id": null,
        "id": 1259785,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTk3ODU=",
        "diff_hunk": "@@ -7,154 +7,165 @@ var util = require('util'),\n     fs = require('fs'),\n     path = require('path');\n \n-var Wiring = module.exports;\n+var wiring = module.exports;\n \n-//\n // Update a file containing HTML markup with new content, either\n // appending, prepending or replacing content matching a particular\n // selector\n //\n-// @html    : a string containing HTML markup\n-// @tagName : a valid CSS selector\n-// @content : the inline content to update your selector with\n-// @mode    : a(ppend), p(repend), r(eplace), d(elete)\n-Wiring.domUpdate = function domUpdate(html, tagName, content, mode){\n+// - html     - a string containing HTML markup\n+// - tagName  - a valid CSS selector\n+// - content  - the inline content to update your selector with\n+// - mode     - a(ppend), p(repend), r(eplace), d(elete)\n+//\n+wiring.domUpdate = function domUpdate(html, tagName, content, mode){\n \n   $ = cheerio.load(html);\n \n-  if(content !== undefined){\n-    if(mode === 'a'){\n+  if(content !== undefined) {\n+    if(mode === 'a') {",
        "path": "cli/lib/generators/wiring.js",
        "position": 35,
        "original_position": 35,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just make it readable and use the full name `append`.\n",
        "created_at": "2012-07-29T19:17:37Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259785",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259785"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259785"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259788",
        "pull_request_review_id": null,
        "id": 1259788,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTk3ODg=",
        "diff_hunk": "@@ -97,115 +83,119 @@ AppGenerator.prototype.gitignore = function gitignore() {\n   this.copy('gitignore', '.gitignore');\n };\n \n+AppGenerator.prototype.fetchH5bp = function fetchH5bp() {\n+  var cb = this.async();\n+\n+  this.remote('h5bp', 'html5-boilerplate', 'master', function(err, remote) {\n+    if(err) return cb(err);",
        "path": "cli/lib/generators/yeoman/simpleapp/index.js",
        "position": null,
        "original_position": 29,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Braces\n",
        "created_at": "2012-07-29T19:20:26Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259788",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259788"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259788"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259791",
        "pull_request_review_id": null,
        "id": 1259791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTk3OTE=",
        "diff_hunk": "@@ -1,44 +1,127 @@\n-var fs = require('fs'),\n-  join = require('path').join,\n-  util = require('util'),\n-  h5bp = require('../');\n+var url = require('url'),\n+  path = require('path'),\n+  join = path.join,\n+  fstream = require('fstream');",
        "path": "cli/tasks/manifest.js",
        "position": null,
        "original_position": 8,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "One `var` per variable\n",
        "created_at": "2012-07-29T19:23:30Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259791",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259791"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259795",
        "pull_request_review_id": null,
        "id": 1259795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTk3OTU=",
        "diff_hunk": "@@ -1,44 +1,127 @@\n-var fs = require('fs'),\n-  join = require('path').join,\n-  util = require('util'),\n-  h5bp = require('../');\n+var url = require('url'),\n+  path = require('path'),\n+  join = path.join,\n+  fstream = require('fstream');\n \n-  module.exports = function(grunt) {\n+module.exports = function(grunt) {\n \n-    // Create a new task for all nest functionality\n-    grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+  // Launch a built-in webserver on the specified directory and run confess through phantomjs.\n+  //\n+  // This task can be used to run other confess task like performance or css,\n+  // and can be configured to operate on a specific subdirectory.\n+  //\n+  // - task   - first task argument is used to specify the confess task to run\n+  //            (default: appcache)\n+  // - basdir - base directory of the app to cache (default: './')\n+  //\n+  // Examples\n+  //\n+  //    grunt manifest\n+  //    grunt manifest:appcache:path/to/my/app\n+  //    grunt manifest:performance:app\n+  //    grunt manifest:performance:intermediate\n+  //\n+  // Advanced options can be configured below for expected options. Can be configures in the application gruntfile.\n+  //\n+  // Examples\n+  //\n+  //    manifest: {\n+  //      task: 'appcache',\n+  //      output: 'manifest.appcache',\n+  //      port: 3501,\n+  //      hostname: 'localhost',\n+  //      base: 'app/'\n+  //    }\n+  //\n+  //\n+  grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+    // port of the url to cache\n+    var port = grunt.config('server.port') || 3501;\n \n+    // default options\n+    var options = grunt.util._.defaults(grunt.config(this.name) || {}, {",
        "path": "cli/tasks/manifest.js",
        "position": 49,
        "original_position": 49,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "use the built-in grunt options method `this.options()`\n",
        "created_at": "2012-07-29T19:25:32Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259795",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1259795"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1259795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261133",
        "pull_request_review_id": null,
        "id": 1261133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjExMzM=",
        "diff_hunk": "@@ -97,115 +83,119 @@ AppGenerator.prototype.gitignore = function gitignore() {\n   this.copy('gitignore', '.gitignore');\n };\n \n+AppGenerator.prototype.fetchH5bp = function fetchH5bp() {\n+  var cb = this.async();\n+\n+  this.remote('h5bp', 'html5-boilerplate', 'master', function(err, remote) {\n+    if(err) return cb(err);",
        "path": "cli/lib/generators/yeoman/simpleapp/index.js",
        "position": null,
        "original_position": 29,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "All those braces to early return really hurt my eyes :( But fine. Done.\n",
        "created_at": "2012-07-30T07:34:03Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261133",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261133"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261134",
        "pull_request_review_id": null,
        "id": 1261134,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjExMzQ=",
        "diff_hunk": "@@ -1,44 +1,127 @@\n-var fs = require('fs'),\n-  join = require('path').join,\n-  util = require('util'),\n-  h5bp = require('../');\n+var url = require('url'),\n+  path = require('path'),\n+  join = path.join,\n+  fstream = require('fstream');",
        "path": "cli/tasks/manifest.js",
        "position": null,
        "original_position": 8,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2012-07-30T07:34:09Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261134",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261134"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261134"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261137",
        "pull_request_review_id": null,
        "id": 1261137,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjExMzc=",
        "diff_hunk": "@@ -1,44 +1,127 @@\n-var fs = require('fs'),\n-  join = require('path').join,\n-  util = require('util'),\n-  h5bp = require('../');\n+var url = require('url'),\n+  path = require('path'),\n+  join = path.join,\n+  fstream = require('fstream');\n \n-  module.exports = function(grunt) {\n+module.exports = function(grunt) {\n \n-    // Create a new task for all nest functionality\n-    grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+  // Launch a built-in webserver on the specified directory and run confess through phantomjs.\n+  //\n+  // This task can be used to run other confess task like performance or css,\n+  // and can be configured to operate on a specific subdirectory.\n+  //\n+  // - task   - first task argument is used to specify the confess task to run\n+  //            (default: appcache)\n+  // - basdir - base directory of the app to cache (default: './')\n+  //\n+  // Examples\n+  //\n+  //    grunt manifest\n+  //    grunt manifest:appcache:path/to/my/app\n+  //    grunt manifest:performance:app\n+  //    grunt manifest:performance:intermediate\n+  //\n+  // Advanced options can be configured below for expected options. Can be configures in the application gruntfile.\n+  //\n+  // Examples\n+  //\n+  //    manifest: {\n+  //      task: 'appcache',\n+  //      output: 'manifest.appcache',\n+  //      port: 3501,\n+  //      hostname: 'localhost',\n+  //      base: 'app/'\n+  //    }\n+  //\n+  //\n+  grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+    // port of the url to cache\n+    var port = grunt.config('server.port') || 3501;\n \n+    // default options\n+    var options = grunt.util._.defaults(grunt.config(this.name) || {}, {",
        "path": "cli/tasks/manifest.js",
        "position": 49,
        "original_position": 49,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "manifest is a multi-task, so `this.options()` here has little interest right? unless the task is changed to be a multi-task.\n",
        "created_at": "2012-07-30T07:35:30Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261137",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1261137"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1261137"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1269670",
        "pull_request_review_id": null,
        "id": 1269670,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjk2NzA=",
        "diff_hunk": "@@ -1,44 +1,127 @@\n-var fs = require('fs'),\n-  join = require('path').join,\n-  util = require('util'),\n-  h5bp = require('../');\n+var url = require('url'),\n+  path = require('path'),\n+  join = path.join,\n+  fstream = require('fstream');\n \n-  module.exports = function(grunt) {\n+module.exports = function(grunt) {\n \n-    // Create a new task for all nest functionality\n-    grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+  // Launch a built-in webserver on the specified directory and run confess through phantomjs.\n+  //\n+  // This task can be used to run other confess task like performance or css,\n+  // and can be configured to operate on a specific subdirectory.\n+  //\n+  // - task   - first task argument is used to specify the confess task to run\n+  //            (default: appcache)\n+  // - basdir - base directory of the app to cache (default: './')\n+  //\n+  // Examples\n+  //\n+  //    grunt manifest\n+  //    grunt manifest:appcache:path/to/my/app\n+  //    grunt manifest:performance:app\n+  //    grunt manifest:performance:intermediate\n+  //\n+  // Advanced options can be configured below for expected options. Can be configures in the application gruntfile.\n+  //\n+  // Examples\n+  //\n+  //    manifest: {\n+  //      task: 'appcache',\n+  //      output: 'manifest.appcache',\n+  //      port: 3501,\n+  //      hostname: 'localhost',\n+  //      base: 'app/'\n+  //    }\n+  //\n+  //\n+  grunt.registerTask('manifest', 'Generates an application cache manifest using Confess.js.', function() {\n+    // port of the url to cache\n+    var port = grunt.config('server.port') || 3501;\n \n+    // default options\n+    var options = grunt.util._.defaults(grunt.config(this.name) || {}, {",
        "path": "cli/tasks/manifest.js",
        "position": 49,
        "original_position": 49,
        "commit_id": "681d0269da2e3596e31b0eeb7cef373dc859ac91",
        "original_commit_id": "0d3a413facfc22b64982ee597c6a3d3c96e5e906",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh, you're right, didn't notice that...\n",
        "created_at": "2012-07-31T01:43:45Z",
        "updated_at": "2012-07-31T10:38:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/169#discussion_r1269670",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/169",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1269670"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/169#discussion_r1269670"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/169"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330061",
        "pull_request_review_id": null,
        "id": 1330061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAwNjE=",
        "diff_hunk": "@@ -364,7 +393,7 @@ Base.prototype.optionsHelp = function optionsHelp() {\n       o.alias ? '-' + o.alias + ', ' : '',\n       '--' + o.name,\n       o.desc ? '# ' + o.desc : '',\n-      o.defaults == null ? '' : 'Default: ' + o.defaults\n+      !o.defaults ? '' : 'Default: ' + o.defaults",
        "path": "cli/lib/generators/base.js",
        "position": 168,
        "original_position": 168,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure about this one. the `== null` thing was on purpose. I wanted to catch specifically `null` and `undefined`, not every falsy value.\n\nI think it may mess with a defaults set to false, 0 or something falsy.\n",
        "created_at": "2012-08-08T08:19:31Z",
        "updated_at": "2012-08-08T08:19:31Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330061",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330061"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330074",
        "pull_request_review_id": null,
        "id": 1330074,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAwNzQ=",
        "diff_hunk": "@@ -388,3 +417,4 @@ Base.prototype.optionsHelp = function optionsHelp() {\n };\n \n \n+module.exports = Base;",
        "path": "cli/lib/generators/base.js",
        "position": 176,
        "original_position": 176,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm, I'd rather prefer ignore some rules of jshint for the sake of consistency and readability. It they make sense.\n\nThe module.exports thing and the list of dependencies in a module when developing on node are probably the most important things, and imho should be at the beginning of the file.\n",
        "created_at": "2012-08-08T08:20:55Z",
        "updated_at": "2012-08-08T08:20:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330074",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330074"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330074"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330091",
        "pull_request_review_id": null,
        "id": 1330091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAwOTE=",
        "diff_hunk": "@@ -349,7 +360,9 @@ generators.lookup = function lookup(namespaces, basedir) {\n \n       } catch(e) {\n         // not a loadpath error? bubble up the exception\n-        if(!~e.message.indexOf(path)) throw e;\n+        if ( e.message.indexOf( path ) === -1 ) {",
        "path": "cli/lib/generators/index.js",
        "position": 134,
        "original_position": 134,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "jshint complains on that ??\n",
        "created_at": "2012-08-08T08:22:57Z",
        "updated_at": "2012-08-08T08:22:57Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330091",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330091"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330118",
        "pull_request_review_id": null,
        "id": 1330118,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAxMTg=",
        "diff_hunk": "@@ -20,7 +20,7 @@ var wiring = module.exports;\n //\n wiring.domUpdate = function domUpdate(html, tagName, content, mode){\n \n-  $ = cheerio.load(html);\n+  var $ = cheerio.load( html );",
        "path": "cli/lib/generators/wiring.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": " :+1: :ok_hand: :heart: :star:\n\nsoo.. That was our global leak! :) Not coming from cherio. Mocha is wonderful for that, and notices in tests this leaking.\n\nGreat, thanks Sindre. We can now remove this `--globals $` in npm test script.\n",
        "created_at": "2012-08-08T08:26:18Z",
        "updated_at": "2012-08-08T08:26:18Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330118",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330118"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330118"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330120",
        "pull_request_review_id": null,
        "id": 1330120,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAxMjA=",
        "diff_hunk": "@@ -426,7 +441,7 @@ generators.lookupHelp = function lookupHelp(basedir, args, options, config) {\n   // and ensure we won't return same generator on different namespace\n   var paths = [];\n   return found.filter(function(generator) {\n-    var known = !~paths.indexOf(generator.fullpath);\n+    var known = paths.indexOf( generator.fullpath ) === -1;",
        "path": "cli/lib/generators/index.js",
        "position": 156,
        "original_position": 156,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "same here, see comment above.\n",
        "created_at": "2012-08-08T08:26:25Z",
        "updated_at": "2012-08-08T08:26:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330120",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330120"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330120"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330236",
        "pull_request_review_id": null,
        "id": 1330236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAyMzY=",
        "diff_hunk": "@@ -364,7 +393,7 @@ Base.prototype.optionsHelp = function optionsHelp() {\n       o.alias ? '-' + o.alias + ', ' : '',\n       '--' + o.name,\n       o.desc ? '# ' + o.desc : '',\n-      o.defaults == null ? '' : 'Default: ' + o.defaults\n+      !o.defaults ? '' : 'Default: ' + o.defaults",
        "path": "cli/lib/generators/base.js",
        "position": 168,
        "original_position": 168,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I'll just add `eqnull` to our jshint config.\n",
        "created_at": "2012-08-08T08:45:19Z",
        "updated_at": "2012-08-08T08:45:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330236",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330236"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330252",
        "pull_request_review_id": null,
        "id": 1330252,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAyNTI=",
        "diff_hunk": "@@ -349,7 +360,9 @@ generators.lookup = function lookup(namespaces, basedir) {\n \n       } catch(e) {\n         // not a loadpath error? bubble up the exception\n-        if(!~e.message.indexOf(path)) throw e;\n+        if ( e.message.indexOf( path ) === -1 ) {",
        "path": "cli/lib/generators/index.js",
        "position": 134,
        "original_position": 134,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missing braces and using `!~` which is ambiguous. Better to be explicit.\n",
        "created_at": "2012-08-08T08:47:18Z",
        "updated_at": "2012-08-08T08:47:18Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330252",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330252"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330252"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330255",
        "pull_request_review_id": null,
        "id": 1330255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAyNTU=",
        "diff_hunk": "@@ -20,7 +20,7 @@ var wiring = module.exports;\n //\n wiring.domUpdate = function domUpdate(html, tagName, content, mode){\n \n-  $ = cheerio.load(html);\n+  var $ = cheerio.load( html );",
        "path": "cli/lib/generators/wiring.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":smiley:\n",
        "created_at": "2012-08-08T08:47:42Z",
        "updated_at": "2012-08-08T08:47:42Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330255",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330255"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330398",
        "pull_request_review_id": null,
        "id": 1330398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzAzOTg=",
        "diff_hunk": "@@ -388,3 +417,4 @@ Base.prototype.optionsHelp = function optionsHelp() {\n };\n \n \n+module.exports = Base;",
        "path": "cli/lib/generators/base.js",
        "position": 176,
        "original_position": 176,
        "commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "original_commit_id": "ff0805cce93f2c3591dea573e5749a132617ac45",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've always thought of it like this:\n\n``` js\nvar x = require('x'); // import\n\n// code\n\nmodule.exports = z; // export\n```\n\nLike, I import my code at the top and export it at the bottom. This is also what most node modules does.\n\nI do see the argument of seeing the what is exported at the top though. But `latedef` can report on some subtle bugs, which we might miss if it was turned off. Wouldn't it be enough to have a simple comment like:\n\n``` js\nvar x = require('x'); // import\n\n/* export: Base */\n```\n\n?\n",
        "created_at": "2012-08-08T09:09:41Z",
        "updated_at": "2012-08-08T09:09:41Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330398",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/174",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1330398"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/174#discussion_r1330398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/174"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1353058",
        "pull_request_review_id": null,
        "id": 1353058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTMwNTg=",
        "diff_hunk": "@@ -48,11 +48,11 @@ module.exports = function(grunt) {\n         tasks: 'coffee reload'\n       },\n       compass: {\n-        files: ['app/css/sass/**/*.sass', 'app/css/sass/**/*.scss'],\n+        files: ['app/styles/sass/**/*.sass', 'app/styles/sass/**/*.scss'],",
        "path": "cli/lib/generators/yeoman/app/templates/Gruntfile.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "592acfedf5a999b7d27d2ca9dabac43195715663",
        "original_commit_id": "592acfedf5a999b7d27d2ca9dabac43195715663",
        "user": {
            "login": "paulmillr",
            "id": 574696,
            "node_id": "MDQ6VXNlcjU3NDY5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/574696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulmillr",
            "html_url": "https://github.com/paulmillr",
            "followers_url": "https://api.github.com/users/paulmillr/followers",
            "following_url": "https://api.github.com/users/paulmillr/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
            "organizations_url": "https://api.github.com/users/paulmillr/orgs",
            "repos_url": "https://api.github.com/users/paulmillr/repos",
            "events_url": "https://api.github.com/users/paulmillr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulmillr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it would be better to use `styles/**/*.sass` for consistency with CoffeeScript etc.\n",
        "created_at": "2012-08-10T16:31:31Z",
        "updated_at": "2012-08-10T16:31:31Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/198#discussion_r1353058",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/198",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1353058"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/198#discussion_r1353058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/198"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1353072",
        "pull_request_review_id": null,
        "id": 1353072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTMwNzI=",
        "diff_hunk": "@@ -48,11 +48,11 @@ module.exports = function(grunt) {\n         tasks: 'coffee reload'\n       },\n       compass: {\n-        files: ['app/css/sass/**/*.sass', 'app/css/sass/**/*.scss'],\n+        files: ['app/styles/sass/**/*.sass', 'app/styles/sass/**/*.scss'],",
        "path": "cli/lib/generators/yeoman/app/templates/Gruntfile.js",
        "position": 30,
        "original_position": 30,
        "commit_id": "592acfedf5a999b7d27d2ca9dabac43195715663",
        "original_commit_id": "592acfedf5a999b7d27d2ca9dabac43195715663",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yup, this is going to happen. But one change at the time ;)\n",
        "created_at": "2012-08-10T16:33:12Z",
        "updated_at": "2012-08-10T16:33:12Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/198#discussion_r1353072",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/198",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1353072"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/198#discussion_r1353072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/198"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1422069",
        "pull_request_review_id": null,
        "id": 1422069,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjIwNjk=",
        "diff_hunk": "@@ -1,5 +1,34 @@\n-# Welcome, Friend!\n-\n+<pre><code>",
        "path": "readme.md",
        "position": 3,
        "original_position": 3,
        "commit_id": "d1ff34ae12e4b5e73e55eef32685d1b61e920286",
        "original_commit_id": "d1ff34ae12e4b5e73e55eef32685d1b61e920286",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use code fence ``` instead of `<code><pre>`\n",
        "created_at": "2012-08-21T07:52:17Z",
        "updated_at": "2012-08-21T07:52:17Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/230#discussion_r1422069",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/230",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1422069"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/230#discussion_r1422069"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/230"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446135",
        "pull_request_review_id": null,
        "id": 1446135,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDYxMzU=",
        "diff_hunk": "@@ -0,0 +1,174 @@\n+module.exports = function( grunt ) {\n+  'use strict';\n+  //\n+  // Grunt configuration:\n+  //\n+  // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n+  grunt.initConfig({\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // specify an alternate install location for Bower\n+    bower: {\n+      dir: 'app/scripts/vendor'\n+    },\n+\n+    // Coffee to JS compilation\n+    coffee: {\n+      dist: {\n+        src: 'app/scripts/**/*.coffee',\n+        dest: 'app/scripts'\n+      }\n+    },\n+\n+    // compile .scss/.sass to .css using Compass\n+    compass: {\n+      dist: {\n+        // http://compass-style.org/help/tutorials/configuration-reference/#configuration-properties\n+        options: {\n+          css_dir: 'styles',\n+          sass_dir: 'styles',\n+          images_dir: 'images',\n+          javascripts_dir: 'scripts',\n+          force: true\n+        }\n+      }\n+    },\n+\n+    // generate application cache manifest\n+    manifest:{\n+      dest: ''\n+    },\n+\n+    // headless testing through PhantomJS\n+    mocha: {\n+      all: ['test/**/*.html']\n+    },\n+\n+    // default watch configuration\n+    watch: {\n+      coffee: {\n+        files: '<config:coffee.dist.src>',\n+        tasks: 'coffee reload'\n+      },\n+      compass: {\n+        files: [\n+          'app/styles/**/*.{scss,sass}'\n+        ],\n+        tasks: 'compass reload'\n+      },\n+      reload: {\n+        files: [\n+          'app/*.html',\n+          'app/styles/**/*.css',\n+          'app/scripts/**/*.js',\n+          'app/images/**/*'\n+        ],\n+        tasks: 'reload'\n+      }\n+    },\n+\n+    // default lint configuration, change this to match your setup:\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#lint-built-in-task\n+    lint: {\n+      files: [\n+        'Gruntfile.js',\n+        'app/scripts/**/*.js',\n+        'spec/**/*.js'\n+      ]\n+    },\n+\n+    // specifying JSHint options and globals\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#specifying-jshint-options-and-globals\n+    jshint: {\n+      options: {\n+        curly: true,\n+        eqeqeq: true,\n+        immed: true,\n+        latedef: true,\n+        newcap: true,\n+        noarg: true,\n+        sub: true,\n+        undef: true,\n+        boss: true,\n+        eqnull: true,\n+        browser: true\n+      },\n+      globals: {\n+        jQuery: true\n+      }\n+    },\n+\n+    // Build configuration\n+    // -------------------\n+\n+    // the staging directory used during the process\n+    staging: 'temp',\n+    // final build output\n+    output: 'dist',\n+\n+    mkdirs: {\n+      staging: 'app/'\n+    },\n+\n+    // Below, all paths are relative to the staging directory, which is a copy\n+    // of the app/ directory. Any .gitignore, .ignore and .buildignore file\n+    // that might appear in the app/ tree are used to ignore these values\n+    // during the copy process.\n+\n+    // concat css/**/*.css files, inline @import, output a single minified css\n+    css: {\n+      'styles/main.css': ['styles/**/*.css']\n+    },\n+\n+    // renames JS/CSS to prepend a hash of their contents for easier\n+    // versioning\n+    rev: {\n+      js: 'scripts/**/*.js',\n+      css: 'styles/**/*.css',\n+      img: 'images/**'\n+    },\n+\n+    // usemin handler should point to the file containing\n+    // the usemin blocks to be parsed\n+    'usemin-handler': {\n+      html: 'index.html'\n+    },\n+\n+    // update references in HTML/CSS to revved files\n+    usemin: {\n+      html: ['**/*.html'],\n+      css: ['**/*.css']\n+    },\n+\n+    // HTML minification\n+    html: {\n+      files: ['**/*.html']\n+    },\n+\n+    // Optimizes JPGs and PNGs (with jpegtran & optipng)\n+    img: {\n+      dist: '<config:rev.img>'\n+    },\n+\n+    // rjs configuration. You don't necessarily need to specify the typical\n+    // `path` configuration, the rjs task will parse these values from your\n+    // main module, using http://requirejs.org/docs/optimization.html#mainConfigFile\n+    //\n+    // name / out / mainConfig file should be used. You can let it blank if\n+    // you're using usemin-handler to parse rjs config from markup (default\n+    // setup)\n+    rjs: {\n+      // no minification, is done by the min task\n+      optimize: 'none',\n+      baseUrl: './scripts',\n+      wrap: true\n+    },\n+  });\n+\n+  // Alias the `test` task to run the `mocha` task instead\n+  grunt.registerTask('test', 'mocha');\n+\n+};",
        "path": "cli/lib/generators/ember-starter/templates/Gruntfile.js",
        "position": 174,
        "original_position": 174,
        "commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "original_commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@mklabs @addyosmani Noticed this with the quickstart too. Is it really optimal for us to duplicate files between the generators, like the Grunfile and other?\n",
        "created_at": "2012-08-23T15:40:45Z",
        "updated_at": "2012-08-23T15:40:45Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446135",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/252",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446135"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446135"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/252"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446148",
        "pull_request_review_id": null,
        "id": 1446148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDYxNDg=",
        "diff_hunk": "@@ -0,0 +1,50 @@\n+var path = require('path'),\n+    util = require('util'),\n+    yeoman = require('../../../../');\n+\n+module.exports = Generator;\n+\n+function Generator() {\n+  yeoman.generators.Base.apply(this, arguments);\n+  this.sourceRoot(path.join(__dirname, '../templates'));\n+  this.dirs = 'scripts styles'.split(' ');\n+  this.appname = path.basename(process.cwd());\n+}\n+\n+util.inherits(Generator, yeoman.generators.Base);\n+\n+Generator.prototype.createDirLayout = function createDirLayout() {\n+  var self = this;\n+  this.dirs.forEach(function(dir) {\n+    self.log.write('Creating app/' + dir + ' directory...')\n+    self.mkdir(path.join('app/', dir));\n+    self.log.ok();\n+  });\n+};\n+\n+Generator.prototype.createJsFiles = function createJsFiles() {\n+  this.template('scripts/app.js', 'app/scripts/app.js');\n+\n+  // AB : this would be more elegantly handled with \n+  // file globbing, but given the limited number\n+  // of files, opting to hardcode instead of \n+  // introduce another dependency (node-glob?) ",
        "path": "cli/lib/generators/ember-starter/all/index.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "original_commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Globbing will be introduced at a later point. This is fine for now.\n",
        "created_at": "2012-08-23T15:41:40Z",
        "updated_at": "2012-08-23T15:41:40Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446148",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/252",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446148"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/252"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446158",
        "pull_request_review_id": null,
        "id": 1446158,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDYxNTg=",
        "diff_hunk": "@@ -0,0 +1,174 @@\n+module.exports = function( grunt ) {\n+  'use strict';\n+  //\n+  // Grunt configuration:\n+  //\n+  // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n+  grunt.initConfig({\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // specify an alternate install location for Bower\n+    bower: {\n+      dir: 'app/scripts/vendor'\n+    },\n+\n+    // Coffee to JS compilation\n+    coffee: {\n+      dist: {\n+        src: 'app/scripts/**/*.coffee',\n+        dest: 'app/scripts'\n+      }\n+    },\n+\n+    // compile .scss/.sass to .css using Compass\n+    compass: {\n+      dist: {\n+        // http://compass-style.org/help/tutorials/configuration-reference/#configuration-properties\n+        options: {\n+          css_dir: 'styles',\n+          sass_dir: 'styles',\n+          images_dir: 'images',\n+          javascripts_dir: 'scripts',\n+          force: true\n+        }\n+      }\n+    },\n+\n+    // generate application cache manifest\n+    manifest:{\n+      dest: ''\n+    },\n+\n+    // headless testing through PhantomJS\n+    mocha: {\n+      all: ['test/**/*.html']\n+    },\n+\n+    // default watch configuration\n+    watch: {\n+      coffee: {\n+        files: '<config:coffee.dist.src>',\n+        tasks: 'coffee reload'\n+      },\n+      compass: {\n+        files: [\n+          'app/styles/**/*.{scss,sass}'\n+        ],\n+        tasks: 'compass reload'\n+      },\n+      reload: {\n+        files: [\n+          'app/*.html',\n+          'app/styles/**/*.css',\n+          'app/scripts/**/*.js',\n+          'app/images/**/*'\n+        ],\n+        tasks: 'reload'\n+      }\n+    },\n+\n+    // default lint configuration, change this to match your setup:\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#lint-built-in-task\n+    lint: {\n+      files: [\n+        'Gruntfile.js',\n+        'app/scripts/**/*.js',\n+        'spec/**/*.js'\n+      ]\n+    },\n+\n+    // specifying JSHint options and globals\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#specifying-jshint-options-and-globals\n+    jshint: {\n+      options: {\n+        curly: true,\n+        eqeqeq: true,\n+        immed: true,\n+        latedef: true,\n+        newcap: true,\n+        noarg: true,\n+        sub: true,\n+        undef: true,\n+        boss: true,\n+        eqnull: true,\n+        browser: true\n+      },\n+      globals: {\n+        jQuery: true\n+      }\n+    },\n+\n+    // Build configuration\n+    // -------------------\n+\n+    // the staging directory used during the process\n+    staging: 'temp',\n+    // final build output\n+    output: 'dist',\n+\n+    mkdirs: {\n+      staging: 'app/'\n+    },\n+\n+    // Below, all paths are relative to the staging directory, which is a copy\n+    // of the app/ directory. Any .gitignore, .ignore and .buildignore file\n+    // that might appear in the app/ tree are used to ignore these values\n+    // during the copy process.\n+\n+    // concat css/**/*.css files, inline @import, output a single minified css\n+    css: {\n+      'styles/main.css': ['styles/**/*.css']\n+    },\n+\n+    // renames JS/CSS to prepend a hash of their contents for easier\n+    // versioning\n+    rev: {\n+      js: 'scripts/**/*.js',\n+      css: 'styles/**/*.css',\n+      img: 'images/**'\n+    },\n+\n+    // usemin handler should point to the file containing\n+    // the usemin blocks to be parsed\n+    'usemin-handler': {\n+      html: 'index.html'\n+    },\n+\n+    // update references in HTML/CSS to revved files\n+    usemin: {\n+      html: ['**/*.html'],\n+      css: ['**/*.css']\n+    },\n+\n+    // HTML minification\n+    html: {\n+      files: ['**/*.html']\n+    },\n+\n+    // Optimizes JPGs and PNGs (with jpegtran & optipng)\n+    img: {\n+      dist: '<config:rev.img>'\n+    },\n+\n+    // rjs configuration. You don't necessarily need to specify the typical\n+    // `path` configuration, the rjs task will parse these values from your\n+    // main module, using http://requirejs.org/docs/optimization.html#mainConfigFile\n+    //\n+    // name / out / mainConfig file should be used. You can let it blank if\n+    // you're using usemin-handler to parse rjs config from markup (default\n+    // setup)\n+    rjs: {\n+      // no minification, is done by the min task\n+      optimize: 'none',\n+      baseUrl: './scripts',\n+      wrap: true\n+    },\n+  });\n+\n+  // Alias the `test` task to run the `mocha` task instead\n+  grunt.registerTask('test', 'mocha');\n+\n+};",
        "path": "cli/lib/generators/ember-starter/templates/Gruntfile.js",
        "position": 174,
        "original_position": 174,
        "commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "original_commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "user": {
            "login": "addyosmani",
            "id": 110953,
            "node_id": "MDQ6VXNlcjExMDk1Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/110953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addyosmani",
            "html_url": "https://github.com/addyosmani",
            "followers_url": "https://api.github.com/users/addyosmani/followers",
            "following_url": "https://api.github.com/users/addyosmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/addyosmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addyosmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addyosmani/subscriptions",
            "organizations_url": "https://api.github.com/users/addyosmani/orgs",
            "repos_url": "https://api.github.com/users/addyosmani/repos",
            "events_url": "https://api.github.com/users/addyosmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addyosmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I had wanted to trim down the Gruntfile, but ran into issues with the build process when certain things are removed. Once we've nailed down whats causing breakages with the build process (and usemin handlers etc) in the main yeoman generator I plan on going back through these and cleaning them up further.\n",
        "created_at": "2012-08-23T15:42:57Z",
        "updated_at": "2012-08-23T15:42:57Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446158",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/252",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446158"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446158"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/252"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446174",
        "pull_request_review_id": null,
        "id": 1446174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDYxNzQ=",
        "diff_hunk": "@@ -0,0 +1,174 @@\n+module.exports = function( grunt ) {\n+  'use strict';\n+  //\n+  // Grunt configuration:\n+  //\n+  // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n+  grunt.initConfig({\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // specify an alternate install location for Bower\n+    bower: {\n+      dir: 'app/scripts/vendor'\n+    },\n+\n+    // Coffee to JS compilation\n+    coffee: {\n+      dist: {\n+        src: 'app/scripts/**/*.coffee',\n+        dest: 'app/scripts'\n+      }\n+    },\n+\n+    // compile .scss/.sass to .css using Compass\n+    compass: {\n+      dist: {\n+        // http://compass-style.org/help/tutorials/configuration-reference/#configuration-properties\n+        options: {\n+          css_dir: 'styles',\n+          sass_dir: 'styles',\n+          images_dir: 'images',\n+          javascripts_dir: 'scripts',\n+          force: true\n+        }\n+      }\n+    },\n+\n+    // generate application cache manifest\n+    manifest:{\n+      dest: ''\n+    },\n+\n+    // headless testing through PhantomJS\n+    mocha: {\n+      all: ['test/**/*.html']\n+    },\n+\n+    // default watch configuration\n+    watch: {\n+      coffee: {\n+        files: '<config:coffee.dist.src>',\n+        tasks: 'coffee reload'\n+      },\n+      compass: {\n+        files: [\n+          'app/styles/**/*.{scss,sass}'\n+        ],\n+        tasks: 'compass reload'\n+      },\n+      reload: {\n+        files: [\n+          'app/*.html',\n+          'app/styles/**/*.css',\n+          'app/scripts/**/*.js',\n+          'app/images/**/*'\n+        ],\n+        tasks: 'reload'\n+      }\n+    },\n+\n+    // default lint configuration, change this to match your setup:\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#lint-built-in-task\n+    lint: {\n+      files: [\n+        'Gruntfile.js',\n+        'app/scripts/**/*.js',\n+        'spec/**/*.js'\n+      ]\n+    },\n+\n+    // specifying JSHint options and globals\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#specifying-jshint-options-and-globals\n+    jshint: {\n+      options: {\n+        curly: true,\n+        eqeqeq: true,\n+        immed: true,\n+        latedef: true,\n+        newcap: true,\n+        noarg: true,\n+        sub: true,\n+        undef: true,\n+        boss: true,\n+        eqnull: true,\n+        browser: true\n+      },\n+      globals: {\n+        jQuery: true\n+      }\n+    },\n+\n+    // Build configuration\n+    // -------------------\n+\n+    // the staging directory used during the process\n+    staging: 'temp',\n+    // final build output\n+    output: 'dist',\n+\n+    mkdirs: {\n+      staging: 'app/'\n+    },\n+\n+    // Below, all paths are relative to the staging directory, which is a copy\n+    // of the app/ directory. Any .gitignore, .ignore and .buildignore file\n+    // that might appear in the app/ tree are used to ignore these values\n+    // during the copy process.\n+\n+    // concat css/**/*.css files, inline @import, output a single minified css\n+    css: {\n+      'styles/main.css': ['styles/**/*.css']\n+    },\n+\n+    // renames JS/CSS to prepend a hash of their contents for easier\n+    // versioning\n+    rev: {\n+      js: 'scripts/**/*.js',\n+      css: 'styles/**/*.css',\n+      img: 'images/**'\n+    },\n+\n+    // usemin handler should point to the file containing\n+    // the usemin blocks to be parsed\n+    'usemin-handler': {\n+      html: 'index.html'\n+    },\n+\n+    // update references in HTML/CSS to revved files\n+    usemin: {\n+      html: ['**/*.html'],\n+      css: ['**/*.css']\n+    },\n+\n+    // HTML minification\n+    html: {\n+      files: ['**/*.html']\n+    },\n+\n+    // Optimizes JPGs and PNGs (with jpegtran & optipng)\n+    img: {\n+      dist: '<config:rev.img>'\n+    },\n+\n+    // rjs configuration. You don't necessarily need to specify the typical\n+    // `path` configuration, the rjs task will parse these values from your\n+    // main module, using http://requirejs.org/docs/optimization.html#mainConfigFile\n+    //\n+    // name / out / mainConfig file should be used. You can let it blank if\n+    // you're using usemin-handler to parse rjs config from markup (default\n+    // setup)\n+    rjs: {\n+      // no minification, is done by the min task\n+      optimize: 'none',\n+      baseUrl: './scripts',\n+      wrap: true\n+    },\n+  });\n+\n+  // Alias the `test` task to run the `mocha` task instead\n+  grunt.registerTask('test', 'mocha');\n+\n+};",
        "path": "cli/lib/generators/ember-starter/templates/Gruntfile.js",
        "position": 174,
        "original_position": 174,
        "commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "original_commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, couldn't this generator use your Quickstart as a base? Wasn't that the whole point of creating it?\n",
        "created_at": "2012-08-23T15:44:25Z",
        "updated_at": "2012-08-23T15:44:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446174",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/252",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446174"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/252"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446732",
        "pull_request_review_id": null,
        "id": 1446732,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY3MzI=",
        "diff_hunk": "@@ -0,0 +1,174 @@\n+module.exports = function( grunt ) {\n+  'use strict';\n+  //\n+  // Grunt configuration:\n+  //\n+  // https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n+  //\n+  grunt.initConfig({\n+\n+    // Project configuration\n+    // ---------------------\n+\n+    // specify an alternate install location for Bower\n+    bower: {\n+      dir: 'app/scripts/vendor'\n+    },\n+\n+    // Coffee to JS compilation\n+    coffee: {\n+      dist: {\n+        src: 'app/scripts/**/*.coffee',\n+        dest: 'app/scripts'\n+      }\n+    },\n+\n+    // compile .scss/.sass to .css using Compass\n+    compass: {\n+      dist: {\n+        // http://compass-style.org/help/tutorials/configuration-reference/#configuration-properties\n+        options: {\n+          css_dir: 'styles',\n+          sass_dir: 'styles',\n+          images_dir: 'images',\n+          javascripts_dir: 'scripts',\n+          force: true\n+        }\n+      }\n+    },\n+\n+    // generate application cache manifest\n+    manifest:{\n+      dest: ''\n+    },\n+\n+    // headless testing through PhantomJS\n+    mocha: {\n+      all: ['test/**/*.html']\n+    },\n+\n+    // default watch configuration\n+    watch: {\n+      coffee: {\n+        files: '<config:coffee.dist.src>',\n+        tasks: 'coffee reload'\n+      },\n+      compass: {\n+        files: [\n+          'app/styles/**/*.{scss,sass}'\n+        ],\n+        tasks: 'compass reload'\n+      },\n+      reload: {\n+        files: [\n+          'app/*.html',\n+          'app/styles/**/*.css',\n+          'app/scripts/**/*.js',\n+          'app/images/**/*'\n+        ],\n+        tasks: 'reload'\n+      }\n+    },\n+\n+    // default lint configuration, change this to match your setup:\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#lint-built-in-task\n+    lint: {\n+      files: [\n+        'Gruntfile.js',\n+        'app/scripts/**/*.js',\n+        'spec/**/*.js'\n+      ]\n+    },\n+\n+    // specifying JSHint options and globals\n+    // https://github.com/cowboy/grunt/blob/master/docs/task_lint.md#specifying-jshint-options-and-globals\n+    jshint: {\n+      options: {\n+        curly: true,\n+        eqeqeq: true,\n+        immed: true,\n+        latedef: true,\n+        newcap: true,\n+        noarg: true,\n+        sub: true,\n+        undef: true,\n+        boss: true,\n+        eqnull: true,\n+        browser: true\n+      },\n+      globals: {\n+        jQuery: true\n+      }\n+    },\n+\n+    // Build configuration\n+    // -------------------\n+\n+    // the staging directory used during the process\n+    staging: 'temp',\n+    // final build output\n+    output: 'dist',\n+\n+    mkdirs: {\n+      staging: 'app/'\n+    },\n+\n+    // Below, all paths are relative to the staging directory, which is a copy\n+    // of the app/ directory. Any .gitignore, .ignore and .buildignore file\n+    // that might appear in the app/ tree are used to ignore these values\n+    // during the copy process.\n+\n+    // concat css/**/*.css files, inline @import, output a single minified css\n+    css: {\n+      'styles/main.css': ['styles/**/*.css']\n+    },\n+\n+    // renames JS/CSS to prepend a hash of their contents for easier\n+    // versioning\n+    rev: {\n+      js: 'scripts/**/*.js',\n+      css: 'styles/**/*.css',\n+      img: 'images/**'\n+    },\n+\n+    // usemin handler should point to the file containing\n+    // the usemin blocks to be parsed\n+    'usemin-handler': {\n+      html: 'index.html'\n+    },\n+\n+    // update references in HTML/CSS to revved files\n+    usemin: {\n+      html: ['**/*.html'],\n+      css: ['**/*.css']\n+    },\n+\n+    // HTML minification\n+    html: {\n+      files: ['**/*.html']\n+    },\n+\n+    // Optimizes JPGs and PNGs (with jpegtran & optipng)\n+    img: {\n+      dist: '<config:rev.img>'\n+    },\n+\n+    // rjs configuration. You don't necessarily need to specify the typical\n+    // `path` configuration, the rjs task will parse these values from your\n+    // main module, using http://requirejs.org/docs/optimization.html#mainConfigFile\n+    //\n+    // name / out / mainConfig file should be used. You can let it blank if\n+    // you're using usemin-handler to parse rjs config from markup (default\n+    // setup)\n+    rjs: {\n+      // no minification, is done by the min task\n+      optimize: 'none',\n+      baseUrl: './scripts',\n+      wrap: true\n+    },\n+  });\n+\n+  // Alias the `test` task to run the `mocha` task instead\n+  grunt.registerTask('test', 'mocha');\n+\n+};",
        "path": "cli/lib/generators/ember-starter/templates/Gruntfile.js",
        "position": 174,
        "original_position": 174,
        "commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "original_commit_id": "2acc950a33f244ce3a882e8db5b5c11c390b2e79",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes, you raise an interesting question Sindre. It would be nice to not duplicate the stuff already done in the app generator. As I see it, this ember-starter generator is more or less an alternate app generator, and acts as a replacement.\n\nI would rather much prefer to add back the `js-framework` hook in the app generator, and use `yeoman init --js-framework ember-starter` to trigger the ember-starter specifics. The ember-starter generator should then be located at `cli/lib/generators/ember-starter/app/`.\n\nAlso, we should keep in mind that generators are not forced to be within yeoman (the main repo), generators can be developed as independent node / npm modules and be installed as a project dependency. (one of the load paths is any kind of generators within `node_modules/yeoman-*/lib/generators/*`).\n\nIf we take advantage of these hooks a bit more, it becomes trivial for anyone to specifically override part of what a generator generates.\n\nHope it makes sense and is clear enough.\n",
        "created_at": "2012-08-23T16:36:39Z",
        "updated_at": "2012-08-23T16:36:39Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446732",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/252",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1446732"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/252#discussion_r1446732"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/252"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438958",
        "pull_request_review_id": null,
        "id": 1438958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg5NTg=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg\n-    echo \"Node.js downloaded, running install script (requires authentication)\"\n+    echo \"Node.js downloaded, starting installer.\"\n     sudo installer -pkg node-v0.8.4.pkg -target /\n+  elif [ \"$LINUX\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Linux.\"\n+    MACHINE_TYPE=`uname -m`\n+      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x64.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x64.tar.gz\n+        cd node-v0.8.7-linux-x64\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      else\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x86.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x86.tar.gz\n+        cd node-v0.8.7-linux-x86\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      fi\n+  else\n+    echo \"An error occurred installing Node.js\"\n+  fi\n fi\n \n echo \"\"\n-if [ \"$BREWFILE\" ]\n-then\n-    echo \"Homebrew is installed...\"\n-else\n-    echo \"Installing Homebrew...\"\n-    ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)\"\n-fi\n \n-echo \"\"\n-echo \"Installing required packages via Homebrew...\"\n-echo \"First, we'll make sure homebrew is up to date. (Auth required)\"\n-sudo brew update\n-echo \"Now to install: $PACKAGES\"\n-for package in $PACKAGES\n-do\n-  check_or_install_brew_pkg $package\n-done\n+#install the rest of the dependencies (MAC)\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing dependencies for Mac.\"\n+  for package in $PACKAGESMAC\n+  do\n+    check_or_install_brew_pkg $package\n+  done\n+  brew link jpeg-turbo\n+fi\n \n+#install the rest of the dependencies (LINUX)\n+if [ \"$LINUX\" -eq 1 ]; then \n+  echo \"Installing dependencies for Linux.\"\n+  echo \"Installing $PACKAGESLINUX\"\n+  if [ \"$PKGMGR\" -eq 1 ]; then \n+    sudo apt-get install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 2 ]; then \n+    sudo yum install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 3 ]; then \n+    sudo up2date install $PACKAGESLINUX\n+  fi\n+fi\n \n-# Install of installing bundler we'll just go and grab the compass gem.\n-# We would like to move to node-sass once libsass is stable\n+#check for compass\n echo \"\"\n-if [ \"$COMPASSFILE\" ]\n-then\n-    echo \"Compass already installed, you may want to 'gem install compass --pre' for Sass 3.2...\"\n+if [ \"$COMPASSFILE\" ]; then \n+  echo \"Compass is already installed, you may want to 'gem install compass -pre' for the latest goodness.\"\n else\n-    echo \"Installing Compass for CSS preprocessing magic...\"\n-    sudo gem update --system\n-    sudo gem install compass --pre\n-    # Fix an issue with installing --pre of compass.\n-    # Fixed in Compass master, but not released:\n-    # https://github.com/chriseppstein/compass/pull/894\n-    rubygems-bundler-uninstaller\n+  echo \"Install compass for CSS magic.\"\n+  rvm 1.9.2 do gem install compass --pre\n+  # Fix an issue with installing --pre of compass.\n+  # https://github.com/chriseppstein/compass/pull/894\n+  rubygems-bundler-uninstaller\n fi\n \n-# now that we have all our major dependencies in place,\n-# lets grab the yeoman package and start initializing it.\n-\n+#dependencies done. woo!\n echo \"\"\n-echo \"Phew. That was hard work!\"\n-echo \"Now we've got those dependencies out of the way, let's grab Yeoman's latest!\"\n-\n+echo \"Now the dependencies are sorted let's grab the latest yeoman goodness\"\n \n-# grab our latest and unpack the tarball\n+#grab the latest yeoman tarball\n tarball=\"yeoman-yeoman-eec4e8932cbcb60cee5fbcafb13c7cae27ca250f\"\n curl https://dl.dropbox.com/u/39519/\"$tarball\".tar.gz | \"$tar\" -xz\n cd \"$tarball\"\n \n cd cli\n-# install yeoman as a global node package\n+#install yeoman as a global npm package\n echo \"\"\n echo \"Alright buckaroo, hold on to your hats..\"\n echo \"We're about to install the yeoman CLI, which will in turn install quite a few node modules\"\n echo \"We're going to move fast, but once we're done, \"\n echo \"you'll have the power of a thousand developers at your blinking cursor.\"\n echo \"Okay here we go...\"\n+\n sudo npm install . -g",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 273,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@tomlane Idea. Can we check if /usr/local/bin/ requires sudo before executing and only use sudo if so?\n",
        "created_at": "2012-08-22T19:58:23Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438958",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438958"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438962",
        "pull_request_review_id": null,
        "id": 1438962,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg5NjI=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 155,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While you're at it, can you update this to 0.8.7 too?\n",
        "created_at": "2012-08-22T19:59:02Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438962",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438962"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438962"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438972",
        "pull_request_review_id": null,
        "id": 1438972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg5NzI=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 140,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not 1.9.3?\n",
        "created_at": "2012-08-22T19:59:48Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438972",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438972"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438981",
        "pull_request_review_id": null,
        "id": 1438981,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzg5ODE=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 137,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just not showing this on Linux would be better than telling to ignore.\n",
        "created_at": "2012-08-22T20:00:30Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438981",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1438981"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1438981"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439003",
        "pull_request_review_id": null,
        "id": 1439003,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkwMDM=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 124,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you add in a link to the docs here, for manual install?\n\nhttps://github.com/yeoman/yeoman/blob/master/docs/cli/installation.md#linux\n",
        "created_at": "2012-08-22T20:02:05Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439003",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439003"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439003"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439037",
        "pull_request_review_id": null,
        "id": 1439037,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkwMzc=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 105,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Needs a better explanation. Maybe something like:\n\n> I'm sorry, I can't figure out which OS you're on. I currently support OS X and Linux. If you're using any of these and get this message, something might be wrong on my end. Please open a ticket: https://github.com/yeoman/yeoman/issues/new\n",
        "created_at": "2012-08-22T20:04:58Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439037",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439037"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439037"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439043",
        "pull_request_review_id": null,
        "id": 1439043,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkwNDM=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 101,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Installing on OS X\n",
        "created_at": "2012-08-22T20:05:22Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439043",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439043"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439043"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439045",
        "pull_request_review_id": null,
        "id": 1439045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkwNDU=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 103,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Installing on Linux\n",
        "created_at": "2012-08-22T20:05:31Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439045",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439045"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439063",
        "pull_request_review_id": null,
        "id": 1439063,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkwNjM=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 93,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not needed ^\n",
        "created_at": "2012-08-22T20:06:58Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439063",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439063"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439063"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439204",
        "pull_request_review_id": null,
        "id": 1439204,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkyMDQ=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 93,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "tomlane",
            "id": 642385,
            "node_id": "MDQ6VXNlcjY0MjM4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/642385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomlane",
            "html_url": "https://github.com/tomlane",
            "followers_url": "https://api.github.com/users/tomlane/followers",
            "following_url": "https://api.github.com/users/tomlane/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomlane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomlane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomlane/subscriptions",
            "organizations_url": "https://api.github.com/users/tomlane/orgs",
            "repos_url": "https://api.github.com/users/tomlane/repos",
            "events_url": "https://api.github.com/users/tomlane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomlane/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is this for the echo message?\n",
        "created_at": "2012-08-22T20:19:46Z",
        "updated_at": "2012-09-04T13:25:19Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439204",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439204"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439204"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439368",
        "pull_request_review_id": null,
        "id": 1439368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkzNjg=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 120,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do this second set tests? You already check for package managers above `if haveProg apt-get; then`\n",
        "created_at": "2012-08-22T20:36:06Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439368",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439368"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439381",
        "pull_request_review_id": null,
        "id": 1439381,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkzODE=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 93,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yup, we already tell them `Installing for mac` below.\n",
        "created_at": "2012-08-22T20:37:11Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439381",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439381"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439381"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439937",
        "pull_request_review_id": null,
        "id": 1439937,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzk5Mzc=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg\n-    echo \"Node.js downloaded, running install script (requires authentication)\"\n+    echo \"Node.js downloaded, starting installer.\"\n     sudo installer -pkg node-v0.8.4.pkg -target /\n+  elif [ \"$LINUX\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Linux.\"\n+    MACHINE_TYPE=`uname -m`\n+      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x64.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x64.tar.gz\n+        cd node-v0.8.7-linux-x64\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      else\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x86.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x86.tar.gz\n+        cd node-v0.8.7-linux-x86\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      fi\n+  else\n+    echo \"An error occurred installing Node.js\"\n+  fi\n fi\n \n echo \"\"\n-if [ \"$BREWFILE\" ]\n-then\n-    echo \"Homebrew is installed...\"\n-else\n-    echo \"Installing Homebrew...\"\n-    ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)\"\n-fi\n \n-echo \"\"\n-echo \"Installing required packages via Homebrew...\"\n-echo \"First, we'll make sure homebrew is up to date. (Auth required)\"\n-sudo brew update\n-echo \"Now to install: $PACKAGES\"\n-for package in $PACKAGES\n-do\n-  check_or_install_brew_pkg $package\n-done\n+#install the rest of the dependencies (MAC)\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing dependencies for Mac.\"\n+  for package in $PACKAGESMAC\n+  do\n+    check_or_install_brew_pkg $package\n+  done\n+  brew link jpeg-turbo\n+fi\n \n+#install the rest of the dependencies (LINUX)\n+if [ \"$LINUX\" -eq 1 ]; then \n+  echo \"Installing dependencies for Linux.\"\n+  echo \"Installing $PACKAGESLINUX\"\n+  if [ \"$PKGMGR\" -eq 1 ]; then \n+    sudo apt-get install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 2 ]; then \n+    sudo yum install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 3 ]; then \n+    sudo up2date install $PACKAGESLINUX\n+  fi\n+fi\n \n-# Install of installing bundler we'll just go and grab the compass gem.\n-# We would like to move to node-sass once libsass is stable\n+#check for compass\n echo \"\"\n-if [ \"$COMPASSFILE\" ]\n-then\n-    echo \"Compass already installed, you may want to 'gem install compass --pre' for Sass 3.2...\"\n+if [ \"$COMPASSFILE\" ]; then \n+  echo \"Compass is already installed, you may want to 'gem install compass -pre' for the latest goodness.\"\n else\n-    echo \"Installing Compass for CSS preprocessing magic...\"\n-    sudo gem update --system\n-    sudo gem install compass --pre\n-    # Fix an issue with installing --pre of compass.\n-    # Fixed in Compass master, but not released:\n-    # https://github.com/chriseppstein/compass/pull/894\n-    rubygems-bundler-uninstaller\n+  echo \"Install compass for CSS magic.\"\n+  rvm 1.9.2 do gem install compass --pre\n+  # Fix an issue with installing --pre of compass.\n+  # https://github.com/chriseppstein/compass/pull/894\n+  rubygems-bundler-uninstaller\n fi\n \n-# now that we have all our major dependencies in place,\n-# lets grab the yeoman package and start initializing it.\n-\n+#dependencies done. woo!\n echo \"\"\n-echo \"Phew. That was hard work!\"\n-echo \"Now we've got those dependencies out of the way, let's grab Yeoman's latest!\"\n-\n+echo \"Now the dependencies are sorted let's grab the latest yeoman goodness\"\n \n-# grab our latest and unpack the tarball\n+#grab the latest yeoman tarball\n tarball=\"yeoman-yeoman-eec4e8932cbcb60cee5fbcafb13c7cae27ca250f\"\n curl https://dl.dropbox.com/u/39519/\"$tarball\".tar.gz | \"$tar\" -xz\n cd \"$tarball\"\n \n cd cli\n-# install yeoman as a global node package\n+#install yeoman as a global npm package\n echo \"\"\n echo \"Alright buckaroo, hold on to your hats..\"\n echo \"We're about to install the yeoman CLI, which will in turn install quite a few node modules\"\n echo \"We're going to move fast, but once we're done, \"\n echo \"you'll have the power of a thousand developers at your blinking cursor.\"\n echo \"Okay here we go...\"\n+\n sudo npm install . -g",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 273,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "tomlane",
            "id": 642385,
            "node_id": "MDQ6VXNlcjY0MjM4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/642385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomlane",
            "html_url": "https://github.com/tomlane",
            "followers_url": "https://api.github.com/users/tomlane/followers",
            "following_url": "https://api.github.com/users/tomlane/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomlane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomlane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomlane/subscriptions",
            "organizations_url": "https://api.github.com/users/tomlane/orgs",
            "repos_url": "https://api.github.com/users/tomlane/repos",
            "events_url": "https://api.github.com/users/tomlane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomlane/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@sindresorhus I have been looking in to all your tweaks and only this one remains now, I am not exactly sure how to perform the check. this my initial idea is below:\n\n```\n$NEEDSUDO=$( ls -ld /usr/local/bin | grep 'root root' )\n//this would return true if directory is owned by root and therefore sudo is required or blank if otherwise\n\nif [ \"$NEEDSUDO\" ]; then\n    sudo npm install . -g\nelse\n    npm install . -g\n```\n\nBut I seem to be messing something up because the variable returns as:\n\n```\ndrwxr-xr-x: command not found\n```\n\nThis is probably a silly error by me but I can't seem to pin it down, any ideas?\n",
        "created_at": "2012-08-22T21:34:26Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439937",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1439937"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1439937"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1440295",
        "pull_request_review_id": null,
        "id": 1440295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDAyOTU=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg\n-    echo \"Node.js downloaded, running install script (requires authentication)\"\n+    echo \"Node.js downloaded, starting installer.\"\n     sudo installer -pkg node-v0.8.4.pkg -target /\n+  elif [ \"$LINUX\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Linux.\"\n+    MACHINE_TYPE=`uname -m`\n+      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x64.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x64.tar.gz\n+        cd node-v0.8.7-linux-x64\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      else\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x86.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x86.tar.gz\n+        cd node-v0.8.7-linux-x86\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      fi\n+  else\n+    echo \"An error occurred installing Node.js\"\n+  fi\n fi\n \n echo \"\"\n-if [ \"$BREWFILE\" ]\n-then\n-    echo \"Homebrew is installed...\"\n-else\n-    echo \"Installing Homebrew...\"\n-    ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)\"\n-fi\n \n-echo \"\"\n-echo \"Installing required packages via Homebrew...\"\n-echo \"First, we'll make sure homebrew is up to date. (Auth required)\"\n-sudo brew update\n-echo \"Now to install: $PACKAGES\"\n-for package in $PACKAGES\n-do\n-  check_or_install_brew_pkg $package\n-done\n+#install the rest of the dependencies (MAC)\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing dependencies for Mac.\"\n+  for package in $PACKAGESMAC\n+  do\n+    check_or_install_brew_pkg $package\n+  done\n+  brew link jpeg-turbo\n+fi\n \n+#install the rest of the dependencies (LINUX)\n+if [ \"$LINUX\" -eq 1 ]; then \n+  echo \"Installing dependencies for Linux.\"\n+  echo \"Installing $PACKAGESLINUX\"\n+  if [ \"$PKGMGR\" -eq 1 ]; then \n+    sudo apt-get install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 2 ]; then \n+    sudo yum install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 3 ]; then \n+    sudo up2date install $PACKAGESLINUX\n+  fi\n+fi\n \n-# Install of installing bundler we'll just go and grab the compass gem.\n-# We would like to move to node-sass once libsass is stable\n+#check for compass\n echo \"\"\n-if [ \"$COMPASSFILE\" ]\n-then\n-    echo \"Compass already installed, you may want to 'gem install compass --pre' for Sass 3.2...\"\n+if [ \"$COMPASSFILE\" ]; then \n+  echo \"Compass is already installed, you may want to 'gem install compass -pre' for the latest goodness.\"\n else\n-    echo \"Installing Compass for CSS preprocessing magic...\"\n-    sudo gem update --system\n-    sudo gem install compass --pre\n-    # Fix an issue with installing --pre of compass.\n-    # Fixed in Compass master, but not released:\n-    # https://github.com/chriseppstein/compass/pull/894\n-    rubygems-bundler-uninstaller\n+  echo \"Install compass for CSS magic.\"\n+  rvm 1.9.2 do gem install compass --pre\n+  # Fix an issue with installing --pre of compass.\n+  # https://github.com/chriseppstein/compass/pull/894\n+  rubygems-bundler-uninstaller\n fi\n \n-# now that we have all our major dependencies in place,\n-# lets grab the yeoman package and start initializing it.\n-\n+#dependencies done. woo!\n echo \"\"\n-echo \"Phew. That was hard work!\"\n-echo \"Now we've got those dependencies out of the way, let's grab Yeoman's latest!\"\n-\n+echo \"Now the dependencies are sorted let's grab the latest yeoman goodness\"\n \n-# grab our latest and unpack the tarball\n+#grab the latest yeoman tarball\n tarball=\"yeoman-yeoman-eec4e8932cbcb60cee5fbcafb13c7cae27ca250f\"\n curl https://dl.dropbox.com/u/39519/\"$tarball\".tar.gz | \"$tar\" -xz\n cd \"$tarball\"\n \n cd cli\n-# install yeoman as a global node package\n+#install yeoman as a global npm package\n echo \"\"\n echo \"Alright buckaroo, hold on to your hats..\"\n echo \"We're about to install the yeoman CLI, which will in turn install quite a few node modules\"\n echo \"We're going to move fast, but once we're done, \"\n echo \"you'll have the power of a thousand developers at your blinking cursor.\"\n echo \"Okay here we go...\"\n+\n sudo npm install . -g",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 273,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`ls -ld /usr/local/bin` gives me `drwxrwxr-x  194 root  admin  6596 Aug 22 22:26 /usr/local/bin`. Notice not `root root`.\n\nWould probably be best to use instead check if that user own it, than root, since not only root can own it.\n\nSomething like:\n\n`$( ls -ld /usr/local/bin | grep $USER )` ?\n",
        "created_at": "2012-08-22T22:11:17Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1440295",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1440295"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1440295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442094",
        "pull_request_review_id": null,
        "id": 1442094,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDIwOTQ=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 155,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we use variables at the top of the file for the node, ruby, compass, and yeoman versions we're pulling? Would make updating this script a bit easier.\n",
        "created_at": "2012-08-23T05:45:14Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442094",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442094"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442094"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442126",
        "pull_request_review_id": null,
        "id": 1442126,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDIxMjY=",
        "diff_hunk": "@@ -111,92 +118,172 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing on OS X.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing on Linux.\"\n+else\n+  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  if [ \"$MAC\" -eq 1 ]; then\n+    echo \"An error occurred installing brew.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 121,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "d8e896315fb4442d457c3b02a2e7b14d9f3fc38c",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just hit this error while running the installer on my mac (that already has homebrew). \nLogically, this should be `\"You've got brew! Well done, chap!\"` and continue on.. \n",
        "created_at": "2012-08-23T05:54:46Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442126",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442126"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442126"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442146",
        "pull_request_review_id": null,
        "id": 1442146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDIxNDY=",
        "diff_hunk": "@@ -111,92 +118,172 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing on OS X.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing on Linux.\"\n+else\n+  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  if [ \"$MAC\" -eq 1 ]; then\n+    echo \"An error occurred installing brew.\"\n+    exit 1\n+  fi\n fi\n \n+#Install RVM and use Ruby 1.9.3\n+echo \"I'll need to install ruby and rubygems before I can continue.\"\n echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n-else\n-    echo \"Installing Node.js...\"\n+curl -L https://get.rvm.io | bash -s stable",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 134,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "d8e896315fb4442d457c3b02a2e7b14d9f3fc38c",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's install rvm only if it's not already present, similar to how the Node install is done.\n",
        "created_at": "2012-08-23T05:57:39Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442146",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442146"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442183",
        "pull_request_review_id": null,
        "id": 1442183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDIxODM=",
        "diff_hunk": "@@ -111,92 +118,172 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing on OS X.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing on Linux.\"\n+else\n+  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  if [ \"$MAC\" -eq 1 ]; then\n+    echo \"An error occurred installing brew.\"\n+    exit 1\n+  fi\n fi\n \n+#Install RVM and use Ruby 1.9.3\n+echo \"I'll need to install ruby and rubygems before I can continue.\"\n echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n-else\n-    echo \"Installing Node.js...\"\n+curl -L https://get.rvm.io | bash -s stable\n+source ~/.rvm/scripts/rvm\n+rvm pkg install zlib\n+rvm install 1.9.3\n+rvm use 1.9.3\n \n-    curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg\n-    echo \"Node.js downloaded, running install script (requires authentication)\"\n-    sudo installer -pkg node-v0.8.4.pkg -target /\n-fi\n+#check rvm is configured correctly\n+echo \"Checking to make sure RVM is installed and configured correctly.\"\n+\n+RVMFILE=$(which rvm)\n \n echo \"\"\n-if [ \"$BREWFILE\" ]\n-then\n-    echo \"Homebrew is installed...\"\n+\n+if [ -z \"$RVMFILE\" ]; then\n+  echo \"ERROR: RVM is not configured correctly for your terminal.\"\n+  echo \"Please consult the RVM documentation for your terminal. http://rvm.io\"\n+  exit 1\n+fi\n+\n+\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n else\n-    echo \"Installing Homebrew...\"\n-    ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)\"\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n+    curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7.pkg\n+    echo \"Node.js downloaded, starting installer.\"\n+    sudo installer -pkg node-v0.8.7.pkg -target /\n+  elif [ \"$LINUX\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Linux.\"\n+    MACHINE_TYPE=`uname -m`\n+      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x64.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x64.tar.gz\n+        cd node-v0.8.7-linux-x64\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      else\n+        curl -O http://nodejs.org/dist/v0.8.7/node-v0.8.7-linux-x86.tar.gz\n+        echo \"installing Node.js for linux.\"\n+        tar xvfz node-v0.8.7-linux-x86.tar.gz\n+        cd node-v0.8.7-linux-x86\n+        sudo cp -r * /usr/local/\n+        cd ..\n+      fi\n+  else\n+    echo \"An error occurred installing Node.js\"\n+  fi\n fi\n \n echo \"\"\n-echo \"Installing required packages via Homebrew...\"\n-echo \"First, we'll make sure homebrew is up to date. (Auth required)\"\n-sudo brew update\n-echo \"Now to install: $PACKAGES\"\n-for package in $PACKAGES\n-do\n-  check_or_install_brew_pkg $package\n-done\n \n+#install the rest of the dependencies (MAC)\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing dependencies for OS X.\"\n+  for package in $PACKAGESMAC\n+  do\n+    check_or_install_brew_pkg $package\n+  done\n+  brew link jpeg-turbo\n+fi\n+\n+#install the rest of the dependencies (LINUX)\n+if [ \"$LINUX\" -eq 1 ]; then \n+  echo \"Installing dependencies for Linux.\"\n+  echo \"Installing $PACKAGESLINUX\"\n+  if [ \"$PKGMGR\" -eq 1 ]; then \n+    sudo apt-get install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 2 ]; then \n+    sudo yum install $PACKAGESLINUX\n+  elif [ \"$PKGMGR\" -eq 3 ]; then \n+    sudo up2date install $PACKAGESLINUX\n+  fi\n+fi\n \n-# Install of installing bundler we'll just go and grab the compass gem.\n-# We would like to move to node-sass once libsass is stable\n+#check for compass\n echo \"\"\n-if [ \"$COMPASSFILE\" ]\n-then\n-    echo \"Compass already installed, you may want to 'gem install compass --pre' for Sass 3.2...\"\n+if [ \"$COMPASSFILE\" ]; then \n+  echo \"Compass is already installed, you may want to 'gem install compass -pre' for the latest goodness.\"\n else\n-    echo \"Installing Compass for CSS preprocessing magic...\"\n-    sudo gem update --system\n-    sudo gem install compass --pre\n-    # Fix an issue with installing --pre of compass.\n-    # Fixed in Compass master, but not released:\n-    # https://github.com/chriseppstein/compass/pull/894\n-    rubygems-bundler-uninstaller\n+  echo \"Install compass for CSS magic.\"\n+  rvm 1.9.3 do gem install compass --pre\n+  # Fix an issue with installing --pre of compass.\n+  # https://github.com/chriseppstein/compass/pull/894\n+  rubygems-bundler-uninstaller\n fi\n \n-# now that we have all our major dependencies in place,\n-# lets grab the yeoman package and start initializing it.\n-\n+#dependencies done. woo!\n echo \"\"\n-echo \"Phew. That was hard work!\"\n-echo \"Now we've got those dependencies out of the way, let's grab Yeoman's latest!\"\n-\n+echo \"Now the dependencies are sorted let's grab the latest yeoman goodness\"\n \n-# grab our latest and unpack the tarball\n+#grab the latest yeoman tarball\n tarball=\"yeoman-yeoman-eec4e8932cbcb60cee5fbcafb13c7cae27ca250f\"\n curl https://dl.dropbox.com/u/39519/\"$tarball\".tar.gz | \"$tar\" -xz\n cd \"$tarball\"\n \n cd cli\n-# install yeoman as a global node package\n+#install yeoman as a global npm package\n echo \"\"\n echo \"Alright buckaroo, hold on to your hats..\"\n echo \"We're about to install the yeoman CLI, which will in turn install quite a few node modules\"\n echo \"We're going to move fast, but once we're done, \"\n echo \"you'll have the power of a thousand developers at your blinking cursor.\"\n echo \"Okay here we go...\"\n-sudo npm install . -g\n+\n+if [ -z \"$SUDOCHECK\" ]; then\n+  sudo npm install . -g",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 282,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "d8e896315fb4442d457c3b02a2e7b14d9f3fc38c",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Before this lets add a `Looks like you need to sudo your npm installs...\" so the \"password: \" prompt doesnt come out of nowhere\n",
        "created_at": "2012-08-23T06:08:00Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442183",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442183"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442572",
        "pull_request_review_id": null,
        "id": 1442572,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDI1NzI=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"\n+  exit 1  \n+fi\n \n-if [ \"$RUBYFILE\" ] && [ \"$GEMFILE\" ]\n-then\n-    echo \"\"\n+#check which package manager\n+if [ \"$PKGMGR\" -eq 1 ]; then \n+  echo \"Managing packages using apt.\"\n+elif [ \"$PKGMGR\" -eq 2 ]; then \n+  echo \"Managing packages using yum.\"\n+elif [ \"$PKGMGR\" - eq 3 ]; then \n+  echo \"Managing packages using up2date.\"\n+elif [ \"$PKGMGR\" -eq 4 ]; then \n+  echo \"Managing packages using brew.\"\n else\n-    echo \"You'll need Ruby and RubyGems installed before this installer can continue.\"\n+  echo \"Unable to determine package manager!\"\n+  exit 1\n fi\n \n-echo \"\"\n-if [ \"$NODEFILE\" ]\n-then\n-    echo \"Node.js is installed...\"\n+#if on mac, make sure brew is installed\n+if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then \n+  echo \"Looks like you haven't got brew yet, I'll install that now.\"\n+  ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)\n else\n-    echo \"Installing Node.js...\"\n+  echo \"An error occurred installing brew. (Ignore if on linux).\"\n+fi\n \n+#Install RVM and use Ruby 1.9.2\n+  echo \"I'll need to install ruby and rubygems before I can continue.\"\n+  echo \"\"\n+  curl -L https://get.rvm.io | bash -s stable\n+  rvm pkg install zlib\n+  rvm install 1.9.2\n+  rvm use 1.9.2\n+\n+#ensure node is installed\n+if [ \"$NODEFILE\" ]; then \n+  echo \"Node.js is installed.\" \n+else\n+  echo \"Installing Node.js\"\n+  if [ \"$MAC\" -eq 1 ]; then \n+    echo \"Downloading Node.js for Mac.\"\n     curl -O http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 155,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1 - it's also 0.8.8 now btw\n",
        "created_at": "2012-08-23T07:38:02Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442572",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1442572"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1442572"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1445965",
        "pull_request_review_id": null,
        "id": 1445965,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDU5NjU=",
        "diff_hunk": "@@ -111,91 +115,163 @@ function check_or_install_brew_pkg() {\n   fi\n }\n \n-brew link jpeg-turbo\n+echo \"\"\n \n # where will we return to?\n BACK=\"$PWD\"\n cd \"$TMP\"\n \n+function haveProg() {\n+    [ -x \"$(which $1)\" ]\n+}\n \n+if haveProg apt-get; then \n+  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=1\n+elif haveProg yum; then \n+  echo \"You are using yum. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=2\n+elif haveProg up2date; then \n+  echo \"You are using up2date. I'll assume you have Linux with that.\"\n+  LINUX=1\n+  PKGMGR=3\n+else \n+  echo \"No linux package managers detected, I'll assume you got a Mac.\"\n+  MAC=1\n+  PKGMGR=4\n+fi\n+echo \"\"\n \n+#check which OS\n+if [ \"$MAC\" -eq 1 ]; then \n+  echo \"Installing for mac.\"\n+elif [ \"$LINUX\" -eq 1 ]; then\n+  echo \"Installing for linux.\"\n+else\n+  echo \"Unable to determine install target!\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 105,
        "commit_id": "c35a61f4ef7b705da0ed88bb62cc63d4ace1020a",
        "original_commit_id": "258d617e56ccc9a79c111ff30b173c6097b6819f",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@addyosmani  ^\n",
        "created_at": "2012-08-23T15:26:41Z",
        "updated_at": "2012-09-04T13:25:20Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/225#discussion_r1445965",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/225",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1445965"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/225#discussion_r1445965"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/225"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1580057",
        "pull_request_review_id": null,
        "id": 1580057,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODAwNTc=",
        "diff_hunk": "@@ -319,9 +325,8 @@ fi\n #check for compass\n echo \"\"\n if [ \"$COMPASSFILE\" ]; then\n-  echo \"\"\n-  echo \"WARN: Compass is already installed, you may want to 'gem update compass' to confirm it has Sass 3.2\"\n-  echo \"\"\n+  echo \"Compass is already installed, ensuring you have the latest release, for good measure.\"\n+  sudo gem install compass",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 23,
        "commit_id": "7786ef1f48d17e23d0be25d09152fdecac745598",
        "original_commit_id": "37e868b1e954ea277d4b4a7371d5b7106cf7f0f4",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "s/install/update/\n",
        "created_at": "2012-09-11T19:58:41Z",
        "updated_at": "2012-09-11T20:03:13Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/395#discussion_r1580057",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/395",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1580057"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/395#discussion_r1580057"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/395"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605573",
        "pull_request_review_id": null,
        "id": 1605573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1NzM=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); ",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 20,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We need to keep this Bash 3 for compat reasons.\n",
        "created_at": "2012-09-14T08:27:50Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605573",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605573"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605574",
        "pull_request_review_id": null,
        "id": 1605574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1NzQ=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 21,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "single-quotes\n",
        "created_at": "2012-09-14T08:27:57Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605574",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605574"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605579",
        "pull_request_review_id": null,
        "id": 1605579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1Nzk=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then ",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 113,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "-> `if [ $1 == \"installed\" ]; then`\n",
        "created_at": "2012-09-14T08:28:44Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605579",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605579"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605583",
        "pull_request_review_id": null,
        "id": 1605583,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1ODM=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; ",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 117,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`fi`\n",
        "created_at": "2012-09-14T08:29:00Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605583",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605583"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605583"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605593",
        "pull_request_review_id": null,
        "id": 1605593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1OTM=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 127,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "single-quotes\n",
        "created_at": "2012-09-14T08:29:37Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605593",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605593"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605597",
        "pull_request_review_id": null,
        "id": 1605597,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1OTc=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`if !isMac && !isLinux; then`\n",
        "created_at": "2012-09-14T08:30:29Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605597",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605597"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605597"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605598",
        "pull_request_review_id": null,
        "id": 1605598,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1OTg=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then\n+   echo \"Unkown OS type\" && exit 1",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 143,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "single-quotes\n",
        "created_at": "2012-09-14T08:30:34Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605598",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605598"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605598"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605605",
        "pull_request_review_id": null,
        "id": 1605605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU2MDU=",
        "diff_hunk": "@@ -161,217 +81,36 @@ echo \"\"\n echo \"                   Welcome to Yeoman! \"\n echo \"\"\n echo \"\"\n-echo \"We're going to check some dependencies and install them if they're not present\"\n+echo \"We're going to check some dependencies and list all of them.\"\n echo \"\"\n echo \"Stand by...\"\n echo \"\"\n \n-# Some utility parts:\n-# 0. Sudo checks\n-# 1. Grab a temporary folder for us to operate in\n-# 2. Find a tar executable\n-\n-#sudo checks\n-if [ \"$NEEDSUDO\" -eq 1 ]; then\n-  echo \"Please authorize the installer:\"\n-  sudo -v\n-  # sudo keep-alive: gist.github.com/3118588\n-  while true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n-fi\n-\n-# set the temp dir\n-TMP=\"${TMPDIR}\"\n-if [ \"x$TMP\" = \"x\" ]; then\n-  TMP=\"/tmp\"\n-fi\n-TMP=\"${TMP}/yeoman.$$\"\n-rm -rf \"$TMP\" || true\n-mkdir \"$TMP\"\n-if [ $? -ne 0 ]; then\n-  echo \"Failed to mkdir $TMP\" >&2\n-  exit 1\n-fi\n-\n-# Check the user has tar installed.\n-tar=\"${TAR}\"\n-if [ -z \"$tar\" ]; then\n-  tar=\"${npm_config_tar}\"\n-fi\n-if [ -z \"$tar\" ]; then\n-  tar=`which tar 2>&1`\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ] && [ -x \"$tar\" ]; then\n-  echo \"tar=$tar\"\n-  echo \"Good gracious! You've got this version of 'tar' installed:\"\n-  $tar --version\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ]; then\n-  (exit 0)\n-else\n-  echo \"No suitable tar program found.\"\n-  exit 1\n-fi\n-\n-check_or_install_brew_pkg() {\n-  FILELOCATION=$(which $1)\n-  if [ \"$FILELOCATION\" ]; then\n-    echo \"$1 is installed.\"\n-  else\n-    echo \"Installing $1...\"\n-    brew install $1\n-  fi\n-}\n-\n-echo \"\"\n-\n-# where will we return to?\n-BACK=\"$PWD\"\n-cd \"$TMP\"\n \n-#check for and install ruby if needed\n-if [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 1 ]; then\n-  echo \"Installing Ruby\"\n-  sudo apt-get -y install libruby1.9.1 ruby1.9.1 rubygems1.9.1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 2 ]; then\n-  echo \"Installing Ruby\"\n-  sudo yum -y install ruby rubygems\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 4 ]; then\n-  echo \"Installing Ruby\"\n-  sudo zypper install -y ruby rubygems\n-elif [ \"$MAC\" -eq 1 ] && [[ \"$RUBYCHECK\" < 1.8.7 ]]; then\n-  echo \"Error you need to update your ruby version. Yeoman requires 1.8.7 or newer for it's use of compass.\"\n-  COMPASS=0\n-elif [ \"$RUBYFILE\" ]; then\n-  echo \"Ruby is installed.\"\n-else\n-  echo \"Unable to determine ruby configuration, skipping compass install.\"\n-  COMPASS=0\n-fi\n-\n-echo \"\"\n+# Check for the common dependencies.\n+for dep in \"${deps[@]}\"\n+do",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 253,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`for dep in \"${deps[@]}\"; do`\n\nAll `do` and `then` should be on the same line\n",
        "created_at": "2012-09-14T08:31:17Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605605",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605605"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1605605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607486",
        "pull_request_review_id": null,
        "id": 1607486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0ODY=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Doing that said command not found in OSX!  But with spaces seems to work, yes strange but it happened so...\n",
        "created_at": "2012-09-14T13:32:49Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607486",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607486"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607536",
        "pull_request_review_id": null,
        "id": 1607536,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc1MzY=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Took the command from the comment, I mostly just cared about the unnecessary whitespace before the ;\n",
        "created_at": "2012-09-14T13:38:18Z",
        "updated_at": "2012-09-14T13:45:23Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607536",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607536"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607536"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607646",
        "pull_request_review_id": null,
        "id": 1607646,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc2NDY=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "jorgeramirez",
            "id": 732626,
            "node_id": "MDQ6VXNlcjczMjYyNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/732626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgeramirez",
            "html_url": "https://github.com/jorgeramirez",
            "followers_url": "https://api.github.com/users/jorgeramirez/followers",
            "following_url": "https://api.github.com/users/jorgeramirez/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgeramirez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgeramirez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgeramirez/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgeramirez/orgs",
            "repos_url": "https://api.github.com/users/jorgeramirez/repos",
            "events_url": "https://api.github.com/users/jorgeramirez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgeramirez/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what about trying `if [ !isMac &&  !isLinux ]; then`  ?\n",
        "created_at": "2012-09-14T13:50:55Z",
        "updated_at": "2012-09-14T13:51:36Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607646",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607646"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607646"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607705",
        "pull_request_review_id": null,
        "id": 1607705,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc3MDU=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "line 43: [: missing ]' for `if [ !isMac && !isLinux ]; then` and unknow OS for  `[[ ...]]`\n",
        "created_at": "2012-09-14T13:56:23Z",
        "updated_at": "2012-09-14T13:56:53Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607705",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607705"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607705"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607783",
        "pull_request_review_id": null,
        "id": 1607783,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc3ODM=",
        "diff_hunk": "@@ -161,217 +79,34 @@ echo \"\"\n echo \"                   Welcome to Yeoman! \"\n echo \"\"\n echo \"\"\n-echo \"We're going to check some dependencies and install them if they're not present\"\n+echo \"We're going to check some dependencies and list all of them.\"\n echo \"\"\n echo \"Stand by...\"\n echo \"\"\n \n-# Some utility parts:\n-# 0. Sudo checks\n-# 1. Grab a temporary folder for us to operate in\n-# 2. Find a tar executable\n-\n-#sudo checks\n-if [ \"$NEEDSUDO\" -eq 1 ]; then\n-  echo \"Please authorize the installer:\"\n-  sudo -v\n-  # sudo keep-alive: gist.github.com/3118588\n-  while true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n-fi\n-\n-# set the temp dir\n-TMP=\"${TMPDIR}\"\n-if [ \"x$TMP\" = \"x\" ]; then\n-  TMP=\"/tmp\"\n-fi\n-TMP=\"${TMP}/yeoman.$$\"\n-rm -rf \"$TMP\" || true\n-mkdir \"$TMP\"\n-if [ $? -ne 0 ]; then\n-  echo \"Failed to mkdir $TMP\" >&2\n-  exit 1\n-fi\n-\n-# Check the user has tar installed.\n-tar=\"${TAR}\"\n-if [ -z \"$tar\" ]; then\n-  tar=\"${npm_config_tar}\"\n-fi\n-if [ -z \"$tar\" ]; then\n-  tar=`which tar 2>&1`\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ] && [ -x \"$tar\" ]; then\n-  echo \"tar=$tar\"\n-  echo \"Good gracious! You've got this version of 'tar' installed:\"\n-  $tar --version\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ]; then\n-  (exit 0)\n-else\n-  echo \"No suitable tar program found.\"\n-  exit 1\n-fi\n-\n-check_or_install_brew_pkg() {\n-  FILELOCATION=$(which $1)\n-  if [ \"$FILELOCATION\" ]; then\n-    echo \"$1 is installed.\"\n-  else\n-    echo \"Installing $1...\"\n-    brew install $1\n-  fi\n-}\n-\n-echo \"\"\n-\n-# where will we return to?\n-BACK=\"$PWD\"\n-cd \"$TMP\"\n \n-#check for and install ruby if needed\n-if [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 1 ]; then\n-  echo \"Installing Ruby\"\n-  sudo apt-get -y install libruby1.9.1 ruby1.9.1 rubygems1.9.1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 2 ]; then\n-  echo \"Installing Ruby\"\n-  sudo yum -y install ruby rubygems\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 4 ]; then\n-  echo \"Installing Ruby\"\n-  sudo zypper install -y ruby rubygems\n-elif [ \"$MAC\" -eq 1 ] && [[ \"$RUBYCHECK\" < 1.8.7 ]]; then\n-  echo \"Error you need to update your ruby version. Yeoman requires 1.8.7 or newer for it's use of compass.\"\n-  COMPASS=0\n-elif [ \"$RUBYFILE\" ]; then\n-  echo \"Ruby is installed.\"\n-else\n-  echo \"Unable to determine ruby configuration, skipping compass install.\"\n-  COMPASS=0\n-fi\n-\n-echo \"\"\n+# Check for the common dependencies.\n+for dep in \"${deps[@]}\"; do\n+  isInstalled $dep && push \"installed\" $dep || push \"not_installed\" $dep\n+done\n \n-#ensure node is installed\n-if [ \"$NODEFILE\" ]; then\n-  echo \"Node.js is installed.\"\n-else\n-  echo \"Installing Node.js\"\n-  if [ \"$MAC\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Mac.\"\n-    curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER.pkg\n-    echo \"Node.js downloaded, starting installer.\"\n-    sudo installer -pkg node-v$NODEVER.pkg -target /\n-  elif [ \"$LINUX\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Linux.\"\n-    MACHINE_TYPE=`uname -m`\n-      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x64.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x64.tar.gz\n-        cd node-v$NODEVER-linux-x64\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      else\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x86.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x86.tar.gz\n-        cd node-v$NODEVER-linux-x86\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      fi\n-  else\n-    echo \"An error occurred installing Node.js\"\n-    exit 1\n-  fi\n-fi\n+# Check for the common dependencies.\n+# Can be  IFS=_ read -r dev ver <<< \"$vdep\"\n+for vdep in \"${vdeps[@]}\"; do\n+  dep=$(echo $vdep | cut -d \"_\" -f1)\n+  ver=$(echo $vdep | cut -d \"_\" -f2)",
        "path": "setup/install.sh",
        "position": 291,
        "original_position": 291,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can we use PE like :  `dep=${vdep%%_*} ver=${vdep#*_}` rahter than cut here?\n",
        "created_at": "2012-09-14T14:03:22Z",
        "updated_at": "2012-09-14T14:03:22Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607783",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607783"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607783"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607873",
        "pull_request_review_id": null,
        "id": 1607873,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc4NzM=",
        "diff_hunk": "@@ -4,126 +4,46 @@\n \n # We're doing a few things here, we welcome your readthrough. As a summary:\n \n-# * Detect Mac or Linux, pick which package manager to use\n-# * On Mac, install homebrew if it's not present\n-# * Then install these: git optipng jpeg-turbo phantomjs\n-# * Make sure Ruby >= 1.8.7 is around, install if not (for Compass)\n-# * Install the latest NodeJS package\n-# * Install Compass\n-# * Download Yeoman zip to a temporary folder\n-# * Install it as a global node module\n+# * Detect Mac or Linux.\n+# * Check and list all the dependencies.\n \n \n-# Note for maintenance: edit the version variables below for easy updating :D\n-NODEVER=0.8.8\n+# Version specific deps.\n+# Fix : Use assosiative array?\n+# Bash v4 only declare -A vdeps=( [\"node\"]=\"0.8.8\" [\"ruby\"]=\"1.8.7\" [\"compass\"]=\"0.12.2\" [\"phantomjs\"]=\"1.6\" ); \n+vdeps=( \"node_0.8.8\" \"ruby_1.8.7\" \"compass_0.12.2\" \"phantomjs_1.6\" )\n \n-# checking OS\n-LINUX=0\n-MAC=0\n-PKGMGR=0\n+# Common Dependencies OS independent.\n+deps=('curl' 'git' 'jpeg-turbo' 'yeoman')\n \n-haveProg() {\n-    [ -x \"$(which $1)\" ]\n-}\n-\n-if haveProg apt-get; then\n-  echo \"You are using apt-get. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=1\n-elif haveProg yum; then\n-  echo \"You are using yum. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=2\n-elif haveProg up2date; then\n-  echo \"You are using up2date. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=3\n-elif haveProg zypper; then\n-  echo \"You are using zypper. I'll assume you have Linux with that.\"\n-  LINUX=1\n-  PKGMGR=4\n-else\n-  MAC=1\n-  PKGMGR=5\n-fi\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  if haveProg clang; then\n-    echo \"Looks like you have the XCode CLI tools. Passed!\"\n-  else\n-    echo \"Looks like you need the XCode CLI Tools for homebrew, chap. Learn about\n-where to install them at the homebrew docs: https://github.com/mxcl/homebrew/wiki/Installation\"\n-    exit 1\n-  fi\n-fi\n-\n-echo \"\"\n-\n-if [ \"$MAC\" -eq 1 ]; then\n-  echo \"Installing on OS X.\"\n+# Mac sepcific dependencies.\n+mac_deps=('brew' 'clang' 'k')\n \n-  # check pre-installed ruby\n-  RUBYCHECK=$(ruby -e 'print RUBY_VERSION')\n+# These gets populated.\n+installed=()\n+not_installed=()\n \n-elif [ \"$LINUX\" -eq 1 ]; then\n-  echo \"Installing on Linux.\"\n-else\n-  echo \"Unable to determine install target OS! We currently support OS X and Linux.\"\n-  exit 1\n-fi\n-\n-# brew installation\n-BREWFILE=$(which brew)\n-\n-if [ \"$MAC\" -eq 1 ] && [ -z \"$BREWFILE\" ]; then\n-  echo \"Installing Homebrew\"\n-  echo -ne '\\n' | curl -fsSkL raw.github.com/mxcl/homebrew/go | ruby\n-  echo \"\"\n-elif [ \"$MAC\" -eq 1 ] && [ \"$BREWFILE\" ]; then\n-  echo \"You've got brew, nice work chap!\"\n-fi\n-\n-# checking baseline dependencies\n-CURLFILE=$(which curl)\n-RUBYFILE=$(which ruby)\n-NODEFILE=$(which node)\n-GEMFILE=$(which gem)\n-COMPASSFILE=$(which compass)\n-COMPASS=1\n+isInstalled() {\n+  [[ -x $(command -v \"$1\") ]]\n+}\n \n-# check for curl\n-if [ -z \"$CURLFILE\" ]; then\n-  echo \"Woah! I need curl to carry on, chap!\"\n-  exit 1\n-fi\n+push() {\n+   if [ $1 == \"installed\" ] ;then \n+    installed+=( \"$2\" ) ;\n+   elif [ $1 == \"not_installed\" ]; then \n+    not_installed+=( \"$2\" ) ; \n+   fi ; \n+}\n \n-# sudo checks, don't try this at home, kids\n-NEEDSUDO=0\n-CHECKADMIN=$( ls -ld /usr/local/bin | grep \"admin\" )\n-CHECKROOT=$( ls -ld /usr/local/bin | grep \"root\" )\n-CHECKLINK=$( ls -ld /usr/local/ | grep \"$USER\" )\n+# OS detection.\n+isMac(){ [[ $(uname -s) == \"Darwin\" ]]; }\n+isLinux(){ [[ $(uname -s) == \"Linux\" ]]; }\n \n-if [ \"$CHECKADMIN\" ]; then\n-  NEEDSUDO=1\n-elif [ \"$CHECKROOT\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$CHECKLINK\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1]; then\n-  NEEDSUDO=1\n-elif [ -z \"$NODEFILE\" ]; then\n-  NEEDSUDO=1\n-elif [ -z \"$COMPASSFILE\" ]; then\n-  NEEDSUDO=1\n+# Exit if not in the expected OS.\n+if ! isMac &&  ! isLinux ; then",
        "path": "setup/install.sh",
        "position": 140,
        "original_position": 142,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "7892c8d5c1242965807965910b6d0d6d8d435126",
        "user": {
            "login": "jorgeramirez",
            "id": 732626,
            "node_id": "MDQ6VXNlcjczMjYyNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/732626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgeramirez",
            "html_url": "https://github.com/jorgeramirez",
            "followers_url": "https://api.github.com/users/jorgeramirez/followers",
            "following_url": "https://api.github.com/users/jorgeramirez/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgeramirez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgeramirez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgeramirez/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgeramirez/orgs",
            "repos_url": "https://api.github.com/users/jorgeramirez/repos",
            "events_url": "https://api.github.com/users/jorgeramirez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgeramirez/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Strange indeed, since `if ! isMac &&  ! isLinux; then` works let's just leave it that way =D\n",
        "created_at": "2012-09-14T14:12:00Z",
        "updated_at": "2012-09-14T14:12:00Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607873",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607873"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1607873"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1595776",
        "pull_request_review_id": null,
        "id": 1595776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTU3NzY=",
        "diff_hunk": "@@ -112,38 +121,27 @@ module.exports = function(grunt) {\n                 var cf = fs.readFileSync(requireConfigPath, 'utf8');\n                 // replace the existing paths with your new paths\n                 var html = cf.replace(' paths: {', 'paths: {\\n' + scripts);\n+\n                 // Write the paths to config\n                 fs.writeFileSync(requireConfigPath, html, 'utf8');\n             }\n-          }\n-\n-          // go through each installed package (via cli.tasks, nopt's remain\n-          // array), figure out the path from bower dependency tree, and copy\n-          // to final location\n-          grunt.cli.tasks.split(':').slice(2).forEach(function(dep) {\n-            var file = deps[dep];\n-            if(!file) { return; }\n-            var ext  = path.extname(file);\n-            var dest = path.join(dir, dep + ext);\n-            grunt.helper('bower:log', 'copying ' + dep, dest);\n-            if(!grunt.file.exists(file)) {\n-              grunt.log.writeln(grunt.helper('bower:template', 'warning-missing', { name: dep }));\n-              grunt.log.writeln(grunt.helper('bower:template', 'warn', {\n-                name: file,\n-                shizzle: 'seems missing. You should bug the author of ' + dep + ' package'\n-              }));\n-              return;\n-            }\n+      });\n+    }\n \n-            grunt.file.copy(file, dest);\n-          });\n+    // Syncronize the components directory with the vendor directory\n+    grunt.helper('bower:sync', dir);\n+    cb();\n \n-          cb();\n-        });\n-    };\n   });\n \n \n+\n+  // Helper to syncronize the Bower components directory with app/scripts/vendor\n+  grunt.registerHelper('bower:sync', function(dir) {\n+    // Clean the vendor directory then sync with the components directory\n+    childprocess.exec('rm -rf ' + dir +' && cp -r components/ ' + dir);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 128,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I have a little concern about this one. My main concern here is to try to avoid OS specifics where we can, with Windows support in mind.\n\nWould it be possible to slightly change this to use rimraf & fstream-ignore. I'm not sure they are designed in a way we can use them here, but our clean / copy task and helpers might also be used here.\n",
        "created_at": "2012-09-13T09:51:00Z",
        "updated_at": "2012-09-14T15:18:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1595776",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1595776"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1595776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1595999",
        "pull_request_review_id": null,
        "id": 1595999,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTU5OTk=",
        "diff_hunk": "@@ -112,38 +121,27 @@ module.exports = function(grunt) {\n                 var cf = fs.readFileSync(requireConfigPath, 'utf8');\n                 // replace the existing paths with your new paths\n                 var html = cf.replace(' paths: {', 'paths: {\\n' + scripts);\n+\n                 // Write the paths to config\n                 fs.writeFileSync(requireConfigPath, html, 'utf8');\n             }\n-          }\n-\n-          // go through each installed package (via cli.tasks, nopt's remain\n-          // array), figure out the path from bower dependency tree, and copy\n-          // to final location\n-          grunt.cli.tasks.split(':').slice(2).forEach(function(dep) {\n-            var file = deps[dep];\n-            if(!file) { return; }\n-            var ext  = path.extname(file);\n-            var dest = path.join(dir, dep + ext);\n-            grunt.helper('bower:log', 'copying ' + dep, dest);\n-            if(!grunt.file.exists(file)) {\n-              grunt.log.writeln(grunt.helper('bower:template', 'warning-missing', { name: dep }));\n-              grunt.log.writeln(grunt.helper('bower:template', 'warn', {\n-                name: file,\n-                shizzle: 'seems missing. You should bug the author of ' + dep + ' package'\n-              }));\n-              return;\n-            }\n+      });\n+    }\n \n-            grunt.file.copy(file, dest);\n-          });\n+    // Syncronize the components directory with the vendor directory\n+    grunt.helper('bower:sync', dir);\n+    cb();\n \n-          cb();\n-        });\n-    };\n   });\n \n \n+\n+  // Helper to syncronize the Bower components directory with app/scripts/vendor\n+  grunt.registerHelper('bower:sync', function(dir) {\n+    // Clean the vendor directory then sync with the components directory\n+    childprocess.exec('rm -rf ' + dir +' && cp -r components/ ' + dir);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 128,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree.\n\n@addyosmani @paulirish I think we should bring in ShellJS as a dep. It lets us do this kind of thing in a cross OS compatible way and in JS. ?\n",
        "created_at": "2012-09-13T10:25:57Z",
        "updated_at": "2012-09-14T15:18:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1595999",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1595999"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1595999"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1596171",
        "pull_request_review_id": null,
        "id": 1596171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTYxNzE=",
        "diff_hunk": "@@ -112,38 +121,27 @@ module.exports = function(grunt) {\n                 var cf = fs.readFileSync(requireConfigPath, 'utf8');\n                 // replace the existing paths with your new paths\n                 var html = cf.replace(' paths: {', 'paths: {\\n' + scripts);\n+\n                 // Write the paths to config\n                 fs.writeFileSync(requireConfigPath, html, 'utf8');\n             }\n-          }\n-\n-          // go through each installed package (via cli.tasks, nopt's remain\n-          // array), figure out the path from bower dependency tree, and copy\n-          // to final location\n-          grunt.cli.tasks.split(':').slice(2).forEach(function(dep) {\n-            var file = deps[dep];\n-            if(!file) { return; }\n-            var ext  = path.extname(file);\n-            var dest = path.join(dir, dep + ext);\n-            grunt.helper('bower:log', 'copying ' + dep, dest);\n-            if(!grunt.file.exists(file)) {\n-              grunt.log.writeln(grunt.helper('bower:template', 'warning-missing', { name: dep }));\n-              grunt.log.writeln(grunt.helper('bower:template', 'warn', {\n-                name: file,\n-                shizzle: 'seems missing. You should bug the author of ' + dep + ' package'\n-              }));\n-              return;\n-            }\n+      });\n+    }\n \n-            grunt.file.copy(file, dest);\n-          });\n+    // Syncronize the components directory with the vendor directory\n+    grunt.helper('bower:sync', dir);\n+    cb();\n \n-          cb();\n-        });\n-    };\n   });\n \n \n+\n+  // Helper to syncronize the Bower components directory with app/scripts/vendor\n+  grunt.registerHelper('bower:sync', function(dir) {\n+    // Clean the vendor directory then sync with the components directory\n+    childprocess.exec('rm -rf ' + dir +' && cp -r components/ ' + dir);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 128,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "addyosmani",
            "id": 110953,
            "node_id": "MDQ6VXNlcjExMDk1Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/110953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addyosmani",
            "html_url": "https://github.com/addyosmani",
            "followers_url": "https://api.github.com/users/addyosmani/followers",
            "following_url": "https://api.github.com/users/addyosmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/addyosmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addyosmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addyosmani/subscriptions",
            "organizations_url": "https://api.github.com/users/addyosmani/orgs",
            "repos_url": "https://api.github.com/users/addyosmani/repos",
            "events_url": "https://api.github.com/users/addyosmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addyosmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Haven't used ShellJS before but agree we should do this in a more cross-OS friendly way. @mklabs thoughts on us using it?\n",
        "created_at": "2012-09-13T10:46:28Z",
        "updated_at": "2012-09-14T15:18:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1596171",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1596171"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1596171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1600277",
        "pull_request_review_id": null,
        "id": 1600277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAyNzc=",
        "diff_hunk": "@@ -112,38 +121,27 @@ module.exports = function(grunt) {\n                 var cf = fs.readFileSync(requireConfigPath, 'utf8');\n                 // replace the existing paths with your new paths\n                 var html = cf.replace(' paths: {', 'paths: {\\n' + scripts);\n+\n                 // Write the paths to config\n                 fs.writeFileSync(requireConfigPath, html, 'utf8');\n             }\n-          }\n-\n-          // go through each installed package (via cli.tasks, nopt's remain\n-          // array), figure out the path from bower dependency tree, and copy\n-          // to final location\n-          grunt.cli.tasks.split(':').slice(2).forEach(function(dep) {\n-            var file = deps[dep];\n-            if(!file) { return; }\n-            var ext  = path.extname(file);\n-            var dest = path.join(dir, dep + ext);\n-            grunt.helper('bower:log', 'copying ' + dep, dest);\n-            if(!grunt.file.exists(file)) {\n-              grunt.log.writeln(grunt.helper('bower:template', 'warning-missing', { name: dep }));\n-              grunt.log.writeln(grunt.helper('bower:template', 'warn', {\n-                name: file,\n-                shizzle: 'seems missing. You should bug the author of ' + dep + ' package'\n-              }));\n-              return;\n-            }\n+      });\n+    }\n \n-            grunt.file.copy(file, dest);\n-          });\n+    // Syncronize the components directory with the vendor directory\n+    grunt.helper('bower:sync', dir);\n+    cb();\n \n-          cb();\n-        });\n-    };\n   });\n \n \n+\n+  // Helper to syncronize the Bower components directory with app/scripts/vendor\n+  grunt.registerHelper('bower:sync', function(dir) {\n+    // Clean the vendor directory then sync with the components directory\n+    childprocess.exec('rm -rf ' + dir +' && cp -r components/ ' + dir);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 128,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm -1 on using ShellJS right now. We are already pulling in  fstream-ignore\nand rimraf and I think it'd be best to continue using those, rather than\nincorporate a different API for accomplishing the same thing... or would it\nbe less maintainable?\n",
        "created_at": "2012-09-13T17:50:52Z",
        "updated_at": "2012-09-14T15:18:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1600277",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1600277"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1600277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605511",
        "pull_request_review_id": null,
        "id": 1605511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1MTE=",
        "diff_hunk": "@@ -112,38 +121,27 @@ module.exports = function(grunt) {\n                 var cf = fs.readFileSync(requireConfigPath, 'utf8');\n                 // replace the existing paths with your new paths\n                 var html = cf.replace(' paths: {', 'paths: {\\n' + scripts);\n+\n                 // Write the paths to config\n                 fs.writeFileSync(requireConfigPath, html, 'utf8');\n             }\n-          }\n-\n-          // go through each installed package (via cli.tasks, nopt's remain\n-          // array), figure out the path from bower dependency tree, and copy\n-          // to final location\n-          grunt.cli.tasks.split(':').slice(2).forEach(function(dep) {\n-            var file = deps[dep];\n-            if(!file) { return; }\n-            var ext  = path.extname(file);\n-            var dest = path.join(dir, dep + ext);\n-            grunt.helper('bower:log', 'copying ' + dep, dest);\n-            if(!grunt.file.exists(file)) {\n-              grunt.log.writeln(grunt.helper('bower:template', 'warning-missing', { name: dep }));\n-              grunt.log.writeln(grunt.helper('bower:template', 'warn', {\n-                name: file,\n-                shizzle: 'seems missing. You should bug the author of ' + dep + ' package'\n-              }));\n-              return;\n-            }\n+      });\n+    }\n \n-            grunt.file.copy(file, dest);\n-          });\n+    // Syncronize the components directory with the vendor directory\n+    grunt.helper('bower:sync', dir);\n+    cb();\n \n-          cb();\n-        });\n-    };\n   });\n \n \n+\n+  // Helper to syncronize the Bower components directory with app/scripts/vendor\n+  grunt.registerHelper('bower:sync', function(dir) {\n+    // Clean the vendor directory then sync with the components directory\n+    childprocess.exec('rm -rf ' + dir +' && cp -r components/ ' + dir);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 128,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I suggested it because I noticed we're using a lot of shell methods, and ShellJS could remove 3 (mkdirp, rimraf, which) dependencies (it has none of its own) and make it even more JS like and succinct to do shell operations.\n\nBut no strong opinions on it, just thought it would make that kind of stuff easier. Maybe just create a ticket and discuss it for the future?\n",
        "created_at": "2012-09-14T08:08:56Z",
        "updated_at": "2012-09-14T15:18:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1605511",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1605511"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1605511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607442",
        "pull_request_review_id": null,
        "id": 1607442,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0NDI=",
        "diff_hunk": "@@ -33,17 +34,22 @@ module.exports = function(grunt) {\n     // figure out the alternate install location, if any\n     var directory = grunt.config('bower.dir');\n \n-    // should we run the yeoman post install step\n-    var install = args[0] === 'install' && directory;\n-\n     // run\n     var cb = this.async();\n     command.line(process.argv)\n       .on('error', grunt.fatal.bind(grunt.fail))\n       .on('data', grunt.log.writeln.bind(grunt.log))\n-      // should probably add other end hooks on commands like uninstall, to\n-      // also remove from directory\n-      .on('end', install ? grunt.helper('bower:copy', directory, cb) : cb);\n+      .on('end', function(){\n+        if(args[0] === 'install' && directory){\n+          grunt.helper('bower:copy', directory, cb);\n+        }else if(args[0] === 'uninstall' && directory){\n+          grunt.helper('bower:sync', directory);\n+        }else if(args[0] === 'update' && directory){\n+          grunt.helper('bower:sync', directory);\n+        }else{\n+          cb();\n+        }",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 32,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\n.on('end', function(){\n        if(args[0] === 'install' && directory){\n          grunt.helper('bower:copy', directory, cb);\n        }else if(args[0] === 'uninstall' || args[0] === 'update' && directory){\n          grunt.helper('bower:sync', directory);\n        }else{\n          cb();\n        }\n      });\n```\n",
        "created_at": "2012-09-14T13:27:47Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607442",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607442"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607442"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607450",
        "pull_request_review_id": null,
        "id": 1607450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0NTA=",
        "diff_hunk": "@@ -33,17 +34,22 @@ module.exports = function(grunt) {\n     // figure out the alternate install location, if any\n     var directory = grunt.config('bower.dir');\n \n-    // should we run the yeoman post install step\n-    var install = args[0] === 'install' && directory;\n-\n     // run\n     var cb = this.async();\n     command.line(process.argv)\n       .on('error', grunt.fatal.bind(grunt.fail))\n       .on('data', grunt.log.writeln.bind(grunt.log))\n-      // should probably add other end hooks on commands like uninstall, to\n-      // also remove from directory\n-      .on('end', install ? grunt.helper('bower:copy', directory, cb) : cb);\n+      .on('end', function(){\n+        if(args[0] === 'install' && directory){\n+          grunt.helper('bower:copy', directory, cb);\n+        }else if(args[0] === 'uninstall' && directory){\n+          grunt.helper('bower:sync', directory);\n+        }else if(args[0] === 'update' && directory){\n+          grunt.helper('bower:sync', directory);",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 29,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Won't work since it missing cb(), exec() is async() and will just be skipped because of missing cb(). Same with the above.\n",
        "created_at": "2012-09-14T13:28:41Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607450",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607450"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607466",
        "pull_request_review_id": null,
        "id": 1607466,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0NjY=",
        "diff_hunk": "@@ -70,14 +76,24 @@ module.exports = function(grunt) {\n       return grunt.fatal('bower:copy helper requires a directory path.');\n     }\n \n-    return function() {\n-      grunt.helper('bower:log', 'copying to', dir);\n+    // Resolve application index\n+    var scripts = '';\n+    var basePath = 'app';\n+    var appIndexPath  = path.resolve(basePath + '/index.html');",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 46,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For Windows support use path.join() inside the resolve() \n",
        "created_at": "2012-09-14T13:30:32Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607466",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607466"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607466"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607482",
        "pull_request_review_id": null,
        "id": 1607482,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0ODI=",
        "diff_hunk": "@@ -70,14 +76,24 @@ module.exports = function(grunt) {\n       return grunt.fatal('bower:copy helper requires a directory path.');\n     }\n \n-    return function() {\n-      grunt.helper('bower:log', 'copying to', dir);\n+    // Resolve application index\n+    var scripts = '';\n+    var basePath = 'app';\n+    var appIndexPath  = path.resolve(basePath + '/index.html');\n+    var indexBuffer = fs.readFileSync(appIndexPath, 'utf8');\n+\n+    // parse data-main for require config path\n+    var hasDataMain = (indexBuffer.match(/data-main=['\"]([^'\"]+)['\"]/));",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 50,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`var hasDataMain = /data-main=['\"]([^'\"]+)['\"]/.test( indexBuffer );`\n",
        "created_at": "2012-09-14T13:32:24Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607482",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607482"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607482"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607484",
        "pull_request_review_id": null,
        "id": 1607484,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0ODQ=",
        "diff_hunk": "@@ -70,14 +76,24 @@ module.exports = function(grunt) {\n       return grunt.fatal('bower:copy helper requires a directory path.');\n     }\n \n-    return function() {\n-      grunt.helper('bower:log', 'copying to', dir);\n+    // Resolve application index\n+    var scripts = '';\n+    var basePath = 'app';\n+    var appIndexPath  = path.resolve(basePath + '/index.html');\n+    var indexBuffer = fs.readFileSync(appIndexPath, 'utf8');\n+\n+    // parse data-main for require config path\n+    var hasDataMain = (indexBuffer.match(/data-main=['\"]([^'\"]+)['\"]/));\n \n-      var scripts = '';\n+    // If data-main is detected..\n+    if(hasDataMain !== null){",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 54,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can then do `if ( hasDataMain ) {`\n",
        "created_at": "2012-09-14T13:32:41Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607484",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607484"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607484"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607493",
        "pull_request_review_id": null,
        "id": 1607493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDc0OTM=",
        "diff_hunk": "@@ -70,14 +76,24 @@ module.exports = function(grunt) {\n       return grunt.fatal('bower:copy helper requires a directory path.');\n     }\n \n-    return function() {\n-      grunt.helper('bower:log', 'copying to', dir);\n+    // Resolve application index\n+    var scripts = '';\n+    var basePath = 'app';\n+    var appIndexPath  = path.resolve(basePath + '/index.html');\n+    var indexBuffer = fs.readFileSync(appIndexPath, 'utf8');\n+\n+    // parse data-main for require config path\n+    var hasDataMain = (indexBuffer.match(/data-main=['\"]([^'\"]+)['\"]/));\n \n-      var scripts = '';\n+    // If data-main is detected..\n+    if(hasDataMain !== null){\n+      \n+      grunt.helper('bower:log', 'updating require.js config');",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 56,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8617dd114ed31f9d9737ba52555ca69bdb41a319",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Updating RequireJS\n",
        "created_at": "2012-09-14T13:33:56Z",
        "updated_at": "2012-09-14T15:18:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607493",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1607493"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1607493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1609194",
        "pull_request_review_id": null,
        "id": 1609194,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDkxOTQ=",
        "diff_hunk": "@@ -161,217 +79,34 @@ echo \"\"\n echo \"                   Welcome to Yeoman! \"\n echo \"\"\n echo \"\"\n-echo \"We're going to check some dependencies and install them if they're not present\"\n+echo \"We're going to check some dependencies and list all of them.\"\n echo \"\"\n echo \"Stand by...\"\n echo \"\"\n \n-# Some utility parts:\n-# 0. Sudo checks\n-# 1. Grab a temporary folder for us to operate in\n-# 2. Find a tar executable\n-\n-#sudo checks\n-if [ \"$NEEDSUDO\" -eq 1 ]; then\n-  echo \"Please authorize the installer:\"\n-  sudo -v\n-  # sudo keep-alive: gist.github.com/3118588\n-  while true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n-fi\n-\n-# set the temp dir\n-TMP=\"${TMPDIR}\"\n-if [ \"x$TMP\" = \"x\" ]; then\n-  TMP=\"/tmp\"\n-fi\n-TMP=\"${TMP}/yeoman.$$\"\n-rm -rf \"$TMP\" || true\n-mkdir \"$TMP\"\n-if [ $? -ne 0 ]; then\n-  echo \"Failed to mkdir $TMP\" >&2\n-  exit 1\n-fi\n-\n-# Check the user has tar installed.\n-tar=\"${TAR}\"\n-if [ -z \"$tar\" ]; then\n-  tar=\"${npm_config_tar}\"\n-fi\n-if [ -z \"$tar\" ]; then\n-  tar=`which tar 2>&1`\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ] && [ -x \"$tar\" ]; then\n-  echo \"tar=$tar\"\n-  echo \"Good gracious! You've got this version of 'tar' installed:\"\n-  $tar --version\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ]; then\n-  (exit 0)\n-else\n-  echo \"No suitable tar program found.\"\n-  exit 1\n-fi\n-\n-check_or_install_brew_pkg() {\n-  FILELOCATION=$(which $1)\n-  if [ \"$FILELOCATION\" ]; then\n-    echo \"$1 is installed.\"\n-  else\n-    echo \"Installing $1...\"\n-    brew install $1\n-  fi\n-}\n-\n-echo \"\"\n-\n-# where will we return to?\n-BACK=\"$PWD\"\n-cd \"$TMP\"\n \n-#check for and install ruby if needed\n-if [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 1 ]; then\n-  echo \"Installing Ruby\"\n-  sudo apt-get -y install libruby1.9.1 ruby1.9.1 rubygems1.9.1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 2 ]; then\n-  echo \"Installing Ruby\"\n-  sudo yum -y install ruby rubygems\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 4 ]; then\n-  echo \"Installing Ruby\"\n-  sudo zypper install -y ruby rubygems\n-elif [ \"$MAC\" -eq 1 ] && [[ \"$RUBYCHECK\" < 1.8.7 ]]; then\n-  echo \"Error you need to update your ruby version. Yeoman requires 1.8.7 or newer for it's use of compass.\"\n-  COMPASS=0\n-elif [ \"$RUBYFILE\" ]; then\n-  echo \"Ruby is installed.\"\n-else\n-  echo \"Unable to determine ruby configuration, skipping compass install.\"\n-  COMPASS=0\n-fi\n-\n-echo \"\"\n+# Check for the common dependencies.\n+for dep in \"${deps[@]}\"; do\n+  isInstalled $dep && push \"installed\" $dep || push \"not_installed\" $dep\n+done\n \n-#ensure node is installed\n-if [ \"$NODEFILE\" ]; then\n-  echo \"Node.js is installed.\"\n-else\n-  echo \"Installing Node.js\"\n-  if [ \"$MAC\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Mac.\"\n-    curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER.pkg\n-    echo \"Node.js downloaded, starting installer.\"\n-    sudo installer -pkg node-v$NODEVER.pkg -target /\n-  elif [ \"$LINUX\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Linux.\"\n-    MACHINE_TYPE=`uname -m`\n-      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x64.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x64.tar.gz\n-        cd node-v$NODEVER-linux-x64\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      else\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x86.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x86.tar.gz\n-        cd node-v$NODEVER-linux-x86\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      fi\n-  else\n-    echo \"An error occurred installing Node.js\"\n-    exit 1\n-  fi\n-fi\n+# Check for the common dependencies.\n+# Can be  IFS=_ read -r dev ver <<< \"$vdep\"\n+for vdep in \"${vdeps[@]}\"; do\n+  dep=$(echo $vdep | cut -d \"_\" -f1)\n+  ver=$(echo $vdep | cut -d \"_\" -f2)",
        "path": "setup/install.sh",
        "position": 291,
        "original_position": 291,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it seems less readable the way you propose, i'd keep as is\n",
        "created_at": "2012-09-14T16:21:26Z",
        "updated_at": "2012-09-14T16:21:26Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1609194",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1609194"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1609194"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1609245",
        "pull_request_review_id": null,
        "id": 1609245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDkyNDU=",
        "diff_hunk": "@@ -161,217 +79,34 @@ echo \"\"\n echo \"                   Welcome to Yeoman! \"\n echo \"\"\n echo \"\"\n-echo \"We're going to check some dependencies and install them if they're not present\"\n+echo \"We're going to check some dependencies and list all of them.\"\n echo \"\"\n echo \"Stand by...\"\n echo \"\"\n \n-# Some utility parts:\n-# 0. Sudo checks\n-# 1. Grab a temporary folder for us to operate in\n-# 2. Find a tar executable\n-\n-#sudo checks\n-if [ \"$NEEDSUDO\" -eq 1 ]; then\n-  echo \"Please authorize the installer:\"\n-  sudo -v\n-  # sudo keep-alive: gist.github.com/3118588\n-  while true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n-fi\n-\n-# set the temp dir\n-TMP=\"${TMPDIR}\"\n-if [ \"x$TMP\" = \"x\" ]; then\n-  TMP=\"/tmp\"\n-fi\n-TMP=\"${TMP}/yeoman.$$\"\n-rm -rf \"$TMP\" || true\n-mkdir \"$TMP\"\n-if [ $? -ne 0 ]; then\n-  echo \"Failed to mkdir $TMP\" >&2\n-  exit 1\n-fi\n-\n-# Check the user has tar installed.\n-tar=\"${TAR}\"\n-if [ -z \"$tar\" ]; then\n-  tar=\"${npm_config_tar}\"\n-fi\n-if [ -z \"$tar\" ]; then\n-  tar=`which tar 2>&1`\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ] && [ -x \"$tar\" ]; then\n-  echo \"tar=$tar\"\n-  echo \"Good gracious! You've got this version of 'tar' installed:\"\n-  $tar --version\n-  ret=$?\n-fi\n-if [ $ret -eq 0 ]; then\n-  (exit 0)\n-else\n-  echo \"No suitable tar program found.\"\n-  exit 1\n-fi\n-\n-check_or_install_brew_pkg() {\n-  FILELOCATION=$(which $1)\n-  if [ \"$FILELOCATION\" ]; then\n-    echo \"$1 is installed.\"\n-  else\n-    echo \"Installing $1...\"\n-    brew install $1\n-  fi\n-}\n-\n-echo \"\"\n-\n-# where will we return to?\n-BACK=\"$PWD\"\n-cd \"$TMP\"\n \n-#check for and install ruby if needed\n-if [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 1 ]; then\n-  echo \"Installing Ruby\"\n-  sudo apt-get -y install libruby1.9.1 ruby1.9.1 rubygems1.9.1\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 2 ]; then\n-  echo \"Installing Ruby\"\n-  sudo yum -y install ruby rubygems\n-elif [ -z \"$RUBYFILE\" ] && [ \"$LINUX\" -eq 1 ] && [ \"$PKGMGR\" -eq 4 ]; then\n-  echo \"Installing Ruby\"\n-  sudo zypper install -y ruby rubygems\n-elif [ \"$MAC\" -eq 1 ] && [[ \"$RUBYCHECK\" < 1.8.7 ]]; then\n-  echo \"Error you need to update your ruby version. Yeoman requires 1.8.7 or newer for it's use of compass.\"\n-  COMPASS=0\n-elif [ \"$RUBYFILE\" ]; then\n-  echo \"Ruby is installed.\"\n-else\n-  echo \"Unable to determine ruby configuration, skipping compass install.\"\n-  COMPASS=0\n-fi\n-\n-echo \"\"\n+# Check for the common dependencies.\n+for dep in \"${deps[@]}\"; do\n+  isInstalled $dep && push \"installed\" $dep || push \"not_installed\" $dep\n+done\n \n-#ensure node is installed\n-if [ \"$NODEFILE\" ]; then\n-  echo \"Node.js is installed.\"\n-else\n-  echo \"Installing Node.js\"\n-  if [ \"$MAC\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Mac.\"\n-    curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER.pkg\n-    echo \"Node.js downloaded, starting installer.\"\n-    sudo installer -pkg node-v$NODEVER.pkg -target /\n-  elif [ \"$LINUX\" -eq 1 ]; then\n-    echo \"Downloading Node.js for Linux.\"\n-    MACHINE_TYPE=`uname -m`\n-      if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x64.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x64.tar.gz\n-        cd node-v$NODEVER-linux-x64\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      else\n-        curl -O http://nodejs.org/dist/v$NODEVER/node-v$NODEVER-linux-x86.tar.gz\n-        echo \"installing Node.js for linux.\"\n-        tar xvfz node-v$NODEVER-linux-x86.tar.gz\n-        cd node-v$NODEVER-linux-x86\n-        sudo cp -r * /usr/local/\n-        cd ..\n-      fi\n-  else\n-    echo \"An error occurred installing Node.js\"\n-    exit 1\n-  fi\n-fi\n+# Check for the common dependencies.\n+# Can be  IFS=_ read -r dev ver <<< \"$vdep\"\n+for vdep in \"${vdeps[@]}\"; do\n+  dep=$(echo $vdep | cut -d \"_\" -f1)\n+  ver=$(echo $vdep | cut -d \"_\" -f2)",
        "path": "setup/install.sh",
        "position": 291,
        "original_position": 291,
        "commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "original_commit_id": "dc83fd35d428839fbe64c1928565e07d9425115b",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, I agree readabilty matter! \n",
        "created_at": "2012-09-14T16:26:41Z",
        "updated_at": "2012-09-14T16:26:41Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/423#discussion_r1609245",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/423",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1609245"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/423#discussion_r1609245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/423"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1610331",
        "pull_request_review_id": null,
        "id": 1610331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTAzMzE=",
        "diff_hunk": "@@ -3,6 +3,9 @@ var path     = require('path');\n var fs       = require('fs');\n var bower    = require('bower');\n var template = require('bower/lib/util/template');\n+var shelljs  = require('shelljs');\n+var rimraf   = require('rimraf');",
        "path": "cli/tasks/bower.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not needed, use shelljs\n",
        "created_at": "2012-09-14T18:26:10Z",
        "updated_at": "2012-09-14T18:26:10Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1610331",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1610331"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1610331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1610341",
        "pull_request_review_id": null,
        "id": 1610341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTAzNDE=",
        "diff_hunk": "@@ -70,14 +76,24 @@ module.exports = function(grunt) {\n       return grunt.fatal('bower:copy helper requires a directory path.');\n     }\n \n-    return function() {\n-      grunt.helper('bower:log', 'copying to', dir);\n+    // Resolve application index\n+    var scripts = '';\n+    var basePath = 'app';\n+    var appIndexPath  = path.resolve(path.join(basePath + '/index.html'));",
        "path": "cli/tasks/bower.js",
        "position": 46,
        "original_position": 46,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The point of join is to not use slashes, since they differ between platforms, so remove the `/`\n",
        "created_at": "2012-09-14T18:26:51Z",
        "updated_at": "2012-09-14T18:26:51Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1610341",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1610341"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1610341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1611040",
        "pull_request_review_id": null,
        "id": 1611040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTEwNDA=",
        "diff_hunk": "@@ -3,6 +3,9 @@ var path     = require('path');\n var fs       = require('fs');\n var bower    = require('bower');\n var template = require('bower/lib/util/template');\n+var shelljs  = require('shelljs');\n+var rimraf   = require('rimraf');",
        "path": "cli/tasks/bower.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "original_commit_id": "8195435299f4deaa2b0fb2a298b8f1b4cd19dd96",
        "user": {
            "login": "addyosmani",
            "id": 110953,
            "node_id": "MDQ6VXNlcjExMDk1Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/110953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addyosmani",
            "html_url": "https://github.com/addyosmani",
            "followers_url": "https://api.github.com/users/addyosmani/followers",
            "following_url": "https://api.github.com/users/addyosmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/addyosmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addyosmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addyosmani/subscriptions",
            "organizations_url": "https://api.github.com/users/addyosmani/orgs",
            "repos_url": "https://api.github.com/users/addyosmani/repos",
            "events_url": "https://api.github.com/users/addyosmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addyosmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "roger. Will get rid of it.\n",
        "created_at": "2012-09-14T19:35:46Z",
        "updated_at": "2012-09-14T19:35:46Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/408#discussion_r1611040",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/408",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1611040"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/408#discussion_r1611040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/408"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1616790",
        "pull_request_review_id": null,
        "id": 1616790,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTY3OTA=",
        "diff_hunk": "@@ -262,6 +262,48 @@ module.exports = function(grunt) {\n     grunt.task.run('watch');\n   });\n \n+\n+  // This adds mod rewrite functionality to the server by\n+  // setting an array of mod rewrite like strings in Gruntfile.js, e.g.:\n+  //\n+  // server: {\n+  //   rewrite: [\n+  //     '^posts/(.*)$ / [L]',\n+  //     '^users/(.*)$ / [L]'\n+  //   ]\n+  // }\n+  //\n+  // This is typically useful for serving single page apps which use\n+  // push-state, so that requests for application urls get redirected\n+  // to the index.html or equivalent file.\n+  //\n+  // Currently supports the [L] terminating flag\n+  \n+  var rewriteMiddleware = function(rules) {\n+    rules = (rules || []).map(function(rule) {\n+      var parts = rule.split(' '),\n+          regex = parts[0],\n+          replace = parts[1],\n+          last = !!parts[2];\n+      \n+      return {\n+        regex: new RegExp(regex),\n+        replace: replace,\n+        last: last",
        "path": "cli/tasks/server.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "2d1ca389ada7eb838e214551478cbf7dcf4a28af",
        "original_commit_id": "2d1ca389ada7eb838e214551478cbf7dcf4a28af",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` js\nvar parts = rule.split(' ');\n\n      return {\n        regex: new RegExp(parts[0]),\n        replace: parts[1],\n        last: !!parts[2]\n      };\n```\n",
        "created_at": "2012-09-17T08:51:44Z",
        "updated_at": "2012-09-17T08:51:44Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/469#discussion_r1616790",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/469",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1616790"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/469#discussion_r1616790"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/469"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1616440",
        "pull_request_review_id": null,
        "id": 1616440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTY0NDA=",
        "diff_hunk": "@@ -3,6 +3,7 @@\n \n *.min.css\n #*.min.js\n+*.pyc",
        "path": ".gitignore",
        "position": null,
        "original_position": 4,
        "commit_id": "05d9f2559c16be3da647dd30cc3d39250d94f764",
        "original_commit_id": "0cabca74860db1e6c43ac916e858bbba47aa2bd9",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be in your global gitignore, not here.\n",
        "created_at": "2012-09-17T07:43:19Z",
        "updated_at": "2012-09-17T22:04:05Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/482#discussion_r1616440",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/482",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1616440"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/482#discussion_r1616440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/482"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1618245",
        "pull_request_review_id": null,
        "id": 1618245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTgyNDU=",
        "diff_hunk": "@@ -3,6 +3,7 @@\n \n *.min.css\n #*.min.js\n+*.pyc",
        "path": ".gitignore",
        "position": null,
        "original_position": 4,
        "commit_id": "05d9f2559c16be3da647dd30cc3d39250d94f764",
        "original_commit_id": "0cabca74860db1e6c43ac916e858bbba47aa2bd9",
        "user": {
            "login": "gnuwilliam",
            "id": 535794,
            "node_id": "MDQ6VXNlcjUzNTc5NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/535794?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnuwilliam",
            "html_url": "https://github.com/gnuwilliam",
            "followers_url": "https://api.github.com/users/gnuwilliam/followers",
            "following_url": "https://api.github.com/users/gnuwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnuwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnuwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnuwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/gnuwilliam/orgs",
            "repos_url": "https://api.github.com/users/gnuwilliam/repos",
            "events_url": "https://api.github.com/users/gnuwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnuwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Agreed! My bad.\n",
        "created_at": "2012-09-17T13:09:18Z",
        "updated_at": "2012-09-17T22:04:05Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/482#discussion_r1618245",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/482",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1618245"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/482#discussion_r1618245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/482"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1622294",
        "pull_request_review_id": null,
        "id": 1622294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjIyOTQ=",
        "diff_hunk": "@@ -3,4 +3,8 @@ node_js:\n   - 0.8\n before_install: cd cli\n notifications:\n-  irc: irc.freenode.org#yeoman\n+  irc:\n+    channels:\n+      - \"irc.freenode.org#yeoman\"\n+    template:\n+      - \"%{repository} (%{commit}) : %{build_number}: %{message} -- %{build_url}\"",
        "path": ".travis.yml",
        "position": null,
        "original_position": 9,
        "commit_id": "23bcdbab06df52a3ba7e9abcb17652255c02d6b7",
        "original_commit_id": "394b5504a604d06f36657a5434d60386086dc0e5",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`}) :` -> `}):`\n",
        "created_at": "2012-09-17T19:44:52Z",
        "updated_at": "2012-09-17T22:11:43Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/489#discussion_r1622294",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/489",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1622294"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/489#discussion_r1622294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/489"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625802",
        "pull_request_review_id": null,
        "id": 1625802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjU4MDI=",
        "diff_hunk": "@@ -194,14 +193,14 @@ audit() {\n     desc_print \"On Mac,\" \"brew install optipng\" \"will sort you out.\"\n   [ \"$yeoman\" -eq 0 ] && \\\n     sad_print \"yeoman\"  \"\" && \\\n-    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will sort you out. You may need sudo.\"\n+    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will correct this atrocity. You may need sudo.\"\n \n \n \n   echo \"\"\n-  echo \"Help me out and install anything that's missing above. Additional help at http://goo.gl/XoyWI \"\n+  echo \"Area's i've not scored with a tick indicate I could not find this item. You will need to correct these before I can be of service to you.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 72,
        "commit_id": "0ac0860a641a7fe1a98a9b509ccbad8bc48d476a",
        "original_commit_id": "5ac090091f5f672a5c8966b952fd904118c767e9",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "capital `i` please, sir\n",
        "created_at": "2012-09-18T04:50:37Z",
        "updated_at": "2012-09-19T02:59:47Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625802",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/497",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625802"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/497"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625805",
        "pull_request_review_id": null,
        "id": 1625805,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjU4MDU=",
        "diff_hunk": "@@ -194,14 +193,14 @@ audit() {\n     desc_print \"On Mac,\" \"brew install optipng\" \"will sort you out.\"\n   [ \"$yeoman\" -eq 0 ] && \\\n     sad_print \"yeoman\"  \"\" && \\\n-    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will sort you out. You may need sudo.\"\n+    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will correct this atrocity. You may need sudo.\"\n \n \n \n   echo \"\"\n-  echo \"Help me out and install anything that's missing above. Additional help at http://goo.gl/XoyWI \"",
        "path": "setup/install.sh",
        "position": 71,
        "original_position": 71,
        "commit_id": "0ac0860a641a7fe1a98a9b509ccbad8bc48d476a",
        "original_commit_id": "5ac090091f5f672a5c8966b952fd904118c767e9",
        "user": {
            "login": "paulirish",
            "id": 39191,
            "node_id": "MDQ6VXNlcjM5MTkx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulirish",
            "html_url": "https://github.com/paulirish",
            "followers_url": "https://api.github.com/users/paulirish/followers",
            "following_url": "https://api.github.com/users/paulirish/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulirish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulirish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulirish/subscriptions",
            "organizations_url": "https://api.github.com/users/paulirish/orgs",
            "repos_url": "https://api.github.com/users/paulirish/repos",
            "events_url": "https://api.github.com/users/paulirish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulirish/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's keep the URL in the message, if we can.\n",
        "created_at": "2012-09-18T04:52:10Z",
        "updated_at": "2012-09-19T02:59:47Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625805",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/497",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625805"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625805"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/497"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625807",
        "pull_request_review_id": null,
        "id": 1625807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjU4MDc=",
        "diff_hunk": "@@ -194,14 +193,14 @@ audit() {\n     desc_print \"On Mac,\" \"brew install optipng\" \"will sort you out.\"\n   [ \"$yeoman\" -eq 0 ] && \\\n     sad_print \"yeoman\"  \"\" && \\\n-    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will sort you out. You may need sudo.\"\n+    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will correct this atrocity. You may need sudo.\"\n \n \n \n   echo \"\"\n-  echo \"Help me out and install anything that's missing above. Additional help at http://goo.gl/XoyWI \"",
        "path": "setup/install.sh",
        "position": 71,
        "original_position": 71,
        "commit_id": "0ac0860a641a7fe1a98a9b509ccbad8bc48d476a",
        "original_commit_id": "5ac090091f5f672a5c8966b952fd904118c767e9",
        "user": {
            "login": "jamesotron",
            "id": 59449,
            "node_id": "MDQ6VXNlcjU5NDQ5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/59449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesotron",
            "html_url": "https://github.com/jamesotron",
            "followers_url": "https://api.github.com/users/jamesotron/followers",
            "following_url": "https://api.github.com/users/jamesotron/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesotron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesotron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesotron/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesotron/orgs",
            "repos_url": "https://api.github.com/users/jamesotron/repos",
            "events_url": "https://api.github.com/users/jamesotron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesotron/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's set up some short url redirects from yeoman.io, eh?\n",
        "created_at": "2012-09-18T04:53:52Z",
        "updated_at": "2012-09-19T02:59:47Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625807",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/497",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1625807"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/497#discussion_r1625807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/497"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1626902",
        "pull_request_review_id": null,
        "id": 1626902,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjY5MDI=",
        "diff_hunk": "@@ -194,14 +193,14 @@ audit() {\n     desc_print \"On Mac,\" \"brew install optipng\" \"will sort you out.\"\n   [ \"$yeoman\" -eq 0 ] && \\\n     sad_print \"yeoman\"  \"\" && \\\n-    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will sort you out. You may need sudo.\"\n+    desc_print \"You're missing yeoman!\" \"npm install -g yeoman\" \"will correct this atrocity. You may need sudo.\"\n \n \n \n   echo \"\"\n-  echo \"Help me out and install anything that's missing above. Additional help at http://goo.gl/XoyWI \"\n+  echo \"Area's i've not scored with a tick indicate I could not find this item. You will need to correct these before I can be of service to you.\"",
        "path": "setup/install.sh",
        "position": null,
        "original_position": 72,
        "commit_id": "0ac0860a641a7fe1a98a9b509ccbad8bc48d476a",
        "original_commit_id": "5ac090091f5f672a5c8966b952fd904118c767e9",
        "user": {
            "login": "callumlocke",
            "id": 250617,
            "node_id": "MDQ6VXNlcjI1MDYxNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/250617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/callumlocke",
            "html_url": "https://github.com/callumlocke",
            "followers_url": "https://api.github.com/users/callumlocke/followers",
            "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
            "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
            "organizations_url": "https://api.github.com/users/callumlocke/orgs",
            "repos_url": "https://api.github.com/users/callumlocke/repos",
            "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/callumlocke/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "and remove the apostrophe in `Areas` while you're at it ;)\n",
        "created_at": "2012-09-18T09:03:43Z",
        "updated_at": "2012-09-19T02:59:47Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/497#discussion_r1626902",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/497",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1626902"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/497#discussion_r1626902"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/497"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1667650",
        "pull_request_review_id": null,
        "id": 1667650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Njc2NTA=",
        "diff_hunk": "@@ -55,7 +55,8 @@\n     \"prompt\": \"~0.1.12\",\n     \"colors\": \"~0.6.0\",\n     \"grunt-mocha\": \"~0.1.3\",\n-    \"es6-collections\": \">=0.2.0\"\n+    \"es6-collections\": \">=0.2.0\",\n+    \"grunt-coffee\": \"0.0.6\"",
        "path": "cli/package.json",
        "position": null,
        "original_position": 6,
        "commit_id": "21f317c7d332499a9e9e9d16ba7d0afc17de9abc",
        "original_commit_id": "750c9fa8fbfd62811e80f5d5ca64e0c7b46adf5c",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`\"grunt-contrib-coffee\": \"~0.2.0\"`\n",
        "created_at": "2012-09-22T13:28:43Z",
        "updated_at": "2012-09-24T18:13:53Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/522#discussion_r1667650",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/522",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1667650"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/522#discussion_r1667650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/522"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1736795",
        "pull_request_review_id": null,
        "id": 1736795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzY3OTU=",
        "diff_hunk": "@@ -364,8 +364,10 @@ module.exports = function(grunt) {\n       var dirname = path.dirname(src);\n \n       // XXX files won't change, the filepath should filter the original list\n-      // of cached files.\n-      var filepath = grunt.file.expand(path.join('**/*') + basename)[0];\n+      // of cached files (we need to treat the filename collision -- i.e. 2 files with same names\n+      // in different subdirectories)\n+      var filepaths = grunt.file.expand(path.join('**/*') + basename);\n+      var filepath = filepaths.filter(function(f) { return(dirname == path.dirname(f));});",
        "path": "cli/tasks/usemin.js",
        "position": null,
        "original_position": 18,
        "commit_id": "a88b0febabeff1acefc023ec1c3ead8be708a0c5",
        "original_commit_id": "e41faba96a3acf0dfceada00927676f7b8869dc4",
        "user": {
            "login": "mklabs",
            "id": 113832,
            "node_id": "MDQ6VXNlcjExMzgzMg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/113832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mklabs",
            "html_url": "https://github.com/mklabs",
            "followers_url": "https://api.github.com/users/mklabs/followers",
            "following_url": "https://api.github.com/users/mklabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/mklabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mklabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mklabs/subscriptions",
            "organizations_url": "https://api.github.com/users/mklabs/orgs",
            "repos_url": "https://api.github.com/users/mklabs/repos",
            "events_url": "https://api.github.com/users/mklabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mklabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why wrapping `return(dirname == path.dirname(f));` into parenthesis?\n\nAlso, might seem silly because you don't compare against falsy value but could you do a strict comparison instead `===` ?\n",
        "created_at": "2012-10-02T09:10:01Z",
        "updated_at": "2012-10-05T21:18:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/563#discussion_r1736795",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/563",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1736795"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/563#discussion_r1736795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/563"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1736802",
        "pull_request_review_id": null,
        "id": 1736802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzY4MDI=",
        "diff_hunk": "@@ -364,8 +364,10 @@ module.exports = function(grunt) {\n       var dirname = path.dirname(src);\n \n       // XXX files won't change, the filepath should filter the original list\n-      // of cached files.\n-      var filepath = grunt.file.expand(path.join('**/*') + basename)[0];\n+      // of cached files (we need to treat the filename collision -- i.e. 2 files with same names\n+      // in different subdirectories)\n+      var filepaths = grunt.file.expand(path.join('**/*') + basename);\n+      var filepath = filepaths.filter(function(f) { return(dirname == path.dirname(f));});",
        "path": "cli/tasks/usemin.js",
        "position": null,
        "original_position": 18,
        "commit_id": "a88b0febabeff1acefc023ec1c3ead8be708a0c5",
        "original_commit_id": "e41faba96a3acf0dfceada00927676f7b8869dc4",
        "user": {
            "login": "sleeper",
            "id": 30812,
            "node_id": "MDQ6VXNlcjMwODEy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleeper",
            "html_url": "https://github.com/sleeper",
            "followers_url": "https://api.github.com/users/sleeper/followers",
            "following_url": "https://api.github.com/users/sleeper/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleeper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleeper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleeper/subscriptions",
            "organizations_url": "https://api.github.com/users/sleeper/orgs",
            "repos_url": "https://api.github.com/users/sleeper/repos",
            "events_url": "https://api.github.com/users/sleeper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleeper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK, will do it as soon as possible ... My learning of Javascript ;)\n",
        "created_at": "2012-10-02T09:11:14Z",
        "updated_at": "2012-10-05T21:18:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/563#discussion_r1736802",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/563",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/1736802"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/563#discussion_r1736802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/563"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2171438",
        "pull_request_review_id": null,
        "id": 2171438,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE0Mzg=",
        "diff_hunk": "@@ -7,12 +7,9 @@ var fs = require('fs'),\n   colors = require('colors'),\n   connect = require('connect'),\n   WebSocket = require('faye-websocket'),\n-  open = require('open'),\n-  WeakMap = require('es6-collections').WeakMap;",
        "path": "cli/tasks/server.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "original_commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do you remove WeakMap?\n",
        "created_at": "2012-11-19T19:24:29Z",
        "updated_at": "2012-11-19T19:24:29Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/722#discussion_r2171438",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/722",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2171438"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/722#discussion_r2171438"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/722"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2171723",
        "pull_request_review_id": null,
        "id": 2171723,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE3MjM=",
        "diff_hunk": "@@ -7,12 +7,9 @@ var fs = require('fs'),\n   colors = require('colors'),\n   connect = require('connect'),\n   WebSocket = require('faye-websocket'),\n-  open = require('open'),\n-  WeakMap = require('es6-collections').WeakMap;",
        "path": "cli/tasks/server.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "original_commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "user": {
            "login": "mazerte",
            "id": 236866,
            "node_id": "MDQ6VXNlcjIzNjg2Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/236866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mazerte",
            "html_url": "https://github.com/mazerte",
            "followers_url": "https://api.github.com/users/mazerte/followers",
            "following_url": "https://api.github.com/users/mazerte/following{/other_user}",
            "gists_url": "https://api.github.com/users/mazerte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mazerte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mazerte/subscriptions",
            "organizations_url": "https://api.github.com/users/mazerte/orgs",
            "repos_url": "https://api.github.com/users/mazerte/repos",
            "events_url": "https://api.github.com/users/mazerte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mazerte/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Because the WeakMap store juste one instance of client socket.\nI don't understand exactly why you use it. But I can commit a new version with the WeakMap.\n",
        "created_at": "2012-11-19T19:45:28Z",
        "updated_at": "2012-11-19T19:45:28Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/722#discussion_r2171723",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/722",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2171723"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/722#discussion_r2171723"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/722"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2172195",
        "pull_request_review_id": null,
        "id": 2172195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzIxOTU=",
        "diff_hunk": "@@ -7,12 +7,9 @@ var fs = require('fs'),\n   colors = require('colors'),\n   connect = require('connect'),\n   WebSocket = require('faye-websocket'),\n-  open = require('open'),\n-  WeakMap = require('es6-collections').WeakMap;",
        "path": "cli/tasks/server.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "original_commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "k, hmm can't remember. It was @rwldrn that added it.\n",
        "created_at": "2012-11-19T20:24:06Z",
        "updated_at": "2012-11-19T20:24:06Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/722#discussion_r2172195",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/722",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2172195"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/722#discussion_r2172195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/722"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2173836",
        "pull_request_review_id": null,
        "id": 2173836,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzM4MzY=",
        "diff_hunk": "@@ -33,135 +33,16 @@ module.exports = function(grunt) {\n     }\n \n     // figure out the alternate install location, if any\n-    var directory = grunt.config('bower.dir');\n+    // var directory = grunt.config('bower.dir');",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 5,
        "commit_id": "497a6b6e8bb5aae239b0334fcb3cd4635cbf8c9e",
        "original_commit_id": "0f97823ecb3484d212d5ddbcf3154f7d52169382",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "?\n",
        "created_at": "2012-11-19T22:28:33Z",
        "updated_at": "2012-11-20T04:48:50Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/726#discussion_r2173836",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/726",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2173836"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/726#discussion_r2173836"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/726"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2176742",
        "pull_request_review_id": null,
        "id": 2176742,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzY3NDI=",
        "diff_hunk": "@@ -33,135 +33,16 @@ module.exports = function(grunt) {\n     }\n \n     // figure out the alternate install location, if any\n-    var directory = grunt.config('bower.dir');\n+    // var directory = grunt.config('bower.dir');",
        "path": "cli/tasks/bower.js",
        "position": null,
        "original_position": 5,
        "commit_id": "497a6b6e8bb5aae239b0334fcb3cd4635cbf8c9e",
        "original_commit_id": "0f97823ecb3484d212d5ddbcf3154f7d52169382",
        "user": {
            "login": "sleeper",
            "id": 30812,
            "node_id": "MDQ6VXNlcjMwODEy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/30812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sleeper",
            "html_url": "https://github.com/sleeper",
            "followers_url": "https://api.github.com/users/sleeper/followers",
            "following_url": "https://api.github.com/users/sleeper/following{/other_user}",
            "gists_url": "https://api.github.com/users/sleeper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sleeper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sleeper/subscriptions",
            "organizations_url": "https://api.github.com/users/sleeper/orgs",
            "repos_url": "https://api.github.com/users/sleeper/repos",
            "events_url": "https://api.github.com/users/sleeper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sleeper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Me bummer ! ;)\n",
        "created_at": "2012-11-20T04:49:05Z",
        "updated_at": "2012-11-20T04:49:05Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/726#discussion_r2176742",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/726",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2176742"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/726#discussion_r2176742"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/726"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2258974",
        "pull_request_review_id": null,
        "id": 2258974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTg5NzQ=",
        "diff_hunk": "@@ -7,12 +7,9 @@ var fs = require('fs'),\n   colors = require('colors'),\n   connect = require('connect'),\n   WebSocket = require('faye-websocket'),\n-  open = require('open'),\n-  WeakMap = require('es6-collections').WeakMap;",
        "path": "cli/tasks/server.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "original_commit_id": "9eb8025cce1796fd132d3d545623c6234c2d57ec",
        "user": {
            "login": "mazerte",
            "id": 236866,
            "node_id": "MDQ6VXNlcjIzNjg2Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/236866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mazerte",
            "html_url": "https://github.com/mazerte",
            "followers_url": "https://api.github.com/users/mazerte/followers",
            "following_url": "https://api.github.com/users/mazerte/following{/other_user}",
            "gists_url": "https://api.github.com/users/mazerte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mazerte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mazerte/subscriptions",
            "organizations_url": "https://api.github.com/users/mazerte/orgs",
            "repos_url": "https://api.github.com/users/mazerte/repos",
            "events_url": "https://api.github.com/users/mazerte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mazerte/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You want some code ?\n",
        "created_at": "2012-11-28T23:19:30Z",
        "updated_at": "2012-11-28T23:19:30Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/722#discussion_r2258974",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/722",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2258974"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/722#discussion_r2258974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/722"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2498691",
        "pull_request_review_id": null,
        "id": 2498691,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTg2OTE=",
        "diff_hunk": "@@ -262,6 +262,48 @@ module.exports = function(grunt) {\n     grunt.task.run('watch');\n   });\n \n+\n+  // This adds mod rewrite functionality to the server by\n+  // setting an array of mod rewrite like strings in Gruntfile.js, e.g.:\n+  //\n+  // server: {\n+  //   rewrite: [\n+  //     '^posts/(.*)$ / [L]',\n+  //     '^users/(.*)$ / [L]'\n+  //   ]\n+  // }\n+  //\n+  // This is typically useful for serving single page apps which use\n+  // push-state, so that requests for application urls get redirected\n+  // to the index.html or equivalent file.\n+  //\n+  // Currently supports the [L] terminating flag\n+  \n+  var rewriteMiddleware = function(rules) {\n+    rules = (rules || []).map(function(rule) {\n+      var parts = rule.split(' '),\n+          regex = parts[0],\n+          replace = parts[1],\n+          last = !!parts[2];\n+      \n+      return {\n+        regex: new RegExp(regex),\n+        replace: replace,\n+        last: last",
        "path": "cli/tasks/server.js",
        "position": 31,
        "original_position": 31,
        "commit_id": "2d1ca389ada7eb838e214551478cbf7dcf4a28af",
        "original_commit_id": "2d1ca389ada7eb838e214551478cbf7dcf4a28af",
        "user": {
            "login": "tinganho",
            "id": 1324476,
            "node_id": "MDQ6VXNlcjEzMjQ0NzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1324476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tinganho",
            "html_url": "https://github.com/tinganho",
            "followers_url": "https://api.github.com/users/tinganho/followers",
            "following_url": "https://api.github.com/users/tinganho/following{/other_user}",
            "gists_url": "https://api.github.com/users/tinganho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tinganho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tinganho/subscriptions",
            "organizations_url": "https://api.github.com/users/tinganho/orgs",
            "repos_url": "https://api.github.com/users/tinganho/repos",
            "events_url": "https://api.github.com/users/tinganho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tinganho/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe support more than one space and tab.\n\n``` javascript\nvar parts =  rule.replace(/\\s+|\\t+/g, ' ').split(' ');\n```\n",
        "created_at": "2012-12-24T17:12:47Z",
        "updated_at": "2012-12-24T17:20:41Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/469#discussion_r2498691",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/469",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/2498691"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/469#discussion_r2498691"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/469"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3106170",
        "pull_request_review_id": null,
        "id": 3106170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDYxNzA=",
        "diff_hunk": "@@ -30,6 +30,7 @@ Install Yeoman@0.9.6 and Grunt\n ```\n npm install -g yeoman\n npm install -g grunt",
        "path": "readme.md",
        "position": null,
        "original_position": 3,
        "commit_id": "1b96e745927f13bd167f431b0fc9381ea986eda2",
        "original_commit_id": "28733ebe980cc9d8c26f915eb122cd7f8e02989e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be a dep in package.json and not here.\n",
        "created_at": "2013-02-21T20:52:53Z",
        "updated_at": "2013-03-09T13:51:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/941#discussion_r3106170",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/941",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3106170"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/941#discussion_r3106170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/941"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3119949",
        "pull_request_review_id": null,
        "id": 3119949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTk5NDk=",
        "diff_hunk": "@@ -30,6 +30,7 @@ Install Yeoman@0.9.6 and Grunt\n ```\n npm install -g yeoman\n npm install -g grunt",
        "path": "readme.md",
        "position": null,
        "original_position": 3,
        "commit_id": "1b96e745927f13bd167f431b0fc9381ea986eda2",
        "original_commit_id": "28733ebe980cc9d8c26f915eb122cd7f8e02989e",
        "user": {
            "login": "daanporon",
            "id": 71901,
            "node_id": "MDQ6VXNlcjcxOTAx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71901?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daanporon",
            "html_url": "https://github.com/daanporon",
            "followers_url": "https://api.github.com/users/daanporon/followers",
            "following_url": "https://api.github.com/users/daanporon/following{/other_user}",
            "gists_url": "https://api.github.com/users/daanporon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daanporon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daanporon/subscriptions",
            "organizations_url": "https://api.github.com/users/daanporon/orgs",
            "repos_url": "https://api.github.com/users/daanporon/repos",
            "events_url": "https://api.github.com/users/daanporon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daanporon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this was a pr for the express-stack ... shouldn't grunt also be a dep in the package.json then?\n",
        "created_at": "2013-02-22T18:19:07Z",
        "updated_at": "2013-03-09T13:51:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/941#discussion_r3119949",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/941",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3119949"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/941#discussion_r3119949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/941"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3121896",
        "pull_request_review_id": null,
        "id": 3121896,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjE4OTY=",
        "diff_hunk": "@@ -30,6 +30,7 @@ Install Yeoman@0.9.6 and Grunt\n ```\n npm install -g yeoman\n npm install -g grunt",
        "path": "readme.md",
        "position": null,
        "original_position": 3,
        "commit_id": "1b96e745927f13bd167f431b0fc9381ea986eda2",
        "original_commit_id": "28733ebe980cc9d8c26f915eb122cd7f8e02989e",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "wasn't that what I asked for? I'm confused.\n",
        "created_at": "2013-02-22T20:15:45Z",
        "updated_at": "2013-03-09T13:51:55Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/941#discussion_r3121896",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/941",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/3121896"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/941#discussion_r3121896"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/941"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/13787448",
        "pull_request_review_id": null,
        "id": 13787448,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzg3NDQ4",
        "diff_hunk": "@@ -2,7 +2,7 @@\n \n Yeoman is a robust and opinionated set of tools, libraries, and a workflow that can help developers quickly build beautiful, compelling web apps. It is comprised of [yo](https://github.com/yeoman/yo) - a scaffolding tool using our [generator](https://github.com/yeoman/generator) system, [grunt](http://gruntjs.com) - a task runner for your build process and [bower](http://bower.io) for dependency management.\n \n-### [Website](http://yeoman.io)&nbsp;&nbsp;&nbsp;[Getting Started](http://yeoman.io/gettingstarted.html)&nbsp;&nbsp;&nbsp;[Documentation](https://github.com/yeoman/yeoman/wiki)&nbsp;&nbsp;&nbsp;[Submit Issue](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission)\n+### [Website](http://yeoman.io)&nbsp;&nbsp;&nbsp;[Getting Started](http://yeoman.io/learning/index.html)&nbsp;&nbsp;&nbsp;[Documentation](https://github.com/yeoman/yeoman/wiki)&nbsp;&nbsp;&nbsp;[Submit Issue](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission)",
        "path": "readme.md",
        "position": null,
        "original_position": 5,
        "commit_id": "846f45363d12d8928f55211afee6cc35a3dd65d4",
        "original_commit_id": "20da797d3cdcb36714bfd9a5ccd505b0aeb8a9ca",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "drop the `index.html`\n",
        "created_at": "2014-06-15T18:19:10Z",
        "updated_at": "2014-06-15T18:21:49Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1353#discussion_r13787448",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1353",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/13787448"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1353#discussion_r13787448"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1353"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056483",
        "pull_request_review_id": null,
        "id": 19056483,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NDgz",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 3,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let's keep the credits to the bottom of the doc to keep the CoC to the point.\n",
        "created_at": "2014-10-18T21:43:09Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056483",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056483"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056483"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056485",
        "pull_request_review_id": null,
        "id": 19056485,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NDg1",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 14,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Remove the trailing underscore after the codelab.html link (causes 404)\n",
        "created_at": "2014-10-18T21:43:35Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056485",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056485"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056485"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056489",
        "pull_request_review_id": null,
        "id": 19056489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NDg5",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 32,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "For clarity, add quotes.\nPlease make the Title of your issue \"Code of Conduct Content Update\"\n",
        "created_at": "2014-10-18T21:44:47Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056489",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056489"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056497",
        "pull_request_review_id": null,
        "id": 19056497,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NDk3",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. ",
        "path": "code-of-conduct.md",
        "position": 42,
        "original_position": 42,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same as other credit note. Let's just keep them collected at the bottom like you already have, along with confcodeofconduct.com, to act as a reference point.\n",
        "created_at": "2014-10-18T21:46:22Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056497",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056497"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056497"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056508",
        "pull_request_review_id": null,
        "id": 19056508,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NTA4",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. \n+(-credit to Hoodie for this ^)\n+\n+## Reporting violations of the Code of Conduct\n+\n+If you personally require help or you are witness to violations of the Code of Conduct, please immediately contact  [CONTACT ADDRESS]().",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 47,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Who's this going to be? @SBoudrias, you?\n",
        "created_at": "2014-10-18T21:48:53Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056508",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056508"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056508"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056590",
        "pull_request_review_id": null,
        "id": 19056590,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU2NTkw",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. \n+(-credit to Hoodie for this ^)\n+\n+## Reporting violations of the Code of Conduct\n+\n+If you personally require help or you are witness to violations of the Code of Conduct, please immediately contact  [CONTACT ADDRESS]().",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 47,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "SBoudrias",
            "id": 923865,
            "node_id": "MDQ6VXNlcjkyMzg2NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SBoudrias",
            "html_url": "https://github.com/SBoudrias",
            "followers_url": "https://api.github.com/users/SBoudrias/followers",
            "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}",
            "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions",
            "organizations_url": "https://api.github.com/users/SBoudrias/orgs",
            "repos_url": "https://api.github.com/users/SBoudrias/repos",
            "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SBoudrias/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@addyosmani have usually been handling every social/public aspect of Yeoman\n",
        "created_at": "2014-10-18T22:13:40Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056590",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19056590"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19056590"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19057000",
        "pull_request_review_id": null,
        "id": 19057000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDU3MDAw",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. \n+(-credit to Hoodie for this ^)\n+\n+## Reporting violations of the Code of Conduct\n+\n+If you personally require help or you are witness to violations of the Code of Conduct, please immediately contact  [CONTACT ADDRESS]().",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 47,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "addyosmani",
            "id": 110953,
            "node_id": "MDQ6VXNlcjExMDk1Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/110953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addyosmani",
            "html_url": "https://github.com/addyosmani",
            "followers_url": "https://api.github.com/users/addyosmani/followers",
            "following_url": "https://api.github.com/users/addyosmani/following{/other_user}",
            "gists_url": "https://api.github.com/users/addyosmani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addyosmani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addyosmani/subscriptions",
            "organizations_url": "https://api.github.com/users/addyosmani/orgs",
            "repos_url": "https://api.github.com/users/addyosmani/repos",
            "events_url": "https://api.github.com/users/addyosmani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addyosmani/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Feel free to drop me a line if any help is needed with this one :) I assume that the Contact Address in this case is okay if it's corporate/office, right?\n",
        "created_at": "2014-10-19T00:20:17Z",
        "updated_at": "2014-10-19T17:38:35Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19057000",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19057000"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19057000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061864",
        "pull_request_review_id": null,
        "id": 19061864,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYxODY0",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. ",
        "path": "code-of-conduct.md",
        "position": 42,
        "original_position": 42,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "summerspirit",
            "id": 4708646,
            "node_id": "MDQ6VXNlcjQ3MDg2NDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4708646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/summerspirit",
            "html_url": "https://github.com/summerspirit",
            "followers_url": "https://api.github.com/users/summerspirit/followers",
            "following_url": "https://api.github.com/users/summerspirit/following{/other_user}",
            "gists_url": "https://api.github.com/users/summerspirit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/summerspirit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/summerspirit/subscriptions",
            "organizations_url": "https://api.github.com/users/summerspirit/orgs",
            "repos_url": "https://api.github.com/users/summerspirit/repos",
            "events_url": "https://api.github.com/users/summerspirit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/summerspirit/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do you want it more like this:\n\n\"Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. Please refer to the Credits at bottom for further resources. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct.\" \n\nWith these moved to the Credits section?\n\nThe [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. \n\nFor more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n",
        "created_at": "2014-10-19T17:42:30Z",
        "updated_at": "2014-10-19T17:42:30Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061864",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061864"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061864"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061871",
        "pull_request_review_id": null,
        "id": 19061871,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYxODcx",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. \n+(-credit to Hoodie for this ^)\n+\n+## Reporting violations of the Code of Conduct\n+\n+If you personally require help or you are witness to violations of the Code of Conduct, please immediately contact  [CONTACT ADDRESS]().",
        "path": "code-of-conduct.md",
        "position": null,
        "original_position": 47,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "summerspirit",
            "id": 4708646,
            "node_id": "MDQ6VXNlcjQ3MDg2NDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4708646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/summerspirit",
            "html_url": "https://github.com/summerspirit",
            "followers_url": "https://api.github.com/users/summerspirit/followers",
            "following_url": "https://api.github.com/users/summerspirit/following{/other_user}",
            "gists_url": "https://api.github.com/users/summerspirit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/summerspirit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/summerspirit/subscriptions",
            "organizations_url": "https://api.github.com/users/summerspirit/orgs",
            "repos_url": "https://api.github.com/users/summerspirit/repos",
            "events_url": "https://api.github.com/users/summerspirit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/summerspirit/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Anything that gets checked on a regular basis that you're okay associating with the project :)\n",
        "created_at": "2014-10-19T17:43:32Z",
        "updated_at": "2014-10-19T17:43:32Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061871",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061871"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061871"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061917",
        "pull_request_review_id": null,
        "id": 19061917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYxOTE3",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. ",
        "path": "code-of-conduct.md",
        "position": 42,
        "original_position": 42,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "pearlchen",
            "id": 408903,
            "node_id": "MDQ6VXNlcjQwODkwMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/408903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pearlchen",
            "html_url": "https://github.com/pearlchen",
            "followers_url": "https://api.github.com/users/pearlchen/followers",
            "following_url": "https://api.github.com/users/pearlchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/pearlchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pearlchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pearlchen/subscriptions",
            "organizations_url": "https://api.github.com/users/pearlchen/orgs",
            "repos_url": "https://api.github.com/users/pearlchen/repos",
            "events_url": "https://api.github.com/users/pearlchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pearlchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Your previous version was fine for this paragraph. I was more commenting on the random \"shout out to Angular team\" insertions. So feel free to use whichever version you like for this paragraph.\n",
        "created_at": "2014-10-19T17:48:03Z",
        "updated_at": "2014-10-19T17:48:03Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061917",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061917"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061929",
        "pull_request_review_id": null,
        "id": 19061929,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDYxOTI5",
        "diff_hunk": "@@ -0,0 +1,51 @@\n+# Code of Conduct\n+\n+\"We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Yeoman project to do the same.\" (- credit to the Angular community for this ^)\n+\n+All contributions to this project are valuable, including and not limited to posting issues, updating documentation, submitting pull requests and providing feedback in comments. Please act with respect and avoid demeaning, condescending, racist, sexist and other inappropriate language and conduct. \n+\n+Please ensure comments stay professional, constructive and about the code, not the person. \n+\n+[xkcd]\n+[![image](xkcd-1053.png)](http://xkcd.com/1053/)\n+\n+This Code of Conduct applies to all of the projects under the [Yeoman organization](https://github.com/yeoman) on GitHub and the Yeoman community at large (IRC, mailing lists, Google+, Twitter, etc.).\n+\n+See the [contributing guidelines](http://yeoman.io/contributing/) and the [tutorial on getting started with Yeoman](http://yeoman.io/codelab.html_) for technical details of contributing to Yeoman or its satellite projects.\n+\n+## Events\n+\n+Any organizer running a Yeoman hackathon, meet-up, conference, user group, or other type of event is encouraged to adopt and provide an appropriate Code of Conduct. The [confcodeofconduct.com](http://confcodeofconduct.com) template is a good starting point. Participants should also have easy access to contact information that will allow them to privately get help or report violations of the Code of Conduct. \n+\n+For more on adopting a code of conduct, see [Ashe Dryden's FAQ](http://ashedryden.com/blog/codes-of-conduct-101-faq_).\n+\n+## Contribute to the Code of Conduct\n+\n+If you have suggestions to improve this Code of Conduct, please submit an issue or pull request.\n+\n+### How to Submit An Issue\n+\n+To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n+\n+On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n+\n+Please make the Title of your issue Code of Conduct Content Update\n+\n+Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n+\n+Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows. \n+\n+We welcome your thoughts and contributions. \n+\n+## Consequences for violations to this Code of Conduct\n+\n+If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community. ",
        "path": "code-of-conduct.md",
        "position": 42,
        "original_position": 42,
        "commit_id": "db032617f9850d57e3d94214b40354aaddc658a0",
        "original_commit_id": "56763e49677d858753c491991a7b0dc1427ae1f3",
        "user": {
            "login": "summerspirit",
            "id": 4708646,
            "node_id": "MDQ6VXNlcjQ3MDg2NDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4708646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/summerspirit",
            "html_url": "https://github.com/summerspirit",
            "followers_url": "https://api.github.com/users/summerspirit/followers",
            "following_url": "https://api.github.com/users/summerspirit/following{/other_user}",
            "gists_url": "https://api.github.com/users/summerspirit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/summerspirit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/summerspirit/subscriptions",
            "organizations_url": "https://api.github.com/users/summerspirit/orgs",
            "repos_url": "https://api.github.com/users/summerspirit/repos",
            "events_url": "https://api.github.com/users/summerspirit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/summerspirit/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok. No problem. I'll leave it as is for flow.\n\nAppreciate the input. Just wasn't sure originally how to be attributing\npeople.\n\nOn Sun, Oct 19, 2014 at 1:48 PM, Pearl Chen notifications@github.com\nwrote:\n\n> In code-of-conduct.md:\n> \n> > +\n> > +To submit an issue, simply click the Issues tab in the far right menu, below the <> Code tab.\n> > +\n> > +On the far right of that screen is a big green button that says \"New Issue\". Click the button and it will take you to a screen like this:\n> > +\n> > +Please make the Title of your issue Code of Conduct Content Update\n> > +\n> > +Issues will be reviewed by the Yeoman core team. This is standard for the GitHub workflow, which works primarily to serve code reviews. Any delay in time between your request and its addition to the Code of Conduct is not an indication it has been received negatively.\n> > +\n> > +Please note that some edits may be made to your suggestion, and this is also standard for the open source community and GitHub workflows.\n> > +\n> > +We welcome your thoughts and contributions.\n> > +\n> > +## Consequences for violations to this Code of Conduct\n> > +\n> > +If a participant engages in any behaviour violating this code of conduct, the core members of this community may take any action they deem appropriate, including warning the offender or expulsion from the community, exclusion from any interaction and loss of all rights in this community.\n> \n> Your previous version was fine for this paragraph. I was more commenting\n> on the random \"shout out to Angular team\" insertions. So feel free to use\n> whichever version you like for this paragraph.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/yeoman/yeoman/pull/1422/files#r19061917.\n",
        "created_at": "2014-10-19T17:49:26Z",
        "updated_at": "2014-10-19T17:49:26Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061929",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1422",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/19061929"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1422#discussion_r19061929"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/34245938",
        "pull_request_review_id": null,
        "id": 34245938,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQ1OTM4",
        "diff_hunk": "@@ -67,9 +67,9 @@ Yeoman is beautifully crafted by these people and a bunch of awesome [contributo\n :---:|:---:|:---:|:---:|:---:\n [Jimmy Moon](http://ragingwind.org) | [Frederick Ros](https://github.com/sleeper) | [Mickael Daniel](https://github.com/mklabs) | [Eric Bidelman](http://ericbidelman.com) | [Matija Marohni\u0107](https://github.com/silvenon)\n \n-[![Kevin M\u00e5rtensson](http://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) |\n-:---:|\n-[Kevin M\u00e5rtensson](https://github.com/kevva) |\n+[![Kevin M\u00e5rtensson](http://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://secure.gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?size=120)](https://github.com/arthurvr)",
        "path": "readme.md",
        "position": null,
        "original_position": 7,
        "commit_id": "464a686f5ede858237b175a012d6239be0657d51",
        "original_commit_id": "4361283e34498a42af5f94444d20210f5a797bb5",
        "user": {
            "login": "sindresorhus",
            "id": 170270,
            "node_id": "MDQ6VXNlcjE3MDI3MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/170270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sindresorhus",
            "html_url": "https://github.com/sindresorhus",
            "followers_url": "https://api.github.com/users/sindresorhus/followers",
            "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
            "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
            "repos_url": "https://api.github.com/users/sindresorhus/repos",
            "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "https://github.com/yeoman/yeoman.io/pull/493#discussion_r34245910\n",
        "created_at": "2015-07-09T11:33:21Z",
        "updated_at": "2015-07-09T11:41:41Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1520#discussion_r34245938",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1520",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/34245938"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1520#discussion_r34245938"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1520"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/34246461",
        "pull_request_review_id": null,
        "id": 34246461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjQ2NDYx",
        "diff_hunk": "@@ -67,9 +67,9 @@ Yeoman is beautifully crafted by these people and a bunch of awesome [contributo\n :---:|:---:|:---:|:---:|:---:\n [Jimmy Moon](http://ragingwind.org) | [Frederick Ros](https://github.com/sleeper) | [Mickael Daniel](https://github.com/mklabs) | [Eric Bidelman](http://ericbidelman.com) | [Matija Marohni\u0107](https://github.com/silvenon)\n \n-[![Kevin M\u00e5rtensson](http://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) |\n-:---:|\n-[Kevin M\u00e5rtensson](https://github.com/kevva) |\n+[![Kevin M\u00e5rtensson](http://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://secure.gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?size=120)](https://github.com/arthurvr)",
        "path": "readme.md",
        "position": null,
        "original_position": 7,
        "commit_id": "464a686f5ede858237b175a012d6239be0657d51",
        "original_commit_id": "4361283e34498a42af5f94444d20210f5a797bb5",
        "user": {
            "login": "arthurvr",
            "id": 6025224,
            "node_id": "MDQ6VXNlcjYwMjUyMjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6025224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arthurvr",
            "html_url": "https://github.com/arthurvr",
            "followers_url": "https://api.github.com/users/arthurvr/followers",
            "following_url": "https://api.github.com/users/arthurvr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arthurvr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arthurvr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arthurvr/subscriptions",
            "organizations_url": "https://api.github.com/users/arthurvr/orgs",
            "repos_url": "https://api.github.com/users/arthurvr/repos",
            "events_url": "https://api.github.com/users/arthurvr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arthurvr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fixed.\n",
        "created_at": "2015-07-09T11:42:25Z",
        "updated_at": "2015-07-09T11:42:25Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1520#discussion_r34246461",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1520",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/34246461"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1520#discussion_r34246461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1520"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/89290046",
        "pull_request_review_id": 9835743,
        "id": 89290046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5MjkwMDQ2",
        "diff_hunk": "@@ -68,9 +68,9 @@ Yeoman is beautifully crafted by these people and a bunch of awesome [contributo\n :---:|:---:|:---:|:---:|:---:\n [Jimmy Moon](http://ragingwind.org) | [Frederick Ros](https://github.com/sleeper) | [Mickael Daniel](https://github.com/mklabs) | [Eric Bidelman](http://ericbidelman.com) | [Matija Marohni\u0107](https://github.com/silvenon)\n \n-[![Kevin M\u00e5rtensson](https://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?s=117)](https://github.com/arthurvr) | [![Michael K\u00fchnel](https://gravatar.com/avatar/57e80cd1ada0e75bb04da5bbcd155753?s=117)](https://github.com/mischah)\n-:---:|:---:|:---:|\n-[Kevin M\u00e5rtensson](https://github.com/kevva) | [Arthur Verschaeve](https://github.com/arthurvr) | [Michael K\u00fchnel](https://github.com/mischah)\n+[![Kevin M\u00e5rtensson](https://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?s=117)](https://github.com/arthurvr) | [![Michael K\u00fchnel](https://gravatar.com/avatar/57e80cd1ada0e75bb04da5bbcd155753?s=117)](https://github.com/mischah) | [![Mehdy Dara](https://gravatar.com/avatar/2ad7eb39d40ec50b8a16f0924a664ad2?s=117)](https://github.com/mischah)",
        "path": "readme.md",
        "position": null,
        "original_position": 7,
        "commit_id": "e5b1f28e7a369a136d6f899c53361975f6f68cc5",
        "original_commit_id": "420406f3e022d1fcb7f5b42ccb0d3c4db380b81d",
        "user": {
            "login": "mischah",
            "id": 441011,
            "node_id": "MDQ6VXNlcjQ0MTAxMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/441011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mischah",
            "html_url": "https://github.com/mischah",
            "followers_url": "https://api.github.com/users/mischah/followers",
            "following_url": "https://api.github.com/users/mischah/following{/other_user}",
            "gists_url": "https://api.github.com/users/mischah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mischah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mischah/subscriptions",
            "organizations_url": "https://api.github.com/users/mischah/orgs",
            "repos_url": "https://api.github.com/users/mischah/repos",
            "events_url": "https://api.github.com/users/mischah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mischah/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Your are linking to my Github profile \ud83d\ude18 ",
        "created_at": "2016-11-23T10:37:30Z",
        "updated_at": "2016-11-23T10:41:05Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1650#discussion_r89290046",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1650",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/89290046"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1650#discussion_r89290046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1650"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/89290897",
        "pull_request_review_id": 9836550,
        "id": 89290897,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5MjkwODk3",
        "diff_hunk": "@@ -68,9 +68,9 @@ Yeoman is beautifully crafted by these people and a bunch of awesome [contributo\n :---:|:---:|:---:|:---:|:---:\n [Jimmy Moon](http://ragingwind.org) | [Frederick Ros](https://github.com/sleeper) | [Mickael Daniel](https://github.com/mklabs) | [Eric Bidelman](http://ericbidelman.com) | [Matija Marohni\u0107](https://github.com/silvenon)\n \n-[![Kevin M\u00e5rtensson](https://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?s=117)](https://github.com/arthurvr) | [![Michael K\u00fchnel](https://gravatar.com/avatar/57e80cd1ada0e75bb04da5bbcd155753?s=117)](https://github.com/mischah)\n-:---:|:---:|:---:|\n-[Kevin M\u00e5rtensson](https://github.com/kevva) | [Arthur Verschaeve](https://github.com/arthurvr) | [Michael K\u00fchnel](https://github.com/mischah)\n+[![Kevin M\u00e5rtensson](https://gravatar.com/avatar/48fa294e3cd41680b80d3ed6345c7b4d?s=117)](https://github.com/kevva) | [![Arthur Verschaeve](https://gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?s=117)](https://github.com/arthurvr) | [![Michael K\u00fchnel](https://gravatar.com/avatar/57e80cd1ada0e75bb04da5bbcd155753?s=117)](https://github.com/mischah) | [![Mehdy Dara](https://gravatar.com/avatar/2ad7eb39d40ec50b8a16f0924a664ad2?s=117)](https://github.com/mischah)",
        "path": "readme.md",
        "position": null,
        "original_position": 7,
        "commit_id": "e5b1f28e7a369a136d6f899c53361975f6f68cc5",
        "original_commit_id": "420406f3e022d1fcb7f5b42ccb0d3c4db380b81d",
        "user": {
            "login": "zckrs",
            "id": 3020368,
            "node_id": "MDQ6VXNlcjMwMjAzNjg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3020368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zckrs",
            "html_url": "https://github.com/zckrs",
            "followers_url": "https://api.github.com/users/zckrs/followers",
            "following_url": "https://api.github.com/users/zckrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/zckrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zckrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zckrs/subscriptions",
            "organizations_url": "https://api.github.com/users/zckrs/orgs",
            "repos_url": "https://api.github.com/users/zckrs/repos",
            "events_url": "https://api.github.com/users/zckrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zckrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oops. That epic fail is fixed",
        "created_at": "2016-11-23T10:42:44Z",
        "updated_at": "2016-11-23T10:42:44Z",
        "html_url": "https://github.com/yeoman/yeoman/pull/1650#discussion_r89290897",
        "pull_request_url": "https://api.github.com/repos/yeoman/yeoman/pulls/1650",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/comments/89290897"
            },
            "html": {
                "href": "https://github.com/yeoman/yeoman/pull/1650#discussion_r89290897"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/yeoman/yeoman/pulls/1650"
            }
        },
        "in_reply_to_id": 89290046
    }
]