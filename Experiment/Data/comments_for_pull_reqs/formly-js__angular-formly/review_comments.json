[
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11715906",
        "pull_request_review_id": null,
        "id": 11715906,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE1OTA2",
        "diff_hunk": "@@ -89,35 +89,24 @@ angular.module('formly.render').directive('formlyForm', function formlyForm() {\n       formId: '@formId',\n       fields: '=fields',\n       options: '=options',\n-      result: '=result'\n+      result: '=result',\n+      formOnParentScope: '=name'",
        "path": "dist/formly.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "00bcf74dab651fbc3353f1c2a9081b6b6dca8895",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "formOnParentScope becomes the directive's variable for the variable on the parent view's scope.\n",
        "created_at": "2014-04-17T01:38:43Z",
        "updated_at": "2014-04-17T01:53:12Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11715906",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11715906"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11715906"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11715934",
        "pull_request_review_id": null,
        "id": 11715934,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE1OTM0",
        "diff_hunk": "@@ -89,35 +89,24 @@ angular.module('formly.render').directive('formlyForm', function formlyForm() {\n       formId: '@formId',\n       fields: '=fields',\n       options: '=options',\n-      result: '=result'\n+      result: '=result',\n+      formOnParentScope: '=name'\n     },\n     controller: [\n       '$scope',\n       '$element',\n       function formController($scope, $element) {\n-        $scope.populateResult = function () {",
        "path": "dist/formly.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "00bcf74dab651fbc3353f1c2a9081b6b6dca8895",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The function breaks the 2 way binding by writing primitives over the binding that exists between the `formOnParentScope` and the fields. Plus 2 way binding takes care of this. \n",
        "created_at": "2014-04-17T01:40:24Z",
        "updated_at": "2014-04-17T01:53:12Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11715934",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11715934"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11715934"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716053",
        "pull_request_review_id": null,
        "id": 11716053,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE2MDUz",
        "diff_hunk": "@@ -89,35 +89,24 @@ angular.module('formly.render').directive('formlyForm', function formlyForm() {\n       formId: '@formId',\n       fields: '=fields',\n       options: '=options',\n-      result: '=result'\n+      result: '=result',\n+      formOnParentScope: '=name'\n     },\n     controller: [\n       '$scope',\n       '$element',\n       function formController($scope, $element) {\n-        $scope.populateResult = function () {\n-          var formChildren = $element.children();\n-          var fieldScope;\n-          angular.forEach(formChildren, function (fieldElement, key) {\n-            // grab fields isolate scope\n-            fieldScope = angular.element(fieldElement).scope();\n-            // check if its a form field, otherwise ignore, ie its the button\n-            if (fieldScope.field) {\n-              // if a key is set, then save the data with that key in the result object\n-              // otherwise use the field's index from the fields array\n-              var dataKey;\n-              if ('key' in fieldScope.field) {\n-                dataKey = fieldScope.field.key;\n-              } else {\n-                dataKey = fieldScope.$index;\n-              }\n-              // set value in result\n-              $scope.result[dataKey] = fieldScope.value;\n-            }\n-          });\n-        };\n       }\n-    ]\n+    ],\n+    compile: function (scope, iElement, iAttrs, controller, transcludeFn) {\n+      return {\n+        post: function (scope, ele, attr, controller) {\n+          //Post gets called after angular has created the FormController\n+          //Now pass the FormController back up to the parent scope\n+          scope.formOnParentScope = scope[attr.name];",
        "path": "dist/formly.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "00bcf74dab651fbc3353f1c2a9081b6b6dca8895",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The name attribute in the `formly-form` gets added to the `form` tag. Angular uses the form[name] attribute as the point it binds the FormController to on the directive's scope. \n\nThe post link is after Angular has created the binding for with Angular's form directive. Which is why we can now assign back up to formly-form's parent scope. \n",
        "created_at": "2014-04-17T01:46:15Z",
        "updated_at": "2014-04-17T01:53:12Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716053",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716053"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716053"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716149",
        "pull_request_review_id": null,
        "id": 11716149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE2MTQ5",
        "diff_hunk": "@@ -1,14 +1,12 @@\n-<form class=\"formly\" role=\"form\" name=\"{{options.uniqueFormId}}\">",
        "path": "src/directives/formly-form.html",
        "position": 1,
        "original_position": 1,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "00bcf74dab651fbc3353f1c2a9081b6b6dca8895",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If the name attribute is set here in the template, Angular will join it with the outer name attribute on <formly-form>. Even if `uniqueFormId` is left blank, the formly-form name attribute will have a space appended to it. So that `formly-form[name=\"foo\"]` becomes `form[name=\"foo \"]`\n",
        "created_at": "2014-04-17T01:51:18Z",
        "updated_at": "2014-04-17T01:53:12Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716149",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716149"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716310",
        "pull_request_review_id": null,
        "id": 11716310,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE2MzEw",
        "diff_hunk": "@@ -34,26 +34,30 @@ app.controller('home', function($scope, $parse, $rootScope) {\n \t\t\t$scope.formOptionsError = true;\n \t\t}\n \t});\n-\t\n+\n \t// Public Vars\n \t$scope.formFields = [{\n-\t\ttype: 'email',",
        "path": "src/views/home.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The two-way binding appeared to be broken when I quickly tested the form. So I moved the field down. FireFox's  validation didn't pass the value until the string had an `@` symbol. Adding `novalidation` to the form tag would also fix this. \n\nI also added keys to each input field.\n",
        "created_at": "2014-04-17T01:59:13Z",
        "updated_at": "2014-04-17T01:59:13Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716310",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716310"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716310"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716321",
        "pull_request_review_id": null,
        "id": 11716321,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE2MzIx",
        "diff_hunk": "@@ -119,17 +126,20 @@ app.controller('home', function($scope, $parse, $rootScope) {\n \t\t\t}\n \t\t]\n \t}, {\n+\t\tkey: 'password',\n \t\ttype: 'password',\n \t\tlabel: 'Password'\n \t}, {\n+\t\tkey: 'checkThis',\n \t\ttype: 'checkbox',\n \t\tlabel: 'Check this here'\n \t}, {\n+\t\tkey:'secretCode',\n \t\ttype: 'hidden',\n \t\tdefault: 'secret_code'\n \t}];\n+\n \t$scope.formOptions = {\n-\t\tuniqueFormId: 'simpleform',",
        "path": "src/views/home.js",
        "position": 77,
        "original_position": 77,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Per previous comment\n",
        "created_at": "2014-04-17T01:59:57Z",
        "updated_at": "2014-04-17T01:59:57Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716321",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716321"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716321"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716391",
        "pull_request_review_id": null,
        "id": 11716391,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzE2Mzkx",
        "diff_hunk": "@@ -1,14 +1,12 @@\n-<form class=\"formly\" role=\"form\" name=\"{{options.uniqueFormId}}\">\n+<form class=\"formly\" role=\"form\">\n \t<formly-field ng-repeat=\"field in fields\"\n \t\t\t\t  options=\"field\"\n-\t\t\t\t  form-value=\"value\"\n+\t\t\t\t  form-value=\"result[field.key||$index]\"",
        "path": "src/directives/formly-form.html",
        "position": 6,
        "original_position": 6,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Mimics the previous work done by populateResult. \n",
        "created_at": "2014-04-17T02:04:27Z",
        "updated_at": "2014-04-17T02:04:27Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716391",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11716391"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11716391"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11782735",
        "pull_request_review_id": null,
        "id": 11782735,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzgyNzM1",
        "diff_hunk": "@@ -1,14 +1,12 @@\n-<form class=\"formly\" role=\"form\" name=\"{{options.uniqueFormId}}\">\n+<form class=\"formly\" role=\"form\">\n \t<formly-field ng-repeat=\"field in fields\"\n \t\t\t\t  options=\"field\"\n-\t\t\t\t  form-value=\"value\"\n+\t\t\t\t  form-value=\"result[field.key||$index]\"",
        "path": "src/directives/formly-form.html",
        "position": 6,
        "original_position": 6,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "user": {
            "login": "GrantCodesCodes",
            "id": 48418,
            "node_id": "MDQ6VXNlcjQ4NDE4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/48418?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GrantCodesCodes",
            "html_url": "https://github.com/GrantCodesCodes",
            "followers_url": "https://api.github.com/users/GrantCodesCodes/followers",
            "following_url": "https://api.github.com/users/GrantCodesCodes/following{/other_user}",
            "gists_url": "https://api.github.com/users/GrantCodesCodes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GrantCodesCodes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GrantCodesCodes/subscriptions",
            "organizations_url": "https://api.github.com/users/GrantCodesCodes/orgs",
            "repos_url": "https://api.github.com/users/GrantCodesCodes/repos",
            "events_url": "https://api.github.com/users/GrantCodesCodes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GrantCodesCodes/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm merging this in but it creates a new issue when I might add/remove a key in the source form fields, it then falls back to index, and then I have duplicate results for a given field. In the example below I removed the `firstName` key and edited some data and that data was saved under the $index key. Then when I add a key back in, I have data under two keys. I don't know that this is a common use case, but I thought I'd bring it up. Let me know what you think.\n\n```\n{\n  \"0\": \"dsadfads\",\n  \"triedEmber\": \"no\",\n  \"angularFan\": \"yes\",\n  \"love\": 2,\n  \"secretCode\": \"secret_code\",\n  \"first\": \"bill\"\n}\n```\n",
        "created_at": "2014-04-18T18:51:32Z",
        "updated_at": "2014-04-18T18:51:32Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11782735",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11782735"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11782735"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11792333",
        "pull_request_review_id": null,
        "id": 11792333,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzkyMzMz",
        "diff_hunk": "@@ -1,14 +1,12 @@\n-<form class=\"formly\" role=\"form\" name=\"{{options.uniqueFormId}}\">\n+<form class=\"formly\" role=\"form\">\n \t<formly-field ng-repeat=\"field in fields\"\n \t\t\t\t  options=\"field\"\n-\t\t\t\t  form-value=\"value\"\n+\t\t\t\t  form-value=\"result[field.key||$index]\"",
        "path": "src/directives/formly-form.html",
        "position": 6,
        "original_position": 6,
        "commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "original_commit_id": "6bfcb1887f3160adf863fc16ed64d9e352baccc7",
        "user": {
            "login": "jhr007",
            "id": 766585,
            "node_id": "MDQ6VXNlcjc2NjU4NQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/766585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhr007",
            "html_url": "https://github.com/jhr007",
            "followers_url": "https://api.github.com/users/jhr007/followers",
            "following_url": "https://api.github.com/users/jhr007/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhr007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhr007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhr007/subscriptions",
            "organizations_url": "https://api.github.com/users/jhr007/orgs",
            "repos_url": "https://api.github.com/users/jhr007/repos",
            "events_url": "https://api.github.com/users/jhr007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhr007/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't fully understand what your doing cause I can't repeat it. I don't get a value on the data object that $index based, but I do get left an 'orphaned' value. \n\nMy general understanding makes me think there would need to be a custom watcher in the formly-field that detects changes in the fields array and modifies the data obj accordly. As is the field directive is just updating whatever piece of the data object it gets passed from formly-field. If the key changes, the field directive has no idea, and therefore no idea delete the old key before the key changes. \n\nI believe ng-repeat does something like this to manage refreshing only the things that changed and not the whole list each time. I imagine the first run ng-repeat copies it to a master value, and then does a comparison each digest. \n\nAgain, I'm not able to repeat using the master branch. \n\nHere's what I tried: \n\nIn the home controller I set the $scope to window.myscope so I can play with it on the FF console. \n\nFirst:\n`myField = angular.copy( myscope.formFields[0]); //making sure it's a copy and not a reference. \ndelete myscope.formFields[0]; \nmyscope.$digest(); \nmyField.key=\"NewKey\"; \nmyscope.formFields.unshift( angular.copy( myField) );`\n\nMind you, I do get an error at mycope.digest() saying 'options' can't be found from the field directive, because I just deleted it. It cant access 'options' which is the field I just deleted. ( formly-field[options=\"field\"]  where field is created by ng-repeat. \n\nThen I reread and tried: \nEditing the FirstName field, then run: \n`myscope.formFields[0].key=\"NewasdfKey\";`\nthen edit field again. \nChanging the key clears the field, but that because it's a new value on the data object. \n",
        "created_at": "2014-04-19T04:15:36Z",
        "updated_at": "2014-04-19T04:41:04Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11792333",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/8",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/11792333"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/8#discussion_r11792333"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/17058585",
        "pull_request_review_id": null,
        "id": 17058585,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDU4NTg1",
        "diff_hunk": "@@ -50,7 +50,7 @@ app.controller('home', function($scope, $parse, $window, usingCustomTypeTemplate\n \t\t\t$scope.formFieldsError = true;\n \t\t}\n \t});\n-\t$scope.$watch('formDataStr', function onDataUpdated(newValue) {\n+    $scope.$watch('formDataStr', function onDataUpdated(newValue) {",
        "path": "demo/views/home.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "2535382e5c39acf25e1f948dfa1eddbce4d51f11",
        "original_commit_id": "2c9a94b451991efa1dd0630668d12caf967aecc6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line is still using spaces. This line should not change.\n",
        "created_at": "2014-09-03T15:45:39Z",
        "updated_at": "2014-09-03T22:21:01Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/90#discussion_r17058585",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/90",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/17058585"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/90#discussion_r17058585"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/90"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/17058592",
        "pull_request_review_id": null,
        "id": 17058592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDU4NTky",
        "diff_hunk": "@@ -59,7 +59,17 @@ app.controller('home', function($scope, $parse, $window, usingCustomTypeTemplate\n \t\t}\n \t});\n \n-\t// Public Vars\n+\t$scope.$watch('editJSON', function onDataObjectUpdated(newValue) {\n+\t\ttry {\n+\t\t\tif(newValue == true) {\n+\t\t\t\t$scope.formDataStr = $scope.toPrettyJSON($scope.formData, 4);\n+\t\t\t}\n+\t\t} catch (e) {\n+\t\t\t$scope.formDataError = true;\n+\t\t}\n+\t});\n+\n+    // Public Vars",
        "path": "demo/views/home.js",
        "position": null,
        "original_position": 24,
        "commit_id": "2535382e5c39acf25e1f948dfa1eddbce4d51f11",
        "original_commit_id": "2c9a94b451991efa1dd0630668d12caf967aecc6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This line should also not change.\n",
        "created_at": "2014-09-03T15:45:45Z",
        "updated_at": "2014-09-03T22:21:01Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/90#discussion_r17058592",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/90",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/17058592"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/90#discussion_r17058592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/90"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/18169365",
        "pull_request_review_id": null,
        "id": 18169365,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTY5MzY1",
        "diff_hunk": "@@ -238,231 +238,57 @@ angular.module('formly.render')\n angular.module('formly.render').run(['$templateCache', function($templateCache) {\n   'use strict';\n \n-  $templateCache.put('fields/formly-field-checkbox.html',\n-    \"<div class=checkbox ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label><input type=checkbox id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-model=\\\"result[options.key || index]\\\"> {{options.label || 'Checkbox'}} {{options.required ? '*' : ''}}</label><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-email.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Email'}} {{options.required ? '*' : ''}}</label><input type=email class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators placeholder={{options.placeholder}} aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-model=\\\"result[options.key || index]\\\"><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-hidden.html',\n-    \"<input type=hidden ng-model=\\\"result[options.key || index]\\\">\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-number.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Number'}} {{options.required ? '*' : ''}}</label><input type=number class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators placeholder={{options.placeholder}} aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled min={{options.min}} max={{options.max}} ng-minlength={{options.minlength}} ng-maxlength={{options.maxlength}} ng-model=\\\"result[options.key || index]\\\"><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-password.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Password'}} {{options.required ? '*' : ''}}</label><input type=password class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-trim=\\\"{{options.trimWhitespace || false}}\\\" ng-model=\\\"result[options.key || index]\\\"><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-radio.html',\n-    \"<div class=radio-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label class=control-label>{{options.label}} {{options.required ? '*' : ''}}</label><div class=radio ng-repeat=\\\"(key, option) in options.options\\\"><label><input type=radio formly-dynamic-name=options.key formly-custom-validation=options.validators id=\\\"{{id + '_'+ $index}}\\\" aria-describedby={{id}}_description ng-value=option.value ng-required=options.required ng-model=\\\"$parent.result[$parent.options.key || $parent.index]\\\"> {{option.name}}</label><p id={{id}}_description class=help-block ng-if=option.description>{{option.description}}</p></div></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-select.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Select'}} {{options.required ? '*' : ''}}</label><select class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators aria-describedby={{id}}_description ng-model=\\\"result[options.key || index]\\\" ng-required=options.required ng-disabled=options.disabled ng-options=\\\"option.value as option.name group by option.group for option in options.options\\\"></select><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-text.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Text'}} {{options.required ? '*' : ''}}</label><input type=text class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators placeholder={{options.placeholder}} aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-model=\\\"result[options.key || index]\\\"><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-\n-  $templateCache.put('fields/formly-field-textarea.html',\n-    \"<div class=form-group ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label for={{id}}>{{options.label || 'Text'}} {{options.required ? '*' : ''}}</label><textarea type=text class=form-control id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators rows={{options.lines}} placeholder={{options.placeholder}} aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-model=\\\"result[options.key || index]\\\">\\n\" +\n-    \"\\t</textarea><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n-  );\n-\n-}]);\n-angular.module('formly.render').run(['$templateCache', function($templateCache) {\n-  'use strict';\n-\n   $templateCache.put('directives/formly-form.html',\n     \"<form class=formly role=form><formly-field ng-repeat=\\\"field in fields\\\" options=field form-result=result form-id=options.uniqueFormId ng-if=!field.hide index=$index></formly-field><div ng-transclude></div></form>\"\n   );\n \n-}]);\n-angular.module('formly.render').run(['$templateCache', function($templateCache) {\n-  'use strict';\n \n-  $templateCache.put('fields/formly-field-checkbox.html',\n+  $templateCache.put('bootstrap/fields/formly-field-checkbox.html',\n     \"<div class=checkbox ng-class=\\\"{'has-error': options.formField.$invalid}\\\"><label><input type=checkbox id={{id}} formly-dynamic-name=options.key formly-custom-validation=options.validators aria-describedby={{id}}_description ng-required=options.required ng-disabled=options.disabled ng-model=\\\"result[options.key || index]\\\"> {{options.label || 'Checkbox'}} {{options.required ? '*' : ''}}</label><p id={{id}}_description class=help-block ng-if=options.description>{{options.description}}</p></div>\"\n   );\n \n \n-  $templateCache.put('fields/formly-field-email.html',\n+  $templateCache.put('bootstrap/fields/formly-field-email.html',",
        "path": "dist/formly.bootstrap.js",
        "position": 68,
        "original_position": 68,
        "commit_id": "9c5794e3f8eb60a9a0887bf6102ccdbdf5604c31",
        "original_commit_id": "9c5794e3f8eb60a9a0887bf6102ccdbdf5604c31",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If this (and others like it) could be changed back to the way they were before that would be great. We want to make sure that a user could swap out the template at any time so it needs to be the same for bootstrap and vanilla...\n\nActually, maybe this is a good opportunity to make some changes. How hard do you think it would be to make this url be: `formly-fields/email.html` instead? We're hoping to have other template bases in the future and doing this would make creating a template base much easier to do. What do you think?\n",
        "created_at": "2014-09-29T17:32:10Z",
        "updated_at": "2014-09-29T17:32:10Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/110#discussion_r18169365",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/110",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/18169365"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/110#discussion_r18169365"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/110"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161173",
        "pull_request_review_id": null,
        "id": 27161173,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTYxMTcz",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Missed this. We can't do this. This would be a breaking change. Also, we want to default to `ng-form` because `form`s cannot be nested, and that's a pretty big use case for angular-formly.\n",
        "created_at": "2015-03-25T20:16:38Z",
        "updated_at": "2015-03-25T20:16:38Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161173",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161173"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161173"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161615",
        "pull_request_review_id": null,
        "id": 27161615,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTYxNjE1",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "koenweyn",
            "id": 1275037,
            "node_id": "MDQ6VXNlcjEyNzUwMzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1275037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koenweyn",
            "html_url": "https://github.com/koenweyn",
            "followers_url": "https://api.github.com/users/koenweyn/followers",
            "following_url": "https://api.github.com/users/koenweyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/koenweyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/koenweyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/koenweyn/subscriptions",
            "organizations_url": "https://api.github.com/users/koenweyn/orgs",
            "repos_url": "https://api.github.com/users/koenweyn/repos",
            "events_url": "https://api.github.com/users/koenweyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/koenweyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ok, would you be fine with it to only do that when running in IE8?\nOr do a &lt;div ng-form&gt; when running in IE8?\nIE8 can't cope with ng-form and directive replace because for some reason custom tags in IE8 look like having multiple root nodes.\n",
        "created_at": "2015-03-25T20:21:22Z",
        "updated_at": "2015-03-25T20:21:48Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161615",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161615"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161615"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161891",
        "pull_request_review_id": null,
        "id": 27161891,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTYxODkx",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Definitely don't want to have it change this kind of behavior in different browsers. That could lead to some really odd bugs. Why couldn't we simply add `'ng-form'` to the list of custom elements in the `formlyCustomTags` file you've made?\n",
        "created_at": "2015-03-25T20:23:41Z",
        "updated_at": "2015-03-25T20:23:41Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161891",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27161891"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27161891"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27162230",
        "pull_request_review_id": null,
        "id": 27162230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTYyMjMw",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "koenweyn",
            "id": 1275037,
            "node_id": "MDQ6VXNlcjEyNzUwMzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1275037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koenweyn",
            "html_url": "https://github.com/koenweyn",
            "followers_url": "https://api.github.com/users/koenweyn/followers",
            "following_url": "https://api.github.com/users/koenweyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/koenweyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/koenweyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/koenweyn/subscriptions",
            "organizations_url": "https://api.github.com/users/koenweyn/orgs",
            "repos_url": "https://api.github.com/users/koenweyn/repos",
            "events_url": "https://api.github.com/users/koenweyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/koenweyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sadly that doesn't work, even when you add ng-form to the custom tags. But I'll try to find another way. Stay tuned! ;-)\n",
        "created_at": "2015-03-25T20:26:54Z",
        "updated_at": "2015-03-25T20:26:54Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27162230",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27162230"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27162230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27231223",
        "pull_request_review_id": null,
        "id": 27231223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjMxMjIz",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "koenweyn",
            "id": 1275037,
            "node_id": "MDQ6VXNlcjEyNzUwMzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1275037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koenweyn",
            "html_url": "https://github.com/koenweyn",
            "followers_url": "https://api.github.com/users/koenweyn/followers",
            "following_url": "https://api.github.com/users/koenweyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/koenweyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/koenweyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/koenweyn/subscriptions",
            "organizations_url": "https://api.github.com/users/koenweyn/orgs",
            "repos_url": "https://api.github.com/users/koenweyn/repos",
            "events_url": "https://api.github.com/users/koenweyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/koenweyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@kentcdodds Would you be fine with this change:\n\n``` javascript\n        var formTag = (attrs.rootEl || 'ng-form').split(' ');\n        var formEl = formTag[0];\n        var formAtt = formTag.slice(1).join(' ');\n\n        return `\n          <${formEl} ${formAtt} class=\"formly\">\n          </${formEl}>\n        `;\n```\n\nThat way, the default is still 'ng-form', and users can specify things like `root-el=\"form\"` or `root-el=\"div ng-form\"`.\n",
        "created_at": "2015-03-26T16:45:39Z",
        "updated_at": "2015-03-26T16:45:39Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27231223",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27231223"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27231223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27262172",
        "pull_request_review_id": null,
        "id": 27262172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjYyMTcy",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would rather not overload the `rootEl` attribute to do this. I think the current implementation allows you to deal with the issue just fine. If you want to use an `ng-form` but you don't want it to be the root element, then you can do:\n\n``` html\n<div ng-form>\n  <formly-form root-el=\"div\">\n  </formly-form>\n</div>\n```\n",
        "created_at": "2015-03-26T22:22:47Z",
        "updated_at": "2015-03-26T22:22:47Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27262172",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27262172"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27262172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27264613",
        "pull_request_review_id": null,
        "id": 27264613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjY0NjEz",
        "diff_hunk": "@@ -16,7 +16,7 @@ module.exports = ngModule => {\n       restrict: 'E',\n       template: function(el, attrs) {\n         /* jshint -W033 */ // this because jshint is broken I guess...\n-        var rootEl = attrs.rootEl || 'ng-form';\n+        var rootEl = attrs.rootEl || 'form';",
        "path": "src/directives/formly-form.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "original_commit_id": "5efdfd6106de60f2c7501c67a556bf34c14fc4c8",
        "user": {
            "login": "koenweyn",
            "id": 1275037,
            "node_id": "MDQ6VXNlcjEyNzUwMzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1275037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koenweyn",
            "html_url": "https://github.com/koenweyn",
            "followers_url": "https://api.github.com/users/koenweyn/followers",
            "following_url": "https://api.github.com/users/koenweyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/koenweyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/koenweyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/koenweyn/subscriptions",
            "organizations_url": "https://api.github.com/users/koenweyn/orgs",
            "repos_url": "https://api.github.com/users/koenweyn/repos",
            "events_url": "https://api.github.com/users/koenweyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/koenweyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're absolutely right, I'll close this PR and will open a new one with these lines reverted.\n",
        "created_at": "2015-03-26T23:02:39Z",
        "updated_at": "2015-03-26T23:02:39Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27264613",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/211",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/27264613"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/211#discussion_r27264613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/211"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322140",
        "pull_request_review_id": null,
        "id": 28322140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzIyMTQw",
        "diff_hunk": "@@ -9,9 +9,23 @@ const ngModuleName = 'formly';\n const angular = require('./angular-fix');\n const ngModule = angular.module(ngModuleName, []);\n \n-require('./providers')(ngModule);\n-require('./services')(ngModule);\n-require('./directives')(ngModule);\n-require('./run')(ngModule);\n+ngModule.constant('formlyApiCheck', require('./providers/formlyApiCheck'));",
        "path": "src/index.common.js",
        "position": null,
        "original_position": 8,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there a reason we can't use `import` here? I realize that you can't do an inline `import` statement like you can with `require` so we'd have to put all of these imports at the top, which is annoying, but I think it'd be nice to be consistent.\n",
        "created_at": "2015-04-14T12:36:30Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322140",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322140"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322170",
        "pull_request_review_id": null,
        "id": 28322170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzIyMTcw",
        "diff_hunk": "@@ -1,8 +1,17 @@\n-require('./angular-fix');\n+let angular = require('./angular-fix');",
        "path": "src/index.test.js",
        "position": null,
        "original_position": 2,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could we use `import` in this file as well?\n",
        "created_at": "2015-04-14T12:37:06Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322170",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322170"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322246",
        "pull_request_review_id": null,
        "id": 28322246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzIyMjQ2",
        "diff_hunk": "@@ -1,6 +1,4 @@\n-const angular = require('angular-fix');\n-\n-export default {formlyEval, getFieldId, reverseDeepMerge, findByNodeName};",
        "path": "src/other/utils.js",
        "position": null,
        "original_position": 3,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I actually prefer to do all of my `export`s at the top of the file so I (and others) don't have to scroll to the bottom to find the important stuff. Could you update the PR to do this?\n",
        "created_at": "2015-04-14T12:38:10Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322246",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28322246"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28322246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28330894",
        "pull_request_review_id": null,
        "id": 28330894,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzMwODk0",
        "diff_hunk": "@@ -9,9 +9,23 @@ const ngModuleName = 'formly';\n const angular = require('./angular-fix');\n const ngModule = angular.module(ngModuleName, []);\n \n-require('./providers')(ngModule);\n-require('./services')(ngModule);\n-require('./directives')(ngModule);\n-require('./run')(ngModule);\n+ngModule.constant('formlyApiCheck', require('./providers/formlyApiCheck'));",
        "path": "src/index.common.js",
        "position": null,
        "original_position": 8,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "sparty02",
            "id": 1483538,
            "node_id": "MDQ6VXNlcjE0ODM1Mzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1483538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sparty02",
            "html_url": "https://github.com/sparty02",
            "followers_url": "https://api.github.com/users/sparty02/followers",
            "following_url": "https://api.github.com/users/sparty02/following{/other_user}",
            "gists_url": "https://api.github.com/users/sparty02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sparty02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sparty02/subscriptions",
            "organizations_url": "https://api.github.com/users/sparty02/orgs",
            "repos_url": "https://api.github.com/users/sparty02/repos",
            "events_url": "https://api.github.com/users/sparty02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sparty02/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Using `require` vs `import` was simply, as you alluded to, to avoid boilerplate.  In the case of this file, I took a shortcut to be able to inline the requires to register in the angular module.  However, I agree that, for consistency, ES6 module syntax should probably be used throughout.\n",
        "created_at": "2015-04-14T14:24:32Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28330894",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28330894"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28330894"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28330924",
        "pull_request_review_id": null,
        "id": 28330924,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzMwOTI0",
        "diff_hunk": "@@ -1,8 +1,17 @@\n-require('./angular-fix');\n+let angular = require('./angular-fix');",
        "path": "src/index.test.js",
        "position": null,
        "original_position": 2,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "sparty02",
            "id": 1483538,
            "node_id": "MDQ6VXNlcjE0ODM1Mzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1483538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sparty02",
            "html_url": "https://github.com/sparty02",
            "followers_url": "https://api.github.com/users/sparty02/followers",
            "following_url": "https://api.github.com/users/sparty02/following{/other_user}",
            "gists_url": "https://api.github.com/users/sparty02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sparty02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sparty02/subscriptions",
            "organizations_url": "https://api.github.com/users/sparty02/orgs",
            "repos_url": "https://api.github.com/users/sparty02/repos",
            "events_url": "https://api.github.com/users/sparty02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sparty02/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yep.\n",
        "created_at": "2015-04-14T14:24:45Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28330924",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28330924"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28330924"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28333840",
        "pull_request_review_id": null,
        "id": 28333840,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzMzODQw",
        "diff_hunk": "@@ -1,6 +1,4 @@\n-const angular = require('angular-fix');\n-\n-export default {formlyEval, getFieldId, reverseDeepMerge, findByNodeName};",
        "path": "src/other/utils.js",
        "position": null,
        "original_position": 3,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "sparty02",
            "id": 1483538,
            "node_id": "MDQ6VXNlcjE0ODM1Mzg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1483538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sparty02",
            "html_url": "https://github.com/sparty02",
            "followers_url": "https://api.github.com/users/sparty02/followers",
            "following_url": "https://api.github.com/users/sparty02/following{/other_user}",
            "gists_url": "https://api.github.com/users/sparty02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sparty02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sparty02/subscriptions",
            "organizations_url": "https://api.github.com/users/sparty02/orgs",
            "repos_url": "https://api.github.com/users/sparty02/repos",
            "events_url": "https://api.github.com/users/sparty02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sparty02/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can understand your preference, but just so you have some context, here's why I put exports at the bottom:\n1. More intuitive mental model for structure:\n   - import stuff\n   - do stuff with imports and declare new stuff\n   - export stuff\n2. Avoid hoisting issues.  If you are simply exporting named functions, you wouldn't run into this, but if you export declared variables, you are hosed.\n\nI'm curious as to what the larger community style is (maybe there is room in some kind of style guide for this kind of thing).\n\nHowever, all that said, I respect your existing style and will change to fit that!\n",
        "created_at": "2015-04-14T14:53:13Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28333840",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28333840"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28333840"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28342454",
        "pull_request_review_id": null,
        "id": 28342454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQyNDU0",
        "diff_hunk": "@@ -1,6 +1,4 @@\n-const angular = require('angular-fix');\n-\n-export default {formlyEval, getFieldId, reverseDeepMerge, findByNodeName};",
        "path": "src/other/utils.js",
        "position": null,
        "original_position": 3,
        "commit_id": "313aca9a3ee0d688d4eefe598728ee745e3f320e",
        "original_commit_id": "e1b186bfbeba6d4378e725f6b926f21ed7f8f7a6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Your arguments make sense. But even if you're exporting variables, I would prefer something like this:\n\n``` javascript\n// imports\nimport something from 'something-else';\n\n// variable declaration\nconst someVar = getSomeVar();\n\n// export stuff (rely on function declaration hoisting)\nexport {someVar, someFunc};\n\n\n\n// function declarations\nfunction someFunc() {\n}\n\nfunction getSomeVar() {\n  return 'foo';\n}\n```\n\nI like this because it reads like a newspaper. Important, high-level stuff on top. Details below.\n\nNot sure what the community's thought is on this, but I use it for my projects and I really like the \"newspaper\" mentality.\n",
        "created_at": "2015-04-14T16:15:35Z",
        "updated_at": "2015-04-15T02:44:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28342454",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/242",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/28342454"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/242#discussion_r28342454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/242"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/30449711",
        "pull_request_review_id": null,
        "id": 30449711,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDQ5NzEx",
        "diff_hunk": "@@ -331,17 +331,25 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n   }\n \n   function getFieldTemplate(options) {\n+    function fromOptionsOrType(key, type){\n+      if(angular.isDefined(options[key])){\n+        return options[key];\n+      } else if(type && angular.isDefined(type[key])){\n+        return type[key];\n+      }\n+    }\n+\n     let type = formlyConfig.getType(options.type, true, options);\n-    let template = options.template || type && type.template;\n-    let templateUrl = options.templateUrl || type && type.templateUrl;\n-    if (!template && !templateUrl) {\n+    let template = fromOptionsOrType('template', type);\n+    let templateUrl = fromOptionsOrType('templateUrl', type);\n+    if (angular.isUndefined(template) && !templateUrl) {",
        "path": "src/directives/formly-field.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "bb1cdd3e57ce3c969758b23f4de91bfa33a5a009",
        "original_commit_id": "bb1cdd3e57ce3c969758b23f4de91bfa33a5a009",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I may be wrong, but I don't think angular 1.2 had isUndefined. I think we need to use isDefined.\n",
        "created_at": "2015-05-15T22:00:39Z",
        "updated_at": "2015-05-15T22:00:39Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/292#discussion_r30449711",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/30449711"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/292#discussion_r30449711"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/30450770",
        "pull_request_review_id": null,
        "id": 30450770,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDUwNzcw",
        "diff_hunk": "@@ -331,17 +331,25 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n   }\n \n   function getFieldTemplate(options) {\n+    function fromOptionsOrType(key, type){\n+      if(angular.isDefined(options[key])){\n+        return options[key];\n+      } else if(type && angular.isDefined(type[key])){\n+        return type[key];\n+      }\n+    }\n+\n     let type = formlyConfig.getType(options.type, true, options);\n-    let template = options.template || type && type.template;\n-    let templateUrl = options.templateUrl || type && type.templateUrl;\n-    if (!template && !templateUrl) {\n+    let template = fromOptionsOrType('template', type);\n+    let templateUrl = fromOptionsOrType('templateUrl', type);\n+    if (angular.isUndefined(template) && !templateUrl) {",
        "path": "src/directives/formly-field.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "bb1cdd3e57ce3c969758b23f4de91bfa33a5a009",
        "original_commit_id": "bb1cdd3e57ce3c969758b23f4de91bfa33a5a009",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It still supports it https://code.angularjs.org/1.2.27/docs/api/ng/function/angular.isUndefined.\n",
        "created_at": "2015-05-15T22:20:56Z",
        "updated_at": "2015-05-15T22:20:56Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/292#discussion_r30450770",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/292",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/30450770"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/292#discussion_r30450770"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/292"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386564",
        "pull_request_review_id": null,
        "id": 31386564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTY0",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is there not a need for an else statement here? What happens to the $viewValue of a multiNgModel?\n",
        "created_at": "2015-05-31T03:37:22Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386564",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386564"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386572",
        "pull_request_review_id": null,
        "id": 31386572,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTcy",
        "diff_hunk": "@@ -799,6 +812,51 @@ describe('formly-field', function() {\n       expect(field.formControl.$touched).to.be.false;\n       expect(field.formControl.$dirty).to.be.false;\n     });\n+\n+    it.only(`should reset the form state for an field with multiple ng-models`, () => {",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 34,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please take the `.only` off of this. Also while you're fixing that, it should be: \"...for a field with...\"\n",
        "created_at": "2015-05-31T03:38:58Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386572",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386572"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386572"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386574",
        "pull_request_review_id": null,
        "id": 31386574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTc0",
        "diff_hunk": "@@ -799,6 +812,51 @@ describe('formly-field', function() {\n       expect(field.formControl.$touched).to.be.false;\n       expect(field.formControl.$dirty).to.be.false;\n     });\n+\n+    it.only(`should reset the form state for an field with multiple ng-models`, () => {\n+      const field = {\n+        key: 'multiNgModel',\n+        template: multiNgModelField\n+      };\n+      scope.fields = [field];\n+      compileAndDigest();\n+\n+      // initial state\n+      expect(field.formControl[0].$dirty).to.be.false;\n+      expect(field.formControl[0].$touched).to.be.false;\n+      expect(field.formControl[1].$dirty).to.be.false;\n+      expect(field.formControl[1].$touched).to.be.false;\n+\n+      scope.model.multiNgModel = {\n+        start: 0,\n+        stop: 20\n+      };\n+      field.formControl[0].$setDirty();\n+      field.formControl[0].$setTouched();\n+      field.formControl[1].$setDirty();\n+      field.formControl[1].$setTouched();\n+      scope.$digest();\n+\n+      // expect modification\n+      expect(field.formControl[0].$dirty).to.be.true;\n+      expect(field.formControl[0].$touched).to.be.true;\n+      expect(field.formControl[0].$modelValue).to.eq(0);\n+      expect(field.formControl[1].$dirty).to.be.true;\n+      expect(field.formControl[1].$touched).to.be.true;\n+      expect(field.formControl[1].$modelValue).to.eq(20);\n+\n+      // reset state\n+      field.resetModel();\n+      scope.$digest();",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 68,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Digest is needed to have $modelValue cleared out.\n",
        "created_at": "2015-05-31T03:39:28Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386574",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386574"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386593",
        "pull_request_review_id": null,
        "id": 31386593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTkz",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "IMO this actually doesn't need to be there for either scenarios as long as a digest occurs.  Also I worried that line 167 skips $formatters.\n",
        "created_at": "2015-05-31T03:41:36Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386593",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386593"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386596",
        "pull_request_review_id": null,
        "id": 31386596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTk2",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm... Not super familiar with the `$formatters` pipeline. What makes you worry that it causes them to be skipped? Should we remove it?\n",
        "created_at": "2015-05-31T03:43:28Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386596",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386596"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386599",
        "pull_request_review_id": null,
        "id": 31386599,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NTk5",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, I think I understand. It's because we're explicitly setting the `$viewValue` without running it through `$formatters`? I would expect that angular does that for us when we call `$setViewValue` though... But I don't know.\n",
        "created_at": "2015-05-31T03:44:20Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386599",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386599"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386599"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386625",
        "pull_request_review_id": null,
        "id": 31386625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NjI1",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well it will run it though $parsers in that case I believe.\n",
        "created_at": "2015-05-31T03:48:19Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386625",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386625"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386627",
        "pull_request_review_id": null,
        "id": 31386627,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NjI3",
        "diff_hunk": "@@ -799,6 +812,51 @@ describe('formly-field', function() {\n       expect(field.formControl.$touched).to.be.false;\n       expect(field.formControl.$dirty).to.be.false;\n     });\n+\n+    it.only(`should reset the form state for an field with multiple ng-models`, () => {",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 34,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh good catch sorry about that.\n",
        "created_at": "2015-05-31T03:48:33Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386627",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386627"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386627"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386660",
        "pull_request_review_id": null,
        "id": 31386660,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2NjYw",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I foresee calling setViewValue on fields that use getterSetter modelOptions could be a problem.  I have one that I do that with but have never tried a reset on it so I don't know yet.  We could always have a safe call to digest inside of resetFormControl.\n",
        "created_at": "2015-05-31T03:54:37Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386660",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386660"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386660"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386695",
        "pull_request_review_id": null,
        "id": 31386695,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2Njk1",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yeah, that might not be a bad idea...\n",
        "created_at": "2015-05-31T04:03:07Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386695",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386695"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386695"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386984",
        "pull_request_review_id": null,
        "id": 31386984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMzg2OTg0",
        "diff_hunk": "@@ -152,13 +152,26 @@ function formlyField($http, $q, $compile, $templateCache, formlyConfig, formlyVa\n     function resetModel() {\n       $scope.model[$scope.options.key] = $scope.options.initialValue;\n       if ($scope.options.formControl) {\n-        $scope.options.formControl.$setViewValue($scope.model[$scope.options.key]);\n-        $scope.options.formControl.$render();\n-        $scope.options.formControl.$setUntouched();\n-        $scope.options.formControl.$setPristine();\n+        if(angular.isArray($scope.options.formControl)){\n+          angular.forEach($scope.options.formControl, function(formControl){\n+            resetFormControl(formControl, true);\n+          });\n+        } else {\n+          resetFormControl($scope.options.formControl);\n+        }\n       }\n     }\n \n+    function resetFormControl(formControl, isMultiNgModel){\n+      if(!isMultiNgModel){\n+        formControl.$setViewValue($scope.model[$scope.options.key]);\n+      }",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "211658cba0b957e8707e608148f1a1979407da5d",
        "original_commit_id": "33db757aceb817cd508d497c4de099ab1203699a",
        "user": {
            "login": "ckniffen",
            "id": 464895,
            "node_id": "MDQ6VXNlcjQ2NDg5NQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/464895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ckniffen",
            "html_url": "https://github.com/ckniffen",
            "followers_url": "https://api.github.com/users/ckniffen/followers",
            "following_url": "https://api.github.com/users/ckniffen/following{/other_user}",
            "gists_url": "https://api.github.com/users/ckniffen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ckniffen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ckniffen/subscriptions",
            "organizations_url": "https://api.github.com/users/ckniffen/orgs",
            "repos_url": "https://api.github.com/users/ckniffen/repos",
            "events_url": "https://api.github.com/users/ckniffen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ckniffen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This would be a breaking change if we require digest to be called manually after resetFormControl.  While looking up ways to be safe with calling $digest it seems that checking the $$phase is not good form so I defer to you the decision about how to best handle this.\n",
        "created_at": "2015-05-31T05:18:52Z",
        "updated_at": "2015-06-02T15:56:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386984",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/327",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/31386984"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/327#discussion_r31386984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/327"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32142834",
        "pull_request_review_id": null,
        "id": 32142834,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQyODM0",
        "diff_hunk": "@@ -92,14 +92,16 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       $scope.formOptions = $scope.formOptions || {};\n     }\n \n-    function setFieldId() {\n+    function setFieldIdAndName() {\n       if (angular.isFunction(formlyConfig.extras.getFieldId)) {\n         $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);\n       } else {\n         const formName = ($scope.form && $scope.form.$name) || $scope.formId;\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "aff1530780590cac954ff96061d35c3adafd12f0",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this line should be bumped down one line.\n",
        "created_at": "2015-06-10T17:26:05Z",
        "updated_at": "2015-06-10T17:57:24Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32142834",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32142834"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32142834"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144305",
        "pull_request_review_id": null,
        "id": 32144305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQ0MzA1",
        "diff_hunk": "@@ -92,14 +92,16 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       $scope.formOptions = $scope.formOptions || {};\n     }\n \n-    function setFieldId() {\n+    function setFieldIdAndName() {\n       if (angular.isFunction(formlyConfig.extras.getFieldId)) {\n         $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);\n       } else {\n         const formName = ($scope.form && $scope.form.$name) || $scope.formId;\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "aff1530780590cac954ff96061d35c3adafd12f0",
        "user": {
            "login": "benoror",
            "id": 119117,
            "node_id": "MDQ6VXNlcjExOTExNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benoror",
            "html_url": "https://github.com/benoror",
            "followers_url": "https://api.github.com/users/benoror/followers",
            "following_url": "https://api.github.com/users/benoror/following{/other_user}",
            "gists_url": "https://api.github.com/users/benoror/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benoror/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benoror/subscriptions",
            "organizations_url": "https://api.github.com/users/benoror/orgs",
            "repos_url": "https://api.github.com/users/benoror/repos",
            "events_url": "https://api.github.com/users/benoror/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benoror/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sorry for the noobish question, what's the cleaner way to amend this as a single commit? maybe [git revert](https://github.com/blog/2019-how-to-undo-almost-anything-with-git)?\n",
        "created_at": "2015-06-10T17:39:38Z",
        "updated_at": "2015-06-10T17:57:24Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144305",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144305"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144911",
        "pull_request_review_id": null,
        "id": 32144911,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQ0OTEx",
        "diff_hunk": "@@ -92,14 +92,16 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       $scope.formOptions = $scope.formOptions || {};\n     }\n \n-    function setFieldId() {\n+    function setFieldIdAndName() {\n       if (angular.isFunction(formlyConfig.extras.getFieldId)) {\n         $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);\n       } else {\n         const formName = ($scope.form && $scope.form.$name) || $scope.formId;\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "aff1530780590cac954ff96061d35c3adafd12f0",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No worries! I'm no git expert either. But I think that a git revert may not be the best way... One second...\n",
        "created_at": "2015-06-10T17:45:08Z",
        "updated_at": "2015-06-10T17:57:24Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144911",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144911"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144911"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144995",
        "pull_request_review_id": null,
        "id": 32144995,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQ0OTk1",
        "diff_hunk": "@@ -92,14 +92,16 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       $scope.formOptions = $scope.formOptions || {};\n     }\n \n-    function setFieldId() {\n+    function setFieldIdAndName() {\n       if (angular.isFunction(formlyConfig.extras.getFieldId)) {\n         $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);\n       } else {\n         const formName = ($scope.form && $scope.form.$name) || $scope.formId;\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "aff1530780590cac954ff96061d35c3adafd12f0",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think that what you'll want to do is:\n\n```\n$ git reset --soft HEAD^\n$ git commit -am 'Your message'\n```\n",
        "created_at": "2015-06-10T17:45:50Z",
        "updated_at": "2015-06-10T17:57:24Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144995",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32144995"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32144995"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32145250",
        "pull_request_review_id": null,
        "id": 32145250,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQ1MjUw",
        "diff_hunk": "@@ -92,14 +92,16 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       $scope.formOptions = $scope.formOptions || {};\n     }\n \n-    function setFieldId() {\n+    function setFieldIdAndName() {\n       if (angular.isFunction(formlyConfig.extras.getFieldId)) {\n         $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);\n       } else {\n         const formName = ($scope.form && $scope.form.$name) || $scope.formId;\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 21,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "aff1530780590cac954ff96061d35c3adafd12f0",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You'll have to do a force push as well, so beware... `git push -f`\n",
        "created_at": "2015-06-10T17:47:45Z",
        "updated_at": "2015-06-10T17:57:24Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32145250",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32145250"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32145250"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32146425",
        "pull_request_review_id": null,
        "id": 32146425,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTQ2NDI1",
        "diff_hunk": "@@ -100,6 +100,8 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n         $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index);\n       }\n       $scope.options.id = $scope.id;\n+      $scope.name = $scope.options.name || $scope.options.id;",
        "path": "src/directives/formly-field.js",
        "position": 22,
        "original_position": 22,
        "commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "original_commit_id": "f181343440e076deff5b85ed6fb65aafe1213c00",
        "user": {
            "login": "benoror",
            "id": 119117,
            "node_id": "MDQ6VXNlcjExOTExNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benoror",
            "html_url": "https://github.com/benoror",
            "followers_url": "https://api.github.com/users/benoror/followers",
            "following_url": "https://api.github.com/users/benoror/following{/other_user}",
            "gists_url": "https://api.github.com/users/benoror/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benoror/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benoror/subscriptions",
            "organizations_url": "https://api.github.com/users/benoror/orgs",
            "repos_url": "https://api.github.com/users/benoror/repos",
            "events_url": "https://api.github.com/users/benoror/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benoror/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done!\n",
        "created_at": "2015-06-10T17:58:07Z",
        "updated_at": "2015-06-10T17:58:07Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32146425",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/346",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32146425"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/346#discussion_r32146425"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/346"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32274265",
        "pull_request_review_id": null,
        "id": 32274265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjc0MjY1",
        "diff_hunk": "@@ -997,6 +997,28 @@ describe('formly-field', function() {\n       expect(() => compileAndDigest()).to.throw();\n     });\n \n+    it(`should share the form with a fieldGroup`, () => {",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 4,
        "commit_id": "a07028cf874ec000c4a301ecd0453bfcbf0089dc",
        "original_commit_id": "55df6158d692ac1a423eff1a07abe5b91e0d52da",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think you put this in the `describe` for `model`. Do you mind creating a new `describe('fieldGroup')` and putting this test in that one? While you're at it, you could move the `describe(fieldGroup with specified \"key\" property)` inside that new one if you want. :+1:\n",
        "created_at": "2015-06-11T22:13:49Z",
        "updated_at": "2015-06-11T22:22:56Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/348#discussion_r32274265",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/348",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32274265"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/348#discussion_r32274265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/348"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32442460",
        "pull_request_review_id": null,
        "id": 32442460,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyNDQyNDYw",
        "diff_hunk": "@@ -0,0 +1,33 @@\n+var exec = require('child_process').exec;\n+\n+var command_line;\n+var environ;\n+\n+switch(process.argv[2]) {\n+  case 'build':\n+    command_line = 'webpack --config $npm_package_webpack --progress --colors';",
        "path": "scripts/exec.js",
        "position": null,
        "original_position": 8,
        "commit_id": "b039b1b990ef137ab0b7242d3c31a2e96077a018",
        "original_commit_id": "4325f697a2507330c391d5c44590f27e56211b8f",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I wondered about this one... Just put `'./node_modules/kcd-common-tools/shared/webpack.config.js'` in directly instead of `$npm_package_webpack`\n",
        "created_at": "2015-06-15T17:04:30Z",
        "updated_at": "2015-06-15T17:12:30Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/350#discussion_r32442460",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/350",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/32442460"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/350#discussion_r32442460"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/350"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33294426",
        "pull_request_review_id": null,
        "id": 33294426,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjk0NDI2",
        "diff_hunk": "@@ -18,7 +18,7 @@ function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate) {\n       return template;\n     }\n     el.innerHTML = template;\n-    var modelNodes = el.querySelectorAll('[ng-model], [data-ng-model]');\n+    var modelNodes = el.querySelectorAll('[ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing), [data-ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing)');",
        "path": "src/run/formlyNgModelAttrsManipulator.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "7ebaff12fe6b94a671a01f5c379d6916a7b406cd",
        "original_commit_id": "8ae3e22569eea26c030e1737d399be23c5a8e196",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I updated the test to make the `.ignored-thing` class totally random. The idea behind this feature is to be able to specify any selector you like as part of the `data.skipNgModelAttrsManipulator` and have that value used in the `:not(` selector (but only if it is a string).\n",
        "created_at": "2015-06-25T19:23:06Z",
        "updated_at": "2015-06-25T19:49:41Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33294426",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/363",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33294426"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33294426"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/363"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33294617",
        "pull_request_review_id": null,
        "id": 33294617,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjk0NjE3",
        "diff_hunk": "@@ -18,7 +18,7 @@ function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate) {\n       return template;\n     }\n     el.innerHTML = template;\n-    var modelNodes = el.querySelectorAll('[ng-model], [data-ng-model]');\n+    var modelNodes = el.querySelectorAll('[ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing), [data-ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing)');",
        "path": "src/run/formlyNgModelAttrsManipulator.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "7ebaff12fe6b94a671a01f5c379d6916a7b406cd",
        "original_commit_id": "8ae3e22569eea26c030e1737d399be23c5a8e196",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also, this line is quite long (and I've updated the pre-commit hook so you wont be able to do this anymore), perhaps you could use the [ES6 template string expression interpolation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings#Expression_interpolation) and pull parts of this out into variables that you then use to construct the `query` that's passed to the `querySelectorAll`.\n",
        "created_at": "2015-06-25T19:25:10Z",
        "updated_at": "2015-06-25T19:49:41Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33294617",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/363",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33294617"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33294617"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/363"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33297827",
        "pull_request_review_id": null,
        "id": 33297827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjk3ODI3",
        "diff_hunk": "@@ -18,7 +18,7 @@ function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate) {\n       return template;\n     }\n     el.innerHTML = template;\n-    var modelNodes = el.querySelectorAll('[ng-model], [data-ng-model]');\n+    var modelNodes = el.querySelectorAll('[ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing), [data-ng-model]:not([formly-skip-ng-model-attrs-manipulator]):not(.ignored-thing)');",
        "path": "src/run/formlyNgModelAttrsManipulator.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "7ebaff12fe6b94a671a01f5c379d6916a7b406cd",
        "original_commit_id": "8ae3e22569eea26c030e1737d399be23c5a8e196",
        "user": {
            "login": "ccasad",
            "id": 1408618,
            "node_id": "MDQ6VXNlcjE0MDg2MTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1408618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ccasad",
            "html_url": "https://github.com/ccasad",
            "followers_url": "https://api.github.com/users/ccasad/followers",
            "following_url": "https://api.github.com/users/ccasad/following{/other_user}",
            "gists_url": "https://api.github.com/users/ccasad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ccasad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ccasad/subscriptions",
            "organizations_url": "https://api.github.com/users/ccasad/orgs",
            "repos_url": "https://api.github.com/users/ccasad/repos",
            "events_url": "https://api.github.com/users/ccasad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ccasad/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So how do I pull your changes? \n\ngit pull https://github.com/formly-js/angular-formly.git master\n\nI tried the above and got conflicts with the test file which I resolved and then it told me to do a rebase --continue which I did but looks like my files keep going back to what they were before.\n",
        "created_at": "2015-06-25T19:58:58Z",
        "updated_at": "2015-06-25T19:58:58Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33297827",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/363",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33297827"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/363#discussion_r33297827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/363"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33298384",
        "pull_request_review_id": null,
        "id": 33298384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjk4Mzg0",
        "diff_hunk": "@@ -18,7 +18,10 @@ function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate) {\n       return template;\n     }\n     el.innerHTML = template;\n-    var modelNodes = el.querySelectorAll('[ng-model], [data-ng-model]');\n+    var elementFilter = ':not([formly-skip-ng-model-attrs-manipulator])' +\n+                        ':not(' + data.skipNgModelAttrsManipulator + ')';",
        "path": "src/run/formlyNgModelAttrsManipulator.js",
        "position": null,
        "original_position": 6,
        "commit_id": "6de5d43dbf5b41bd392e41c8d76a8628ae65f867",
        "original_commit_id": "88f6e45dd846556c6567e234837498c5ce2661c9",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Awesome! I should have covered this in the tests, but what if I pass `false` as the skipNgModelAttrsManipulator? :-)\n",
        "created_at": "2015-06-25T20:04:40Z",
        "updated_at": "2015-06-25T21:27:45Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/364#discussion_r33298384",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/364",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/33298384"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/364#discussion_r33298384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/364"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34620281",
        "pull_request_review_id": null,
        "id": 34620281,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjIwMjgx",
        "diff_hunk": "@@ -358,6 +358,25 @@ describe('formly-form', () => {\n \n   });\n \n+  describe('hideExpression', () => {\n+    beforeEach(() => {\n+      scope.model = {};\n+      scope.fieldModel = {};\n+\n+      scope.fields = [\n+        {template: input, key: 'foo', model: scope.fieldModel},\n+        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo}\n+      ];\n+    });\n+\n+    it('should be updated when field model changes', () => {",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 15,
        "commit_id": "7adde3be37595d5ebbde80a636c84ce338b32f34",
        "original_commit_id": "8a8c4991311b7441403f5f6e73a505abdc148920",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fantastic! Could you add another test that checks the opposite case? Where the field's `hide` property is initialized to `true` and then is swapped to `false` via the `hideExpression`? I think that would be a valuable test case.\n",
        "created_at": "2015-07-14T21:12:08Z",
        "updated_at": "2015-07-28T23:06:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34620281",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/391",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34620281"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34620281"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622188",
        "pull_request_review_id": null,
        "id": 34622188,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjIyMTg4",
        "diff_hunk": "@@ -358,6 +358,25 @@ describe('formly-form', () => {\n \n   });\n \n+  describe('hideExpression', () => {\n+    beforeEach(() => {\n+      scope.model = {};\n+      scope.fieldModel = {};\n+\n+      scope.fields = [\n+        {template: input, key: 'foo', model: scope.fieldModel},\n+        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo}\n+      ];\n+    });\n+\n+    it('should be updated when field model changes', () => {",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 15,
        "commit_id": "7adde3be37595d5ebbde80a636c84ce338b32f34",
        "original_commit_id": "8a8c4991311b7441403f5f6e73a505abdc148920",
        "user": {
            "login": "redhead",
            "id": 158482,
            "node_id": "MDQ6VXNlcjE1ODQ4Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/158482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redhead",
            "html_url": "https://github.com/redhead",
            "followers_url": "https://api.github.com/users/redhead/followers",
            "following_url": "https://api.github.com/users/redhead/following{/other_user}",
            "gists_url": "https://api.github.com/users/redhead/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redhead/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redhead/subscriptions",
            "organizations_url": "https://api.github.com/users/redhead/orgs",
            "repos_url": "https://api.github.com/users/redhead/repos",
            "events_url": "https://api.github.com/users/redhead/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redhead/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, sure.\n",
        "created_at": "2015-07-14T21:30:50Z",
        "updated_at": "2015-07-28T23:06:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622188",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/391",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622188"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622188"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622500",
        "pull_request_review_id": null,
        "id": 34622500,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjIyNTAw",
        "diff_hunk": "@@ -188,6 +188,9 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n             field);\n         }\n       }\n+      if (field.model) {\n+        $scope.$watch(() => field.model, onModelOrFormStateChange, true);",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7adde3be37595d5ebbde80a636c84ce338b32f34",
        "original_commit_id": "8a8c4991311b7441403f5f6e73a505abdc148920",
        "user": {
            "login": "redhead",
            "id": 158482,
            "node_id": "MDQ6VXNlcjE1ODQ4Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/158482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redhead",
            "html_url": "https://github.com/redhead",
            "followers_url": "https://api.github.com/users/redhead/followers",
            "following_url": "https://api.github.com/users/redhead/following{/other_user}",
            "gists_url": "https://api.github.com/users/redhead/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redhead/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redhead/subscriptions",
            "organizations_url": "https://api.github.com/users/redhead/orgs",
            "repos_url": "https://api.github.com/users/redhead/repos",
            "events_url": "https://api.github.com/users/redhead/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redhead/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@kentcdodds I just realised, this line might trigger multiple watch handlers if multiple fields use the same model object. I don't know if that is wrong in particular though.\nMaybe we should create a set of model objects and create always only a single watcher for each?\n",
        "created_at": "2015-07-14T21:33:47Z",
        "updated_at": "2015-07-28T23:06:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622500",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/391",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622500"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622500"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622949",
        "pull_request_review_id": null,
        "id": 34622949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjIyOTQ5",
        "diff_hunk": "@@ -188,6 +188,9 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n             field);\n         }\n       }\n+      if (field.model) {\n+        $scope.$watch(() => field.model, onModelOrFormStateChange, true);",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7adde3be37595d5ebbde80a636c84ce338b32f34",
        "original_commit_id": "8a8c4991311b7441403f5f6e73a505abdc148920",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, very good. Sounds like a reasonable optimization to me. You'd probably need to do a separate `angular.forEach` above in that case. If you decide to do that, please write a test case to cover that :-)\n",
        "created_at": "2015-07-14T21:37:49Z",
        "updated_at": "2015-07-28T23:06:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622949",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/391",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34622949"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34622949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34623744",
        "pull_request_review_id": null,
        "id": 34623744,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NjIzNzQ0",
        "diff_hunk": "@@ -188,6 +188,9 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n             field);\n         }\n       }\n+      if (field.model) {\n+        $scope.$watch(() => field.model, onModelOrFormStateChange, true);",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 5,
        "commit_id": "7adde3be37595d5ebbde80a636c84ce338b32f34",
        "original_commit_id": "8a8c4991311b7441403f5f6e73a505abdc148920",
        "user": {
            "login": "redhead",
            "id": 158482,
            "node_id": "MDQ6VXNlcjE1ODQ4Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/158482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/redhead",
            "html_url": "https://github.com/redhead",
            "followers_url": "https://api.github.com/users/redhead/followers",
            "following_url": "https://api.github.com/users/redhead/following{/other_user}",
            "gists_url": "https://api.github.com/users/redhead/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/redhead/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/redhead/subscriptions",
            "organizations_url": "https://api.github.com/users/redhead/orgs",
            "repos_url": "https://api.github.com/users/redhead/repos",
            "events_url": "https://api.github.com/users/redhead/events{/privacy}",
            "received_events_url": "https://api.github.com/users/redhead/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Will do.\n",
        "created_at": "2015-07-14T21:44:32Z",
        "updated_at": "2015-07-28T23:06:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34623744",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/391",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/34623744"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/391#discussion_r34623744"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/391"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36527042",
        "pull_request_review_id": null,
        "id": 36527042,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI3MDQy",
        "diff_hunk": "@@ -124,7 +124,38 @@ function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate, formlyWarn\n     const selectorNot = angular.isString(skip) ? `:not(${skip})` : '';\n     const skipNot = ':not([formly-skip-ng-model-attrs-manipulator])';\n     const query = `[ng-model]${selectorNot}${skipNot}, [data-ng-model]${selectorNot}${skipNot}`;\n-    return node.querySelectorAll(query);\n+    try {\n+      return node.querySelectorAll(query);",
        "path": "src/run/formlyNgModelAttrsManipulator.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "9663c70b62828f1984015b14c140c48c0945a2f0",
        "original_commit_id": "d8369cd98e86f408c0cfdfd02b0c6ffd828f6f52",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you add a comment here that all of this can go away when we drop support for IE8? Not going to happen in 7.0.0, but may happen in 8.0.0\n",
        "created_at": "2015-08-07T14:59:13Z",
        "updated_at": "2015-08-07T15:15:40Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/422#discussion_r36527042",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/422",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36527042"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/422#discussion_r36527042"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/422"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36629668",
        "pull_request_review_id": null,
        "id": 36629668,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5NjY4",
        "diff_hunk": "@@ -1014,6 +1014,32 @@ describe('formly-field', function() {\n         expect(ctrl.$formatters).to.have.length(2); // ngModel adds one\n         expect(ctrl.$viewValue).to.equal('hello! boo!');\n       });\n+\n+      it.skip(`should format a model value right from the start`, () => {\n+        scope.model = {myKey: 'hello'};\n+        scope.fields = [getNewField({\n+          key: 'myKey',\n+          formatters: ['\"!\" + $viewValue + \"!\"']\n+        })];\n+        compileAndDigest();\n+\n+        const ctrl = getNgModelCtrl();\n+\n+        //workaround: this formats the model value right off the bat,\n+        //without the workaround, the initial model value stays unformatted\n+\n+/*",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 18,
        "commit_id": "41306441501d79269b13fd7c7d4fd90b5bb40372",
        "original_commit_id": "c7af8a674d4e95845422f8e32b4f21aa082a4b5f",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's this commented block for? If it's supposed to be part of the test, then just leave it in. The contributor shouldn't have to alter anything except the `.skip` in this file :-) We want it to be as easy and straightforward as possible: \"Just make the tests pass\"\n",
        "created_at": "2015-08-10T13:25:01Z",
        "updated_at": "2015-08-10T13:27:45Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/424#discussion_r36629668",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/424",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36629668"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/424#discussion_r36629668"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/424"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36629807",
        "pull_request_review_id": null,
        "id": 36629807,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODA3",
        "diff_hunk": "@@ -1014,6 +1014,32 @@ describe('formly-field', function() {\n         expect(ctrl.$formatters).to.have.length(2); // ngModel adds one\n         expect(ctrl.$viewValue).to.equal('hello! boo!');\n       });\n+\n+      it.skip(`should format a model value right from the start`, () => {\n+        scope.model = {myKey: 'hello'};\n+        scope.fields = [getNewField({\n+          key: 'myKey',\n+          formatters: ['\"!\" + $viewValue + \"!\"']\n+        })];\n+        compileAndDigest();\n+\n+        const ctrl = getNgModelCtrl();\n+\n+        //workaround: this formats the model value right off the bat,\n+        //without the workaround, the initial model value stays unformatted\n+\n+/*",
        "path": "src/directives/formly-field.test.js",
        "position": null,
        "original_position": 18,
        "commit_id": "41306441501d79269b13fd7c7d4fd90b5bb40372",
        "original_commit_id": "c7af8a674d4e95845422f8e32b4f21aa082a4b5f",
        "user": {
            "login": "koenweyn",
            "id": 1275037,
            "node_id": "MDQ6VXNlcjEyNzUwMzc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1275037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koenweyn",
            "html_url": "https://github.com/koenweyn",
            "followers_url": "https://api.github.com/users/koenweyn/followers",
            "following_url": "https://api.github.com/users/koenweyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/koenweyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/koenweyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/koenweyn/subscriptions",
            "organizations_url": "https://api.github.com/users/koenweyn/orgs",
            "repos_url": "https://api.github.com/users/koenweyn/repos",
            "events_url": "https://api.github.com/users/koenweyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/koenweyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The comment block is the workaround, I'll remove it and add it to the issue comments in stead.\n",
        "created_at": "2015-08-10T13:26:34Z",
        "updated_at": "2015-08-10T13:27:45Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/424#discussion_r36629807",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/424",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/36629807"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/424#discussion_r36629807"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/424"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/37973460",
        "pull_request_review_id": null,
        "id": 37973460,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTczNDYw",
        "diff_hunk": "@@ -20,6 +20,7 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n     scope: {\n       options: '=',\n       model: '=',\n+      originalModel: '=',",
        "path": "src/directives/formly-field.js",
        "position": null,
        "original_position": 4,
        "commit_id": "2c6693bc164ec941cc8958336a5b2c3e0a769e7d",
        "original_commit_id": "19e110997850aee880c1a56ec6523e9ecedcd10f",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you make this an optional attribute by changing `=` to `=?` please? And then in the controller (right in [here](https://github.com/davincho/angular-formly/blob/master/src/directives/formly-field.js#L87-L92)), could you add a default for that value? Something like:\n\n``` javascript\nformlyUtil.reverseDeepMerge(options, {\n  originalModel: options.model,\n  extras: {},\n  data: {},\n  templateOptions: {},\n  validation: {}\n});\n```\n\nSo if the `original-model` isn't specified (in the case of someone using the directive directly), it defaults to the given model.\n\nAnd then we'd need a test to verify this defaulting as well. Thanks!\n",
        "created_at": "2015-08-26T12:01:26Z",
        "updated_at": "2015-08-27T13:57:13Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/443#discussion_r37973460",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/443",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/37973460"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/443#discussion_r37973460"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/443"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241506",
        "pull_request_review_id": null,
        "id": 39241506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNTA2",
        "diff_hunk": "@@ -133,21 +133,58 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n \n     function setupFields() {\n       $scope.fields = $scope.fields || [];\n-      const fieldTransform = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n \n-      if (fieldTransform) {\n-        $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n-        if (!$scope.fields) {\n-          throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n-        }\n+      checkDeprecatedOptions($scope.options);\n+\n+      let fieldTransforms = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n+\n+      if (!angular.isArray(fieldTransforms)) {\n+        fieldTransforms = [fieldTransforms];\n       }\n \n+      angular.forEach(fieldTransforms, function transformFields(fieldTransform) {\n+        if (fieldTransform) {\n+          $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n+          if (!$scope.fields) {\n+            throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n+          }\n+        }\n+      });\n+\n       setupModels();\n \n       angular.forEach($scope.fields, attachKey); // attaches a key based on the index if a key isn't specified\n       angular.forEach($scope.fields, setupWatchers); // setup watchers for all fields\n     }\n \n+    function warn() {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 43,
        "commit_id": "9a357818f31b367a46cb8d63c6a23f82801c81bf",
        "original_commit_id": "02a8e2173b57792841db9b1c39f6f6e4f11c574a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there a reason you didn't just inject the [`formlyWarn`](https://github.com/formly-js/angular-formly/blob/master/src/services/formlyWarn.js) service and use that instead?\n",
        "created_at": "2015-09-11T05:01:16Z",
        "updated_at": "2015-09-11T06:47:27Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241506",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/461",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241506"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241643",
        "pull_request_review_id": null,
        "id": 39241643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxNjQz",
        "diff_hunk": "@@ -133,21 +133,58 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n \n     function setupFields() {\n       $scope.fields = $scope.fields || [];\n-      const fieldTransform = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n \n-      if (fieldTransform) {\n-        $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n-        if (!$scope.fields) {\n-          throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n-        }\n+      checkDeprecatedOptions($scope.options);\n+\n+      let fieldTransforms = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n+\n+      if (!angular.isArray(fieldTransforms)) {\n+        fieldTransforms = [fieldTransforms];\n       }\n \n+      angular.forEach(fieldTransforms, function transformFields(fieldTransform) {\n+        if (fieldTransform) {\n+          $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n+          if (!$scope.fields) {\n+            throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n+          }\n+        }\n+      });\n+\n       setupModels();\n \n       angular.forEach($scope.fields, attachKey); // attaches a key based on the index if a key isn't specified\n       angular.forEach($scope.fields, setupWatchers); // setup watchers for all fields\n     }\n \n+    function warn() {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 43,
        "commit_id": "9a357818f31b367a46cb8d63c6a23f82801c81bf",
        "original_commit_id": "02a8e2173b57792841db9b1c39f6f6e4f11c574a",
        "user": {
            "login": "BarryThePenguin",
            "id": 1351912,
            "node_id": "MDQ6VXNlcjEzNTE5MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1351912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BarryThePenguin",
            "html_url": "https://github.com/BarryThePenguin",
            "followers_url": "https://api.github.com/users/BarryThePenguin/followers",
            "following_url": "https://api.github.com/users/BarryThePenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/BarryThePenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BarryThePenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BarryThePenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/BarryThePenguin/orgs",
            "repos_url": "https://api.github.com/users/BarryThePenguin/repos",
            "events_url": "https://api.github.com/users/BarryThePenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BarryThePenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No reason, just didn't see it there. Will switch it out\n",
        "created_at": "2015-09-11T05:05:43Z",
        "updated_at": "2015-09-11T06:47:27Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241643",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/461",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241643"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241843",
        "pull_request_review_id": null,
        "id": 39241843,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODQz",
        "diff_hunk": "@@ -133,21 +133,58 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n \n     function setupFields() {\n       $scope.fields = $scope.fields || [];\n-      const fieldTransform = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n \n-      if (fieldTransform) {\n-        $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n-        if (!$scope.fields) {\n-          throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n-        }\n+      checkDeprecatedOptions($scope.options);\n+\n+      let fieldTransforms = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;\n+\n+      if (!angular.isArray(fieldTransforms)) {\n+        fieldTransforms = [fieldTransforms];\n       }\n \n+      angular.forEach(fieldTransforms, function transformFields(fieldTransform) {\n+        if (fieldTransform) {\n+          $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);\n+          if (!$scope.fields) {\n+            throw formlyUsability.getFormlyError('fieldTransform must return an array of fields');\n+          }\n+        }\n+      });\n+\n       setupModels();\n \n       angular.forEach($scope.fields, attachKey); // attaches a key based on the index if a key isn't specified\n       angular.forEach($scope.fields, setupWatchers); // setup watchers for all fields\n     }\n \n+    function warn() {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 43,
        "commit_id": "9a357818f31b367a46cb8d63c6a23f82801c81bf",
        "original_commit_id": "02a8e2173b57792841db9b1c39f6f6e4f11c574a",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's impressive that you created almost exactly what I had. Haha, I thought it was copy/paste code \ud83d\ude00\n",
        "created_at": "2015-09-11T05:08:46Z",
        "updated_at": "2015-09-11T06:47:27Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241843",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/461",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/39241843"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/461#discussion_r39241843"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567007",
        "pull_request_review_id": null,
        "id": 43567007,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3MDA3",
        "diff_hunk": "@@ -280,6 +280,48 @@ describe('formly-form', () => {\n       })\n     })\n \n+    it(`should be possible to use a wrapper & templateOptions in a fieldGroup`, () => {\n+      formlyConfig.setWrapper({\n+        name: 'panel',\n+        template: `<div class=\"panel\">\n+            <div class=\"heading\">\n+              Panel Title: {{options.templateOptions.title}}",
        "path": "src/directives/formly-form.test.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "original_commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "user": {
            "login": "hrgui",
            "id": 5001432,
            "node_id": "MDQ6VXNlcjUwMDE0MzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5001432?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hrgui",
            "html_url": "https://github.com/hrgui",
            "followers_url": "https://api.github.com/users/hrgui/followers",
            "following_url": "https://api.github.com/users/hrgui/following{/other_user}",
            "gists_url": "https://api.github.com/users/hrgui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hrgui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hrgui/subscriptions",
            "organizations_url": "https://api.github.com/users/hrgui/orgs",
            "repos_url": "https://api.github.com/users/hrgui/repos",
            "events_url": "https://api.github.com/users/hrgui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hrgui/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we have access to the shortcuts when we set wrappers for field groups? I tried accessing the to variable and options.templateOptions is only the way to go. \n",
        "created_at": "2015-10-31T02:19:27Z",
        "updated_at": "2015-10-31T02:19:27Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567007",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/529",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567007"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567007"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567402",
        "pull_request_review_id": null,
        "id": 43567402,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NDAy",
        "diff_hunk": "@@ -280,6 +280,48 @@ describe('formly-form', () => {\n       })\n     })\n \n+    it(`should be possible to use a wrapper & templateOptions in a fieldGroup`, () => {\n+      formlyConfig.setWrapper({\n+        name: 'panel',\n+        template: `<div class=\"panel\">\n+            <div class=\"heading\">\n+              Panel Title: {{options.templateOptions.title}}",
        "path": "src/directives/formly-form.test.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "original_commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "hmm... You should... Could you create an example showing that you can't?\n",
        "created_at": "2015-10-31T03:06:54Z",
        "updated_at": "2015-10-31T03:06:54Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567402",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567402"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567402"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567438",
        "pull_request_review_id": null,
        "id": 43567438,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NDM4",
        "diff_hunk": "@@ -280,6 +280,48 @@ describe('formly-form', () => {\n       })\n     })\n \n+    it(`should be possible to use a wrapper & templateOptions in a fieldGroup`, () => {\n+      formlyConfig.setWrapper({\n+        name: 'panel',\n+        template: `<div class=\"panel\">\n+            <div class=\"heading\">\n+              Panel Title: {{options.templateOptions.title}}",
        "path": "src/directives/formly-form.test.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "original_commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "user": {
            "login": "hrgui",
            "id": 5001432,
            "node_id": "MDQ6VXNlcjUwMDE0MzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5001432?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hrgui",
            "html_url": "https://github.com/hrgui",
            "followers_url": "https://api.github.com/users/hrgui/followers",
            "following_url": "https://api.github.com/users/hrgui/following{/other_user}",
            "gists_url": "https://api.github.com/users/hrgui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hrgui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hrgui/subscriptions",
            "organizations_url": "https://api.github.com/users/hrgui/orgs",
            "repos_url": "https://api.github.com/users/hrgui/repos",
            "events_url": "https://api.github.com/users/hrgui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hrgui/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://jsbin.com/kutucisiqo/1/edit?html,js,output\n\nThe `$scope.to` variable seems to be only set in the `simplifyLife()` (see https://github.com/formly-js/angular-formly/blob/master/src/directives/formly-field.js#L95) variable, which is only set if the field is not a fieldGroup (https://github.com/formly-js/angular-formly/blob/master/src/directives/formly-field.js#L45)\n",
        "created_at": "2015-10-31T03:12:44Z",
        "updated_at": "2015-10-31T03:12:44Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567438",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/529",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567438"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567438"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567529",
        "pull_request_review_id": null,
        "id": 43567529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NTI5",
        "diff_hunk": "@@ -280,6 +280,48 @@ describe('formly-form', () => {\n       })\n     })\n \n+    it(`should be possible to use a wrapper & templateOptions in a fieldGroup`, () => {\n+      formlyConfig.setWrapper({\n+        name: 'panel',\n+        template: `<div class=\"panel\">\n+            <div class=\"heading\">\n+              Panel Title: {{options.templateOptions.title}}",
        "path": "src/directives/formly-form.test.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "original_commit_id": "f40bd6c11a044ae94ab86a917931f8d5792b8561",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, yes, I suppose that we could set up the `to` variable in that if statement as sort of a one-off. Those other defaults probably wouldn't make sense. Do you fancy submitting a PR? Please see the CONTRIBUTING.md to get started :-)\n",
        "created_at": "2015-10-31T03:26:16Z",
        "updated_at": "2015-10-31T03:26:16Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567529",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/529",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43567529"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/529#discussion_r43567529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/529"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43629718",
        "pull_request_review_id": null,
        "id": 43629718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzE4",
        "diff_hunk": "@@ -77,9 +77,41 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n         return undefined\n       }\n       if (angular.isDefined(newVal)) {\n-        $scope.model[$scope.options.key] = newVal\n+        parseSet($scope.options.key, $scope.model, newVal)\n+      }\n+      return parseGet($scope.options.key, $scope.model)\n+    }\n+\n+    function parseSet(key, model, newVal) {\n+      // If either of these are null/undefined then just return undefined\n+      if (!key || !model) {\n+        return\n+      }\n+      // If we are working with a number then $parse wont work, default back to the old way for now\n+      if (angular.isNumber(key)) {\n+        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+        model[key] = newVal\n+      } else {\n+        const setter = $parse($scope.options.key).assign\n+        if (setter) {",
        "path": "src/directives/formly-field.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "dae40b74bfddb79c662ea142d17ea64750ff536d",
        "original_commit_id": "d58fa6fd2b237b7251eb32d58044cddf44fb39aa",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this `if` statement necessary? I wouldn't expect it would be. The `assign` property should always be a part of `$parse($scope.options.key)`.\n",
        "created_at": "2015-11-02T13:55:33Z",
        "updated_at": "2015-11-02T14:49:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43629718",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/531",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43629718"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43629718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/531"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43630610",
        "pull_request_review_id": null,
        "id": 43630610,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNjEw",
        "diff_hunk": "@@ -77,9 +77,41 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n         return undefined\n       }\n       if (angular.isDefined(newVal)) {\n-        $scope.model[$scope.options.key] = newVal\n+        parseSet($scope.options.key, $scope.model, newVal)\n+      }\n+      return parseGet($scope.options.key, $scope.model)\n+    }\n+\n+    function parseSet(key, model, newVal) {\n+      // If either of these are null/undefined then just return undefined\n+      if (!key || !model) {\n+        return\n+      }\n+      // If we are working with a number then $parse wont work, default back to the old way for now\n+      if (angular.isNumber(key)) {\n+        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+        model[key] = newVal\n+      } else {\n+        const setter = $parse($scope.options.key).assign\n+        if (setter) {",
        "path": "src/directives/formly-field.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "dae40b74bfddb79c662ea142d17ea64750ff536d",
        "original_commit_id": "d58fa6fd2b237b7251eb32d58044cddf44fb39aa",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would actually leave it.  Because if you get into a situation where the key you sent in is non numeric but doesn't satisfy a property constraint you will blow up if you try to use a setter where one isn't present.  It wont \"work\" but it also wont fail either.  Your call.\n",
        "created_at": "2015-11-02T14:05:44Z",
        "updated_at": "2015-11-02T14:49:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43630610",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/531",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43630610"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43630610"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/531"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43631440",
        "pull_request_review_id": null,
        "id": 43631440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxNDQw",
        "diff_hunk": "@@ -77,9 +77,41 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n         return undefined\n       }\n       if (angular.isDefined(newVal)) {\n-        $scope.model[$scope.options.key] = newVal\n+        parseSet($scope.options.key, $scope.model, newVal)\n+      }\n+      return parseGet($scope.options.key, $scope.model)\n+    }\n+\n+    function parseSet(key, model, newVal) {\n+      // If either of these are null/undefined then just return undefined\n+      if (!key || !model) {\n+        return\n+      }\n+      // If we are working with a number then $parse wont work, default back to the old way for now\n+      if (angular.isNumber(key)) {\n+        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+        model[key] = newVal\n+      } else {\n+        const setter = $parse($scope.options.key).assign\n+        if (setter) {",
        "path": "src/directives/formly-field.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "dae40b74bfddb79c662ea142d17ea64750ff536d",
        "original_commit_id": "d58fa6fd2b237b7251eb32d58044cddf44fb39aa",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's reasonable. Sounds good. If you could fix the multiple commits\nissue, that'd be great. Thanks\n\nOn Mon, Nov 2, 2015, 7:06 AM MCKRUZ notifications@github.com wrote:\n\n> In src/directives/formly-field.js\n> https://github.com/formly-js/angular-formly/pull/531#discussion_r43630610\n> :\n> \n> > -      }\n> > -      return parseGet($scope.options.key, $scope.model)\n> > -    }\n> >   +\n> > -    function parseSet(key, model, newVal) {\n> > -      // If either of these are null/undefined then just return undefined\n> > -      if (!key || !model) {\n> > -        return\n> > -      }\n> > -      // If we are working with a number then $parse wont work, default back to the old way for now\n> > -      if (angular.isNumber(key)) {\n> > -        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n> > -        model[key] = newVal\n> > -      } else {\n> > -        const setter = $parse($scope.options.key).assign\n> > -        if (setter) {\n> \n> I would actually leave it. Because if you get into a situation where the\n> key you sent in is non numeric but doesn't satisfy a property constraint\n> you will blow up if you try to use a setter where one isn't present. It\n> wont \"work\" but it also wont fail either. Your call.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/formly-js/angular-formly/pull/531/files#r43630610.\n> \n> ## \n> - Kent C. Dodds https://twitter.com/kentcdodds\n",
        "created_at": "2015-11-02T14:15:08Z",
        "updated_at": "2015-11-02T14:49:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43631440",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/531",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43631440"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43631440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/531"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43633119",
        "pull_request_review_id": null,
        "id": 43633119,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMzMTE5",
        "diff_hunk": "@@ -77,9 +77,41 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n         return undefined\n       }\n       if (angular.isDefined(newVal)) {\n-        $scope.model[$scope.options.key] = newVal\n+        parseSet($scope.options.key, $scope.model, newVal)\n+      }\n+      return parseGet($scope.options.key, $scope.model)\n+    }\n+\n+    function parseSet(key, model, newVal) {\n+      // If either of these are null/undefined then just return undefined\n+      if (!key || !model) {\n+        return\n+      }\n+      // If we are working with a number then $parse wont work, default back to the old way for now\n+      if (angular.isNumber(key)) {\n+        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+        model[key] = newVal\n+      } else {\n+        const setter = $parse($scope.options.key).assign\n+        if (setter) {",
        "path": "src/directives/formly-field.js",
        "position": 21,
        "original_position": 21,
        "commit_id": "dae40b74bfddb79c662ea142d17ea64750ff536d",
        "original_commit_id": "d58fa6fd2b237b7251eb32d58044cddf44fb39aa",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Kent, I tried the commands you sent but it didn\u2019t work.\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Monday, November 2, 2015 at 9:15 AM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(): added  functionality (#531)\n\nIn src/directives/formly-field.js:\n\n> -      }\n> -      return parseGet($scope.options.key, $scope.model)\n> -    }\n>   +\n> -    function parseSet(key, model, newVal) {\n> -      // If either of these are null/undefined then just return undefined\n> -      if (!key || !model) {\n> -        return\n> -      }\n> -      // If we are working with a number then $parse wont work, default back to the old way for now\n> -      if (angular.isNumber(key)) {\n> -        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n> -        model[key] = newVal\n> -      } else {\n> -        const setter = $parse($scope.options.key).assign\n> -        if (setter) {\n>   That's reasonable. Sounds good. If you could fix the multiple commits issue, that'd be great. Thanks\n>   On Mon, Nov 2, 2015, 7:06 AM MCKRUZ notifications@github.com wrote: In src/directives/formly-field.js <#531 (comment)> :  > +      } > +      return parseGet($scope.options.key, $scope.model) > +    } > + > +    function parseSet(key, model, newVal) { > +      // If either of these are null/undefined then just return undefined > +      if (!key || !model) { > +        return > +      } > +      // If we are working with a number then $parse wont work, default back to the old way for now > +      if (angular.isNumber(key)) { > +        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric > +        model[key] = newVal > +      } else { > +        const setter = $parse($scope.options.key).assign > +        if (setter) {  I would actually leave it. Because if you get into a situation where the key you sent in is non numeric but doesn't satisfy a property constraint you will blow up if you try to use a setter where one isn't present. It wont \"work\" but it also wont fail either. Your call.  \u2014 Reply to this email directly or view it on GitHub https://github.com/formly-js/angular-formly/pull/531/files#r43630610. \n>   -- - Kent C. Dodds https://twitter.com/kentcdodds\n>   \u2014\n>   Reply to this email directly or view it on GitHub.\n",
        "created_at": "2015-11-02T14:31:53Z",
        "updated_at": "2015-11-02T14:49:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43633119",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/531",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/43633119"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/531#discussion_r43633119"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/531"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44139918",
        "pull_request_review_id": null,
        "id": 44139918,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5OTE4",
        "diff_hunk": "@@ -3,22 +3,14 @@ export default addCustomTags\n \n // @ngInject\n function addCustomTags($document) {\n-  if ($document && $document.get) {\n-    // IE8 check ->\n-    // http://stackoverflow.com/questions/10964966/detect-ie-version-prior-to-v9-in-javascript/10965203#10965203\n+  if ($document && $document.documentMode < 9) {",
        "path": "src/run/formlyCustomTags.js",
        "position": null,
        "original_position": 7,
        "commit_id": "fb562a470430c0341656eccc81e9b742ce7139f2",
        "original_commit_id": "1a2aead9c218ec1cc1c6ee892f3904229d2f3bed",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could you add a comment with this URL? https://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx\n",
        "created_at": "2015-11-06T14:16:23Z",
        "updated_at": "2015-11-07T02:13:05Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/541#discussion_r44139918",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44139918"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/541#discussion_r44139918"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/541"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44140156",
        "pull_request_review_id": null,
        "id": 44140156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwMTU2",
        "diff_hunk": "@@ -3,22 +3,14 @@ export default addCustomTags\n \n // @ngInject\n function addCustomTags($document) {\n-  if ($document && $document.get) {\n-    // IE8 check ->\n-    // http://stackoverflow.com/questions/10964966/detect-ie-version-prior-to-v9-in-javascript/10965203#10965203\n+  if ($document && $document.documentMode < 9) {\n     const document = $document.get(0)\n-    const div = document.createElement('div')\n-    div.innerHTML = '<!--[if lt IE 9]><i></i><![endif]-->'\n-    const isIeLessThan9 = (div.getElementsByTagName('i').length === 1)\n-\n-    if (isIeLessThan9) {\n       // add the custom elements that we need for formly\n-      const customElements = [\n-        'formly-field', 'formly-form', 'formly-custom-validation', 'formly-focus', 'formly-transpose',\n-      ]\n-      angular.forEach(customElements, el => {\n-        document.createElement(el)\n-      })\n-    }\n+    const customElements = [\n+      'formly-field', 'formly-form', 'formly-custom-validation', 'formly-focus', 'formly-transpose',",
        "path": "src/run/formlyCustomTags.js",
        "position": null,
        "original_position": 23,
        "commit_id": "fb562a470430c0341656eccc81e9b742ce7139f2",
        "original_commit_id": "1a2aead9c218ec1cc1c6ee892f3904229d2f3bed",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While you're at it, could you remove `formly-transpose`. I think when this was added, someone mistook `formly-transclude` for `formly-transpose`. But `formly-transclude` never actually makes its way to the DOM so we don't need to worry about that...\n\nAlso `formly-focus` and `formly-custom-validation` are attribute directives, so they shouldn't be in this list either.\n\nThanks for cleaning this up!\n",
        "created_at": "2015-11-06T14:18:47Z",
        "updated_at": "2015-11-07T02:13:05Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/541#discussion_r44140156",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/541",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44140156"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/541#discussion_r44140156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/541"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44342146",
        "pull_request_review_id": null,
        "id": 44342146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQyMTQ2",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener: '',",
        "path": "src/directives/formly-form.test.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "original_commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think that this test is testing what you think it is... I think you're getting code coverage, but the watchExpression here never gets evaluated. Could you add a new test that has a deepLink field like this except for the `expression` uses a spy and asserts that the spy was called properly?\n",
        "created_at": "2015-11-09T22:24:52Z",
        "updated_at": "2015-11-09T22:24:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44342146",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/545",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44342146"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44342146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44410591",
        "pull_request_review_id": null,
        "id": 44410591,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwNTkx",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener: '',",
        "path": "src/directives/formly-form.test.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "original_commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Before I recommit.\n\nDoes this work for you?\n\nit(`should setup any watchers specified on a field`, () => {\n      scope.model = {}\n\n```\n  const listener = sinon.spy()\n  const expression = sinon.spy()\n  const deepLinkField = getNewField()\n  deepLinkField.key = 'foo.bar'\n  deepLinkField.watcher = {\n    listener: sinon.spy(),\n    expression: sinon.spy(),\n  }\n\n  scope.fields = [getNewField({\n    watcher: {\n      listener: '',\n    },\n  }),\n  deepLinkField, getNewField({\n    watcher: [{\n      listener: '',\n      expression: '',\n    }, {\n      listener,\n      expression,\n    }],\n  })]\n\n  expect(compileAndDigest).to.not.throw()\n  expect(listener).to.have.been.called\n  expect(expression).to.have.been.called\n  expect(deepLinkField.watcher.listener).to.have.been.called\n  expect(deepLinkField.watcher.expression).to.have.been.called\n})\n```\n\n  })\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Monday, November 9, 2015 at 5:24 PM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(formly-form): Issue number 542 (#545)\n\nIn src/directives/formly-form.test.js:\n\n> @@ -933,12 +933,19 @@ describe('formly-form', () => {\n> \n> ```\n>    const listener = sinon.spy()\n>    const expression = sinon.spy()\n> ```\n> -      const deepLinkField = getNewField()\n> -      deepLinkField.key = 'foo.bar'\n> -      deepLinkField.watcher = {\n> -        listener: '',\n>   I don't think that this test is testing what you think it is... I think you're getting code coverage, but the watchExpression here never gets evaluated. Could you add a new test that has a deepLink field like this except for the expression uses a spy and asserts that the spy was called properly?\n\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "created_at": "2015-11-10T14:22:08Z",
        "updated_at": "2015-11-10T14:22:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44410591",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44410591"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44410591"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44423502",
        "pull_request_review_id": null,
        "id": 44423502,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzNTAy",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener: '',",
        "path": "src/directives/formly-form.test.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "original_commit_id": "0e1804d9cad73592847cab02ae9af1b58b87cbf2",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Almost. We want to test the default `listener` (which is what you're modifying) so you'd omit the listener on the `deepLinkField`. Other than that, what you have is sufficient.\n",
        "created_at": "2015-11-10T15:58:11Z",
        "updated_at": "2015-11-10T15:58:11Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44423502",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/545",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44423502"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/545#discussion_r44423502"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44789445",
        "pull_request_review_id": null,
        "id": 44789445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5NDQ1",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener,\n+        expression: sinon.spy(),",
        "path": "src/directives/formly-form.test.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "original_commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, I think I told you wrong. The `expression` shouldn't be here. We want to test behavior for when an expression is omitted. So this should be:\n\n``` javascript\ndeepLinkField.watcher = {\n  listener: sinon.spy(),\n  // no expression\n}\n```\n\nThen we need to manually change the value of `foo.bar`, run `scope.$digest()` and validate that the `listener` was called with the new value of `foo.bar`. I suggest that this all be put into its own `it` statement.\n",
        "created_at": "2015-11-13T14:52:33Z",
        "updated_at": "2015-11-13T14:52:33Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/547#discussion_r44789445",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/547",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/44789445"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/547#discussion_r44789445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/547"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45057743",
        "pull_request_review_id": null,
        "id": 45057743,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NzQz",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener,\n+        expression: sinon.spy(),",
        "path": "src/directives/formly-form.test.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "original_commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Does this do the trick?\n\nit(`should add watches on deep dive fields`, () => {\n      debugger\n      const formWithOptions = '<formly-form model=\"model\" fields=\"fields\" options=\"options\"></formly-form>'\n      scope.model = {}\n      scope.options = {}\n\n```\n  const deepLinkField = getNewField()\n  deepLinkField.key = 'foo.bar'\n  deepLinkField.watcher = {\n    listener: sinon.spy(),\n  }\n\n  scope.fields = [deepLinkField]\n  compileAndDigest(formWithOptions)\n  expect(compileAndDigest).to.not.throw()\n  expect(deepLinkField.watcher.listener).to.have.been.called\n  scope.model[deepLinkField.key] = 'brown'\n  scope.$digest()\n  expect(compileAndDigest).to.not.throw()\n  expect(deepLinkField.watcher.listener).to.have.been.called\n})\n```\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Friday, November 13, 2015 at 9:52 AM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(formly-form): Issue number 542 (#547)\n\nIn src/directives/formly-form.test.js:\n\n> @@ -933,12 +933,19 @@ describe('formly-form', () => {\n> \n> ```\n>    const listener = sinon.spy()\n>    const expression = sinon.spy()\n> ```\n> -      const deepLinkField = getNewField()\n> -      deepLinkField.key = 'foo.bar'\n> -      deepLinkField.watcher = {\n> -        listener,\n> -        expression: sinon.spy(),\n>   Sorry, I think I told you wrong. The expression shouldn't be here. We want to test behavior for when an expression is omitted. So this should be:\n\ndeepLinkField.watcher = {\n  listener: sinon.spy(),\n  // no expression\n}\nThen we need to manually change the value of foo.bar, run scope.$digest() and validate that the listener was called with the new value of foo.bar. I suggest that this all be put into its own it statement.\n\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "created_at": "2015-11-17T13:15:00Z",
        "updated_at": "2015-11-17T13:15:00Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/547#discussion_r45057743",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/547",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45057743"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/547#discussion_r45057743"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/547"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45539505",
        "pull_request_review_id": null,
        "id": 45539505,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NTA1",
        "diff_hunk": "@@ -933,12 +933,19 @@ describe('formly-form', () => {\n \n       const listener = sinon.spy()\n       const expression = sinon.spy()\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener,\n+        expression: sinon.spy(),",
        "path": "src/directives/formly-form.test.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "original_commit_id": "4b4d2e5c76e7493e3d4537362f8dcb6aa92b823e",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not quite. We don't need to compile and digest more than once. But the other stuff is probably good.\n",
        "created_at": "2015-11-21T02:07:13Z",
        "updated_at": "2015-11-21T02:07:13Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/547#discussion_r45539505",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/547",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45539505"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/547#discussion_r45539505"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/547"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45800075",
        "pull_request_review_id": null,
        "id": 45800075,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwMDc1",
        "diff_hunk": "@@ -952,5 +952,27 @@ describe('formly-form', () => {\n       expect(listener).to.have.been.called\n       expect(expression).to.have.been.called\n     })\n+\n+    it(`should add watches on deep dive fields`, () => {\n+      const formWithOptions = '<formly-form model=\"model\" fields=\"fields\" options=\"options\"></formly-form>'\n+      scope.model = {}\n+      scope.options = {}\n+\n+      const deepLinkField = getNewField()\n+      deepLinkField.key = 'foo.bar'\n+      deepLinkField.watcher = {\n+        listener: sinon.spy(),\n+      }\n+\n+      scope.fields = [deepLinkField]\n+      compileAndDigest(formWithOptions)\n+      expect(compileAndDigest).to.not.throw()\n+      expect(deepLinkField.watcher.listener).to.have.been.called\n+      scope.model[deepLinkField.key] = 'brown'",
        "path": "src/directives/formly-form.test.js",
        "position": 20,
        "original_position": 20,
        "commit_id": "6c3a7ab3eef521106a0e80882577c2ea64b84538",
        "original_commit_id": "6c3a7ab3eef521106a0e80882577c2ea64b84538",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I am soo so sorry, but I just realized that this doesn't work. You'll want to do `scope.model.foo.bar = 'brown'` for this to work properly.\n",
        "created_at": "2015-11-24T21:51:46Z",
        "updated_at": "2015-11-24T21:51:46Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/558#discussion_r45800075",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/558",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/45800075"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/558#discussion_r45800075"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/558"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46583949",
        "pull_request_review_id": null,
        "id": 46583949,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgzOTQ5",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do you suppose that `/\\d/` could actually be `/^\\d/`? Isn't the number problem only present if the first character of the key is a number? I feel like if we implement this as it is, we'd have a bug where a key like this: `w390ekd032s.waky` would result in the model getting the property set incorrectly. (same for the test below).\n\nActually, also, it'd probably be nice to pull this if statement out into a function that both this line and the one below can use to avoid bugs in the future (changing one but not the other)\n",
        "created_at": "2015-12-03T17:37:26Z",
        "updated_at": "2015-12-03T17:37:26Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46583949",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46583949"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46583949"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46584604",
        "pull_request_review_id": null,
        "id": 46584604,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0NjA0",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree with pulling the statement out.\n\nIn terms of the ^d issue basically if the field has a number in it and it\u2019s not something like this foo[0] then it has to use model[key].\n\nI suppose I could do a check for the first item being numeric but it seemed like overkill to me.\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Thursday, December 3, 2015 at 12:37 PM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(formly-field): issue number 566 - Breaking change in 7.3.2 (#569)\n\nIn src/directives/formly-field.js:\n\n> ```\n>    // If we are working with a number then $parse wont work, default back to the old way for now\n> ```\n> -      if (angular.isNumber(key)) {\n> -        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n> -      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {\n>   Do you suppose that /\\d/ could actually be /^\\d/? Isn't the number problem only present if the first character of the key is a number? I feel like if we implement this as it is, we'd have a bug where a key like this: w390ekd032s.waky would result in the model getting the property set incorrectly. (same for the test below).\n\nActually, also, it'd probably be nice to pull this if statement out into a function that both this line and the one below can use to avoid bugs in the future (changing one but not the other)\n\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "created_at": "2015-12-03T17:42:20Z",
        "updated_at": "2015-12-03T17:42:20Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46584604",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46584604"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46584604"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46584983",
        "pull_request_review_id": null,
        "id": 46584983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0OTgz",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmmm, I believe that my example demonstrated the issue pretty well. I guess, here's a test. We need to make this pass :-)\n\n``` javascript\nit('should work with nested keys with numbers in the key', () => {\n  const key = 'foo3bar.baz4foobar'\n  const defaultValue = 'baz'\n  scope.fields = [\n    {template: input, key, defaultValue}\n  ]\n  scope.model = {}\n\n  compileAndDigest()\n  expect(scope.model.foo3bar.baz4foobar).to.equal(defaultValue)\n})\n```\n\nDoes that make sense? I think what we have now would actually cause this test to fail.\n",
        "created_at": "2015-12-03T17:45:35Z",
        "updated_at": "2015-12-03T17:45:35Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46584983",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46584983"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46584983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46585629",
        "pull_request_review_id": null,
        "id": 46585629,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1NjI5",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes you\u2019re correct that would fail.  What I don\u2019t understand is the reference to /^\\d/\n\nBecause basically /\\d/ checks for any digits in the string.\n\nCan you send me what you think the if statement should be?\n\nThe only thing I can think to do is to check to see if the first character is a digit.  If it is then deep linking won\u2019t work.  If not we can use the parse option.\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Thursday, December 3, 2015 at 12:45 PM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(formly-field): issue number 566 - Breaking change in 7.3.2 (#569)\n\nIn src/directives/formly-field.js:\n\n> ```\n>    // If we are working with a number then $parse wont work, default back to the old way for now\n> ```\n> -      if (angular.isNumber(key)) {\n> -        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n> -      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {\n>   Hmmm, I believe that my example demonstrated the issue pretty well. I guess, here's a test. We need to make this pass :-)\n\nit('should work with nested keys with numbers in the key', () => {\n  const key = 'foo3bar.baz4foobar'\n  const defaultValue = 'baz'\n  scope.fields = [\n    {template: input, key, defaultValue}\n  ]\n  scope.model = {}\n\n  compileAndDigest()\n  expect(scope.model.foo3bar.baz4foobar).to.equal(defaultValue)\n})\nDoes that make sense? I think what we have now would actually cause this test to fail.\n\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "created_at": "2015-12-03T17:50:44Z",
        "updated_at": "2015-12-03T17:50:44Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46585629",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46585629"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46585629"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46586795",
        "pull_request_review_id": null,
        "id": 46586795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2Nzk1",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, that's what I'm saying. That's what `/^\\d/` would do. It simply would check whether the first character is a digit.\n\nFor the if statement, I would expect something like:\n\n``` javascript\n\nif (shouldNotUseParse(key) {\n  return model[key]\n} // etc.\n\n// function down below...\nfunction shouldNotUseParse(key) {\n  return angular.isNumber(key) || (/^\\d/.test(key) && key.indexOf('[') === -1)\n}\n```\n",
        "created_at": "2015-12-03T18:00:37Z",
        "updated_at": "2015-12-03T18:00:37Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46586795",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46586795"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46586795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46587223",
        "pull_request_review_id": null,
        "id": 46587223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MjIz",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "MCKRUZ",
            "id": 1473014,
            "node_id": "MDQ6VXNlcjE0NzMwMTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1473014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MCKRUZ",
            "html_url": "https://github.com/MCKRUZ",
            "followers_url": "https://api.github.com/users/MCKRUZ/followers",
            "following_url": "https://api.github.com/users/MCKRUZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/MCKRUZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MCKRUZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MCKRUZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MCKRUZ/orgs",
            "repos_url": "https://api.github.com/users/MCKRUZ/repos",
            "events_url": "https://api.github.com/users/MCKRUZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MCKRUZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hmm\u2026I stand corrected.  Your Regex foo is greater then mine. :-)\n\nOk\u2026I\u2019ll have to make the change.  Give me a bit though, I have burned through my playtime for the moment. :-)\n\nFrom:  \"Kent C. Dodds\" notifications@github.com\nReply-To:  formly-js/angular-formly reply@reply.github.com\nDate:  Thursday, December 3, 2015 at 1:00 PM\nTo:  formly-js/angular-formly angular-formly@noreply.github.com\nCc:  Matt Kruczek kruz79@gmail.com\nSubject:  Re: [angular-formly] fix(formly-field): issue number 566 - Breaking change in 7.3.2 (#569)\n\nIn src/directives/formly-field.js:\n\n> ```\n>    // If we are working with a number then $parse wont work, default back to the old way for now\n> ```\n> -      if (angular.isNumber(key)) {\n> -        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n> -      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {\n>   Yeah, that's what I'm saying. That's what /^\\d/ would do. It simply would check whether the first character is a digit.\n\nFor the if statement, I would expect something like:\n\nif (shouldNotUseParse(key) {\n  return model[key]\n} // etc.// function down below...function shouldNotUseParse(key) {\n  return angular.isNumber(key) || (/^\\d/.test(key) && key.indexOf('[') === -1)\n}\n\u2014\nReply to this email directly or view it on GitHub.\n",
        "created_at": "2015-12-03T18:04:01Z",
        "updated_at": "2015-12-03T18:04:01Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46587223",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46587223"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46587223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46587577",
        "pull_request_review_id": null,
        "id": 46587577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3NTc3",
        "diff_hunk": "@@ -87,9 +87,9 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n       if (!key || !model) {\n         return\n       }\n+\n       // If we are working with a number then $parse wont work, default back to the old way for now\n-      if (angular.isNumber(key)) {\n-        // TODO: Fix this so we can get several levels instead of just one with properties that are numeric\n+      if (angular.isNumber(key) || (/\\d/.test(key) && key.indexOf('[') === -1)) {",
        "path": "src/directives/formly-field.js",
        "position": 8,
        "original_position": 8,
        "commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "original_commit_id": "373f9f69db6476036475a13351152ef8dc4c7116",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool, sounds good. Thanks for working on this!\n",
        "created_at": "2015-12-03T18:06:30Z",
        "updated_at": "2015-12-03T18:06:30Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46587577",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/569",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/46587577"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/569#discussion_r46587577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/569"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/49222512",
        "pull_request_review_id": null,
        "id": 49222512,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNTEy",
        "diff_hunk": "@@ -112,28 +112,56 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n     setupFields()\n \n     // watch the model and evaluate watch expressions that depend on it.\n-    $scope.$watch('model', onModelOrFormStateChange, true)\n+    if ($scope.options.manualModelWatcher) {\n+      const stringWatchers = {}\n+\n+      angular.forEach($scope.fields, function(field, index) {\n+        if (field.data && Array.isArray(field.data.watch)) {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 9,
        "commit_id": "8167abda547fe6ad26da01b343e782ad62f07d9c",
        "original_commit_id": "7c76daa773e58da7041935d2fe8b7bbb16389165",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If it's part of the core API of angular-formly, then it shouldn't go in `data`, but it could go in `extras`.\n",
        "created_at": "2016-01-08T18:49:06Z",
        "updated_at": "2016-01-19T15:21:37Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/599#discussion_r49222512",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/599",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/49222512"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/599#discussion_r49222512"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/599"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50113193",
        "pull_request_review_id": null,
        "id": 50113193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTkz",
        "diff_hunk": "@@ -226,13 +239,23 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n       angular.forEach($scope.fields, (field) => {\n         const isNewModel = initModel(field)\n \n-        if (field.model && isNewModel && watchedModels.indexOf(field.model) === -1) {\n+        if (field.model && isNewModel && watchedModels.indexOf(field.model) === -1 && !manualModelWatcher) {\n           $scope.$watch(() => field.model, onModelOrFormStateChange, true)\n           watchedModels.push(field.model)\n         }\n       })\n     }\n \n+    function setupExpressionWatchers(field, index) {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 84,
        "commit_id": "8167abda547fe6ad26da01b343e782ad62f07d9c",
        "original_commit_id": "10905d6e611400a58daff4cf791043d8d80e81c6",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This only sets up a watcher for `hideExpression`. Perhaps the function should be called `setupHideExpressionWatcher`\n",
        "created_at": "2016-01-19T13:49:11Z",
        "updated_at": "2016-01-19T15:21:37Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/599#discussion_r50113193",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/599",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50113193"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/599#discussion_r50113193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/599"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50124802",
        "pull_request_review_id": null,
        "id": 50124802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI0ODAy",
        "diff_hunk": "@@ -226,13 +239,23 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n       angular.forEach($scope.fields, (field) => {\n         const isNewModel = initModel(field)\n \n-        if (field.model && isNewModel && watchedModels.indexOf(field.model) === -1) {\n+        if (field.model && isNewModel && watchedModels.indexOf(field.model) === -1 && !manualModelWatcher) {\n           $scope.$watch(() => field.model, onModelOrFormStateChange, true)\n           watchedModels.push(field.model)\n         }\n       })\n     }\n \n+    function setupExpressionWatchers(field, index) {",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 84,
        "commit_id": "8167abda547fe6ad26da01b343e782ad62f07d9c",
        "original_commit_id": "10905d6e611400a58daff4cf791043d8d80e81c6",
        "user": {
            "login": "kwypchlo",
            "id": 3755029,
            "node_id": "MDQ6VXNlcjM3NTUwMjk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3755029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwypchlo",
            "html_url": "https://github.com/kwypchlo",
            "followers_url": "https://api.github.com/users/kwypchlo/followers",
            "following_url": "https://api.github.com/users/kwypchlo/following{/other_user}",
            "gists_url": "https://api.github.com/users/kwypchlo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kwypchlo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kwypchlo/subscriptions",
            "organizations_url": "https://api.github.com/users/kwypchlo/orgs",
            "repos_url": "https://api.github.com/users/kwypchlo/repos",
            "events_url": "https://api.github.com/users/kwypchlo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kwypchlo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sure, I have refactored the name\n",
        "created_at": "2016-01-19T15:22:07Z",
        "updated_at": "2016-01-19T15:22:07Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/599#discussion_r50124802",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/599",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50124802"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/599#discussion_r50124802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/599"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50147993",
        "pull_request_review_id": null,
        "id": 50147993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3OTkz",
        "diff_hunk": "@@ -952,5 +952,31 @@ describe('formly-form', () => {\n       expect(listener).to.have.been.called\n       expect(expression).to.have.been.called\n     })\n+\n+    it(`should setup any watchers specified on a fieldgroup`, () => {\n+      scope.model = {}\n+\n+      const listener = sinon.spy()\n+      const expression = sinon.spy()\n+\n+      scope.fields = [{\n+        watcher: [{\n+          listener: '',\n+          expression: '',\n+        }, {\n+          listener,\n+          expression,\n+        }],\n+        key: 'group',",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 19,
        "commit_id": "b2781ef454835268c6c595840243c485ee00e357",
        "original_commit_id": "5b5463c491cc0d14882e68df174e90ba3506f4ca",
        "user": {
            "login": "benoror",
            "id": 119117,
            "node_id": "MDQ6VXNlcjExOTExNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benoror",
            "html_url": "https://github.com/benoror",
            "followers_url": "https://api.github.com/users/benoror/followers",
            "following_url": "https://api.github.com/users/benoror/following{/other_user}",
            "gists_url": "https://api.github.com/users/benoror/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benoror/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benoror/subscriptions",
            "organizations_url": "https://api.github.com/users/benoror/orgs",
            "repos_url": "https://api.github.com/users/benoror/repos",
            "events_url": "https://api.github.com/users/benoror/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benoror/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@kentcdodds I added a key to the fieldGroup here, otherwise I get:\n\n```\nFirefox 43.0.0 (Ubuntu 0.0.0) formly-form field watchers should setup any watchers specified on a fieldgroup FAILED\n    expected [Function: compileAndDigest] to not throw an error but 'TypeError: field.key is undefined' was thrown\n    AssertionError@/home/benoror/github/angular-formly/node_modules/karma-sinon-chai/node_modules/chai/chai.js:5033:18\n    [3]</module.exports/Assertion.prototype.assert@/home/benoror/github/angular-formly/node_modules/karma-sinon-chai/node_modules/chai/chai.js:206:1\n    assertThrows@/home/benoror/github/angular-formly/node_modules/karma-sinon-chai/node_modules/chai/chai.js:1629:1\n    [10]</module.exports/ctx[name]@/home/benoror/github/angular-formly/node_modules/karma-sinon-chai/node_modules/chai/chai.js:3748:18\n    @/home/benoror/github/angular-formly/src/index.test.js:16699:8\n```\n\nNot sure why since key is marked as optional\n",
        "created_at": "2016-01-19T17:56:06Z",
        "updated_at": "2016-01-19T18:58:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50147993",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/610",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50147993"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50147993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50153230",
        "pull_request_review_id": null,
        "id": 50153230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzMjMw",
        "diff_hunk": "@@ -952,5 +952,31 @@ describe('formly-form', () => {\n       expect(listener).to.have.been.called\n       expect(expression).to.have.been.called\n     })\n+\n+    it(`should setup any watchers specified on a fieldgroup`, () => {\n+      scope.model = {}\n+\n+      const listener = sinon.spy()\n+      const expression = sinon.spy()\n+\n+      scope.fields = [{\n+        watcher: [{\n+          listener: '',\n+          expression: '',\n+        }, {\n+          listener,\n+          expression,\n+        }],\n+        key: 'group',",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 19,
        "commit_id": "b2781ef454835268c6c595840243c485ee00e357",
        "original_commit_id": "5b5463c491cc0d14882e68df174e90ba3506f4ca",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, that would indicate to me that anyone using field groups without specifying a `key` on the field group object will get that error when compiling. Could you investigate it further so the key is not required?\n",
        "created_at": "2016-01-19T18:34:14Z",
        "updated_at": "2016-01-19T18:58:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50153230",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/610",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50153230"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50153230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50155992",
        "pull_request_review_id": null,
        "id": 50155992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1OTky",
        "diff_hunk": "@@ -952,5 +952,31 @@ describe('formly-form', () => {\n       expect(listener).to.have.been.called\n       expect(expression).to.have.been.called\n     })\n+\n+    it(`should setup any watchers specified on a fieldgroup`, () => {\n+      scope.model = {}\n+\n+      const listener = sinon.spy()\n+      const expression = sinon.spy()\n+\n+      scope.fields = [{\n+        watcher: [{\n+          listener: '',\n+          expression: '',\n+        }, {\n+          listener,\n+          expression,\n+        }],\n+        key: 'group',",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 19,
        "commit_id": "b2781ef454835268c6c595840243c485ee00e357",
        "original_commit_id": "5b5463c491cc0d14882e68df174e90ba3506f4ca",
        "user": {
            "login": "benoror",
            "id": 119117,
            "node_id": "MDQ6VXNlcjExOTExNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/119117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benoror",
            "html_url": "https://github.com/benoror",
            "followers_url": "https://api.github.com/users/benoror/followers",
            "following_url": "https://api.github.com/users/benoror/following{/other_user}",
            "gists_url": "https://api.github.com/users/benoror/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benoror/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benoror/subscriptions",
            "organizations_url": "https://api.github.com/users/benoror/orgs",
            "repos_url": "https://api.github.com/users/benoror/repos",
            "events_url": "https://api.github.com/users/benoror/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benoror/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok, apparently when the expression is an empty string, this commit set it to it's field's [nested]model https://github.com/formly-js/angular-formly/commit/2b69b8e564c6d05699c9e89835fbb8e6b572c64c\n\nI will fix it asap\n",
        "created_at": "2016-01-19T18:53:50Z",
        "updated_at": "2016-01-19T18:58:36Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50155992",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/610",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/50155992"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/610#discussion_r50155992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/610"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/51630269",
        "pull_request_review_id": null,
        "id": 51630269,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwMjY5",
        "diff_hunk": "@@ -369,6 +369,8 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n         options: field,\n         index,\n         formState: $scope.options.formState,\n+        originalModel: '=?',",
        "path": "src/directives/formly-form.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "8f673341198ec5b47ce6e2af70fcbab3f30f444d",
        "original_commit_id": "8f673341198ec5b47ce6e2af70fcbab3f30f444d",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm afraid this is incorrect. These values wont make sense in the context of a formly expression... @formly-js/angular-formly-collaborators, could someone provide more direction please?\n",
        "created_at": "2016-02-02T20:31:54Z",
        "updated_at": "2016-02-02T20:31:54Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/622#discussion_r51630269",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/622",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/51630269"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/622#discussion_r51630269"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/622"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52124077",
        "pull_request_review_id": null,
        "id": 52124077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0MDc3",
        "diff_hunk": "@@ -536,26 +536,85 @@ describe('formly-form', () => {\n     beforeEach(() => {\n       scope.model = {}\n       scope.fieldModel = {}\n-\n-      scope.fields = [\n-        {template: input, key: 'foo', model: scope.fieldModel},\n-        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n-      ]\n     })\n+    describe('behaviour when model changes', () => {\n+\n+      describe('when a string is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n+          ]\n+        })\n \n-    it('should be called and resolve to true when field model changes', () => {\n-      compileAndDigest()\n-      expect(scope.fields[1].hide).be.false\n-      scope.fields[0].formControl.$setViewValue('value')\n-      expect(scope.fields[1].hide).be.true\n+        it('should be called and resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n+      describe('when a function is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {\n+              template: input, key: 'bar',\n+              model: scope.fieldModel,\n+              hideExpression: ($viewValue, $modelValue, scope) => {\n+                return !!scope.fields[1].data.formScope.fieldModel.foo\n+              },\n+              data: {\n+                formScope: scope,\n+              },\n+            },\n+          ]\n+        })\n+\n+        it('should be called and resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n     })\n \n-    it('should be called and resolve to false when field model changes', () => {\n-      scope.fieldModel.foo = 'value'\n+    it('ensures that hideExpression has all the expressionProperties values', () => {\n+      scope.options = {formState: {}}\n+      scope.fields = [{\n+        template: input,\n+        key: 'test',\n+        hideExpression: `\n+        options === options.data.field &&\n+        index === 0 &&\n+        formState === options.data.formOptions.formState &&\n+        originalModel === options.data.originalModel &&\n+        formOptions === options.data.formOptions`,\n+        data: {\n+          originalModel: scope.model,\n+          formoptions: scope.options,\n+        },\n+      }]\n+      scope.fields[0].data.field = scope.fields[0]\n       compileAndDigest()\n-      expect(scope.fields[1].hide).be.true\n-      scope.fields[0].formControl.$setViewValue('')\n-      expect(scope.fields[1].hide).be.false\n+      expect(scope.fields[0].hide).be.false",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 97,
        "commit_id": "3e6697217f765d4529ae774fdeaddb3e6a14a4a0",
        "original_commit_id": "56b0eea58d3ff40f853a5a32f8c9769a1d2b7c55",
        "user": {
            "login": "cynicaldevil",
            "id": 11256206,
            "node_id": "MDQ6VXNlcjExMjU2MjA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11256206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cynicaldevil",
            "html_url": "https://github.com/cynicaldevil",
            "followers_url": "https://api.github.com/users/cynicaldevil/followers",
            "following_url": "https://api.github.com/users/cynicaldevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/cynicaldevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cynicaldevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cynicaldevil/subscriptions",
            "organizations_url": "https://api.github.com/users/cynicaldevil/orgs",
            "repos_url": "https://api.github.com/users/cynicaldevil/repos",
            "events_url": "https://api.github.com/users/cynicaldevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cynicaldevil/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line 617 had to be \"expect(scope.fields[0].hide).be.true\" instead of `false`, it escaped me somehow. I'm working on another commit right now.\n",
        "created_at": "2016-02-07T20:20:53Z",
        "updated_at": "2016-02-09T19:46:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52124077",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/626",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52124077"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52124077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/626"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52236132",
        "pull_request_review_id": null,
        "id": 52236132,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM2MTMy",
        "diff_hunk": "@@ -536,26 +536,85 @@ describe('formly-form', () => {\n     beforeEach(() => {\n       scope.model = {}\n       scope.fieldModel = {}\n-\n-      scope.fields = [\n-        {template: input, key: 'foo', model: scope.fieldModel},\n-        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n-      ]\n     })\n+    describe('behaviour when model changes', () => {\n+\n+      describe('when a string is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n+          ]\n+        })\n \n-    it('should be called and resolve to true when field model changes', () => {\n-      compileAndDigest()\n-      expect(scope.fields[1].hide).be.false\n-      scope.fields[0].formControl.$setViewValue('value')\n-      expect(scope.fields[1].hide).be.true\n+        it('should be called and should resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and should resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n+      describe('when a function is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {\n+              template: input, key: 'bar',\n+              model: scope.fieldModel,\n+              hideExpression: ($viewValue, $modelValue, scope) => {\n+                return !!scope.fields[1].data.formScope.fieldModel.foo   //since the scope passed to the function belongs to the field,\n+              },                                                         //we store the form's scope in data property to access it here.\n+              data: {\n+                formScope: scope,          //the form's scope",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 51,
        "commit_id": "3e6697217f765d4529ae774fdeaddb3e6a14a4a0",
        "original_commit_id": "fcb91c8e95e40954a735135144da1d7b031e25c7",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "More accurately, the form's scope is actually what's getting passed to the `hideExpression`. the `scope` on this line is referencing the scope that you use when compiling the form (which is separate from the form's scope).\n",
        "created_at": "2016-02-08T22:21:52Z",
        "updated_at": "2016-02-09T19:46:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52236132",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/626",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52236132"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52236132"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/626"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52236176",
        "pull_request_review_id": null,
        "id": 52236176,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM2MTc2",
        "diff_hunk": "@@ -536,26 +536,85 @@ describe('formly-form', () => {\n     beforeEach(() => {\n       scope.model = {}\n       scope.fieldModel = {}\n-\n-      scope.fields = [\n-        {template: input, key: 'foo', model: scope.fieldModel},\n-        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n-      ]\n     })\n+    describe('behaviour when model changes', () => {\n+\n+      describe('when a string is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n+          ]\n+        })\n \n-    it('should be called and resolve to true when field model changes', () => {\n-      compileAndDigest()\n-      expect(scope.fields[1].hide).be.false\n-      scope.fields[0].formControl.$setViewValue('value')\n-      expect(scope.fields[1].hide).be.true\n+        it('should be called and should resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and should resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n+      describe('when a function is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {\n+              template: input, key: 'bar',\n+              model: scope.fieldModel,\n+              hideExpression: ($viewValue, $modelValue, scope) => {\n+                return !!scope.fields[1].data.formScope.fieldModel.foo   //since the scope passed to the function belongs to the field,\n+              },                                                         //we store the form's scope in data property to access it here.\n+              data: {\n+                formScope: scope,          //the form's scope",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 51,
        "commit_id": "3e6697217f765d4529ae774fdeaddb3e6a14a4a0",
        "original_commit_id": "fcb91c8e95e40954a735135144da1d7b031e25c7",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So you're dealing with 3 scopes. Your own, the form's, and the field's.\n",
        "created_at": "2016-02-08T22:22:06Z",
        "updated_at": "2016-02-09T19:46:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52236176",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/626",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52236176"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52236176"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/626"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52239772",
        "pull_request_review_id": null,
        "id": 52239772,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM5Nzcy",
        "diff_hunk": "@@ -536,26 +536,85 @@ describe('formly-form', () => {\n     beforeEach(() => {\n       scope.model = {}\n       scope.fieldModel = {}\n-\n-      scope.fields = [\n-        {template: input, key: 'foo', model: scope.fieldModel},\n-        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n-      ]\n     })\n+    describe('behaviour when model changes', () => {\n+\n+      describe('when a string is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n+          ]\n+        })\n \n-    it('should be called and resolve to true when field model changes', () => {\n-      compileAndDigest()\n-      expect(scope.fields[1].hide).be.false\n-      scope.fields[0].formControl.$setViewValue('value')\n-      expect(scope.fields[1].hide).be.true\n+        it('should be called and should resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and should resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n+      describe('when a function is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {\n+              template: input, key: 'bar',\n+              model: scope.fieldModel,\n+              hideExpression: ($viewValue, $modelValue, scope) => {\n+                return !!scope.fields[1].data.formScope.fieldModel.foo   //since the scope passed to the function belongs to the field,\n+              },                                                         //we store the form's scope in data property to access it here.\n+              data: {\n+                formScope: scope,          //the form's scope",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 51,
        "commit_id": "3e6697217f765d4529ae774fdeaddb3e6a14a4a0",
        "original_commit_id": "fcb91c8e95e40954a735135144da1d7b031e25c7",
        "user": {
            "login": "cynicaldevil",
            "id": 11256206,
            "node_id": "MDQ6VXNlcjExMjU2MjA2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11256206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cynicaldevil",
            "html_url": "https://github.com/cynicaldevil",
            "followers_url": "https://api.github.com/users/cynicaldevil/followers",
            "following_url": "https://api.github.com/users/cynicaldevil/following{/other_user}",
            "gists_url": "https://api.github.com/users/cynicaldevil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cynicaldevil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cynicaldevil/subscriptions",
            "organizations_url": "https://api.github.com/users/cynicaldevil/orgs",
            "repos_url": "https://api.github.com/users/cynicaldevil/repos",
            "events_url": "https://api.github.com/users/cynicaldevil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cynicaldevil/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems like I got confused a bit there with the scopes. Tricky thing, really  :sweat_smile: . Will fix it soon.\n",
        "created_at": "2016-02-08T22:45:59Z",
        "updated_at": "2016-02-09T19:46:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52239772",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/626",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52239772"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52239772"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/626"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52241046",
        "pull_request_review_id": null,
        "id": 52241046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQxMDQ2",
        "diff_hunk": "@@ -536,26 +536,85 @@ describe('formly-form', () => {\n     beforeEach(() => {\n       scope.model = {}\n       scope.fieldModel = {}\n-\n-      scope.fields = [\n-        {template: input, key: 'foo', model: scope.fieldModel},\n-        {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n-      ]\n     })\n+    describe('behaviour when model changes', () => {\n+\n+      describe('when a string is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {template: input, key: 'bar', model: scope.fieldModel, hideExpression: () => !!scope.fieldModel.foo},\n+          ]\n+        })\n \n-    it('should be called and resolve to true when field model changes', () => {\n-      compileAndDigest()\n-      expect(scope.fields[1].hide).be.false\n-      scope.fields[0].formControl.$setViewValue('value')\n-      expect(scope.fields[1].hide).be.true\n+        it('should be called and should resolve to true when field model changes', () => {\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.false\n+          scope.fields[0].formControl.$setViewValue('value')\n+          expect(scope.fields[1].hide).be.true\n+        })\n+\n+        it('should be called and should resolve to false when field model changes', () => {\n+          scope.fieldModel.foo = 'value'\n+          compileAndDigest()\n+          expect(scope.fields[1].hide).be.true\n+          scope.fields[0].formControl.$setViewValue('')\n+          expect(scope.fields[1].hide).be.false\n+        })\n+      })\n+      describe('when a function is passed to hideExpression', () => {\n+        beforeEach(() => {\n+          scope.fields = [\n+            {template: input, key: 'foo', model: scope.fieldModel},\n+            {\n+              template: input, key: 'bar',\n+              model: scope.fieldModel,\n+              hideExpression: ($viewValue, $modelValue, scope) => {\n+                return !!scope.fields[1].data.formScope.fieldModel.foo   //since the scope passed to the function belongs to the field,\n+              },                                                         //we store the form's scope in data property to access it here.\n+              data: {\n+                formScope: scope,          //the form's scope",
        "path": "src/directives/formly-form.test.js",
        "position": null,
        "original_position": 51,
        "commit_id": "3e6697217f765d4529ae774fdeaddb3e6a14a4a0",
        "original_commit_id": "fcb91c8e95e40954a735135144da1d7b031e25c7",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Let me know when you've updated the PR. GitHub does not notify me when a PR has been updated.\n",
        "created_at": "2016-02-08T22:55:01Z",
        "updated_at": "2016-02-09T19:46:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52241046",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/626",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/52241046"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/626#discussion_r52241046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/626"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/53470110",
        "pull_request_review_id": null,
        "id": 53470110,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMTEw",
        "diff_hunk": "@@ -366,6 +368,9 @@ function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpol\n     function getFormlyFieldLikeLocals(field, index) {\n       // this makes it closer to what a regular formlyExpression would be\n       return {\n+        // when field.model is not yet an object, this call should be evaluated in $scope.model context\n+        // because this is a call where field.model gets resolved\n+        model: angular.isObject(field.model) ? field.model : $scope.model,",
        "path": "src/directives/formly-form.js",
        "position": null,
        "original_position": 15,
        "commit_id": "c899ee61eba157f573570fb9ce460bf8d9a9178b",
        "original_commit_id": "e68c5681f397a64235118fb8c8fedd9acdbc31a4",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we should actually put this logic in the place where the field model gets resolved rather than here because it could lead to unexpected results in other expressions.\n",
        "created_at": "2016-02-19T14:59:04Z",
        "updated_at": "2016-02-25T21:01:52Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/639#discussion_r53470110",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/639",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/53470110"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/639#discussion_r53470110"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/639"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/55663178",
        "pull_request_review_id": null,
        "id": 55663178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYzMTc4",
        "diff_hunk": "@@ -509,8 +526,9 @@ describe('formly-form', () => {\n       }\n \n       scope.$digest()\n+      $timeout.flush()",
        "path": "src/directives/formly-form.test.js",
        "position": 42,
        "original_position": 42,
        "commit_id": "61f891d3ed71111f4b0474ad07bccb5cf625abd3",
        "original_commit_id": "61f891d3ed71111f4b0474ad07bccb5cf625abd3",
        "user": {
            "login": "BarryThePenguin",
            "id": 1351912,
            "node_id": "MDQ6VXNlcjEzNTE5MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1351912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BarryThePenguin",
            "html_url": "https://github.com/BarryThePenguin",
            "followers_url": "https://api.github.com/users/BarryThePenguin/followers",
            "following_url": "https://api.github.com/users/BarryThePenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/BarryThePenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BarryThePenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BarryThePenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/BarryThePenguin/orgs",
            "repos_url": "https://api.github.com/users/BarryThePenguin/repos",
            "events_url": "https://api.github.com/users/BarryThePenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BarryThePenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can `scope.$digest()` be removed after adding `$timeout.flush()`?\n",
        "created_at": "2016-03-10T10:56:51Z",
        "updated_at": "2016-03-10T10:56:55Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/657#discussion_r55663178",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/657",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/55663178"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/657#discussion_r55663178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/657"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/55664743",
        "pull_request_review_id": null,
        "id": 55664743,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjY0NzQz",
        "diff_hunk": "@@ -509,8 +526,9 @@ describe('formly-form', () => {\n       }\n \n       scope.$digest()\n+      $timeout.flush()",
        "path": "src/directives/formly-form.test.js",
        "position": 42,
        "original_position": 42,
        "commit_id": "61f891d3ed71111f4b0474ad07bccb5cf625abd3",
        "original_commit_id": "61f891d3ed71111f4b0474ad07bccb5cf625abd3",
        "user": {
            "login": "kwypchlo",
            "id": 3755029,
            "node_id": "MDQ6VXNlcjM3NTUwMjk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3755029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwypchlo",
            "html_url": "https://github.com/kwypchlo",
            "followers_url": "https://api.github.com/users/kwypchlo/followers",
            "following_url": "https://api.github.com/users/kwypchlo/following{/other_user}",
            "gists_url": "https://api.github.com/users/kwypchlo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kwypchlo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kwypchlo/subscriptions",
            "organizations_url": "https://api.github.com/users/kwypchlo/orgs",
            "repos_url": "https://api.github.com/users/kwypchlo/repos",
            "events_url": "https://api.github.com/users/kwypchlo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kwypchlo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nope, `$digest` is needed to trigger the watcher on formly directive for the `model` property and `$timeout` is just a dirty workaround for `runExpressions` method :)\n",
        "created_at": "2016-03-10T11:11:17Z",
        "updated_at": "2016-03-10T11:11:17Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/657#discussion_r55664743",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/657",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/55664743"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/657#discussion_r55664743"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/657"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/72186802",
        "pull_request_review_id": null,
        "id": 72186802,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyMTg2ODAy",
        "diff_hunk": "@@ -59,18 +59,25 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n \n     // function definitions\n     function runExpressions() {\n+      const deferred = $q.defer()",
        "path": "src/directives/formly-field.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "5258ca4a043f60c3d3974c2b955ca7362354e6b7",
        "original_commit_id": "5258ca4a043f60c3d3974c2b955ca7362354e6b7",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not that my opinion matters much at this point, but you could actually clean up this code a little by returning the promise from `$timeout` and `$q.all`. That way you wouldn't need `$q.defer()`. So it'd look like:\n\n``` javascript\nfunction runExpressions() {\n  // must run on next tick to make sure that the current value is correct.\n  return $timeout(function runExpressionsOnNextTick() {\n    const promises = []\n    const field = $scope.options\n    const currentValue = valueGetterSetter()\n    angular.forEach(field.expressionProperties, function runExpression(expression, prop) {\n      const setter = $parse(prop).assign\n      const promise = $q.when(formlyUtil.formlyEval($scope, expression, currentValue, currentValue))\n        .then(function setFieldValue(value) {\n          setter(field, value)\n        })\n      promises.push(promise)\n    })\n    return $q.all(promises)\n  }, 0, false)\n}\n```\n",
        "created_at": "2016-07-26T04:34:29Z",
        "updated_at": "2016-07-26T04:34:29Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/699#discussion_r72186802",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/699",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/72186802"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/699#discussion_r72186802"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/699"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/72190360",
        "pull_request_review_id": null,
        "id": 72190360,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyMTkwMzYw",
        "diff_hunk": "@@ -59,18 +59,25 @@ function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyCo\n \n     // function definitions\n     function runExpressions() {\n+      const deferred = $q.defer()",
        "path": "src/directives/formly-field.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "5258ca4a043f60c3d3974c2b955ca7362354e6b7",
        "original_commit_id": "5258ca4a043f60c3d3974c2b955ca7362354e6b7",
        "user": {
            "login": "pseudo-su",
            "id": 4339582,
            "node_id": "MDQ6VXNlcjQzMzk1ODI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4339582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pseudo-su",
            "html_url": "https://github.com/pseudo-su",
            "followers_url": "https://api.github.com/users/pseudo-su/followers",
            "following_url": "https://api.github.com/users/pseudo-su/following{/other_user}",
            "gists_url": "https://api.github.com/users/pseudo-su/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pseudo-su/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pseudo-su/subscriptions",
            "organizations_url": "https://api.github.com/users/pseudo-su/orgs",
            "repos_url": "https://api.github.com/users/pseudo-su/repos",
            "events_url": "https://api.github.com/users/pseudo-su/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pseudo-su/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I did have the same thought but changing it to return the $q.all from inside the $timeout made it not work. I'm not sure why because I would've assumed they'd be equivalent.\n",
        "created_at": "2016-07-26T05:37:11Z",
        "updated_at": "2016-07-26T05:37:12Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/699#discussion_r72190360",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/699",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/72190360"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/699#discussion_r72190360"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/699"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/96524134",
        "pull_request_review_id": 17108248,
        "id": 96524134,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2NTI0MTM0",
        "diff_hunk": "@@ -30,7 +30,7 @@ export default function FormlyFormController(\n   function validateFormControl(formControl, promise) {\n     const validate = formControl.$validate\n     if (promise) {\n-      promise.then(validate)\n+      promise.then(() => validate.apply(formControl))\n     } else {\n       validate()",
        "path": "src/directives/formly-form.controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "original_commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "user": {
            "login": "BarryThePenguin",
            "id": 1351912,
            "node_id": "MDQ6VXNlcjEzNTE5MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1351912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BarryThePenguin",
            "html_url": "https://github.com/BarryThePenguin",
            "followers_url": "https://api.github.com/users/BarryThePenguin/followers",
            "following_url": "https://api.github.com/users/BarryThePenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/BarryThePenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BarryThePenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BarryThePenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/BarryThePenguin/orgs",
            "repos_url": "https://api.github.com/users/BarryThePenguin/repos",
            "events_url": "https://api.github.com/users/BarryThePenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BarryThePenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what about this line?",
        "created_at": "2017-01-17T22:16:10Z",
        "updated_at": "2017-01-17T22:16:11Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/728#discussion_r96524134",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/96524134"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/728#discussion_r96524134"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/96524709",
        "pull_request_review_id": 17108863,
        "id": 96524709,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk2NTI0NzA5",
        "diff_hunk": "@@ -30,7 +30,7 @@ export default function FormlyFormController(\n   function validateFormControl(formControl, promise) {\n     const validate = formControl.$validate\n     if (promise) {\n-      promise.then(validate)\n+      promise.then(() => validate.apply(formControl))\n     } else {\n       validate()",
        "path": "src/directives/formly-form.controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "original_commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "user": {
            "login": "kentcdodds",
            "id": 1500684,
            "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1500684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kentcdodds",
            "html_url": "https://github.com/kentcdodds",
            "followers_url": "https://api.github.com/users/kentcdodds/followers",
            "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
            "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
            "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
            "repos_url": "https://api.github.com/users/kentcdodds/repos",
            "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was thinking that the problem is that the `validate` function isn't being called with the right `this` context. Honestly, I'd prefer the use of `bind` personally, but I don't care either way.",
        "created_at": "2017-01-17T22:19:10Z",
        "updated_at": "2017-01-17T22:19:10Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/728#discussion_r96524709",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/96524709"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/728#discussion_r96524709"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/728"
            }
        },
        "in_reply_to_id": 96524134
    },
    {
        "url": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/97161431",
        "pull_request_review_id": 17770611,
        "id": 97161431,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MTYxNDMx",
        "diff_hunk": "@@ -30,7 +30,7 @@ export default function FormlyFormController(\n   function validateFormControl(formControl, promise) {\n     const validate = formControl.$validate\n     if (promise) {\n-      promise.then(validate)\n+      promise.then(() => validate.apply(formControl))\n     } else {\n       validate()",
        "path": "src/directives/formly-form.controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "original_commit_id": "ed1fcfcda8017dbcf03a0fd0b56040535b511bec",
        "user": {
            "login": "BarryThePenguin",
            "id": 1351912,
            "node_id": "MDQ6VXNlcjEzNTE5MTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1351912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BarryThePenguin",
            "html_url": "https://github.com/BarryThePenguin",
            "followers_url": "https://api.github.com/users/BarryThePenguin/followers",
            "following_url": "https://api.github.com/users/BarryThePenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/BarryThePenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BarryThePenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BarryThePenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/BarryThePenguin/orgs",
            "repos_url": "https://api.github.com/users/BarryThePenguin/repos",
            "events_url": "https://api.github.com/users/BarryThePenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BarryThePenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool. LGTM",
        "created_at": "2017-01-20T21:41:08Z",
        "updated_at": "2017-01-20T21:41:08Z",
        "html_url": "https://github.com/formly-js/angular-formly/pull/728#discussion_r97161431",
        "pull_request_url": "https://api.github.com/repos/formly-js/angular-formly/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/comments/97161431"
            },
            "html": {
                "href": "https://github.com/formly-js/angular-formly/pull/728#discussion_r97161431"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/formly-js/angular-formly/pulls/728"
            }
        },
        "in_reply_to_id": 96524134
    }
]