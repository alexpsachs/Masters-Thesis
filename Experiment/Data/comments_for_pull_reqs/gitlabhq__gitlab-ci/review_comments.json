[
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/3044383",
        "pull_request_review_id": null,
        "id": 3044383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDQzODM=",
        "diff_hunk": "@@ -200,7 +200,7 @@\n   # config.navigational_formats = [\"*/*\", :html]\n \n   # The default HTTP method used to sign out a resource. Default is :delete.\n-  config.sign_out_via = :delete\n+  config.sign_out_via = :get",
        "path": "config/initializers/devise.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "46107c78a8617e42f0e25a0dcdd6896520cd0d40",
        "original_commit_id": "46107c78a8617e42f0e25a0dcdd6896520cd0d40",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why?\n",
        "created_at": "2013-02-18T07:34:25Z",
        "updated_at": "2013-02-18T07:34:25Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/104#discussion_r3044383",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/104",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/3044383"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/104#discussion_r3044383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/104"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242849",
        "pull_request_review_id": null,
        "id": 4242849,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDk=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison\n     sudo apt-get install redis-server \n \n ## 2. Install Ruby (RVM) for gitlab_ci\n \n     sudo su gitlab_ci\n \n-    \\curl -L https://get.rvm.io | bash -s stable --ruby\n+    curl -L https://get.rvm.io | bash -s stable --ruby",
        "path": "doc/installation.md",
        "position": 19,
        "original_position": 19,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why `\\` was removed?\n",
        "created_at": "2013-05-15T19:57:55Z",
        "updated_at": "2013-05-15T19:57:55Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242849",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242849"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242849"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242866",
        "pull_request_review_id": null,
        "id": 4242866,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NjY=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison\n     sudo apt-get install redis-server \n \n ## 2. Install Ruby (RVM) for gitlab_ci\n \n     sudo su gitlab_ci\n \n-    \\curl -L https://get.rvm.io | bash -s stable --ruby\n+    curl -L https://get.rvm.io | bash -s stable --ruby",
        "path": "doc/installation.md",
        "position": 19,
        "original_position": 19,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The original was taken from  https://rvm.io/\n",
        "created_at": "2013-05-15T19:58:34Z",
        "updated_at": "2013-05-15T19:58:34Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242866",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242866"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242866"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242872",
        "pull_request_review_id": null,
        "id": 4242872,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NzI=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison",
        "path": "doc/installation.md",
        "position": 11,
        "original_position": 11,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why we need sqlite libs?\n",
        "created_at": "2013-05-15T19:58:57Z",
        "updated_at": "2013-05-15T19:58:57Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242872",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4242872"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4242872"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244187",
        "pull_request_review_id": null,
        "id": 4244187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODc=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison\n     sudo apt-get install redis-server \n \n ## 2. Install Ruby (RVM) for gitlab_ci\n \n     sudo su gitlab_ci\n \n-    \\curl -L https://get.rvm.io | bash -s stable --ruby\n+    curl -L https://get.rvm.io | bash -s stable --ruby",
        "path": "doc/installation.md",
        "position": 19,
        "original_position": 19,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "flecno",
            "id": 213723,
            "node_id": "MDQ6VXNlcjIxMzcyMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/213723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flecno",
            "html_url": "https://github.com/flecno",
            "followers_url": "https://api.github.com/users/flecno/followers",
            "following_url": "https://api.github.com/users/flecno/following{/other_user}",
            "gists_url": "https://api.github.com/users/flecno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flecno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flecno/subscriptions",
            "organizations_url": "https://api.github.com/users/flecno/orgs",
            "repos_url": "https://api.github.com/users/flecno/repos",
            "events_url": "https://api.github.com/users/flecno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flecno/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "oh yes... it looked like a typo and I had no idea about the sense\n",
        "created_at": "2013-05-15T20:59:09Z",
        "updated_at": "2013-05-15T20:59:09Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244187",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244187"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244217",
        "pull_request_review_id": null,
        "id": 4244217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyMTc=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison",
        "path": "doc/installation.md",
        "position": 11,
        "original_position": 11,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "flecno",
            "id": 213723,
            "node_id": "MDQ6VXNlcjIxMzcyMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/213723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flecno",
            "html_url": "https://github.com/flecno",
            "followers_url": "https://api.github.com/users/flecno/followers",
            "following_url": "https://api.github.com/users/flecno/following{/other_user}",
            "gists_url": "https://api.github.com/users/flecno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flecno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flecno/subscriptions",
            "organizations_url": "https://api.github.com/users/flecno/orgs",
            "repos_url": "https://api.github.com/users/flecno/repos",
            "events_url": "https://api.github.com/users/flecno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flecno/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "RVM need It. The install script tries to install these packages on debian squeeze:\n\n```\nrequirements_debian_libs_install bash curl patch bzip2 ca-certificates gawk g++ gcc make\nlibc6-dev patch openssl ca-certificates libreadline6 libreadline6-dev curl zlib1g zlib1g-dev\nlibssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev autoconf libc6-dev\nlibgdbm-dev libncurses5-dev automake libtool bison pkg-config libffi-dev\n```\n",
        "created_at": "2013-05-15T21:00:20Z",
        "updated_at": "2013-05-15T21:00:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244217",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244217"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244641",
        "pull_request_review_id": null,
        "id": 4244641,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2NDE=",
        "diff_hunk": "@@ -10,21 +10,24 @@ Create a user for GitLab:\n     sudo apt-get update\n     sudo apt-get upgrade\n \n-    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\n+    sudo apt-get install -y wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev libsqlite3-dev sqlite3 bison\n     sudo apt-get install redis-server \n \n ## 2. Install Ruby (RVM) for gitlab_ci\n \n     sudo su gitlab_ci\n \n-    \\curl -L https://get.rvm.io | bash -s stable --ruby\n+    curl -L https://get.rvm.io | bash -s stable --ruby",
        "path": "doc/installation.md",
        "position": 19,
        "original_position": 19,
        "commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "original_commit_id": "2b021ba755932a163db504183662f32038d5f73a",
        "user": {
            "login": "dan-blanchard",
            "id": 976345,
            "node_id": "MDQ6VXNlcjk3NjM0NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/976345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dan-blanchard",
            "html_url": "https://github.com/dan-blanchard",
            "followers_url": "https://api.github.com/users/dan-blanchard/followers",
            "following_url": "https://api.github.com/users/dan-blanchard/following{/other_user}",
            "gists_url": "https://api.github.com/users/dan-blanchard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dan-blanchard/subscriptions",
            "organizations_url": "https://api.github.com/users/dan-blanchard/orgs",
            "repos_url": "https://api.github.com/users/dan-blanchard/repos",
            "events_url": "https://api.github.com/users/dan-blanchard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dan-blanchard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "According to https://rvm.io/rvm/install/, the slash is just there to prevent issues when someone has aliased curl via .curlrc. It probably affects a very tiny subset of people.\n",
        "created_at": "2013-05-15T21:23:29Z",
        "updated_at": "2013-05-15T21:23:29Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244641",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/4244641"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/157#discussion_r4244641"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5111659",
        "pull_request_review_id": null,
        "id": 5111659,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2NTk=",
        "diff_hunk": "@@ -108,8 +108,11 @@ You can use either MySQL or PostgreSQL.\n \n ### Install gems\n  \n+    # mysql\n     sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n-    sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n+\n+    # postgres\n+    sudo -u gitlab_ci -H bundle --without development test mysql --deployment",
        "path": "doc/installation.md",
        "position": 9,
        "original_position": 9,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "fabianoalmeida",
            "id": 417495,
            "node_id": "MDQ6VXNlcjQxNzQ5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/417495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabianoalmeida",
            "html_url": "https://github.com/fabianoalmeida",
            "followers_url": "https://api.github.com/users/fabianoalmeida/followers",
            "following_url": "https://api.github.com/users/fabianoalmeida/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabianoalmeida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabianoalmeida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabianoalmeida/subscriptions",
            "organizations_url": "https://api.github.com/users/fabianoalmeida/orgs",
            "repos_url": "https://api.github.com/users/fabianoalmeida/repos",
            "events_url": "https://api.github.com/users/fabianoalmeida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabianoalmeida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where has <code># postgres</code> should be <code># mysql</code>... No?\n",
        "created_at": "2013-07-10T10:22:16Z",
        "updated_at": "2013-07-10T10:22:16Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5111659",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5111659"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5111659"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5111668",
        "pull_request_review_id": null,
        "id": 5111668,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2Njg=",
        "diff_hunk": "@@ -108,8 +108,11 @@ You can use either MySQL or PostgreSQL.\n \n ### Install gems\n  \n+    # mysql\n     sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n-    sudo -u gitlab_ci -H bundle --without development test postgres --deployment",
        "path": "doc/installation.md",
        "position": 6,
        "original_position": 6,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "fabianoalmeida",
            "id": 417495,
            "node_id": "MDQ6VXNlcjQxNzQ5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/417495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabianoalmeida",
            "html_url": "https://github.com/fabianoalmeida",
            "followers_url": "https://api.github.com/users/fabianoalmeida/followers",
            "following_url": "https://api.github.com/users/fabianoalmeida/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabianoalmeida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabianoalmeida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabianoalmeida/subscriptions",
            "organizations_url": "https://api.github.com/users/fabianoalmeida/orgs",
            "repos_url": "https://api.github.com/users/fabianoalmeida/repos",
            "events_url": "https://api.github.com/users/fabianoalmeida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabianoalmeida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Where has <code># mysql</code> should be <code># postgres</code>... No?\n",
        "created_at": "2013-07-10T10:22:41Z",
        "updated_at": "2013-07-10T10:22:41Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5111668",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5111668"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5111668"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5118087",
        "pull_request_review_id": null,
        "id": 5118087,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgwODc=",
        "diff_hunk": "@@ -108,8 +108,11 @@ You can use either MySQL or PostgreSQL.\n \n ### Install gems\n  \n+    # mysql\n     sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n-    sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n+\n+    # postgres\n+    sudo -u gitlab_ci -H bundle --without development test mysql --deployment",
        "path": "doc/installation.md",
        "position": 9,
        "original_position": 9,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "tom5760",
            "id": 62623,
            "node_id": "MDQ6VXNlcjYyNjIz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/62623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tom5760",
            "html_url": "https://github.com/tom5760",
            "followers_url": "https://api.github.com/users/tom5760/followers",
            "following_url": "https://api.github.com/users/tom5760/following{/other_user}",
            "gists_url": "https://api.github.com/users/tom5760/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tom5760/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tom5760/subscriptions",
            "organizations_url": "https://api.github.com/users/tom5760/orgs",
            "repos_url": "https://api.github.com/users/tom5760/repos",
            "events_url": "https://api.github.com/users/tom5760/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tom5760/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, when installing using postgres, you do not want the mysql gems, hence the `--without mysql`.  For mysql, you do in fact want the mysql gems, and not the postgres gems, hence the `--without postgres`.\n",
        "created_at": "2013-07-10T15:38:49Z",
        "updated_at": "2013-07-10T15:38:49Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5118087",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5118087"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5118087"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5119623",
        "pull_request_review_id": null,
        "id": 5119623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk2MjM=",
        "diff_hunk": "@@ -108,8 +108,11 @@ You can use either MySQL or PostgreSQL.\n \n ### Install gems\n  \n+    # mysql\n     sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n-    sudo -u gitlab_ci -H bundle --without development test postgres --deployment\n+\n+    # postgres\n+    sudo -u gitlab_ci -H bundle --without development test mysql --deployment",
        "path": "doc/installation.md",
        "position": 9,
        "original_position": 9,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "fabianoalmeida",
            "id": 417495,
            "node_id": "MDQ6VXNlcjQxNzQ5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/417495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabianoalmeida",
            "html_url": "https://github.com/fabianoalmeida",
            "followers_url": "https://api.github.com/users/fabianoalmeida/followers",
            "following_url": "https://api.github.com/users/fabianoalmeida/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabianoalmeida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabianoalmeida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabianoalmeida/subscriptions",
            "organizations_url": "https://api.github.com/users/fabianoalmeida/orgs",
            "repos_url": "https://api.github.com/users/fabianoalmeida/repos",
            "events_url": "https://api.github.com/users/fabianoalmeida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabianoalmeida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@tom5760 I got it. :+1: \n",
        "created_at": "2013-07-10T16:36:42Z",
        "updated_at": "2013-07-10T16:36:42Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5119623",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5119623"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5119623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265750",
        "pull_request_review_id": null,
        "id": 5265750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3NTA=",
        "diff_hunk": "@@ -117,7 +120,7 @@ You can use either MySQL or PostgreSQL.\n     sudo -u gitlab_ci -H cp config/database.yml.mysql config/database.yml\n \n     # postgres\n-    sudo -u gitlab_ci -H cp config/database.yml.postgres config/database.yml\n+    sudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml",
        "path": "doc/installation.md",
        "position": 18,
        "original_position": 18,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@fabianoalmeida please amend your commit so that this is the only change.\n",
        "created_at": "2013-07-18T11:44:01Z",
        "updated_at": "2013-07-18T11:44:01Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265750",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265750"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265916",
        "pull_request_review_id": null,
        "id": 5265916,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU5MTY=",
        "diff_hunk": "@@ -117,7 +120,7 @@ You can use either MySQL or PostgreSQL.\n     sudo -u gitlab_ci -H cp config/database.yml.mysql config/database.yml\n \n     # postgres\n-    sudo -u gitlab_ci -H cp config/database.yml.postgres config/database.yml\n+    sudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml",
        "path": "doc/installation.md",
        "position": 18,
        "original_position": 18,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "fabianoalmeida",
            "id": 417495,
            "node_id": "MDQ6VXNlcjQxNzQ5NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/417495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabianoalmeida",
            "html_url": "https://github.com/fabianoalmeida",
            "followers_url": "https://api.github.com/users/fabianoalmeida/followers",
            "following_url": "https://api.github.com/users/fabianoalmeida/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabianoalmeida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabianoalmeida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabianoalmeida/subscriptions",
            "organizations_url": "https://api.github.com/users/fabianoalmeida/orgs",
            "repos_url": "https://api.github.com/users/fabianoalmeida/repos",
            "events_url": "https://api.github.com/users/fabianoalmeida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabianoalmeida/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@jacobvosmaer you mean @tom5760, right? :wink: \n",
        "created_at": "2013-07-18T11:59:20Z",
        "updated_at": "2013-07-18T11:59:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265916",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265916"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265916"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265929",
        "pull_request_review_id": null,
        "id": 5265929,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU5Mjk=",
        "diff_hunk": "@@ -117,7 +120,7 @@ You can use either MySQL or PostgreSQL.\n     sudo -u gitlab_ci -H cp config/database.yml.mysql config/database.yml\n \n     # postgres\n-    sudo -u gitlab_ci -H cp config/database.yml.postgres config/database.yml\n+    sudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml",
        "path": "doc/installation.md",
        "position": 18,
        "original_position": 18,
        "commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "original_commit_id": "dbb279ca9e598ce15cc170e20df01be0127fd7a6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry :)\n",
        "created_at": "2013-07-18T12:00:27Z",
        "updated_at": "2013-07-18T12:00:27Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265929",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5265929"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/209#discussion_r5265929"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/209"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5266756",
        "pull_request_review_id": null,
        "id": 5266756,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY3NTY=",
        "diff_hunk": "@@ -123,7 +123,7 @@ case \"$1\" in\n         status\n         ;;\n   *)\n-        echo \"Usage: sudo service gitlab {start|stop|restart|reload}\" >&2\n+        echo \"Usage: sudo service gitlab_ci {start|stop|restart|reload}\" >&2",
        "path": "lib/support/init.d/gitlab_ci",
        "position": 48,
        "original_position": 48,
        "commit_id": "b43348b4a1cd8458eefe37c80c7974344cb85a1d",
        "original_commit_id": "e24d3977888dc081e25452171953cce8ebc6e1ec",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thanks for catching this!\n",
        "created_at": "2013-07-18T12:53:41Z",
        "updated_at": "2013-07-19T09:49:22Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5266756",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5266756"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5266756"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5272002",
        "pull_request_review_id": null,
        "id": 5272002,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwMDI=",
        "diff_hunk": "@@ -45,8 +45,8 @@ start() {\n     exit 1\n   else\n     if [ `whoami` = root ]; then\n-      sudo -u gitlab_ci -H bash -l -c \"RAILS_ENV=production bundle exec puma $DAEMON_OPTS\"\n-      sudo -u gitlab_ci -H bash -l -c \"mkdir -p $PID_PATH && $START_SIDEKIQ  > /dev/null  2>&1 &\"\n+      sudo -u $APP_USER -H bash -l -c \"RAILS_ENV=production bundle exec puma $DAEMON_OPTS\"P",
        "path": "lib/support/init.d/gitlab_ci",
        "position": null,
        "original_position": 17,
        "commit_id": "b43348b4a1cd8458eefe37c80c7974344cb85a1d",
        "original_commit_id": "3e992828e44bcc2fa86f14819fa7239243f28056",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what 'P' in the end? \n",
        "created_at": "2013-07-18T16:18:20Z",
        "updated_at": "2013-07-19T09:49:22Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5272002",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5272002"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5272002"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5272140",
        "pull_request_review_id": null,
        "id": 5272140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxNDA=",
        "diff_hunk": "@@ -45,8 +45,8 @@ start() {\n     exit 1\n   else\n     if [ `whoami` = root ]; then\n-      sudo -u gitlab_ci -H bash -l -c \"RAILS_ENV=production bundle exec puma $DAEMON_OPTS\"\n-      sudo -u gitlab_ci -H bash -l -c \"mkdir -p $PID_PATH && $START_SIDEKIQ  > /dev/null  2>&1 &\"\n+      sudo -u $APP_USER -H bash -l -c \"RAILS_ENV=production bundle exec puma $DAEMON_OPTS\"P",
        "path": "lib/support/init.d/gitlab_ci",
        "position": null,
        "original_position": 17,
        "commit_id": "b43348b4a1cd8458eefe37c80c7974344cb85a1d",
        "original_commit_id": "3e992828e44bcc2fa86f14819fa7239243f28056",
        "user": {
            "login": "thomwiggers",
            "id": 974662,
            "node_id": "MDQ6VXNlcjk3NDY2Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/974662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomwiggers",
            "html_url": "https://github.com/thomwiggers",
            "followers_url": "https://api.github.com/users/thomwiggers/followers",
            "following_url": "https://api.github.com/users/thomwiggers/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomwiggers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomwiggers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomwiggers/subscriptions",
            "organizations_url": "https://api.github.com/users/thomwiggers/orgs",
            "repos_url": "https://api.github.com/users/thomwiggers/repos",
            "events_url": "https://api.github.com/users/thomwiggers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomwiggers/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Interesting question. I have no idea\n",
        "created_at": "2013-07-18T16:24:54Z",
        "updated_at": "2013-07-19T09:49:22Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5272140",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5272140"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/186#discussion_r5272140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/186"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5290750",
        "pull_request_review_id": null,
        "id": 5290750,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA3NTA=",
        "diff_hunk": "@@ -12,11 +12,15 @@ module Ansi2html\n     '90' => 'grey'\n   }\n \n-  def self.convert(ansi)\n+def self.convert(ansi)",
        "path": "lib/ansi2html.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "3c5683bf4fe8793c0e9c1a4bd70f46744c54fdd4",
        "original_commit_id": "cb6cac6f769748ab0e290e46fec5e56050314c10",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "??\n",
        "created_at": "2013-07-19T12:03:33Z",
        "updated_at": "2013-07-26T17:50:19Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/228#discussion_r5290750",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/228",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/5290750"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/228#discussion_r5290750"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/228"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067452",
        "pull_request_review_id": null,
        "id": 6067452,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjc0NTI=",
        "diff_hunk": "@@ -2,6 +2,12 @@ defaults: &defaults\n   allowed_gitlab_urls: \n     - 'https://dev.gitlab.org/'\n     - 'https://staging.gitlab.org/'\n+  gravatar:",
        "path": "config/application.yml.example",
        "position": null,
        "original_position": 4,
        "commit_id": "39e76e123c3023b93bb35d944e9c25c79c20714a",
        "original_commit_id": "df65cc855ca218a091eeb5f8bf649272eed2a870",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about default values for `gravatar` settings?\n",
        "created_at": "2013-08-29T17:36:23Z",
        "updated_at": "2013-09-01T04:11:30Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067452",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067452"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067452"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067462",
        "pull_request_review_id": null,
        "id": 6067462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjc0NjI=",
        "diff_hunk": "@@ -3,12 +3,17 @@ def loader_html\n     image_tag 'loader.gif'\n   end\n \n-  def gravatar_icon(user_email = '', size = 40)\n-    gravatar_url = 'https://www.gravatar.com/avatar/%{hash}?s=%{size}&d=mm'\n-    user_email.strip!\n-    sprintf gravatar_url, hash: Digest::MD5.hexdigest(user_email.downcase), size: size\n-  end\n+  def gravatar_icon(user_email = '', size = nil)\n+    size = 40 if size.nil? || size <= 0\n \n+    if !GitlabCi.config.gravatar.enabled || user_email.blank?\n+      'no_avatar.png'",
        "path": "app/helpers/application_helper.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "39e76e123c3023b93bb35d944e9c25c79c20714a",
        "original_commit_id": "df65cc855ca218a091eeb5f8bf649272eed2a870",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we dont have such image\n",
        "created_at": "2013-08-29T17:36:35Z",
        "updated_at": "2013-09-01T04:11:30Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067462",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067462"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067510",
        "pull_request_review_id": null,
        "id": 6067510,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjc1MTA=",
        "diff_hunk": "@@ -2,6 +2,12 @@ defaults: &defaults\n   allowed_gitlab_urls: \n     - 'https://dev.gitlab.org/'\n     - 'https://staging.gitlab.org/'\n+  gravatar:\n+    enabled: true\n+    plain_url: \"http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=mm\"\n+    ssl_url:   \"https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=mm\"\n+  https:\n+    enabled: false",
        "path": "config/application.yml.example",
        "position": null,
        "original_position": 9,
        "commit_id": "39e76e123c3023b93bb35d944e9c25c79c20714a",
        "original_commit_id": "df65cc855ca218a091eeb5f8bf649272eed2a870",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "same here. All new config must have default values like it did at gitlabhq https://github.com/gitlabhq/gitlabhq/blob/master/config/initializers/1_settings.rb#L56\n",
        "created_at": "2013-08-29T17:38:02Z",
        "updated_at": "2013-09-01T04:11:30Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067510",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6067510"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/268#discussion_r6067510"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6818223",
        "pull_request_review_id": null,
        "id": 6818223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTgyMjM=",
        "diff_hunk": "@@ -11,3 +11,4 @@ tmp/*\n .powrc\n .rvmrc\n coverage/*\n+.ruby-version",
        "path": ".gitignore",
        "position": 4,
        "original_position": 4,
        "commit_id": "b035790a8a39ec6f7d4c1d2f9f097dc9a8ce5aa4",
        "original_commit_id": "9fc489e3d386e6c5702e7eb812ff671c48c600c6",
        "user": {
            "login": "dosire",
            "id": 22061,
            "node_id": "MDQ6VXNlcjIyMDYx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosire",
            "html_url": "https://github.com/dosire",
            "followers_url": "https://api.github.com/users/dosire/followers",
            "following_url": "https://api.github.com/users/dosire/following{/other_user}",
            "gists_url": "https://api.github.com/users/dosire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dosire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dosire/subscriptions",
            "organizations_url": "https://api.github.com/users/dosire/orgs",
            "repos_url": "https://api.github.com/users/dosire/repos",
            "events_url": "https://api.github.com/users/dosire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dosire/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please add a newline.\n",
        "created_at": "2013-10-08T07:06:11Z",
        "updated_at": "2013-10-09T07:17:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/293#discussion_r6818223",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/293",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6818223"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/293#discussion_r6818223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/293"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6818276",
        "pull_request_review_id": null,
        "id": 6818276,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTgyNzY=",
        "diff_hunk": "@@ -11,3 +11,4 @@ tmp/*\n .powrc\n .rvmrc\n coverage/*\n+.ruby-version",
        "path": ".gitignore",
        "position": 4,
        "original_position": 4,
        "commit_id": "b035790a8a39ec6f7d4c1d2f9f097dc9a8ce5aa4",
        "original_commit_id": "9fc489e3d386e6c5702e7eb812ff671c48c600c6",
        "user": {
            "login": "alakra",
            "id": 2807,
            "node_id": "MDQ6VXNlcjI4MDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2807?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alakra",
            "html_url": "https://github.com/alakra",
            "followers_url": "https://api.github.com/users/alakra/followers",
            "following_url": "https://api.github.com/users/alakra/following{/other_user}",
            "gists_url": "https://api.github.com/users/alakra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alakra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alakra/subscriptions",
            "organizations_url": "https://api.github.com/users/alakra/orgs",
            "repos_url": "https://api.github.com/users/alakra/repos",
            "events_url": "https://api.github.com/users/alakra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alakra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done. :)\n",
        "created_at": "2013-10-08T07:10:02Z",
        "updated_at": "2013-10-09T07:17:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/293#discussion_r6818276",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/293",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6818276"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/293#discussion_r6818276"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/293"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718527",
        "pull_request_review_id": null,
        "id": 6718527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg1Mjc=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci",
        "path": "doc/api.md",
        "position": null,
        "original_position": 6,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe we should call this a 'registration token'.\n",
        "created_at": "2013-10-02T15:38:21Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718527",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718527"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718610",
        "pull_request_review_id": null,
        "id": 6718610,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg2MTA=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab",
        "path": "doc/api.md",
        "position": null,
        "original_position": 18,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The comment is wrong. What we send here is the public key of the SSH key pair that the runner will use to clone the build repo. GitLab CI will actually add this key to GitLab for you.\n",
        "created_at": "2013-10-02T15:40:57Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718610",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718610"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718610"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718642",
        "pull_request_review_id": null,
        "id": 6718642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg2NDI=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab\n+    token: \"<token from gitlab-ci>\"\n+}\n+```\n+\n+You get this back if successful:\n+\n+```\n+{\n+    id: \"<runner id>\",\n+    token: \"<use this token>\"",
        "path": "doc/api.md",
        "position": null,
        "original_position": 28,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Maybe we can write `\"<polling token>\"`.\n",
        "created_at": "2013-10-02T15:41:51Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718642",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718642"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718654",
        "pull_request_review_id": null,
        "id": 6718654,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg2NTQ=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab\n+    token: \"<token from gitlab-ci>\"\n+}\n+```\n+\n+You get this back if successful:\n+\n+```\n+{\n+    id: \"<runner id>\",\n+    token: \"<use this token>\"\n+}\n+```\n+\n+## Register a new build",
        "path": "doc/api.md",
        "position": null,
        "original_position": 32,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Request a new build\n",
        "created_at": "2013-10-02T15:42:09Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718654",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718654"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718654"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718676",
        "pull_request_review_id": null,
        "id": 6718676,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg2NzY=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab\n+    token: \"<token from gitlab-ci>\"\n+}\n+```\n+\n+You get this back if successful:\n+\n+```\n+{\n+    id: \"<runner id>\",\n+    token: \"<use this token>\"\n+}\n+```\n+\n+## Register a new build\n+\n+```POST /builds/register.json```\n+\n+You need to send your token:\n+\n+```\n+{\n+    token: \"<your token>\"\n+}\n+```\n+\n+You will get back your new build info:",
        "path": "doc/api.md",
        "position": null,
        "original_position": 44,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This happens if a build is available. What is the response otherwise?\n",
        "created_at": "2013-10-02T15:42:50Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718676",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718676"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718676"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718835",
        "pull_request_review_id": null,
        "id": 6718835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTg4MzU=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab\n+    token: \"<token from gitlab-ci>\"\n+}\n+```\n+\n+You get this back if successful:\n+\n+```\n+{\n+    id: \"<runner id>\",\n+    token: \"<use this token>\"\n+}\n+```\n+\n+## Register a new build\n+\n+```POST /builds/register.json```\n+\n+You need to send your token:\n+\n+```\n+{\n+    token: \"<your token>\"\n+}\n+```\n+\n+You will get back your new build info:\n+\n+```\n+{\n+      id: 'build_id',\n+      project_id: 'project_id',\n+      commands: 'commands to execute',\n+      repo_url: 'repo_url',\n+      ref: 'git commit sha',\n+      ref_name: 'git ref name',\n+}\n+```\n+\n+## Update build\n+\n+```PUT /builds/:id.json```\n+\n+Send updated info\n+\n+```\n+{\n+    token: \"<your token>\",\n+    state: \"<valid state>\", # \"success\" | \"fail\"\n+    trace: \"extra tracing info...\"",
        "path": "doc/api.md",
        "position": null,
        "original_position": 67,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "jacobvosmaer",
            "id": 1336311,
            "node_id": "MDQ6VXNlcjEzMzYzMTE=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1336311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobvosmaer",
            "html_url": "https://github.com/jacobvosmaer",
            "followers_url": "https://api.github.com/users/jacobvosmaer/followers",
            "following_url": "https://api.github.com/users/jacobvosmaer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobvosmaer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobvosmaer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobvosmaer/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobvosmaer/orgs",
            "repos_url": "https://api.github.com/users/jacobvosmaer/repos",
            "events_url": "https://api.github.com/users/jacobvosmaer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobvosmaer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This part is the output of the build command, encoded as UTF-8.\n",
        "created_at": "2013-10-02T15:47:20Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718835",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6718835"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6718835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6719776",
        "pull_request_review_id": null,
        "id": 6719776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTk3NzY=",
        "diff_hunk": "@@ -0,0 +1,69 @@\n+# API\n+\n+\n+## Register Runner\n+\n+Before we start we need to get a token from the server. Go to your gitlab ci\n+instance and get it from the runners page. \n+\n+Then we send in with a public key and if it's valid we'll get \n+a validated token back.\n+\n+```POST /runners/register.json```\n+\n+Send this:\n+\n+```\n+{\n+    public_key: \"<your public key>\", # one that you've registered with gitlab\n+    token: \"<token from gitlab-ci>\"\n+}\n+```\n+\n+You get this back if successful:\n+\n+```\n+{\n+    id: \"<runner id>\",\n+    token: \"<use this token>\"",
        "path": "doc/api.md",
        "position": null,
        "original_position": 28,
        "commit_id": "0a6d1d42b14d099d67deb6c6ad47700abdc18ba9",
        "original_commit_id": "f458020897c6a1eac231f9632755ffd7441657b6",
        "user": {
            "login": "dosire",
            "id": 22061,
            "node_id": "MDQ6VXNlcjIyMDYx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/22061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosire",
            "html_url": "https://github.com/dosire",
            "followers_url": "https://api.github.com/users/dosire/followers",
            "following_url": "https://api.github.com/users/dosire/following{/other_user}",
            "gists_url": "https://api.github.com/users/dosire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dosire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dosire/subscriptions",
            "organizations_url": "https://api.github.com/users/dosire/orgs",
            "repos_url": "https://api.github.com/users/dosire/repos",
            "events_url": "https://api.github.com/users/dosire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dosire/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I prefer 'runner token'\n",
        "created_at": "2013-10-02T16:15:33Z",
        "updated_at": "2013-10-16T15:35:39Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6719776",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/6719776"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/280#discussion_r6719776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/280"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8066613",
        "pull_request_review_id": null,
        "id": 8066613,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNjY2MTM=",
        "diff_hunk": "@@ -41,7 +41,9 @@ Install the Bundler Gem:\n \n ## 3. GitLab CI user:\n \n-    sudo adduser --disabled-login --gecos 'GitLab CI' gitlab_ci\n+    sudo adduser --disabled-password --gecos 'GitLab CI' gitlab_ci",
        "path": "doc/installation.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "dd2e726ddbdd596a634f27ea11b4afe74a7f2f41",
        "original_commit_id": "dd2e726ddbdd596a634f27ea11b4afe74a7f2f41",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "can you explain please how this one related to schedule?\n",
        "created_at": "2013-12-03T17:05:49Z",
        "updated_at": "2013-12-03T17:05:49Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/323#discussion_r8066613",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/323",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8066613"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/323#discussion_r8066613"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/323"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8074634",
        "pull_request_review_id": null,
        "id": 8074634,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNzQ2MzQ=",
        "diff_hunk": "@@ -41,7 +41,9 @@ Install the Bundler Gem:\n \n ## 3. GitLab CI user:\n \n-    sudo adduser --disabled-login --gecos 'GitLab CI' gitlab_ci\n+    sudo adduser --disabled-password --gecos 'GitLab CI' gitlab_ci",
        "path": "doc/installation.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "dd2e726ddbdd596a634f27ea11b4afe74a7f2f41",
        "original_commit_id": "dd2e726ddbdd596a634f27ea11b4afe74a7f2f41",
        "user": {
            "login": "davidolrik",
            "id": 1990,
            "node_id": "MDQ6VXNlcjE5OTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1990?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidolrik",
            "html_url": "https://github.com/davidolrik",
            "followers_url": "https://api.github.com/users/davidolrik/followers",
            "following_url": "https://api.github.com/users/davidolrik/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidolrik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidolrik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidolrik/subscriptions",
            "organizations_url": "https://api.github.com/users/davidolrik/orgs",
            "repos_url": "https://api.github.com/users/davidolrik/repos",
            "events_url": "https://api.github.com/users/davidolrik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidolrik/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The scheduled builds are run from cron via `bash -l` - This is done in order to source the environment of the gitlab user.\nWhen adding users with `--disabled-login` you will get `/bin/false` as your shell which breaks `bash -l`, meaning that unless `bundler` exists in `/usr/bin` (i.e. exists in one of the default PATHs) calling bundler will fail with `/bin/bash: bundler not found`.\n",
        "created_at": "2013-12-03T20:42:18Z",
        "updated_at": "2013-12-03T20:42:18Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/323#discussion_r8074634",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/323",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8074634"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/323#discussion_r8074634"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/323"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810277",
        "pull_request_review_id": null,
        "id": 8810277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTAyNzc=",
        "diff_hunk": "@@ -44,7 +44,7 @@ class Project < ActiveRecord::Base\n     if: ->(project) { project.always_build.present? }\n \n \n-  scope :public, where(public: true)\n+  scope :public, ->(_) { where(public: true) }",
        "path": "app/models/project.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "4eef64bb9a1a7be4d71ba65475e1078f762e62fb",
        "original_commit_id": "4eef64bb9a1a7be4d71ba65475e1078f762e62fb",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not `->()`?\n",
        "created_at": "2014-01-11T15:15:42Z",
        "updated_at": "2014-01-11T15:15:42Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/357#discussion_r8810277",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/357",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810277"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/357#discussion_r8810277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/357"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810326",
        "pull_request_review_id": null,
        "id": 8810326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTAzMjY=",
        "diff_hunk": "@@ -44,7 +44,7 @@ class Project < ActiveRecord::Base\n     if: ->(project) { project.always_build.present? }\n \n \n-  scope :public, where(public: true)\n+  scope :public, ->(_) { where(public: true) }",
        "path": "app/models/project.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "4eef64bb9a1a7be4d71ba65475e1078f762e62fb",
        "original_commit_id": "4eef64bb9a1a7be4d71ba65475e1078f762e62fb",
        "user": {
            "login": "pgolm",
            "id": 1444194,
            "node_id": "MDQ6VXNlcjE0NDQxOTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1444194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pgolm",
            "html_url": "https://github.com/pgolm",
            "followers_url": "https://api.github.com/users/pgolm/followers",
            "following_url": "https://api.github.com/users/pgolm/following{/other_user}",
            "gists_url": "https://api.github.com/users/pgolm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pgolm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pgolm/subscriptions",
            "organizations_url": "https://api.github.com/users/pgolm/orgs",
            "repos_url": "https://api.github.com/users/pgolm/repos",
            "events_url": "https://api.github.com/users/pgolm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pgolm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good question. I'm not sure why, but without the underscore some tests failed.\n\n```\n1) Project#broken_or_success?\n     Failure/Error: project.stub(:broken?).and_return(false)\n     ArgumentError:\n       wrong number of arguments (1 for 0)\n     # ./app/models/project.rb:47:in `block in <class:Project>'\n     # ./spec/models/project_spec.rb:113:in `block (3 levels) in <top (required)>'\n\n...\n```\n",
        "created_at": "2014-01-11T15:35:28Z",
        "updated_at": "2014-01-11T15:35:28Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/357#discussion_r8810326",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/357",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810326"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/357#discussion_r8810326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/357"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810280",
        "pull_request_review_id": null,
        "id": 8810280,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTAyODA=",
        "diff_hunk": "@@ -0,0 +1,38 @@\n+class ChartsController < ApplicationController\n+  before_filter :authenticate_user!\n+  before_filter :project\n+  before_filter :authorize_access_project!\n+\n+  layout 'project'\n+\n+  def index\n+  end\n+\n+  def show\n+    case @chart\n+      when 'builds' then builds\n+      when 'build_times' then build_times\n+    end\n+  end\n+\n+  def builds\n+    @charts = {}\n+    @charts[:week] = Charts::WeekChart.new(@project)\n+    @charts[:month] = Charts::MonthChart.new(@project)\n+    @charts[:year] = Charts::YearChart.new(@project)\n+\n+    render :partial => 'charts/builds'\n+  end\n+\n+  def build_times\n+    @charts = { :build_times => Charts::BuildTime.new(@project) }\n+    render :partial => 'charts/build_times'\n+  end\n+\n+  protected\n+    def project",
        "path": "app/controllers/charts_controller.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "d28bb1deed140f7f5dbb6e0f74abdafa028f936a",
        "original_commit_id": "5f034015bbaa0718c6b85b9291c7cbd728329666",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fix indentation please\n",
        "created_at": "2014-01-11T15:17:04Z",
        "updated_at": "2014-01-11T16:37:17Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810280",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810280"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810280"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810283",
        "pull_request_review_id": null,
        "id": 8810283,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTAyODM=",
        "diff_hunk": "@@ -0,0 +1,25 @@\n+\n+%fieldset\n+  %legend\n+    Build duration in seconds for last 30 builds\n+\n+  %canvas#build_timesChart.padded{width: 800, height: 200}\n+\n+=render :partial => 'overall'",
        "path": "app/views/charts/_build_times.haml",
        "position": null,
        "original_position": 8,
        "commit_id": "d28bb1deed140f7f5dbb6e0f74abdafa028f936a",
        "original_commit_id": "5f034015bbaa0718c6b85b9291c7cbd728329666",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`render 'overall'`\n",
        "created_at": "2014-01-11T15:17:23Z",
        "updated_at": "2014-01-11T16:37:17Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810283",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810283"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810283"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810285",
        "pull_request_review_id": null,
        "id": 8810285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MTAyODU=",
        "diff_hunk": "@@ -51,4 +52,17 @@ def collect\n       end\n     end\n   end\n+\n+  class BuildTime < Chart\n+    def collect\n+      i=0",
        "path": "lib/charts.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "d28bb1deed140f7f5dbb6e0f74abdafa028f936a",
        "original_commit_id": "5f034015bbaa0718c6b85b9291c7cbd728329666",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`i = 0`\n",
        "created_at": "2014-01-11T15:18:00Z",
        "updated_at": "2014-01-11T16:37:17Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810285",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/8810285"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/355#discussion_r8810285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/355"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11077556",
        "pull_request_review_id": null,
        "id": 11077556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDc3NTU2",
        "diff_hunk": "@@ -4,19 +4,19 @@\n resque_url = if File.exists?(config_file)\n                YAML.load_file(config_file)[Rails.env]\n              else\n-               \"localhost:6379\"\n+               \"redis://localhost:6379\"\n              end\n \n Sidekiq.configure_server do |config|\n   config.redis = {\n-    url: \"redis://#{resque_url}\",\n+    url: resque_url,",
        "path": "config/initializers/2_sidekiq.rb",
        "position": 11,
        "original_position": 11,
        "commit_id": "3b78d5ef00eff5b26648d0093b0616540854fe97",
        "original_commit_id": "3b78d5ef00eff5b26648d0093b0616540854fe97",
        "user": {
            "login": "jvanbaarsen",
            "id": 1362793,
            "node_id": "MDQ6VXNlcjEzNjI3OTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1362793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jvanbaarsen",
            "html_url": "https://github.com/jvanbaarsen",
            "followers_url": "https://api.github.com/users/jvanbaarsen/followers",
            "following_url": "https://api.github.com/users/jvanbaarsen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jvanbaarsen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jvanbaarsen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jvanbaarsen/subscriptions",
            "organizations_url": "https://api.github.com/users/jvanbaarsen/orgs",
            "repos_url": "https://api.github.com/users/jvanbaarsen/repos",
            "events_url": "https://api.github.com/users/jvanbaarsen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jvanbaarsen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this var called `resque_url`? Can you rename it to `redis_url`? (its a bit more descriptive I think)\n",
        "created_at": "2014-03-28T17:56:37Z",
        "updated_at": "2014-03-28T17:56:37Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/139#discussion_r11077556",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/139",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11077556"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/139#discussion_r11077556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/139"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11153857",
        "pull_request_review_id": null,
        "id": 11153857,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTUzODU3",
        "diff_hunk": "@@ -102,15 +102,32 @@ def build\n   # Project status badge\n   # Image with build status for sha or ref\n   def status\n-    image_name = if params[:sha]\n-                   @project.sha_status_image(params[:sha])\n-                 elsif params[:ref]\n-                   @project.status_image(params[:ref])\n-                 else\n-                   'unknown.png'\n-                 end\n-\n-    send_file Rails.root.join('public', image_name), filename: image_name, disposition: 'inline'\n+    image_name = 'unknown.png'\n+    build_status = { status: \"unknown\" }\n+    if params[:sha]\n+      sha_status_image = @project.sha_status_image(params[:sha])\n+      last_build_for_sha = @project.last_build_for_sha(params[:sha])\n+      image_name = sha_status_image if sha_status_image\n+      build_status = last_build_for_sha if last_build_for_sha\n+    elsif params[:ref]\n+      status_image = @project.status_image(params[:ref])\n+      last_build = @project.builds.where(ref: params[:ref]).last\n+      image_name = status_image if status_image\n+      build_status = last_build if last_build\n+    else\n+      build = @project.builds.last\n+      if build\n+        image_name = @project.image_for_build(build)\n+        build_status = build\n+      end\n+    end",
        "path": "app/controllers/projects_controller.rb",
        "position": 31,
        "original_position": 31,
        "commit_id": "b1b6b8eae0d27eeea89ec744f5a0b9c17a975182",
        "original_commit_id": "b1b6b8eae0d27eeea89ec744f5a0b9c17a975182",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this looks messy. Can you refactor this?\n",
        "created_at": "2014-04-01T09:54:43Z",
        "updated_at": "2014-04-01T09:54:43Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/297#discussion_r11153857",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/297",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11153857"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/297#discussion_r11153857"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/297"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11153766",
        "pull_request_review_id": null,
        "id": 11153766,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTUzNzY2",
        "diff_hunk": "@@ -19,4 +18,4 @@\n   .form-group\n     = label_tag :url, 'Project URL', class: 'control-label'\n     .col-sm-10\n-      = text_field_tag :url, project_url(@project), class: 'form-control', readonly: true\n+      = text_field_tag :url, project_url(@project, :protocol => @protocol), class: 'form-control', readonly: true",
        "path": "app/views/projects/integration.html.haml",
        "position": null,
        "original_position": 13,
        "commit_id": "5804d26ed30fc31a661e412e01456bc2e99826a4",
        "original_commit_id": "18b8bb6d8c5acc940cbdd70b6cff3a0202420d19",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "please use ruby 1.9 hash syntax\n",
        "created_at": "2014-04-01T09:51:15Z",
        "updated_at": "2014-04-01T19:06:02Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/359#discussion_r11153766",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/359",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/11153766"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/359#discussion_r11153766"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/359"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305517",
        "pull_request_review_id": null,
        "id": 17305517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA1NTE3",
        "diff_hunk": "@@ -26,7 +26,8 @@ class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "30affe0b5f0489306d5c9710de6ca1eccc8a9395",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-09T14:58:06Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305517",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305517"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305518",
        "pull_request_review_id": null,
        "id": 17305518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA1NTE4",
        "diff_hunk": "@@ -26,7 +26,8 @@ class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,\n+    :skip_refs",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "30affe0b5f0489306d5c9710de6ca1eccc8a9395",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-09T14:58:06Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305518",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305518"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305519",
        "pull_request_review_id": null,
        "id": 17305519,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA1NTE5",
        "diff_hunk": "@@ -8,6 +8,10 @@ def execute(project, params)\n       ref = ref.scan(/heads\\/(.*)$/).flatten[0]\n     end\n \n+    if project.skip_refs && project.skip_refs.delete(' ').split(',').include?(ref)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "30affe0b5f0489306d5c9710de6ca1eccc8a9395",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-09T14:58:06Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305519",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17305519"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17305519"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307629",
        "pull_request_review_id": null,
        "id": 17307629,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA3NjI5",
        "diff_hunk": "@@ -175,4 +175,9 @@ def timeout_in_minutes\n   def timeout_in_minutes=(value)\n     self.timeout = value.to_i * 60\n   end\n+\n+  def skip_refs\n+    read_attribute(:skip_refs).delete(' ').split(',')\n+  end\n+",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "6e27bc717c7b5ea9d6193a034043abe49f899dbb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Extra empty line detected at body end.\n",
        "created_at": "2014-09-09T15:27:06Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307629",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307629"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307629"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307630",
        "pull_request_review_id": null,
        "id": 17307630,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA3NjMw",
        "diff_hunk": "@@ -175,4 +175,9 @@ def timeout_in_minutes\n   def timeout_in_minutes=(value)\n     self.timeout = value.to_i * 60\n   end\n+\n+  def skip_refs\n+    read_attribute(:skip_refs).delete(' ').split(',')",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "6e27bc717c7b5ea9d6193a034043abe49f899dbb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-09T15:27:06Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307630",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307630"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307630"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307788",
        "pull_request_review_id": null,
        "id": 17307788,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzA3Nzg4",
        "diff_hunk": "@@ -175,4 +175,9 @@ def timeout_in_minutes\n   def timeout_in_minutes=(value)\n     self.timeout = value.to_i * 60\n   end\n+\n+  def skip_refs\n+    read_attribute(:skip_refs).delete(' ').split(',')",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "2c03187fb6c3a89349faad781e90ebda476ad7ee",
        "original_commit_id": "6e27bc717c7b5ea9d6193a034043abe49f899dbb",
        "user": {
            "login": "williamherry",
            "id": 1032483,
            "node_id": "MDQ6VXNlcjEwMzI0ODM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1032483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/williamherry",
            "html_url": "https://github.com/williamherry",
            "followers_url": "https://api.github.com/users/williamherry/followers",
            "following_url": "https://api.github.com/users/williamherry/following{/other_user}",
            "gists_url": "https://api.github.com/users/williamherry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/williamherry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/williamherry/subscriptions",
            "organizations_url": "https://api.github.com/users/williamherry/orgs",
            "repos_url": "https://api.github.com/users/williamherry/repos",
            "events_url": "https://api.github.com/users/williamherry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/williamherry/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sorry for remind me twice\n",
        "created_at": "2014-09-09T15:29:05Z",
        "updated_at": "2014-09-09T21:47:07Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307788",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17307788"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/475#discussion_r17307788"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/475"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17882953",
        "pull_request_review_id": null,
        "id": 17882953,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODgyOTUz",
        "diff_hunk": "@@ -89,6 +89,23 @@ class Builds < Grape::API\n           render_api_error!(errors, 400)\n         end\n       end\n+\n+      # Create a new build the same as previous one if no pending is found\n+      #\n+      # Parameters:\n+      #   id (required) - The ID of a project\n+      # Example Request:\n+      #   POST /builds/:project_id/rebuild\n+      post \":project_id/rebuild\" do\n+        build = Build.where(project_id: params[:project_id]).last\n+        if build.pending?\n+            render_api_error!(\"Build with id '#{build.id}' is already pending.\", 200)",
        "path": "lib/api/builds.rb",
        "position": 14,
        "original_position": 14,
        "commit_id": "7c7066b0d5a35097a04bb31848d6b622195940ed",
        "original_commit_id": "7c7066b0d5a35097a04bb31848d6b622195940ed",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]<br>Use 2 (not 4) spaces for indentation.\n",
        "created_at": "2014-09-22T22:34:30Z",
        "updated_at": "2014-09-22T22:34:30Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/478#discussion_r17882953",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/478",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17882953"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/478#discussion_r17882953"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/478"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17882954",
        "pull_request_review_id": null,
        "id": 17882954,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODgyOTU0",
        "diff_hunk": "@@ -89,6 +89,23 @@ class Builds < Grape::API\n           render_api_error!(errors, 400)\n         end\n       end\n+\n+      # Create a new build the same as previous one if no pending is found\n+      #\n+      # Parameters:\n+      #   id (required) - The ID of a project\n+      # Example Request:\n+      #   POST /builds/:project_id/rebuild\n+      post \":project_id/rebuild\" do\n+        build = Build.where(project_id: params[:project_id]).last\n+        if build.pending?\n+            render_api_error!(\"Build with id '#{build.id}' is already pending.\", 200)\n+        else\n+            Build.create_from(build)",
        "path": "lib/api/builds.rb",
        "position": 16,
        "original_position": 16,
        "commit_id": "7c7066b0d5a35097a04bb31848d6b622195940ed",
        "original_commit_id": "7c7066b0d5a35097a04bb31848d6b622195940ed",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 (not 4) spaces for indentation.\n",
        "created_at": "2014-09-22T22:34:30Z",
        "updated_at": "2014-09-22T22:34:30Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/478#discussion_r17882954",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/478",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/17882954"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/478#discussion_r17882954"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/478"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301479",
        "pull_request_review_id": null,
        "id": 18301479,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDc5",
        "diff_hunk": "@@ -28,6 +28,9 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {",
        "path": "app/controllers/builds_controller.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "debc5b9f4a0f1a448e2f189c928ab51228c96dbb",
        "original_commit_id": "d8542b6575bbfc797f895f441b5beeab4bdcc522",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.\n",
        "created_at": "2014-10-01T19:19:53Z",
        "updated_at": "2014-10-02T20:35:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r18301479",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301479"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r18301479"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595175",
        "pull_request_review_id": null,
        "id": 19595175,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MTc1",
        "diff_hunk": "@@ -8,9 +8,9 @@ pre.trace {\n   white-space: -pre-wrap;      /* Opera 4-6 */\n   white-space: -o-pre-wrap;    /* Opera 7 */\n   word-wrap: break-word;       /* Internet Explorer 5.5+ */\n+  position: relative;\n   overflow: auto;\n-  overflow-y: hidden;\n-  font-size: 12px;\n+  font-size: 11px;",
        "path": "app/assets/stylesheets/sections/builds.scss",
        "position": 8,
        "original_position": 8,
        "commit_id": "debc5b9f4a0f1a448e2f189c928ab51228c96dbb",
        "original_commit_id": "debc5b9f4a0f1a448e2f189c928ab51228c96dbb",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I dont agree with this. 11px is too small for me - hard to read\n",
        "created_at": "2014-10-30T09:56:16Z",
        "updated_at": "2014-10-30T09:56:16Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r19595175",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595175"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r19595175"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595213",
        "pull_request_review_id": null,
        "id": 19595213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MjEz",
        "diff_hunk": "@@ -8,9 +8,9 @@ pre.trace {\n   white-space: -pre-wrap;      /* Opera 4-6 */\n   white-space: -o-pre-wrap;    /* Opera 7 */\n   word-wrap: break-word;       /* Internet Explorer 5.5+ */\n+  position: relative;\n   overflow: auto;\n-  overflow-y: hidden;\n-  font-size: 12px;\n+  font-size: 11px;",
        "path": "app/assets/stylesheets/sections/builds.scss",
        "position": 8,
        "original_position": 8,
        "commit_id": "debc5b9f4a0f1a448e2f189c928ab51228c96dbb",
        "original_commit_id": "debc5b9f4a0f1a448e2f189c928ab51228c96dbb",
        "user": {
            "login": "ayufan",
            "id": 2419009,
            "node_id": "MDQ6VXNlcjI0MTkwMDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2419009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayufan",
            "html_url": "https://github.com/ayufan",
            "followers_url": "https://api.github.com/users/ayufan/followers",
            "following_url": "https://api.github.com/users/ayufan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayufan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayufan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayufan/subscriptions",
            "organizations_url": "https://api.github.com/users/ayufan/orgs",
            "repos_url": "https://api.github.com/users/ayufan/repos",
            "events_url": "https://api.github.com/users/ayufan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayufan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree to. That's why I changed it.\n",
        "created_at": "2014-10-30T09:57:06Z",
        "updated_at": "2014-10-30T09:57:06Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r19595213",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595213"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/461#discussion_r19595213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/461"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205995",
        "pull_request_review_id": null,
        "id": 18205995,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA1OTk1",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    case project.build_method\n+      when 'travis'\n+        attributes = params[:build][:travis_environment].shellsplit\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << \"DEPLOY_BUILD=#{params[:build][:is_deploy]}\"\n+    attributes << \"VERSION_STRING=#{params[:build][:version_string]}\"\n+    attributes << \"VERSION_NOTES=#{params[:build][:version_notes]}\"\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-09-30T09:05:06Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205995",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205995"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205995"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205996",
        "pull_request_review_id": null,
        "id": 18205996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA1OTk2",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]\n",
        "created_at": "2014-09-30T09:05:06Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205996",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205996"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205998",
        "pull_request_review_id": null,
        "id": 18205998,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA1OTk4",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    case project.build_method\n+      when 'travis'\n+        attributes = params[:build][:travis_environment].shellsplit\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << \"DEPLOY_BUILD=#{params[:build][:is_deploy]}\"\n+    attributes << \"VERSION_STRING=#{params[:build][:version_string]}\"\n+    attributes << \"VERSION_NOTES=#{params[:build][:version_notes]}\"\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205998",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205998"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205998"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205999",
        "pull_request_review_id": null,
        "id": 18205999,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA1OTk5",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    case project.build_method\n+      when 'travis'\n+        attributes = params[:build][:travis_environment].shellsplit\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << \"DEPLOY_BUILD=#{params[:build][:is_deploy]}\"\n+    attributes << \"VERSION_STRING=#{params[:build][:version_string]}\"\n+    attributes << \"VERSION_NOTES=#{params[:build][:version_notes]}\"\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205999",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18205999"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18205999"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206000",
        "pull_request_review_id": null,
        "id": 18206000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDAw",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 34,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206000",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206000"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206002",
        "pull_request_review_id": null,
        "id": 18206002,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDAy",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in an array, relative to the start of the line where the left bracket is.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206002",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206002"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206002"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206004",
        "pull_request_review_id": null,
        "id": 18206004,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDA0",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206004",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206004"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206004"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206005",
        "pull_request_review_id": null,
        "id": 18206005,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDA1",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206005",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206005"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206005"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206007",
        "pull_request_review_id": null,
        "id": 18206007,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDA3",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206007",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206007"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206007"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206008",
        "pull_request_review_id": null,
        "id": 18206008,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDA4",
        "diff_hunk": "@@ -31,12 +31,64 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 31,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:07Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206008",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206008"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206008"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206009",
        "pull_request_review_id": null,
        "id": 18206009,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDA5",
        "diff_hunk": "@@ -1,6 +1,6 @@\n class ProjectsController < ApplicationController\n   before_filter :authenticate_user!, except: [:build, :badge, :index, :show]\n-  before_filter :project, only: [:build, :integration, :show, :badge, :edit, :update, :destroy]\n+  before_filter :project, only: [:build, :integration, :show, :badge, :edit, :update, :destroy, :build_now]",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [107/80]\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206009",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206009"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206009"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206010",
        "pull_request_review_id": null,
        "id": 18206010,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDEw",
        "diff_hunk": "@@ -58,11 +62,30 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          opts = {\n+              token: @project.token,\n+              project_url: project_url(@project)\n+          }\n+\n+          if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 37,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206010",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206010"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206010"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206011",
        "pull_request_review_id": null,
        "id": 18206011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDEx",
        "diff_hunk": "@@ -58,11 +62,30 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          opts = {\n+              token: @project.token,",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206011",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206011"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206012",
        "pull_request_review_id": null,
        "id": 18206012,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDEy",
        "diff_hunk": "@@ -58,11 +62,30 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          opts = {\n+              token: @project.token,\n+              project_url: project_url(@project)\n+          }\n+\n+          if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)\n+            true\n+          else\n+            raise ActiveRecord::Rollback\n+          end\n+        end\n+\n+        redirect_to project, notice: 'Project was successfully updated.'",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206012",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206012"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206012"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206013",
        "pull_request_review_id": null,
        "id": 18206013,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDEz",
        "diff_hunk": "@@ -58,11 +62,30 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          opts = {\n+              token: @project.token,\n+              project_url: project_url(@project)\n+          }\n+\n+          if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)\n+            true\n+          else\n+            raise ActiveRecord::Rollback\n+          end\n+        end\n+\n+        redirect_to project, notice: 'Project was successfully updated.'\n+      else\n+        render action: \"edit\"\n+      end\n     end\n+  rescue\n+    redirect_to project, alert: 'Cannot save project.'",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 50,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206013",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206013"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206013"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206014",
        "pull_request_review_id": null,
        "id": 18206014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDE0",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [86/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206014",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206014"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206015",
        "pull_request_review_id": null,
        "id": 18206015,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDE1",
        "diff_hunk": "@@ -116,15 +123,25 @@ def ci_skip?\n   end\n \n   def git_author_name\n-    commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author_name] if commit_data && commit_data[:author_name]\n+    nil\n   end\n \n   def git_author_email\n-    commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author_email] if commit_data && commit_data[:author_email]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206015",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206015"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206015"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206016",
        "pull_request_review_id": null,
        "id": 18206016,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDE2",
        "diff_hunk": "@@ -135,8 +152,20 @@ def short_sha\n     sha[0..8]\n   end\n \n+  def build_id\n+    project.builds.where(\"id <= ?\", id).count\n+  end\n+\n+  def build_concurrent_id\n+    0\n+  end\n+\n   def trace_html\n-    html = Ansi2html::convert(trace) if trace.present?\n+    if trace.present?\n+      to_convert = trace\n+      to_convert = to_convert.gsub(/travis_(time|fold):[^\\r]+/, '') if build_method == 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 86,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [95/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:08Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206016",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206016"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206016"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206017",
        "pull_request_review_id": null,
        "id": 18206017,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDE3",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 97,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [86/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206017",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206017"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206017"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206019",
        "pull_request_review_id": null,
        "id": 18206019,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDE5",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206019",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206019"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206019"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206020",
        "pull_request_review_id": null,
        "id": 18206020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDIw",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name,\n+    :build_method, :os, :language, :build_attributes, :matrix_attributes",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206020",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206020"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206021",
        "pull_request_review_id": null,
        "id": 18206021,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDIx",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206021",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206021"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206021"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206024",
        "pull_request_review_id": null,
        "id": 18206024,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDI0",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = {\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            config: build_attributes,\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 130,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206024",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206024"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206024"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206025",
        "pull_request_review_id": null,
        "id": 18206025,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDI1",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = {\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 109,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206025",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206025"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206025"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206026",
        "pull_request_review_id": null,
        "id": 18206026,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDI2",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = {\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 112,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206026",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206026"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206026"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206028",
        "pull_request_review_id": null,
        "id": 18206028,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDI4",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = {\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 116,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:09Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206028",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206028"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206028"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206029",
        "pull_request_review_id": null,
        "id": 18206029,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDI5",
        "diff_hunk": "@@ -152,8 +181,48 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if attributes.is_a?(Hash)\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = {\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 120,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206029",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206029"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206029"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206030",
        "pull_request_review_id": null,
        "id": 18206030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDMw",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'",
        "path": "app/models/build.rb",
        "position": 12,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206030",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206030"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206031",
        "pull_request_review_id": null,
        "id": 18206031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDMx",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'",
        "path": "app/models/build.rb",
        "position": 13,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206031",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206031"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206032",
        "pull_request_review_id": null,
        "id": 18206032,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDMy",
        "diff_hunk": "@@ -174,6 +243,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 147,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206032",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206032"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206032"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206033",
        "pull_request_review_id": null,
        "id": 18206033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDMz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206033",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206033"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206034",
        "pull_request_review_id": null,
        "id": 18206034,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206034",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206034"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206034"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206035",
        "pull_request_review_id": null,
        "id": 18206035,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206035",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206035"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206035"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206036",
        "pull_request_review_id": null,
        "id": 18206036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206036",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206036"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206037",
        "pull_request_review_id": null,
        "id": 18206037,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-09-30T09:05:10Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206037",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206037"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206037"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206038",
        "pull_request_review_id": null,
        "id": 18206038,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206038",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206038"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206038"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206039",
        "pull_request_review_id": null,
        "id": 18206039,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDM5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206039",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206039"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206039"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206040",
        "pull_request_review_id": null,
        "id": 18206040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206040",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206040"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206041",
        "pull_request_review_id": null,
        "id": 18206041,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206041",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206041"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206041"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206042",
        "pull_request_review_id": null,
        "id": 18206042,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206042",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206042"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206042"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206043",
        "pull_request_review_id": null,
        "id": 18206043,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206043",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206043"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206043"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206044",
        "pull_request_review_id": null,
        "id": 18206044,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206044",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206044"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206044"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206045",
        "pull_request_review_id": null,
        "id": 18206045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:11Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206045",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206045"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206046",
        "pull_request_review_id": null,
        "id": 18206046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ2",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206046",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206046"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206047",
        "pull_request_review_id": null,
        "id": 18206047,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ3",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206047",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206047"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206047"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206048",
        "pull_request_review_id": null,
        "id": 18206048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ4",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206048",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206048"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206049",
        "pull_request_review_id": null,
        "id": 18206049,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDQ5",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206049",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206049"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206049"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206050",
        "pull_request_review_id": null,
        "id": 18206050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDUw",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206050",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206050"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206051",
        "pull_request_review_id": null,
        "id": 18206051,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDUx",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206051",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206051"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206051"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206052",
        "pull_request_review_id": null,
        "id": 18206052,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDUy",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-09-30T09:05:12Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206052",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206052"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206052"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206053",
        "pull_request_review_id": null,
        "id": 18206053,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDUz",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206053",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206053"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206053"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206054",
        "pull_request_review_id": null,
        "id": 18206054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU0",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206054",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206054"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206055",
        "pull_request_review_id": null,
        "id": 18206055,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU1",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206055",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206055"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206055"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206056",
        "pull_request_review_id": null,
        "id": 18206056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU2",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']\n+            new_build.language = new_attributes['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206056",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206056"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206057",
        "pull_request_review_id": null,
        "id": 18206057,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU3",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206057",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206057"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206057"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206058",
        "pull_request_review_id": null,
        "id": 18206058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU4",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206058",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206058"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206059",
        "pull_request_review_id": null,
        "id": 18206059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDU5",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']\n+            new_build.language = new_attributes['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:13Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206059",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206059"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206060",
        "pull_request_review_id": null,
        "id": 18206060,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDYw",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_build_config = eval(matrix_build_config.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206060",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206060"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206060"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206061",
        "pull_request_review_id": null,
        "id": 18206061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDYx",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_build_config = eval(matrix_build_config.to_s)\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206061",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206061"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206062",
        "pull_request_review_id": null,
        "id": 18206062,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDYy",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [92/80]\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206062",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206062"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206062"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206063",
        "pull_request_review_id": null,
        "id": 18206063,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDYz",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206063",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206063"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206063"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206064",
        "pull_request_review_id": null,
        "id": 18206064,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY0",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206064",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206064"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206064"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206065",
        "pull_request_review_id": null,
        "id": 18206065,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY1",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206065",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206065"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206065"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206066",
        "pull_request_review_id": null,
        "id": 18206066,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY2",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206066",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206066"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206066"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206067",
        "pull_request_review_id": null,
        "id": 18206067,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY3",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:14Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206067",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206067"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206067"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206068",
        "pull_request_review_id": null,
        "id": 18206068,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY4",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206068",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206068"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206068"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206069",
        "pull_request_review_id": null,
        "id": 18206069,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDY5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206069",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206069"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206069"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206070",
        "pull_request_review_id": null,
        "id": 18206070,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDcw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206070",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206070"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206070"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206071",
        "pull_request_review_id": null,
        "id": 18206071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDcx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206071",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206071"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206072",
        "pull_request_review_id": null,
        "id": 18206072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDcy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206072",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206072"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206073",
        "pull_request_review_id": null,
        "id": 18206073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDcz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206073",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206073"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206074",
        "pull_request_review_id": null,
        "id": 18206074,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDc0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206074",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206074"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206074"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206075",
        "pull_request_review_id": null,
        "id": 18206075,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDc1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206075",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206075"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206075"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206077",
        "pull_request_review_id": null,
        "id": 18206077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDc3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:15Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206077",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206077"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206078",
        "pull_request_review_id": null,
        "id": 18206078,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDc4",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206078",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206078"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206078"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206079",
        "pull_request_review_id": null,
        "id": 18206079,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDc5",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206079",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206079"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206079"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206080",
        "pull_request_review_id": null,
        "id": 18206080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDgw",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206080",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206080"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206081",
        "pull_request_review_id": null,
        "id": 18206081,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDgx",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206081",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206081"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206081"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206082",
        "pull_request_review_id": null,
        "id": 18206082,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDgy",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206082",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206082"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206082"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206083",
        "pull_request_review_id": null,
        "id": 18206083,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDgz",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206083",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206083"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206083"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206084",
        "pull_request_review_id": null,
        "id": 18206084,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg0",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-09-30T09:05:16Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206084",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206084"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206084"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206085",
        "pull_request_review_id": null,
        "id": 18206085,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg1",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206085",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206085"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206085"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206086",
        "pull_request_review_id": null,
        "id": 18206086,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg2",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206086",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206086"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206086"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206087",
        "pull_request_review_id": null,
        "id": 18206087,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg3",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206087",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206087"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206087"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206088",
        "pull_request_review_id": null,
        "id": 18206088,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg4",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206088",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206088"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206088"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206089",
        "pull_request_review_id": null,
        "id": 18206089,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDg5",
        "diff_hunk": "@@ -1,7 +1,7 @@\n module API\n   module Entities\n     class Build < Grape::Entity\n-      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name\n+      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name, :os, :language, :type, :attributes, :matrix_attributes",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [182/80]\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206089",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206089"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206089"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206090",
        "pull_request_review_id": null,
        "id": 18206090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDkw",
        "diff_hunk": "@@ -9,7 +9,7 @@ class Runner < Grape::Entity\n     end\n \n     class Project < Grape::Entity\n-      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id\n+      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id, :type, :travis_environment",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [179/80]\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206090",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206090"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206091",
        "pull_request_review_id": null,
        "id": 18206091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDkx",
        "diff_hunk": "@@ -64,7 +65,8 @@ class Projects < Grape::API\n           :gitlab_url      => params[:gitlab_url],\n           :scripts         => params[:scripts] || 'ls -al',\n           :default_ref     => params[:default_ref] || 'master',\n-          :ssh_url_to_repo => params[:ssh_url_to_repo]\n+          :ssh_url_to_repo => params[:ssh_url_to_repo],",
        "path": "lib/api/projects.rb",
        "position": 13,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206091",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206091"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206092",
        "pull_request_review_id": null,
        "id": 18206092,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA2MDky",
        "diff_hunk": "@@ -64,7 +65,8 @@ class Projects < Grape::API\n           :gitlab_url      => params[:gitlab_url],\n           :scripts         => params[:scripts] || 'ls -al',\n           :default_ref     => params[:default_ref] || 'master',\n-          :ssh_url_to_repo => params[:ssh_url_to_repo]\n+          :ssh_url_to_repo => params[:ssh_url_to_repo],\n+          :private_token   => params[:private_token]",
        "path": "lib/api/projects.rb",
        "position": 14,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "347a40412d6af875d79fdc230cd7fb90f32c3bd8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-09-30T09:05:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206092",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18206092"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18206092"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209811",
        "pull_request_review_id": null,
        "id": 18209811,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODEx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-09-30T10:49:41Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209811",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209811"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209811"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209812",
        "pull_request_review_id": null,
        "id": 18209812,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODEy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-09-30T10:49:41Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209812",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209812"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209812"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209813",
        "pull_request_review_id": null,
        "id": 18209813,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODEz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209813",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209813"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209813"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209814",
        "pull_request_review_id": null,
        "id": 18209814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209814",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209814"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209815",
        "pull_request_review_id": null,
        "id": 18209815,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209815",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209815"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209815"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209816",
        "pull_request_review_id": null,
        "id": 18209816,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209816",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209816"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209816"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209817",
        "pull_request_review_id": null,
        "id": 18209817,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209817",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209817"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209817"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209818",
        "pull_request_review_id": null,
        "id": 18209818,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209818",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209818"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209818"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209819",
        "pull_request_review_id": null,
        "id": 18209819,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODE5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209819",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209819"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209819"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209820",
        "pull_request_review_id": null,
        "id": 18209820,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODIw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209820",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209820"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209820"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209821",
        "pull_request_review_id": null,
        "id": 18209821,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODIx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T10:49:42Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209821",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209821"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209821"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209822",
        "pull_request_review_id": null,
        "id": 18209822,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODIy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209822",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209822"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209822"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209823",
        "pull_request_review_id": null,
        "id": 18209823,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODIz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209823",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209823"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209823"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209824",
        "pull_request_review_id": null,
        "id": 18209824,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI0",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209824",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209824"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209824"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209825",
        "pull_request_review_id": null,
        "id": 18209825,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI1",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209825",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209825"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209825"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209826",
        "pull_request_review_id": null,
        "id": 18209826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI2",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209826",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209826"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209827",
        "pull_request_review_id": null,
        "id": 18209827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI3",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209827",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209827"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209828",
        "pull_request_review_id": null,
        "id": 18209828,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI4",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209828",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209828"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209828"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209829",
        "pull_request_review_id": null,
        "id": 18209829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODI5",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209829",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209829"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209830",
        "pull_request_review_id": null,
        "id": 18209830,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODMw",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-09-30T10:49:43Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209830",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209830"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209830"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209831",
        "pull_request_review_id": null,
        "id": 18209831,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODMx",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-09-30T10:49:44Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209831",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209831"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209831"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209832",
        "pull_request_review_id": null,
        "id": 18209832,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODMy",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-09-30T10:49:44Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209832",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209832"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209832"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209833",
        "pull_request_review_id": null,
        "id": 18209833,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODMz",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:44Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209833",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209833"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209833"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209834",
        "pull_request_review_id": null,
        "id": 18209834,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODM0",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']\n+            new_build.language = new_attributes['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-09-30T10:49:44Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209834",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209834"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209834"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209835",
        "pull_request_review_id": null,
        "id": 18209835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODM1",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:44Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209835",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209835"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209837",
        "pull_request_review_id": null,
        "id": 18209837,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA5ODM3",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "14bcb8610611fb9a2f0e75a4639a86dfd0319124",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T10:49:45Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209837",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18209837"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18209837"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210449",
        "pull_request_review_id": null,
        "id": 18210449,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDQ5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-09-30T11:08:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210449",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210449"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210449"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210450",
        "pull_request_review_id": null,
        "id": 18210450,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDUw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-09-30T11:08:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210450",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210450"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210450"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210451",
        "pull_request_review_id": null,
        "id": 18210451,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDUx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:17Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210451",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210451"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210451"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210452",
        "pull_request_review_id": null,
        "id": 18210452,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDUy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-09-30T11:08:18Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210452",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210452"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210452"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210453",
        "pull_request_review_id": null,
        "id": 18210453,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDUz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-09-30T11:08:18Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210453",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210453"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210453"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210454",
        "pull_request_review_id": null,
        "id": 18210454,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDU0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-09-30T11:08:18Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210454",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210454"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210454"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210455",
        "pull_request_review_id": null,
        "id": 18210455,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDU1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T11:08:18Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210455",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210455"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210455"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210456",
        "pull_request_review_id": null,
        "id": 18210456,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDU2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210456",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210456"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210456"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210458",
        "pull_request_review_id": null,
        "id": 18210458,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDU4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210458",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210458"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210458"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210459",
        "pull_request_review_id": null,
        "id": 18210459,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDU5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210459",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210459"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210459"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210461",
        "pull_request_review_id": null,
        "id": 18210461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDYx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210461",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210461"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210462",
        "pull_request_review_id": null,
        "id": 18210462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDYy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210462",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210462"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210463",
        "pull_request_review_id": null,
        "id": 18210463,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDYz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:19Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210463",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210463"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210463"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210464",
        "pull_request_review_id": null,
        "id": 18210464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDY0",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210464",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210464"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210465",
        "pull_request_review_id": null,
        "id": 18210465,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDY1",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210465",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210465"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210465"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210466",
        "pull_request_review_id": null,
        "id": 18210466,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDY2",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds\n+    :email_recipients, :email_add_committer, :email_only_broken_builds,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210466",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210466"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210466"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210467",
        "pull_request_review_id": null,
        "id": 18210467,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDY3",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210467",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210467"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210467"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210468",
        "pull_request_review_id": null,
        "id": 18210468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDY4",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210468",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210468"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210470",
        "pull_request_review_id": null,
        "id": 18210470,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDcw",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210470",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210470"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210470"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210471",
        "pull_request_review_id": null,
        "id": 18210471,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDcx",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210471",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210471"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210471"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210472",
        "pull_request_review_id": null,
        "id": 18210472,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDcy",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-09-30T11:08:20Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210472",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210472"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210472"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210473",
        "pull_request_review_id": null,
        "id": 18210473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDcz",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210473",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210473"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210474",
        "pull_request_review_id": null,
        "id": 18210474,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc0",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210474",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210474"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210474"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210475",
        "pull_request_review_id": null,
        "id": 18210475,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc1",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']\n+            new_build.language = new_attributes['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210475",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210475"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210475"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210476",
        "pull_request_review_id": null,
        "id": 18210476,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc2",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210476",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210476"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210476"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210477",
        "pull_request_review_id": null,
        "id": 18210477,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc3",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210477",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210477"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210477"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210478",
        "pull_request_review_id": null,
        "id": 18210478,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc4",
        "diff_hunk": "@@ -1,8 +1,62 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    build_attributes = project.travis_environment.shellsplit unless build_attributes\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['os']\n+            new_build.language = new_attributes['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210478",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210478"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210478"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210479",
        "pull_request_review_id": null,
        "id": 18210479,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDc5",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_build_config = eval(matrix_build_config.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210479",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210479"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210479"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210480",
        "pull_request_review_id": null,
        "id": 18210480,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDgw",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_build_config = eval(matrix_build_config.to_s)\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-09-30T11:08:21Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210480",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210480"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210480"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210481",
        "pull_request_review_id": null,
        "id": 18210481,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDgx",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config[\"env\"] = [*matrix_env, *inherited_env, *custom_attributes].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [92/80]\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210481",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210481"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210481"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210482",
        "pull_request_review_id": null,
        "id": 18210482,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDgy",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210482",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210482"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210482"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210483",
        "pull_request_review_id": null,
        "id": 18210483,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDgz",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210483",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210483"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210483"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210484",
        "pull_request_review_id": null,
        "id": 18210484,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg0",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210484",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210484"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210484"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210485",
        "pull_request_review_id": null,
        "id": 18210485,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg1",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210485",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210485"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210485"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210486",
        "pull_request_review_id": null,
        "id": 18210486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg2",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210486",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210486"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210487",
        "pull_request_review_id": null,
        "id": 18210487,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg3",
        "diff_hunk": "@@ -0,0 +1,47 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:22Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210487",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210487"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210487"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210488",
        "pull_request_review_id": null,
        "id": 18210488,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg4",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210488",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210488"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210488"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210489",
        "pull_request_review_id": null,
        "id": 18210489,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDg5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210489",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210489"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210489"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210490",
        "pull_request_review_id": null,
        "id": 18210490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDkw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210490",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210490"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210491",
        "pull_request_review_id": null,
        "id": 18210491,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDkx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210491",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210491"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210491"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210492",
        "pull_request_review_id": null,
        "id": 18210492,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDky",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210492",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210492"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210492"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210493",
        "pull_request_review_id": null,
        "id": 18210493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDkz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210493",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210493"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210494",
        "pull_request_review_id": null,
        "id": 18210494,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDk0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:23Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210494",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210494"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210494"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210495",
        "pull_request_review_id": null,
        "id": 18210495,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDk1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:24Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210495",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210495"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210495"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210496",
        "pull_request_review_id": null,
        "id": 18210496,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEwNDk2",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "6160c73ba7ac961ceef0aec02e0f14ee490a6714",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-09-30T11:08:24Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210496",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18210496"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18210496"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301483",
        "pull_request_review_id": null,
        "id": 18301483,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDgz",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-01T19:19:56Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301483",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301483"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301483"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301484",
        "pull_request_review_id": null,
        "id": 18301484,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDg0",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:56Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301484",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301484"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301484"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301485",
        "pull_request_review_id": null,
        "id": 18301485,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDg1",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:56Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301485",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301485"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301485"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301486",
        "pull_request_review_id": null,
        "id": 18301486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDg2",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301486",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301486"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301487",
        "pull_request_review_id": null,
        "id": 18301487,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDg3",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 53,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301487",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301487"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301487"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301488",
        "pull_request_review_id": null,
        "id": 18301488,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDg4",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301488",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301488"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301488"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301490",
        "pull_request_review_id": null,
        "id": 18301490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDkw",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301490",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301490"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301491",
        "pull_request_review_id": null,
        "id": 18301491,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDkx",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301491",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301491"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301491"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301492",
        "pull_request_review_id": null,
        "id": 18301492,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDky",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:57Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301492",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301492"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301492"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301493",
        "pull_request_review_id": null,
        "id": 18301493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDkz",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301493",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301493"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301495",
        "pull_request_review_id": null,
        "id": 18301495,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDk1",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301495",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301495"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301495"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301496",
        "pull_request_review_id": null,
        "id": 18301496,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDk2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 129,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301496",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301496"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301496"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301497",
        "pull_request_review_id": null,
        "id": 18301497,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDk3",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301497",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301497"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301497"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301498",
        "pull_request_review_id": null,
        "id": 18301498,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDk4",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 90,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301498",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301498"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301498"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301499",
        "pull_request_review_id": null,
        "id": 18301499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNDk5",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 94,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301499",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301499"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301500",
        "pull_request_review_id": null,
        "id": 18301500,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTAw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:58Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301500",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301500"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301500"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301501",
        "pull_request_review_id": null,
        "id": 18301501,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTAx",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301501",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301501"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301501"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301502",
        "pull_request_review_id": null,
        "id": 18301502,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTAy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 100,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301502",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301502"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301502"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301503",
        "pull_request_review_id": null,
        "id": 18301503,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTAz",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 124,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:50Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301503",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301503"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301503"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301504",
        "pull_request_review_id": null,
        "id": 18301504,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTA0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 104,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301504",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301504"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301504"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301506",
        "pull_request_review_id": null,
        "id": 18301506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTA2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301506",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301506"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301509",
        "pull_request_review_id": null,
        "id": 18301509,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTA5",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:19:59Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301509",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301509"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301509"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301510",
        "pull_request_review_id": null,
        "id": 18301510,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTEw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301510",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301510"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301510"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301511",
        "pull_request_review_id": null,
        "id": 18301511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTEx",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 115,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301511",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301511"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301512",
        "pull_request_review_id": null,
        "id": 18301512,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTEy",
        "diff_hunk": "@@ -179,6 +269,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 165,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301512",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301512"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301512"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301513",
        "pull_request_review_id": null,
        "id": 18301513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTEz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301513",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301513"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301516",
        "pull_request_review_id": null,
        "id": 18301516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTE2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301516",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301516"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301518",
        "pull_request_review_id": null,
        "id": 18301518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTE4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:00Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301518",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301518"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301519",
        "pull_request_review_id": null,
        "id": 18301519,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTE5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-01T19:20:01Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301519",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301519"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301519"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301520",
        "pull_request_review_id": null,
        "id": 18301520,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTIw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-01T19:20:01Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301520",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301520"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301520"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301521",
        "pull_request_review_id": null,
        "id": 18301521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTIx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T19:20:01Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301521",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301521"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301522",
        "pull_request_review_id": null,
        "id": 18301522,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTIy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:01Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301522",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301522"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301522"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301523",
        "pull_request_review_id": null,
        "id": 18301523,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTIz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:02Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301523",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301523"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301523"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301524",
        "pull_request_review_id": null,
        "id": 18301524,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTI0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:02Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301524",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301524"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301524"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301526",
        "pull_request_review_id": null,
        "id": 18301526,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTI2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-01T19:20:02Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301526",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301526"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301526"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301527",
        "pull_request_review_id": null,
        "id": 18301527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTI3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:02Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301527",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301527"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301528",
        "pull_request_review_id": null,
        "id": 18301528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTI4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:03Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301528",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301528"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301529",
        "pull_request_review_id": null,
        "id": 18301529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTI5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:03Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301529",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301529"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301530",
        "pull_request_review_id": null,
        "id": 18301530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTMw",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:20:03Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301530",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301530"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301531",
        "pull_request_review_id": null,
        "id": 18301531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTMx",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-01T19:20:03Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301531",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301531"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301532",
        "pull_request_review_id": null,
        "id": 18301532,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTMy",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:20:03Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301532",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301532"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301532"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301534",
        "pull_request_review_id": null,
        "id": 18301534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTM0",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:04Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301534",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301534"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301536",
        "pull_request_review_id": null,
        "id": 18301536,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTM2",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:04Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301536",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301536"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301536"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301537",
        "pull_request_review_id": null,
        "id": 18301537,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTM3",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:04Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301537",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301537"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301537"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301538",
        "pull_request_review_id": null,
        "id": 18301538,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTM4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-01T19:20:04Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301538",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301538"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301538"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301539",
        "pull_request_review_id": null,
        "id": 18301539,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTM5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-01T19:20:04Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301539",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301539"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301539"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301540",
        "pull_request_review_id": null,
        "id": 18301540,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQw",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:05Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301540",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301540"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301540"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301541",
        "pull_request_review_id": null,
        "id": 18301541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:05Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301541",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301541"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301542",
        "pull_request_review_id": null,
        "id": 18301542,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQy",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-01T19:20:05Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301542",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301542"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301542"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301543",
        "pull_request_review_id": null,
        "id": 18301543,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQz",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:20:05Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301543",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301543"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301543"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301545",
        "pull_request_review_id": null,
        "id": 18301545,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQ1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301545",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301545"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301545"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301546",
        "pull_request_review_id": null,
        "id": 18301546,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQ2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301546",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301546"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301546"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301547",
        "pull_request_review_id": null,
        "id": 18301547,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQ3",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301547",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301547"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301547"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301548",
        "pull_request_review_id": null,
        "id": 18301548,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQ4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301548",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301548"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301548"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301549",
        "pull_request_review_id": null,
        "id": 18301549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTQ5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301549",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301549"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301550",
        "pull_request_review_id": null,
        "id": 18301550,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTUw",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 30,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301550",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301550"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301550"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301551",
        "pull_request_review_id": null,
        "id": 18301551,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTUx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301551",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301551"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301551"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301552",
        "pull_request_review_id": null,
        "id": 18301552,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTUy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301552",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301552"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301552"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301553",
        "pull_request_review_id": null,
        "id": 18301553,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTUz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301553",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301553"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301553"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301554",
        "pull_request_review_id": null,
        "id": 18301554,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301554",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301554"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301554"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301555",
        "pull_request_review_id": null,
        "id": 18301555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-01T19:20:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301555",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301555"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301556",
        "pull_request_review_id": null,
        "id": 18301556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-01T19:20:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301556",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301556"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301557",
        "pull_request_review_id": null,
        "id": 18301557,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301557",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301557"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301557"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301558",
        "pull_request_review_id": null,
        "id": 18301558,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301558",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301558"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301558"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301559",
        "pull_request_review_id": null,
        "id": 18301559,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTU5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301559",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301559"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301559"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301560",
        "pull_request_review_id": null,
        "id": 18301560,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTYw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301560",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301560"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301560"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301561",
        "pull_request_review_id": null,
        "id": 18301561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTYx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301561",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301561"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301562",
        "pull_request_review_id": null,
        "id": 18301562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTYy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301562",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301562"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301563",
        "pull_request_review_id": null,
        "id": 18301563,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTYz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301563",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301563"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301563"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301564",
        "pull_request_review_id": null,
        "id": 18301564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTY0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-10-01T19:20:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301564",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301564"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301565",
        "pull_request_review_id": null,
        "id": 18301565,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTY1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301565",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301565"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301565"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301567",
        "pull_request_review_id": null,
        "id": 18301567,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTY3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301567",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301567"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301567"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301568",
        "pull_request_review_id": null,
        "id": 18301568,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTY4",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-01T19:20:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301568",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301568"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301568"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301570",
        "pull_request_review_id": null,
        "id": 18301570,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTcw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301570",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301570"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301570"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301571",
        "pull_request_review_id": null,
        "id": 18301571,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTcx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301571",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301571"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301571"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301572",
        "pull_request_review_id": null,
        "id": 18301572,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTcy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301572",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301572"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301572"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301573",
        "pull_request_review_id": null,
        "id": 18301573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTcz",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301573",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301573"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301574",
        "pull_request_review_id": null,
        "id": 18301574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTc0",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301574",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301574"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301575",
        "pull_request_review_id": null,
        "id": 18301575,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTc1",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301575",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301575"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301575"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301577",
        "pull_request_review_id": null,
        "id": 18301577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTc3",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301577",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301577"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301579",
        "pull_request_review_id": null,
        "id": 18301579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTc5",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301579",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301579"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301580",
        "pull_request_review_id": null,
        "id": 18301580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTgw",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301580",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301580"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301581",
        "pull_request_review_id": null,
        "id": 18301581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTgx",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301581",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301581"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301582",
        "pull_request_review_id": null,
        "id": 18301582,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTgy",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301582",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301582"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301582"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301583",
        "pull_request_review_id": null,
        "id": 18301583,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTgz",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301583",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301583"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301583"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301584",
        "pull_request_review_id": null,
        "id": 18301584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTg0",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301584",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301584"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301585",
        "pull_request_review_id": null,
        "id": 18301585,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTg1",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301585",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301585"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301585"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301586",
        "pull_request_review_id": null,
        "id": 18301586,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTg2",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T19:20:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301586",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301586"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301586"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301588",
        "pull_request_review_id": null,
        "id": 18301588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTg4",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:20:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301588",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301588"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301590",
        "pull_request_review_id": null,
        "id": 18301590,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTkw",
        "diff_hunk": "@@ -1,7 +1,7 @@\n module API\n   module Entities\n     class Build < Grape::Entity\n-      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name\n+      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name, :os, :language, :build_method, :attributes, :matrix_attributes",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [190/80]\n",
        "created_at": "2014-10-01T19:20:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301590",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301590"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301590"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301591",
        "pull_request_review_id": null,
        "id": 18301591,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAxNTkx",
        "diff_hunk": "@@ -9,7 +9,7 @@ class Runner < Grape::Entity\n     end\n \n     class Project < Grape::Entity\n-      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id\n+      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id, :build_method, :travis_environment",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "ad0ceed7720032fd079f9eb46563c84ced9134b5",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [187/80]\n",
        "created_at": "2014-10-01T19:20:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301591",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18301591"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18301591"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303196",
        "pull_request_review_id": null,
        "id": 18303196,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMTk2",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303196",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303196"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303196"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303197",
        "pull_request_review_id": null,
        "id": 18303197,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMTk3",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303197",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303197"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303197"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303198",
        "pull_request_review_id": null,
        "id": 18303198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMTk4",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303198",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303198"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303199",
        "pull_request_review_id": null,
        "id": 18303199,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMTk5",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303199",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303199"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303199"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303201",
        "pull_request_review_id": null,
        "id": 18303201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjAx",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 53,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303201",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303201"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303202",
        "pull_request_review_id": null,
        "id": 18303202,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjAy",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303202",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303202"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303202"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303203",
        "pull_request_review_id": null,
        "id": 18303203,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjAz",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303203",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303203"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303203"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303204",
        "pull_request_review_id": null,
        "id": 18303204,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjA0",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303204",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303204"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303204"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303205",
        "pull_request_review_id": null,
        "id": 18303205,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjA1",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303205",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303205"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303205"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303207",
        "pull_request_review_id": null,
        "id": 18303207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjA3",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303207",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303207"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303208",
        "pull_request_review_id": null,
        "id": 18303208,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjA4",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303208",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303208"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303208"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303209",
        "pull_request_review_id": null,
        "id": 18303209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjA5",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 129,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303209",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303209"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303210",
        "pull_request_review_id": null,
        "id": 18303210,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjEw",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303210",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303210"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303210"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303212",
        "pull_request_review_id": null,
        "id": 18303212,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjEy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 90,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303212",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303212"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303212"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303213",
        "pull_request_review_id": null,
        "id": 18303213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjEz",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 94,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303213",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303213"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303215",
        "pull_request_review_id": null,
        "id": 18303215,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjE1",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303215",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303215"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303215"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303216",
        "pull_request_review_id": null,
        "id": 18303216,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjE2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303216",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303216"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303216"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303218",
        "pull_request_review_id": null,
        "id": 18303218,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjE4",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 100,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303218",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303218"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303218"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303220",
        "pull_request_review_id": null,
        "id": 18303220,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjIw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 124,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303220",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303220"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303220"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303221",
        "pull_request_review_id": null,
        "id": 18303221,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjIx",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 104,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303221",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303221"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303221"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303222",
        "pull_request_review_id": null,
        "id": 18303222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjIy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303222",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303222"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303223",
        "pull_request_review_id": null,
        "id": 18303223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjIz",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303223",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303223"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303224",
        "pull_request_review_id": null,
        "id": 18303224,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjI0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303224",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303224"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303224"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303225",
        "pull_request_review_id": null,
        "id": 18303225,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjI1",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 115,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T19:49:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303225",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303225"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303225"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303227",
        "pull_request_review_id": null,
        "id": 18303227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjI3",
        "diff_hunk": "@@ -179,6 +269,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 165,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303227",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303227"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303228",
        "pull_request_review_id": null,
        "id": 18303228,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjI4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303228",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303228"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303228"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303229",
        "pull_request_review_id": null,
        "id": 18303229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjI5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303229",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303229"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303230",
        "pull_request_review_id": null,
        "id": 18303230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjMw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303230",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303230"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303232",
        "pull_request_review_id": null,
        "id": 18303232,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjMy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303232",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303232"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303232"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303233",
        "pull_request_review_id": null,
        "id": 18303233,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjMz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303233",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303233"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303233"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303234",
        "pull_request_review_id": null,
        "id": 18303234,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjM0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T19:49:38Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303234",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303234"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303234"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303236",
        "pull_request_review_id": null,
        "id": 18303236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjM2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303236",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303236"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303239",
        "pull_request_review_id": null,
        "id": 18303239,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjM5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303239",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303239"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303239"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303240",
        "pull_request_review_id": null,
        "id": 18303240,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303240",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303240"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303240"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303241",
        "pull_request_review_id": null,
        "id": 18303241,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303241",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303241"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303241"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303242",
        "pull_request_review_id": null,
        "id": 18303242,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303242",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303242"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303242"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303243",
        "pull_request_review_id": null,
        "id": 18303243,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303243",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303243"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303243"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303244",
        "pull_request_review_id": null,
        "id": 18303244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303244",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303244"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303245",
        "pull_request_review_id": null,
        "id": 18303245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ1",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303245",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303245"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303246",
        "pull_request_review_id": null,
        "id": 18303246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ2",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303246",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303246"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303247",
        "pull_request_review_id": null,
        "id": 18303247,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ3",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303247",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303247"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303247"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303248",
        "pull_request_review_id": null,
        "id": 18303248,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ4",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303248",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303248"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303248"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303249",
        "pull_request_review_id": null,
        "id": 18303249,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjQ5",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303249",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303249"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303249"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303250",
        "pull_request_review_id": null,
        "id": 18303250,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjUw",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303250",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303250"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303250"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303251",
        "pull_request_review_id": null,
        "id": 18303251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjUx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303251",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303251"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303252",
        "pull_request_review_id": null,
        "id": 18303252,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjUy",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303252",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303252"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303252"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303254",
        "pull_request_review_id": null,
        "id": 18303254,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU0",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303254",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303254"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303254"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303255",
        "pull_request_review_id": null,
        "id": 18303255,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303255",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303255"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303255"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303256",
        "pull_request_review_id": null,
        "id": 18303256,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303256",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303256"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303256"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303257",
        "pull_request_review_id": null,
        "id": 18303257,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU3",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T19:49:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303257",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303257"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303257"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303258",
        "pull_request_review_id": null,
        "id": 18303258,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303258",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303258"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303258"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303259",
        "pull_request_review_id": null,
        "id": 18303259,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjU5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303259",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303259"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303259"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303260",
        "pull_request_review_id": null,
        "id": 18303260,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjYw",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303260",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303260"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303260"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303261",
        "pull_request_review_id": null,
        "id": 18303261,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjYx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303261",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303261"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303261"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303263",
        "pull_request_review_id": null,
        "id": 18303263,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjYz",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303263",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303263"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303263"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303265",
        "pull_request_review_id": null,
        "id": 18303265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjY1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 30,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303265",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303265"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303266",
        "pull_request_review_id": null,
        "id": 18303266,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjY2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303266",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303266"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303266"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303267",
        "pull_request_review_id": null,
        "id": 18303267,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjY3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303267",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303267"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303267"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303269",
        "pull_request_review_id": null,
        "id": 18303269,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjY5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303269",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303269"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303269"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303270",
        "pull_request_review_id": null,
        "id": 18303270,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjcw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303270",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303270"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303270"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303272",
        "pull_request_review_id": null,
        "id": 18303272,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjcy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303272",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303272"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303272"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303273",
        "pull_request_review_id": null,
        "id": 18303273,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjcz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303273",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303273"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303273"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303275",
        "pull_request_review_id": null,
        "id": 18303275,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjc1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303275",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303275"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303275"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303276",
        "pull_request_review_id": null,
        "id": 18303276,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjc2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303276",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303276"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303276"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303277",
        "pull_request_review_id": null,
        "id": 18303277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjc3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303277",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303277"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303278",
        "pull_request_review_id": null,
        "id": 18303278,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjc4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303278",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303278"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303278"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303279",
        "pull_request_review_id": null,
        "id": 18303279,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjc5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303279",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303279"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303279"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303281",
        "pull_request_review_id": null,
        "id": 18303281,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjgx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303281",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303281"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303281"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303282",
        "pull_request_review_id": null,
        "id": 18303282,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjgy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303282",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303282"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303282"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303283",
        "pull_request_review_id": null,
        "id": 18303283,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjgz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303283",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303283"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303283"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303285",
        "pull_request_review_id": null,
        "id": 18303285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjg1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303285",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303285"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303287",
        "pull_request_review_id": null,
        "id": 18303287,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjg3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303287",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303287"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303287"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303289",
        "pull_request_review_id": null,
        "id": 18303289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjg5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303289",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303289"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303290",
        "pull_request_review_id": null,
        "id": 18303290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjkw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303290",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303290"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303291",
        "pull_request_review_id": null,
        "id": 18303291,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjkx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303291",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303291"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303291"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303292",
        "pull_request_review_id": null,
        "id": 18303292,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjky",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303292",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303292"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303292"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303293",
        "pull_request_review_id": null,
        "id": 18303293,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjkz",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303293",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303293"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303293"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303294",
        "pull_request_review_id": null,
        "id": 18303294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk0",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303294",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303294"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303295",
        "pull_request_review_id": null,
        "id": 18303295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk1",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303295",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303295"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303296",
        "pull_request_review_id": null,
        "id": 18303296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk2",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303296",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303296"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303297",
        "pull_request_review_id": null,
        "id": 18303297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk3",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303297",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303297"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303298",
        "pull_request_review_id": null,
        "id": 18303298,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk4",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303298",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303298"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303298"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303299",
        "pull_request_review_id": null,
        "id": 18303299,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMjk5",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303299",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303299"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303299"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303300",
        "pull_request_review_id": null,
        "id": 18303300,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzAw",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303300",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303300"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303300"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303301",
        "pull_request_review_id": null,
        "id": 18303301,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzAx",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T19:49:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303301",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303301"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303301"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303303",
        "pull_request_review_id": null,
        "id": 18303303,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzAz",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303303",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303303"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303303"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303304",
        "pull_request_review_id": null,
        "id": 18303304,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzA0",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303304",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303304"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303304"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303305",
        "pull_request_review_id": null,
        "id": 18303305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzA1",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303305",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303305"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303306",
        "pull_request_review_id": null,
        "id": 18303306,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzA2",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303306",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303306"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303306"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303307",
        "pull_request_review_id": null,
        "id": 18303307,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzA3",
        "diff_hunk": "@@ -1,7 +1,7 @@\n module API\n   module Entities\n     class Build < Grape::Entity\n-      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name\n+      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name, :os, :language, :build_method, :attributes, :matrix_attributes",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [190/80]\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303307",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303307"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303307"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303309",
        "pull_request_review_id": null,
        "id": 18303309,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzAzMzA5",
        "diff_hunk": "@@ -9,7 +9,7 @@ class Runner < Grape::Entity\n     end\n \n     class Project < Grape::Entity\n-      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id\n+      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id, :build_method, :travis_environment",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "8f6be2a5e38c747fdce2c159c4bb3ebc0d23067a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [187/80]\n",
        "created_at": "2014-10-01T19:49:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303309",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18303309"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18303309"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304127",
        "pull_request_review_id": null,
        "id": 18304127,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTI3",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-01T20:04:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304127",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304127"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304127"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304129",
        "pull_request_review_id": null,
        "id": 18304129,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTI5",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:39Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304129",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304129"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304129"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304131",
        "pull_request_review_id": null,
        "id": 18304131,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTMx",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304131",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304131"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304131"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304132",
        "pull_request_review_id": null,
        "id": 18304132,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTMy",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304132",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304132"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304132"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304133",
        "pull_request_review_id": null,
        "id": 18304133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTMz",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 53,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304133",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304133"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304134",
        "pull_request_review_id": null,
        "id": 18304134,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTM0",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy], public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string], public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes], public: true}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304134",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304134"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304134"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304135",
        "pull_request_review_id": null,
        "id": 18304135,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTM1",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304135",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304135"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304135"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304136",
        "pull_request_review_id": null,
        "id": 18304136,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTM2",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:40Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304136",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304136"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304136"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304138",
        "pull_request_review_id": null,
        "id": 18304138,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTM4",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304138",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304138"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304138"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304139",
        "pull_request_review_id": null,
        "id": 18304139,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTM5",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304139",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304139"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304139"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304140",
        "pull_request_review_id": null,
        "id": 18304140,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQw",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304140",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304140"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304140"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304142",
        "pull_request_review_id": null,
        "id": 18304142,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 129,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304142",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304142"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304142"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304143",
        "pull_request_review_id": null,
        "id": 18304143,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQz",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304143",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304143"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304143"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304144",
        "pull_request_review_id": null,
        "id": 18304144,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQ0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 90,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304144",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304144"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304144"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304145",
        "pull_request_review_id": null,
        "id": 18304145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQ1",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 94,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:41Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304145",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304145"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304147",
        "pull_request_review_id": null,
        "id": 18304147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQ3",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304147",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304147"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304148",
        "pull_request_review_id": null,
        "id": 18304148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQ4",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-01T20:04:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304148",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304148"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304149",
        "pull_request_review_id": null,
        "id": 18304149,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTQ5",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 100,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304149",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304149"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304149"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304150",
        "pull_request_review_id": null,
        "id": 18304150,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTUw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 124,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-01T20:04:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304150",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304150"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304150"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304151",
        "pull_request_review_id": null,
        "id": 18304151,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTUx",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 104,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T20:04:42Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304151",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304151"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304151"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304152",
        "pull_request_review_id": null,
        "id": 18304152,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTUy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304152",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304152"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304152"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304154",
        "pull_request_review_id": null,
        "id": 18304154,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTU0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304154",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304154"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304154"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304155",
        "pull_request_review_id": null,
        "id": 18304155,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTU1",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304155",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304155"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304155"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304156",
        "pull_request_review_id": null,
        "id": 18304156,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTU2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 115,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304156",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304156"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304156"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304157",
        "pull_request_review_id": null,
        "id": 18304157,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTU3",
        "diff_hunk": "@@ -179,6 +269,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 165,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304157",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304157"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304157"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304159",
        "pull_request_review_id": null,
        "id": 18304159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTU5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304159",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304159"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304160",
        "pull_request_review_id": null,
        "id": 18304160,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTYw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-01T20:04:43Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304160",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304160"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304160"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304161",
        "pull_request_review_id": null,
        "id": 18304161,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTYx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304161",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304161"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304161"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304162",
        "pull_request_review_id": null,
        "id": 18304162,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTYy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-01T20:04:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304162",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304162"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304162"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304163",
        "pull_request_review_id": null,
        "id": 18304163,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTYz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-01T20:04:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304163",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304163"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304163"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304164",
        "pull_request_review_id": null,
        "id": 18304164,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T20:04:44Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304164",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304164"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304164"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304165",
        "pull_request_review_id": null,
        "id": 18304165,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304165",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304165"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304165"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304166",
        "pull_request_review_id": null,
        "id": 18304166,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304166",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304166"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304166"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304167",
        "pull_request_review_id": null,
        "id": 18304167,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304167",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304167"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304167"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304168",
        "pull_request_review_id": null,
        "id": 18304168,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304168",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304168"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304168"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304169",
        "pull_request_review_id": null,
        "id": 18304169,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTY5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304169",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304169"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304169"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304170",
        "pull_request_review_id": null,
        "id": 18304170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTcw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:45Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304170",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304170"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304171",
        "pull_request_review_id": null,
        "id": 18304171,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTcx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304171",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304171"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304171"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304172",
        "pull_request_review_id": null,
        "id": 18304172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTcy",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304172",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304172"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304174",
        "pull_request_review_id": null,
        "id": 18304174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTc0",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304174",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304174"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304175",
        "pull_request_review_id": null,
        "id": 18304175,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTc1",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304175",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304175"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304175"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304177",
        "pull_request_review_id": null,
        "id": 18304177,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTc3",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304177",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304177"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304177"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304178",
        "pull_request_review_id": null,
        "id": 18304178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTc4",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:46Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304178",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304178"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304179",
        "pull_request_review_id": null,
        "id": 18304179,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTc5",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304179",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304179"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304179"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304180",
        "pull_request_review_id": null,
        "id": 18304180,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTgw",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304180",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304180"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304180"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304181",
        "pull_request_review_id": null,
        "id": 18304181,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTgx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304181",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304181"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304181"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304183",
        "pull_request_review_id": null,
        "id": 18304183,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTgz",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304183",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304183"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304183"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304184",
        "pull_request_review_id": null,
        "id": 18304184,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg0",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304184",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304184"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304184"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304185",
        "pull_request_review_id": null,
        "id": 18304185,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-01T20:04:47Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304185",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304185"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304185"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304186",
        "pull_request_review_id": null,
        "id": 18304186,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304186",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304186"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304186"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304187",
        "pull_request_review_id": null,
        "id": 18304187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg3",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304187",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304187"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304188",
        "pull_request_review_id": null,
        "id": 18304188,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304188",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304188"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304188"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304189",
        "pull_request_review_id": null,
        "id": 18304189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTg5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304189",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304189"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304191",
        "pull_request_review_id": null,
        "id": 18304191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTkx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304191",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304191"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304193",
        "pull_request_review_id": null,
        "id": 18304193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTkz",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:48Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304193",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304193"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304194",
        "pull_request_review_id": null,
        "id": 18304194,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTk0",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 30,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304194",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304194"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304194"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304195",
        "pull_request_review_id": null,
        "id": 18304195,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTk1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304195",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304195"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304195"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304197",
        "pull_request_review_id": null,
        "id": 18304197,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTk3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304197",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304197"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304197"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304198",
        "pull_request_review_id": null,
        "id": 18304198,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTk4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304198",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304198"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304198"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304199",
        "pull_request_review_id": null,
        "id": 18304199,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MTk5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304199",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304199"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304199"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304200",
        "pull_request_review_id": null,
        "id": 18304200,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjAw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-01T20:04:49Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304200",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304200"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304200"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304201",
        "pull_request_review_id": null,
        "id": 18304201,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjAx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304201",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304201"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304201"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304203",
        "pull_request_review_id": null,
        "id": 18304203,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjAz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304203",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304203"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304203"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304204",
        "pull_request_review_id": null,
        "id": 18304204,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304204",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304204"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304204"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304205",
        "pull_request_review_id": null,
        "id": 18304205,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304205",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304205"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304205"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304206",
        "pull_request_review_id": null,
        "id": 18304206,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304206",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304206"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304206"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304207",
        "pull_request_review_id": null,
        "id": 18304207,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304207",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304207"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304207"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304208",
        "pull_request_review_id": null,
        "id": 18304208,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:50Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304208",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304208"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304208"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304209",
        "pull_request_review_id": null,
        "id": 18304209,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjA5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304209",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304209"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304209"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304211",
        "pull_request_review_id": null,
        "id": 18304211,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjEx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304211",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304211"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304211"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304212",
        "pull_request_review_id": null,
        "id": 18304212,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjEy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304212",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304212"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304212"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304213",
        "pull_request_review_id": null,
        "id": 18304213,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjEz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304213",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304213"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304213"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304214",
        "pull_request_review_id": null,
        "id": 18304214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304214",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304214"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304215",
        "pull_request_review_id": null,
        "id": 18304215,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304215",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304215"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304215"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304216",
        "pull_request_review_id": null,
        "id": 18304216,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE2",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:51Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304216",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304216"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304216"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304217",
        "pull_request_review_id": null,
        "id": 18304217,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304217",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304217"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304217"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304218",
        "pull_request_review_id": null,
        "id": 18304218,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE4",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304218",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304218"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304218"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304219",
        "pull_request_review_id": null,
        "id": 18304219,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjE5",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304219",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304219"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304219"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304220",
        "pull_request_review_id": null,
        "id": 18304220,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjIw",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304220",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304220"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304220"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304221",
        "pull_request_review_id": null,
        "id": 18304221,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjIx",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304221",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304221"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304221"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304222",
        "pull_request_review_id": null,
        "id": 18304222,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjIy",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304222",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304222"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304222"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304223",
        "pull_request_review_id": null,
        "id": 18304223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjIz",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:52Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304223",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304223"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304224",
        "pull_request_review_id": null,
        "id": 18304224,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI0",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304224",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304224"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304224"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304225",
        "pull_request_review_id": null,
        "id": 18304225,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI1",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304225",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304225"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304225"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304226",
        "pull_request_review_id": null,
        "id": 18304226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI2",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304226",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304226"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304227",
        "pull_request_review_id": null,
        "id": 18304227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI3",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304227",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304227"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304228",
        "pull_request_review_id": null,
        "id": 18304228,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI4",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304228",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304228"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304228"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304229",
        "pull_request_review_id": null,
        "id": 18304229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjI5",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T20:04:53Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304229",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304229"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304230",
        "pull_request_review_id": null,
        "id": 18304230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjMw",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T20:04:54Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304230",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304230"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304231",
        "pull_request_review_id": null,
        "id": 18304231,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjMx",
        "diff_hunk": "@@ -1,7 +1,7 @@\n module API\n   module Entities\n     class Build < Grape::Entity\n-      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name\n+      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name, :os, :language, :build_method, :attributes, :matrix_attributes",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [190/80]\n",
        "created_at": "2014-10-01T20:04:54Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304231",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304231"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304231"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304233",
        "pull_request_review_id": null,
        "id": 18304233,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA0MjMz",
        "diff_hunk": "@@ -9,7 +9,7 @@ class Runner < Grape::Entity\n     end\n \n     class Project < Grape::Entity\n-      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id\n+      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id, :build_method, :travis_environment",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e574782f7110bb41e91a18b820de78085f0c078",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [187/80]\n",
        "created_at": "2014-10-01T20:04:54Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304233",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18304233"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18304233"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312290",
        "pull_request_review_id": null,
        "id": 18312290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjkw",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-01T22:24:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312290",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312290"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312292",
        "pull_request_review_id": null,
        "id": 18312292,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjky",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [101/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312292",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312292"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312292"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312294",
        "pull_request_review_id": null,
        "id": 18312294,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk0",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [108/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312294",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312294"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312294"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312295",
        "pull_request_review_id": null,
        "id": 18312295,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk1",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [107/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312295",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312295"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312295"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312296",
        "pull_request_review_id": null,
        "id": 18312296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk2",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 53,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312296",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312296"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312297",
        "pull_request_review_id": null,
        "id": 18312297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk3",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}\n+        end\n+      else\n+        attributes = Array.new\n+    end\n+\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312297",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312297"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312298",
        "pull_request_review_id": null,
        "id": 18312298,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk4",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312298",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312298"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312298"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312299",
        "pull_request_review_id": null,
        "id": 18312299,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMjk5",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')\n+          attributes << {name: key, value: value, public: public}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312299",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312299"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312299"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312300",
        "pull_request_review_id": null,
        "id": 18312300,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzAw",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312300",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312300"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312300"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312302",
        "pull_request_review_id": null,
        "id": 18312302,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzAy",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312302",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312302"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312302"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312303",
        "pull_request_review_id": null,
        "id": 18312303,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzAz",
        "diff_hunk": "@@ -31,12 +31,71 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+\n+    case project.build_method\n+      when 'travis'\n+        params[:build][:travis_environment].shellsplit.each do |env|\n+          key, value = env.split('=', 2)\n+          public = key[0] != '@'\n+          key = key.gsub(/^@/, '')",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312303",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312303"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312303"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312304",
        "pull_request_review_id": null,
        "id": 18312304,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzA0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 129,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312304",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312304"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312304"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312305",
        "pull_request_review_id": null,
        "id": 18312305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzA1",
        "diff_hunk": "@@ -18,19 +18,28 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312305",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312305"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312306",
        "pull_request_review_id": null,
        "id": 18312306,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzA2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 90,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312306",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312306"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312306"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312307",
        "pull_request_review_id": null,
        "id": 18312307,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzA3",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 94,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312307",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312307"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312307"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312308",
        "pull_request_review_id": null,
        "id": 18312308,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzA4",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 101,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312308",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312308"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312308"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312310",
        "pull_request_review_id": null,
        "id": 18312310,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzEw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312310",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312310"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312310"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312311",
        "pull_request_review_id": null,
        "id": 18312311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzEx",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 100,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312311",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312311"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312312",
        "pull_request_review_id": null,
        "id": 18312312,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzEy",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 124,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312312",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312312"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312312"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312314",
        "pull_request_review_id": null,
        "id": 18312314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzE0",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 104,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312314",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312314"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312316",
        "pull_request_review_id": null,
        "id": 18312316,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzE2",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312316",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312316"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312316"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312317",
        "pull_request_review_id": null,
        "id": 18312317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzE3",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T22:24:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312317",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312317"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312319",
        "pull_request_review_id": null,
        "id": 18312319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzE5",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312319",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312319"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312320",
        "pull_request_review_id": null,
        "id": 18312320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzIw",
        "diff_hunk": "@@ -157,8 +182,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 115,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312320",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312320"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312321",
        "pull_request_review_id": null,
        "id": 18312321,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzIx",
        "diff_hunk": "@@ -179,6 +269,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 165,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312321",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312321"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312321"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312323",
        "pull_request_review_id": null,
        "id": 18312323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzIz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312323",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312323"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312324",
        "pull_request_review_id": null,
        "id": 18312324,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzI0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312324",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312324"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312324"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312325",
        "pull_request_review_id": null,
        "id": 18312325,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzI1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312325",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312325"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312325"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312326",
        "pull_request_review_id": null,
        "id": 18312326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzI2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312326",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312326"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312327",
        "pull_request_review_id": null,
        "id": 18312327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzI3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312327",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312327"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312329",
        "pull_request_review_id": null,
        "id": 18312329,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzI5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312329",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312329"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312329"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312330",
        "pull_request_review_id": null,
        "id": 18312330,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzMw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312330",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312330"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312330"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312331",
        "pull_request_review_id": null,
        "id": 18312331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzMx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312331",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312331"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312332",
        "pull_request_review_id": null,
        "id": 18312332,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzMy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312332",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312332"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312332"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312333",
        "pull_request_review_id": null,
        "id": 18312333,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzMz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-01T22:24:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312333",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312333"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312333"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312334",
        "pull_request_review_id": null,
        "id": 18312334,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312334",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312334"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312334"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312335",
        "pull_request_review_id": null,
        "id": 18312335,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312335",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312335"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312335"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312336",
        "pull_request_review_id": null,
        "id": 18312336,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312336",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312336"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312336"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312337",
        "pull_request_review_id": null,
        "id": 18312337,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM3",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T22:24:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312337",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312337"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312337"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312338",
        "pull_request_review_id": null,
        "id": 18312338,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM4",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-01T22:24:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312338",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312338"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312338"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312339",
        "pull_request_review_id": null,
        "id": 18312339,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzM5",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-01T22:24:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312339",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312339"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312339"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312340",
        "pull_request_review_id": null,
        "id": 18312340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQw",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312340",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312340"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312342",
        "pull_request_review_id": null,
        "id": 18312342,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQy",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312342",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312342"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312342"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312343",
        "pull_request_review_id": null,
        "id": 18312343,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQz",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312343",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312343"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312343"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312344",
        "pull_request_review_id": null,
        "id": 18312344,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ0",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)\n+      new_build = prepare_from_build(project, params)\n+    else\n+      new_build = prepare_from_hash(project, params)\n+    end\n+    new_build\n+  end\n+\n+  def prepare_from_build(project, build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 62,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `project`. If it's necessary, use `_` or `_project` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-01T22:24:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312344",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312344"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312344"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312345",
        "pull_request_review_id": null,
        "id": 18312345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312345",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312345"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312346",
        "pull_request_review_id": null,
        "id": 18312346,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312346",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312346"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312346"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312347",
        "pull_request_review_id": null,
        "id": 18312347,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ3",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312347",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312347"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312347"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312348",
        "pull_request_review_id": null,
        "id": 18312348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312348",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312348"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312349",
        "pull_request_review_id": null,
        "id": 18312349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzQ5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312349",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312349"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312350",
        "pull_request_review_id": null,
        "id": 18312350,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzUw",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-01T22:24:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312350",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312350"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312350"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312351",
        "pull_request_review_id": null,
        "id": 18312351,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzUx",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312351",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312351"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312351"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312352",
        "pull_request_review_id": null,
        "id": 18312352,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzUy",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312352",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312352"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312352"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312353",
        "pull_request_review_id": null,
        "id": 18312353,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzUz",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312353",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312353"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312353"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312355",
        "pull_request_review_id": null,
        "id": 18312355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzU1",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312355",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312355"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312356",
        "pull_request_review_id": null,
        "id": 18312356,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzU2",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312356",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312356"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312356"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312358",
        "pull_request_review_id": null,
        "id": 18312358,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzU4",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 30,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312358",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312358"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312358"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312359",
        "pull_request_review_id": null,
        "id": 18312359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzU5",
        "diff_hunk": "@@ -1,8 +1,75 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+\n+    unless build_attributes\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+    end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312359",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312359"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312360",
        "pull_request_review_id": null,
        "id": 18312360,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzYw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312360",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312360"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312360"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312361",
        "pull_request_review_id": null,
        "id": 18312361,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzYx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312361",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312361"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312361"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312362",
        "pull_request_review_id": null,
        "id": 18312362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzYy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312362",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312362"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312363",
        "pull_request_review_id": null,
        "id": 18312363,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzYz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312363",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312363"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312363"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312364",
        "pull_request_review_id": null,
        "id": 18312364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312364",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312364"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312365",
        "pull_request_review_id": null,
        "id": 18312365,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312365",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312365"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312365"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312366",
        "pull_request_review_id": null,
        "id": 18312366,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312366",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312366"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312366"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312367",
        "pull_request_review_id": null,
        "id": 18312367,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312367",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312367"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312367"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312368",
        "pull_request_review_id": null,
        "id": 18312368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312368",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312368"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312369",
        "pull_request_review_id": null,
        "id": 18312369,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzY5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312369",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312369"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312369"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312370",
        "pull_request_review_id": null,
        "id": 18312370,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzcw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312370",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312370"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312370"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312371",
        "pull_request_review_id": null,
        "id": 18312371,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzcx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312371",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312371"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312371"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312372",
        "pull_request_review_id": null,
        "id": 18312372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzcy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312372",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312372"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312373",
        "pull_request_review_id": null,
        "id": 18312373,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzcz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312373",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312373"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312373"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312374",
        "pull_request_review_id": null,
        "id": 18312374,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312374",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312374"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312374"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312375",
        "pull_request_review_id": null,
        "id": 18312375,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312375",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312375"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312375"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312376",
        "pull_request_review_id": null,
        "id": 18312376,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc2",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312376",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312376"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312376"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312377",
        "pull_request_review_id": null,
        "id": 18312377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312377",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312377"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312378",
        "pull_request_review_id": null,
        "id": 18312378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc4",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312378",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312378"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312379",
        "pull_request_review_id": null,
        "id": 18312379,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzc5",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312379",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312379"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312379"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312381",
        "pull_request_review_id": null,
        "id": 18312381,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzgx",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312381",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312381"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312381"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312382",
        "pull_request_review_id": null,
        "id": 18312382,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzgy",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312382",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312382"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312382"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312383",
        "pull_request_review_id": null,
        "id": 18312383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzgz",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312383",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312383"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312384",
        "pull_request_review_id": null,
        "id": 18312384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzg0",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312384",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312384"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312385",
        "pull_request_review_id": null,
        "id": 18312385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzg1",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312385",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312385"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312386",
        "pull_request_review_id": null,
        "id": 18312386,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzg2",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312386",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312386"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312386"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312387",
        "pull_request_review_id": null,
        "id": 18312387,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzg3",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312387",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312387"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312387"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312388",
        "pull_request_review_id": null,
        "id": 18312388,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzg4",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312388",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312388"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312388"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312390",
        "pull_request_review_id": null,
        "id": 18312390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzkw",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312390",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312390"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312392",
        "pull_request_review_id": null,
        "id": 18312392,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzky",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312392",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312392"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312392"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312393",
        "pull_request_review_id": null,
        "id": 18312393,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzkz",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-01T22:24:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312393",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312393"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312393"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312395",
        "pull_request_review_id": null,
        "id": 18312395,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzk1",
        "diff_hunk": "@@ -16,14 +16,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-01T22:24:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312395",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312395"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312395"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312396",
        "pull_request_review_id": null,
        "id": 18312396,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzk2",
        "diff_hunk": "@@ -1,7 +1,7 @@\n module API\n   module Entities\n     class Build < Grape::Entity\n-      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name\n+      expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url, :before_sha, :timeout, :allow_git_fetch, :project_name, :os, :language, :build_method, :attributes, :matrix_attributes",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [190/80]\n",
        "created_at": "2014-10-01T22:24:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312396",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312396"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312396"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312397",
        "pull_request_review_id": null,
        "id": 18312397,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzEyMzk3",
        "diff_hunk": "@@ -9,7 +9,7 @@ class Runner < Grape::Entity\n     end\n \n     class Project < Grape::Entity\n-      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id\n+      expose :id, :name, :timeout, :scripts, :token, :default_ref, :gitlab_url, :always_build, :polling_interval, :public, :ssh_url_to_repo, :gitlab_id, :build_method, :travis_environment",
        "path": "lib/api/entities.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "0e025f843c44a14543a5973f1d332388d1aa8dfe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [187/80]\n",
        "created_at": "2014-10-01T22:24:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312397",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18312397"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18312397"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336511",
        "pull_request_review_id": null,
        "id": 18336511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTEx",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, additional_env_variables, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-02T12:56:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336511",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336511"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336513",
        "pull_request_review_id": null,
        "id": 18336513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTEz",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [101/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336513",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336513"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336514",
        "pull_request_review_id": null,
        "id": 18336514,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE0",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [108/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336514",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336514"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336514"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336515",
        "pull_request_review_id": null,
        "id": 18336515,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE1",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 43,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [107/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336515",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336515"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336515"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336516",
        "pull_request_review_id": null,
        "id": 18336516,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE2",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, additional_env_variables, is_deploy)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [110/80]\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336516",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336516"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336516"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336517",
        "pull_request_review_id": null,
        "id": 18336517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE3",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: params[:build][:is_deploy].shellescape, public: true}\n+    attributes << {name: 'VERSION_STRING', value: params[:build][:version_string].shellescape, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: params[:build][:version_notes].shellescape, public: false}\n+\n+    Build.transaction do\n+      begin\n+        build = CreateBuildService.new.execute(project, data, attributes, additional_env_variables, is_deploy)\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336517",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336517"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336518",
        "pull_request_review_id": null,
        "id": 18336518,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE4",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336518",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336518"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336518"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336519",
        "pull_request_review_id": null,
        "id": 18336519,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTE5",
        "diff_hunk": "@@ -31,12 +31,65 @@ def show\n     end\n   end\n \n+  def create\n+    commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, params[:build][:ref])\n+    unless commit\n+      redirect_to :back, alert: 'Cannot create build. Invalid ref name'\n+      return\n+    end\n+\n+    commit = commit.deep_symbolize_keys\n+\n+    data = {\n+        after: commit[:id],\n+        before: commit[:parent_ids] ? commit[:parent_ids][0] : '0000000',\n+        ref: params[:build][:ref],\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    case project.build_method\n+      when 'travis'\n+        additional_env_variables = params[:build][:travis_environment]\n+      else\n+        additional_env_variables = \"\"\n+    end\n+\n+    is_deploy = params[:build][:is_deploy] == 'true'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336519",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336519"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336519"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336521",
        "pull_request_review_id": null,
        "id": 18336521,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTIx",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 131,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336521",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336521"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336521"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336522",
        "pull_request_review_id": null,
        "id": 18336522,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTIy",
        "diff_hunk": "@@ -18,19 +18,30 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336522",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336522"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336522"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336523",
        "pull_request_review_id": null,
        "id": 18336523,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTIz",
        "diff_hunk": "@@ -121,15 +130,25 @@ def ci_skip?\n   end\n \n   def git_author_name\n-    commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author_name] if commit_data && commit_data[:author_name]\n+    nil\n   end\n \n   def git_author_email\n-    commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author_email] if commit_data && commit_data[:author_email]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 56,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336523",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336523"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336523"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336524",
        "pull_request_review_id": null,
        "id": 18336524,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI0",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 92,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336524",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336524"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336524"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336525",
        "pull_request_review_id": null,
        "id": 18336525,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI1",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 96,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336525",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336525"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336525"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336526",
        "pull_request_review_id": null,
        "id": 18336526,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI2",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336526",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336526"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336526"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336527",
        "pull_request_review_id": null,
        "id": 18336527,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI3",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 105,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336527",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336527"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336527"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336528",
        "pull_request_review_id": null,
        "id": 18336528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI4",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 102,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336528",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336528"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336529",
        "pull_request_review_id": null,
        "id": 18336529,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTI5",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336529",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336529"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336529"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336530",
        "pull_request_review_id": null,
        "id": 18336530,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTMw",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 106,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336530",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336530"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336530"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336531",
        "pull_request_review_id": null,
        "id": 18336531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTMx",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 128,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336531",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336531"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336533",
        "pull_request_review_id": null,
        "id": 18336533,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTMz",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 113,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T12:56:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336533",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336533"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336533"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336534",
        "pull_request_review_id": null,
        "id": 18336534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM0",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 117,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336534",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336534"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336535",
        "pull_request_review_id": null,
        "id": 18336535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM1",
        "diff_hunk": "@@ -179,6 +271,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 167,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336535",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336535"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336536",
        "pull_request_review_id": null,
        "id": 18336536,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336536",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336536"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336536"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336537",
        "pull_request_review_id": null,
        "id": 18336537,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336537",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336537"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336537"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336538",
        "pull_request_review_id": null,
        "id": 18336538,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336538",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336538"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336538"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336539",
        "pull_request_review_id": null,
        "id": 18336539,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTM5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336539",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336539"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336539"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336540",
        "pull_request_review_id": null,
        "id": 18336540,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336540",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336540"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336540"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336541",
        "pull_request_review_id": null,
        "id": 18336541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336541",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336541"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336542",
        "pull_request_review_id": null,
        "id": 18336542,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336542",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336542"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336542"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336543",
        "pull_request_review_id": null,
        "id": 18336543,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQz",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336543",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336543"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336543"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336544",
        "pull_request_review_id": null,
        "id": 18336544,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQ0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336544",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336544"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336544"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336546",
        "pull_request_review_id": null,
        "id": 18336546,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQ2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336546",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336546"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336546"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336547",
        "pull_request_review_id": null,
        "id": 18336547,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQ3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336547",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336547"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336547"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336548",
        "pull_request_review_id": null,
        "id": 18336548,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQ4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336548",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336548"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336548"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336549",
        "pull_request_review_id": null,
        "id": 18336549,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTQ5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336549",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336549"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336549"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336551",
        "pull_request_review_id": null,
        "id": 18336551,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTUx",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336551",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336551"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336551"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336552",
        "pull_request_review_id": null,
        "id": 18336552,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTUy",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-02T12:56:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336552",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336552"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336552"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336553",
        "pull_request_review_id": null,
        "id": 18336553,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTUz",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336553",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336553"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336553"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336554",
        "pull_request_review_id": null,
        "id": 18336554,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU0",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336554",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336554"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336554"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336555",
        "pull_request_review_id": null,
        "id": 18336555,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU1",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336555",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336555"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336555"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336556",
        "pull_request_review_id": null,
        "id": 18336556,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU2",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336556",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336556"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336556"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336557",
        "pull_request_review_id": null,
        "id": 18336557,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU3",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`end` at 18, 6 is not aligned with `additional_env_variables.shellsplit.each do |env|` at 13, 4\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336557",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336557"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336557"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336558",
        "pull_request_review_id": null,
        "id": 18336558,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU4",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)\n+      new_build = prepare_from_build(project, params)\n+    else\n+      new_build = prepare_from_hash(project, params)\n+    end\n+    new_build\n+  end\n+\n+  def prepare_from_build(project, build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `project`. If it's necessary, use `_` or `_project` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336558",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336558"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336558"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336559",
        "pull_request_review_id": null,
        "id": 18336559,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTU5",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [105/80]\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336559",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336559"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336559"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336560",
        "pull_request_review_id": null,
        "id": 18336560,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTYw",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336560",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336560"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336560"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336561",
        "pull_request_review_id": null,
        "id": 18336561,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTYx",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-02T12:56:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336561",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336561"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336561"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336562",
        "pull_request_review_id": null,
        "id": 18336562,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTYy",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336562",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336562"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336562"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336563",
        "pull_request_review_id": null,
        "id": 18336563,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTYz",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336563",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336563"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336563"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336564",
        "pull_request_review_id": null,
        "id": 18336564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTY0",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336564",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336564"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336565",
        "pull_request_review_id": null,
        "id": 18336565,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTY1",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336565",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336565"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336565"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336566",
        "pull_request_review_id": null,
        "id": 18336566,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTY2",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336566",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336566"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336566"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336568",
        "pull_request_review_id": null,
        "id": 18336568,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTY4",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336568",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336568"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336568"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336569",
        "pull_request_review_id": null,
        "id": 18336569,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTY5",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336569",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336569"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336569"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336570",
        "pull_request_review_id": null,
        "id": 18336570,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTcw",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336570",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336570"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336570"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336571",
        "pull_request_review_id": null,
        "id": 18336571,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTcx",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 30,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336571",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336571"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336571"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336572",
        "pull_request_review_id": null,
        "id": 18336572,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTcy",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 31,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336572",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336572"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336572"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336573",
        "pull_request_review_id": null,
        "id": 18336573,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTcz",
        "diff_hunk": "@@ -1,8 +1,76 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.build_attributes = build_attributes\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336573",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336573"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336573"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336574",
        "pull_request_review_id": null,
        "id": 18336574,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTc0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336574",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336574"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336574"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336575",
        "pull_request_review_id": null,
        "id": 18336575,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTc1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336575",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336575"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336575"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336577",
        "pull_request_review_id": null,
        "id": 18336577,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTc3",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336577",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336577"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336577"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336579",
        "pull_request_review_id": null,
        "id": 18336579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTc5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336579",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336579"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336580",
        "pull_request_review_id": null,
        "id": 18336580,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTgw",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336580",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336580"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336580"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336581",
        "pull_request_review_id": null,
        "id": 18336581,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTgx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336581",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336581"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336581"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336582",
        "pull_request_review_id": null,
        "id": 18336582,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTgy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336582",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336582"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336582"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336583",
        "pull_request_review_id": null,
        "id": 18336583,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTgz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336583",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336583"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336583"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336584",
        "pull_request_review_id": null,
        "id": 18336584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336584",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336584"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336585",
        "pull_request_review_id": null,
        "id": 18336585,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336585",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336585"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336585"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336586",
        "pull_request_review_id": null,
        "id": 18336586,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336586",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336586"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336586"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336587",
        "pull_request_review_id": null,
        "id": 18336587,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336587",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336587"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336587"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336588",
        "pull_request_review_id": null,
        "id": 18336588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg4",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [106/80]\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336588",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336588"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336589",
        "pull_request_review_id": null,
        "id": 18336589,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTg5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336589",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336589"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336589"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336590",
        "pull_request_review_id": null,
        "id": 18336590,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTkw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336590",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336590"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336590"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336591",
        "pull_request_review_id": null,
        "id": 18336591,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTkx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336591",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336591"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336591"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336592",
        "pull_request_review_id": null,
        "id": 18336592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTky",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336592",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336592"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336593",
        "pull_request_review_id": null,
        "id": 18336593,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTkz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336593",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336593"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336593"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336594",
        "pull_request_review_id": null,
        "id": 18336594,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, ref_name, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, ref_name, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, ref_name)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336594",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336594"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336594"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336595",
        "pull_request_review_id": null,
        "id": 18336595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk1",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336595",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336595"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336596",
        "pull_request_review_id": null,
        "id": 18336596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk2",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336596",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336596"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336597",
        "pull_request_review_id": null,
        "id": 18336597,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk3",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336597",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336597"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336597"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336598",
        "pull_request_review_id": null,
        "id": 18336598,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk4",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336598",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336598"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336598"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336599",
        "pull_request_review_id": null,
        "id": 18336599,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NTk5",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336599",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336599"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336599"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336600",
        "pull_request_review_id": null,
        "id": 18336600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjAw",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336600",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336600"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336601",
        "pull_request_review_id": null,
        "id": 18336601,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjAx",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336601",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336601"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336601"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336602",
        "pull_request_review_id": null,
        "id": 18336602,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjAy",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336602",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336602"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336602"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336603",
        "pull_request_review_id": null,
        "id": 18336603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjAz",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336603",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336603"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336603"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336604",
        "pull_request_review_id": null,
        "id": 18336604,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA0",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336604",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336604"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336604"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336605",
        "pull_request_review_id": null,
        "id": 18336605,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA1",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336605",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336605"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336605"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336606",
        "pull_request_review_id": null,
        "id": 18336606,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA2",
        "diff_hunk": "@@ -80,7 +93,30 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        # Default parameters\n+        is_deploy = false\n+        attributes = Array.new\n+\n+        # Support release commit\n+        commits = params[:data][:commits] if params[:data]\n+        commit = commits.first if commits\n+        message = commit[:message] if commit\n+        version_string = message.scan(/^RELEASE: ([0-9][^ \\t\\r\\n]*).*$/).first\n+        if version_string\n+          is_deploy = true\n+          version_string = version_string.first\n+          version_notes = message.split(/\\n/, 2)[1]\n+          version_notes ||= \"\"\n+          version_notes = version_notes.strip\n+\n+          # Generate attributes for specific version\n+          attributes << {name: 'DEPLOY_BUILD', value: true, public: true}\n+          attributes << {name: 'VERSION_STRING', value: version_string.shellescape, public: true}",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 60,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336606",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336606"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336606"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336607",
        "pull_request_review_id": null,
        "id": 18336607,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA3",
        "diff_hunk": "@@ -80,7 +93,30 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        # Default parameters\n+        is_deploy = false\n+        attributes = Array.new\n+\n+        # Support release commit\n+        commits = params[:data][:commits] if params[:data]\n+        commit = commits.first if commits\n+        message = commit[:message] if commit\n+        version_string = message.scan(/^RELEASE: ([0-9][^ \\t\\r\\n]*).*$/).first\n+        if version_string\n+          is_deploy = true\n+          version_string = version_string.first\n+          version_notes = message.split(/\\n/, 2)[1]\n+          version_notes ||= \"\"\n+          version_notes = version_notes.strip\n+\n+          # Generate attributes for specific version\n+          attributes << {name: 'DEPLOY_BUILD', value: true, public: true}\n+          attributes << {name: 'VERSION_STRING', value: version_string.shellescape, public: true}\n+          attributes << {name: 'VERSION_NOTES', value: version_notes.shellescape, public: false}",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336607",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336607"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336607"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336608",
        "pull_request_review_id": null,
        "id": 18336608,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA4",
        "diff_hunk": "@@ -80,7 +93,30 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        # Default parameters\n+        is_deploy = false\n+        attributes = Array.new\n+\n+        # Support release commit\n+        commits = params[:data][:commits] if params[:data]\n+        commit = commits.first if commits\n+        message = commit[:message] if commit\n+        version_string = message.scan(/^RELEASE: ([0-9][^ \\t\\r\\n]*).*$/).first\n+        if version_string\n+          is_deploy = true\n+          version_string = version_string.first\n+          version_notes = message.split(/\\n/, 2)[1]\n+          version_notes ||= \"\"\n+          version_notes = version_notes.strip\n+\n+          # Generate attributes for specific version\n+          attributes << {name: 'DEPLOY_BUILD', value: true, public: true}\n+          attributes << {name: 'VERSION_STRING', value: version_string.shellescape, public: true}\n+          attributes << {name: 'VERSION_NOTES', value: version_notes.shellescape, public: false}\n+        end\n+\n+        build = CreateBuildService.new.execute(project, params[:data], attributes, nil, is_deploy)",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 64,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [98/80]\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336608",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336608"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336608"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336609",
        "pull_request_review_id": null,
        "id": 18336609,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjA5",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 31,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336609",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336609"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336609"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336610",
        "pull_request_review_id": null,
        "id": 18336610,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjEw",
        "diff_hunk": "@@ -80,7 +93,30 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        # Default parameters\n+        is_deploy = false\n+        attributes = Array.new\n+\n+        # Support release commit\n+        commits = params[:data][:commits] if params[:data]\n+        commit = commits.first if commits\n+        message = commit[:message] if commit\n+        version_string = message.scan(/^RELEASE: ([0-9][^ \\t\\r\\n]*).*$/).first\n+        if version_string\n+          is_deploy = true\n+          version_string = version_string.first\n+          version_notes = message.split(/\\n/, 2)[1]\n+          version_notes ||= \"\"\n+          version_notes = version_notes.strip\n+\n+          # Generate attributes for specific version\n+          attributes << {name: 'DEPLOY_BUILD', value: true, public: true}",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 59,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336610",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336610"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336610"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336611",
        "pull_request_review_id": null,
        "id": 18336611,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjEx",
        "diff_hunk": "@@ -1,3 +1,5 @@\n+require 'shellwords'",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336611",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336611"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336611"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336612",
        "pull_request_review_id": null,
        "id": 18336612,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM2NjEy",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "fe7adb4700af0a78f8a9be63a7bf14364a81df7d",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T12:56:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336612",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18336612"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18336612"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351968",
        "pull_request_review_id": null,
        "id": 18351968,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTY4",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string]\n+    else\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string] + \"-test\"\n+    end\n+    tag_opts[:ref] = params[:build][:ref]\n+    tag_opts[:message] = params[:build][:version_notes]\n+\n+    created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+    unless created_tag\n+      redirect_to :back, alert: 'Cannot create tagged build.'\n+      return\n+    end\n+\n+    created_tag = created_tag.deep_symbolize_keys\n+\n+    Build.transaction do\n+      begin\n+        build =  CreateBuildService.new.create_build_from_tag(project, created_tag[:name], created_tag[:commit])\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'\n+          return\n+        end\n+\n+        redirect_to project_build_path(project, build)\n+      rescue => e\n+        redirect_to :back, alert: \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-02T17:01:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351968",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351968"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351968"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351969",
        "pull_request_review_id": null,
        "id": 18351969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTY5",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string]\n+    else\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string] + \"-test\"\n+    end\n+    tag_opts[:ref] = params[:build][:ref]\n+    tag_opts[:message] = params[:build][:version_notes]\n+\n+    created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-02T17:01:06Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351969",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351969"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351970",
        "pull_request_review_id": null,
        "id": 18351970,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTcw",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string]\n+    else\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string] + \"-test\"\n+    end\n+    tag_opts[:ref] = params[:build][:ref]\n+    tag_opts[:message] = params[:build][:version_notes]\n+\n+    created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+    unless created_tag\n+      redirect_to :back, alert: 'Cannot create tagged build.'\n+      return\n+    end\n+\n+    created_tag = created_tag.deep_symbolize_keys\n+\n+    Build.transaction do\n+      begin\n+        build =  CreateBuildService.new.create_build_from_tag(project, created_tag[:name], created_tag[:commit])",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [112/80]\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351970",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351970"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351970"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351971",
        "pull_request_review_id": null,
        "id": 18351971,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTcx",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string]\n+    else\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string] + \"-test\"\n+    end\n+    tag_opts[:ref] = params[:build][:ref]\n+    tag_opts[:message] = params[:build][:version_notes]\n+\n+    created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+    unless created_tag\n+      redirect_to :back, alert: 'Cannot create tagged build.'\n+      return\n+    end\n+\n+    created_tag = created_tag.deep_symbolize_keys\n+\n+    Build.transaction do\n+      begin\n+        build =  CreateBuildService.new.create_build_from_tag(project, created_tag[:name], created_tag[:commit])\n+        unless build\n+          redirect_to :back, alert: 'Cannot create build. No variants available.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 35,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351971",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351971"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351971"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351972",
        "pull_request_review_id": null,
        "id": 18351972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTcy",
        "diff_hunk": "@@ -67,4 +106,20 @@ def build\n   def build_by_sha\n     project.builds.where(sha: params[:id]).last\n   end\n+\n+  def tags\n+    unless @current_tags\n+      @current_tags = Network.new.list_tags(current_user.url, project.gitlab_id, current_user.private_token)",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 72,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [108/80]\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351972",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351972"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351973",
        "pull_request_review_id": null,
        "id": 18351973,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTcz",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351973",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351973"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351973"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351974",
        "pull_request_review_id": null,
        "id": 18351974,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTc0",
        "diff_hunk": "@@ -31,12 +31,51 @@ def show\n     end\n   end\n \n+  def create\n+    tag_opts = {}\n+    if params[:build][:is_deploy] == 'true'\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string]\n+    else\n+      tag_opts[:tag_name] = \"v\" + params[:build][:version_string] + \"-test\"\n+    end\n+    tag_opts[:ref] = params[:build][:ref]\n+    tag_opts[:message] = params[:build][:version_notes]\n+\n+    created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+    unless created_tag\n+      redirect_to :back, alert: 'Cannot create tagged build.'",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351974",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351974"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351974"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351975",
        "pull_request_review_id": null,
        "id": 18351975,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTc1",
        "diff_hunk": "@@ -67,4 +106,20 @@ def build\n   def build_by_sha\n     project.builds.where(sha: params[:id]).last\n   end\n+\n+  def tags\n+    unless @current_tags\n+      @current_tags = Network.new.list_tags(current_user.url, project.gitlab_id, current_user.private_token)\n+      unless @current_tags\n+        return nil\n+      end\n+      @current_tags = @current_tags\n+      @current_tags = Hash[\n+          *@current_tags.map do |tag|\n+            [tag['name'], tag.deep_symbolize_keys]",
        "path": "app/controllers/builds_controller.rb",
        "position": null,
        "original_position": 79,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351975",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351975"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351975"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351976",
        "pull_request_review_id": null,
        "id": 18351976,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTc2",
        "diff_hunk": "@@ -58,11 +62,25 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          if CreateProjectService.new.update(current_user, @project, project_url(\":project_id\"))",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]\n",
        "created_at": "2014-10-02T17:01:07Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351976",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351976"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351976"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351977",
        "pull_request_review_id": null,
        "id": 18351977,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTc3",
        "diff_hunk": "@@ -58,11 +62,25 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          if CreateProjectService.new.update(current_user, @project, project_url(\":project_id\"))\n+            true\n+          else\n+            raise ActiveRecord::Rollback\n+          end\n+        end\n+\n+        redirect_to project, notice: 'Project was successfully updated.'",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351977",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351977"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351977"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351979",
        "pull_request_review_id": null,
        "id": 18351979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTc5",
        "diff_hunk": "@@ -58,11 +62,25 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n-      redirect_to project, notice: 'Project was successfully updated.'\n-    else\n-      render action: \"edit\"\n+    Project.transaction do\n+      token_changed = project.token != params[:project][:token]\n+\n+      if project.update_attributes(params[:project])\n+        if token_changed\n+          if CreateProjectService.new.update(current_user, @project, project_url(\":project_id\"))\n+            true\n+          else\n+            raise ActiveRecord::Rollback\n+          end\n+        end\n+\n+        redirect_to project, notice: 'Project was successfully updated.'\n+      else\n+        render action: \"edit\"\n+      end\n     end\n+  rescue\n+    redirect_to project, alert: 'Cannot save project.'",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351979",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351979"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351980",
        "pull_request_review_id": null,
        "id": 18351980,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTgw",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })\n+\n+        if travis_build = GitlabCi.config.travis_build\n+          data = Extension.deep_merge(data, travis_build.deep_symbolize_keys) do |k, tv, v|",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 131,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `k`. If it's necessary, use `_` or `_k` as an argument name to indicate that it won't be used.<br>Line is too long. [91/80]\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351980",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351980"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351980"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351981",
        "pull_request_review_id": null,
        "id": 18351981,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTgx",
        "diff_hunk": "@@ -18,19 +18,30 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'\n+\n class Build < ActiveRecord::Base\n   belongs_to :project\n   belongs_to :runner\n \n   serialize :push_data\n+  serialize :build_attributes\n+  serialize :matrix_attributes\n \n   attr_accessible :project_id, :ref, :sha, :before_sha,\n-    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage\n+    :status, :finished_at, :trace, :started_at, :push_data, :runner_id, :project_name, :coverage,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [97/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351981",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351981"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351981"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351983",
        "pull_request_review_id": null,
        "id": 18351983,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTgz",
        "diff_hunk": "@@ -121,15 +130,25 @@ def ci_skip?\n   end\n \n   def git_author_name\n-    commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author][:name] if commit_data && commit_data[:author]\n+    return commit_data[:author_name] if commit_data && commit_data[:author_name]\n+    nil\n   end\n \n   def git_author_email\n-    commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author][:email] if commit_data && commit_data[:author]\n+    return commit_data[:author_email] if commit_data && commit_data[:author_email]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 56,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351983",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351983"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351983"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351984",
        "pull_request_review_id": null,
        "id": 18351984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg0",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 92,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [133/80]<br>Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:08Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351984",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351984"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351985",
        "pull_request_review_id": null,
        "id": 18351985,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg1",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 96,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351985",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351985"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351985"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351986",
        "pull_request_review_id": null,
        "id": 18351986,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg2",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 103,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [89/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351986",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351986"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351986"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351987",
        "pull_request_review_id": null,
        "id": 18351987,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg3",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 105,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351987",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351987"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351987"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351988",
        "pull_request_review_id": null,
        "id": 18351988,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg4",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 102,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351988",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351988"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351988"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351989",
        "pull_request_review_id": null,
        "id": 18351989,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTg5",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 126,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Incorrect indentation detected (column 16 instead of 14).\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351989",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351989"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351989"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351990",
        "pull_request_review_id": null,
        "id": 18351990,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTkw",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 106,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-02T17:01:09Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351990",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351990"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351990"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351991",
        "pull_request_review_id": null,
        "id": 18351991,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTkx",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,\n+                number: \"#{build_id}.#{build_concurrent_id}\",\n+                branch: ref,\n+                commit: sha,\n+                commit_range: \"#{short_before_sha}..#{short_sha}\",\n+                pull_request: false,\n+                tag: \"project_#{project.id}_build_#{id}\"\n+            },\n+            timeouts: {\n+                # git_clone: 300\n+            }\n+        })",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 128,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent the right brace the same as the first position after the preceding left parenthesis.\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351991",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351991"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351991"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351992",
        "pull_request_review_id": null,
        "id": 18351992,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTky",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 113,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351992",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351992"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351992"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351993",
        "pull_request_review_id": null,
        "id": 18351993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTkz",
        "diff_hunk": "@@ -157,8 +184,73 @@ def complete?\n     canceled? || success? || failed?\n   end\n \n+  def build_attributes_formatted\n+    build_attributes[\"config\"].to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_attributes.is_a?(Hash) and build_attributes[\"config\"]\n+  end\n+\n+  def matrix_attributes_formatted\n+    matrix_attributes.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_attributes.is_a?(Hash)\n+  end\n+\n   def commands\n-    project.scripts\n+    case build_method\n+      when 'travis'\n+        data = { config: build_attributes.deep_symbolize_keys } if build_attributes['os']\n+        data ||= build_attributes.deep_symbolize_keys\n+        data = data.deep_merge({\n+            urls: {\n+            },\n+            repository: {\n+                source_url: repo_url,\n+                slug: repo_slug\n+            },\n+            source: {\n+                id: build_id,\n+                number: build_concurrent_id\n+            },\n+            job: {\n+                id: build_id,",
        "path": "app/models/build.rb",
        "position": null,
        "original_position": 117,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351993",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351993"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351994",
        "pull_request_review_id": null,
        "id": 18351994,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk0",
        "diff_hunk": "@@ -179,6 +271,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 167,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351994",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351994"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351994"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351995",
        "pull_request_review_id": null,
        "id": 18351995,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk1",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"",
        "path": "app/models/network.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351995",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351995"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351995"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351996",
        "pull_request_review_id": null,
        "id": 18351996,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk2",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"",
        "path": "app/models/network.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [85/80]\n",
        "created_at": "2014-10-02T17:01:10Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351996",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351996"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351996"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351997",
        "pull_request_review_id": null,
        "id": 18351997,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351997",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351997"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351997"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351998",
        "pull_request_review_id": null,
        "id": 18351998,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [114/80]\n",
        "created_at": "2014-10-02T17:01:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351998",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351998"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351998"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351999",
        "pull_request_review_id": null,
        "id": 18351999,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUxOTk5",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/blobs/#{sha}?private_token=#{token}&filepath=#{filepath}\"",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [104/80]\n",
        "created_at": "2014-10-02T17:01:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351999",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18351999"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18351999"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352000",
        "pull_request_review_id": null,
        "id": 18352000,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDAw",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0",
        "path": "app/models/network.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-02T17:01:11Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352000",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352000"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352000"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352001",
        "pull_request_review_id": null,
        "id": 18352001,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDAx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352001",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352001"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352001"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352002",
        "pull_request_review_id": null,
        "id": 18352002,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDAy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352002",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352002"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352002"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352004",
        "pull_request_review_id": null,
        "id": 18352004,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA0",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352004",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352004"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352004"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352005",
        "pull_request_review_id": null,
        "id": 18352005,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA1",
        "diff_hunk": "@@ -112,4 +186,41 @@ def disable_ci(url, project_id, token)\n       nil\n     end\n   end\n+\n+  def list_tags(url, project_id, token)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 88,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352005",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352005"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352005"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352006",
        "pull_request_review_id": null,
        "id": 18352006,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA2",
        "diff_hunk": "@@ -112,4 +186,41 @@ def disable_ci(url, project_id, token)\n       nil\n     end\n   end\n+\n+  def list_tags(url, project_id, token)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tags?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200 || response.code == 201\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def create_tag(url, project_id, token, tag_opts)\n+    tag_opts.merge!(private_token: token)\n+\n+    opts = {\n+        body: tag_opts.to_json,",
        "path": "app/models/network.rb",
        "position": 56,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352006",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352006"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352006"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352007",
        "pull_request_review_id": null,
        "id": 18352007,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA3",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)",
        "path": "app/models/network.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352007",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352007"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352007"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352008",
        "pull_request_review_id": null,
        "id": 18352008,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA4",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits?private_token=#{token}&ref_name=#{ref_name}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def commit_for_sha(url, project_id, token, sha)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/commits/#{sha}?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def list_repository_tree(url, project_id, token, ref_name = 'master', path = '')\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tree.json?private_token=#{token}&ref_name=#{ref_name}&path=#{path}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200\n+      response.parsed_response\n+    else\n+      []\n+    end\n+  end\n+\n+  def raw_file_content(url, project_id, token, sha, filepath)\n+    opts = {\n+      headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": null,
        "original_position": 63,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:12Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352008",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352008"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352008"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352009",
        "pull_request_review_id": null,
        "id": 18352009,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDA5",
        "diff_hunk": "@@ -112,4 +186,41 @@ def disable_ci(url, project_id, token)\n       nil\n     end\n   end\n+\n+  def list_tags(url, project_id, token)\n+    opts = {\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tags?private_token=#{token}\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.get(endpoint, opts)\n+\n+    if response.code == 200 || response.code == 201\n+      response.parsed_response\n+    else\n+      nil\n+    end\n+  end\n+\n+  def create_tag(url, project_id, token, tag_opts)\n+    tag_opts.merge!(private_token: token)\n+\n+    opts = {\n+        body: tag_opts.to_json,\n+        headers: {\"Content-Type\" => \"application/json\"},",
        "path": "app/models/network.rb",
        "position": 57,
        "original_position": 108,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352009",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352009"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352009"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352011",
        "pull_request_review_id": null,
        "id": 18352011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDEx",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352011",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352011"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352012",
        "pull_request_review_id": null,
        "id": 18352012,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDEy",
        "diff_hunk": "@@ -79,6 +79,80 @@ def project(url, api_opts, project_id)\n     end\n   end\n \n+  def commit_for_ref_or_sha(url, project_id, token, ref_name = 'master')\n+    commits = commits_for_ref(url, project_id, token, ref_name)\n+    ref_name = commits[0][\"id\"] if commits and commits.length > 0\n+    return commit_for_sha(url, project_id, token, ref_name)\n+  end\n+\n+  def commits_for_ref(url, project_id, token, ref_name = 'master')",
        "path": "app/models/network.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352012",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352012"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352012"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352013",
        "pull_request_review_id": null,
        "id": 18352013,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDEz",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]<br>Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352013",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352013"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352013"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352014",
        "pull_request_review_id": null,
        "id": 18352014,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDE0",
        "diff_hunk": "@@ -36,7 +38,8 @@ class Project < ActiveRecord::Base\n   #\n   # Validations\n   #\n-  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+  validates_presence_of :name, :scripts, :timeout, :token, :default_ref, :gitlab_url, :ssh_url_to_repo, :gitlab_id,",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [115/80]\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352014",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352014"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352014"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352015",
        "pull_request_review_id": null,
        "id": 18352015,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDE1",
        "diff_hunk": "@@ -20,13 +20,15 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :private_token, :build_method, :travis_environment",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-02T17:01:13Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352015",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352015"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352015"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352017",
        "pull_request_review_id": null,
        "id": 18352017,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDE3",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',",
        "path": "app/models/project.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352017",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352017"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352017"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352018",
        "pull_request_review_id": null,
        "id": 18352018,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDE4",
        "diff_hunk": "@@ -69,6 +72,9 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352018",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352018"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352018"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352019",
        "pull_request_review_id": null,
        "id": 18352019,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDE5",
        "diff_hunk": "@@ -34,6 +34,14 @@ def display_name\n     description\n   end\n \n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352019",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352019"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352019"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352020",
        "pull_request_review_id": null,
        "id": 18352020,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDIw",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`end` at 38, 6 is not aligned with `additional_env_variables.shellsplit.each do |env|` at 33, 4\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352020",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352020"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352020"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352022",
        "pull_request_review_id": null,
        "id": 18352022,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDIy",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'\n+        build.language = 'shell'\n+        build.build_attributes = build_attributes\n+        build.matrix_attributes = []\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)\n+      new_build = prepare_from_build(project, params)\n+    else\n+      new_build = prepare_from_hash(project, params)\n+    end\n+    new_build\n+  end\n+\n+  def prepare_from_build(project, build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 86,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `project`. If it's necessary, use `_` or `_project` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352022",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352022"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352022"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352023",
        "pull_request_review_id": null,
        "id": 18352023,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDIz",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [81/80]<br>Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352023",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352023"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352023"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352024",
        "pull_request_review_id": null,
        "id": 18352024,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI0",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [105/80]\n",
        "created_at": "2014-10-02T17:01:14Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352024",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352024"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352024"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352025",
        "pull_request_review_id": null,
        "id": 18352025,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI1",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [127/80]\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352025",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352025"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352025"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352026",
        "pull_request_review_id": null,
        "id": 18352026,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI2",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 49,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [150/80]\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352026",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352026"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352026"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352027",
        "pull_request_review_id": null,
        "id": 18352027,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI3",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'\n+        build.language = 'shell'\n+        build.build_attributes = build_attributes\n+        build.matrix_attributes = []\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 71,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352027",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352027"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352027"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352028",
        "pull_request_review_id": null,
        "id": 18352028,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI4",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352028",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352028"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352028"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352029",
        "pull_request_review_id": null,
        "id": 18352029,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDI5",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'\n+        build.language = 'shell'\n+        build.build_attributes = build_attributes\n+        build.matrix_attributes = []\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'\n+  end\n+\n+  private\n+\n+  def prepare_new_build(project, params)\n+    if params.kind_of?(Build)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 78,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer `Object#is_a?` over `Object#kind_of?`.\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352029",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352029"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352029"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352030",
        "pull_request_review_id": null,
        "id": 18352030,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDMw",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T17:01:15Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352030",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352030"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352030"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352032",
        "pull_request_review_id": null,
        "id": 18352032,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDMy",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside square brackets detected.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352032",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352032"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352032"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352033",
        "pull_request_review_id": null,
        "id": 18352033,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDMz",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352033",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352033"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352033"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352034",
        "pull_request_review_id": null,
        "id": 18352034,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDM0",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352034",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352034"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352034"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352035",
        "pull_request_review_id": null,
        "id": 18352035,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDM1",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352035",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352035"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352035"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352036",
        "pull_request_review_id": null,
        "id": 18352036,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDM2",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352036",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352036"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352036"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352037",
        "pull_request_review_id": null,
        "id": 18352037,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDM3",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:16Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352037",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352037"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352037"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352038",
        "pull_request_review_id": null,
        "id": 18352038,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDM4",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352038",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352038"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352038"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352040",
        "pull_request_review_id": null,
        "id": 18352040,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQw",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352040",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352040"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352040"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352041",
        "pull_request_review_id": null,
        "id": 18352041,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQx",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 40,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352041",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352041"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352041"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352042",
        "pull_request_review_id": null,
        "id": 18352042,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQy",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 50,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352042",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352042"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352042"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352043",
        "pull_request_review_id": null,
        "id": 18352043,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQz",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 51,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:17Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352043",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352043"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352043"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352045",
        "pull_request_review_id": null,
        "id": 18352045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQ1",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352045",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352045"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352046",
        "pull_request_review_id": null,
        "id": 18352046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQ2",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'\n+        build.language = 'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 62,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352046",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352046"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352047",
        "pull_request_review_id": null,
        "id": 18352047,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQ3",
        "diff_hunk": "@@ -1,8 +1,99 @@\n+require 'travis/build'\n+\n class CreateBuildService\n-  def execute(project, params)\n-    before_sha = params[:before]\n-    sha = params[:after]\n-    ref = params[:ref]\n+  def create_build_from_tag(project, name, commit)\n+    return nil unless name.match(/^v/)\n+\n+    is_deploy = name.match(/-test$/) ? true : false\n+\n+    attributes = Array.new\n+    attributes << {name: 'DEPLOY_BUILD', value: is_deploy, public: true}\n+    attributes << {name: 'VERSION_STRING', value: name, public: true}\n+    attributes << {name: 'VERSION_NOTES', value: commit[:message], public: false}\n+\n+    data = {\n+        after: commit[:id],\n+        before: '0000000',\n+        ref: name,\n+        commits: [ commit ]\n+    }\n+\n+    CreateBuildService.new.execute(project, data, attributes, nil, is_deploy)\n+  end\n+\n+  def execute(project, params, build_attributes = nil, additional_env_variables = nil, is_deploy = false)\n+    build = prepare_new_build(project, params)\n+    build.project = project\n+    build.build_method = project.build_method\n+    build.is_deploy = is_deploy\n+\n+    build_attributes ||= Array.new\n+    additional_env_variables ||= project.travis_environment\n+\n+    additional_env_variables.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+    case project.build_method\n+      when 'travis'\n+        build_config_params = LoadBuildConfigFileService.new.load(project, build.ref, build.sha, build.build_method, is_deploy)\n+        unless build_config_params.nil?\n+          first_build = nil\n+          GenerateBuildsByConfigService.new.builds(build_config_params, build, build_attributes) do |new_build, new_attributes, new_matrix_attributes|\n+            new_build.os = new_attributes['config']['os']\n+            new_build.language = new_attributes['config']['language']\n+            new_build.build_attributes = new_attributes\n+            new_build.matrix_attributes = new_matrix_attributes\n+            new_build.save\n+            first_build = new_build unless first_build\n+          end\n+          return first_build\n+        end\n+        nil\n+      else\n+        build.os = 'linux'\n+        build.language = 'shell'\n+        build.build_attributes = build_attributes\n+        build.matrix_attributes = []\n+        build.save\n+        build\n+    end\n+  end\n+\n+  def detect_build_method(project)\n+    return 'travis' if LoadBuildConfigFileService.new.load(project, 'HEAD', 'HEAD', 'travis', false)\n+    'shell'",
        "path": "app/services/create_build_service.rb",
        "position": null,
        "original_position": 72,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352047",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352047"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352047"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352048",
        "pull_request_review_id": null,
        "id": 18352048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDQ4",
        "diff_hunk": "@@ -21,4 +22,17 @@ def execute(current_user, params, project_route)\n \n     @project\n   end\n+\n+  def update(current_user, project, project_url)",
        "path": "app/services/create_project_service.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `project_url`. If it's necessary, use `_` or `_project_url` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352048",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352048"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352051",
        "pull_request_review_id": null,
        "id": 18352051,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDUx",
        "diff_hunk": "@@ -21,4 +22,17 @@ def execute(current_user, params, project_route)\n \n     @project\n   end\n+\n+  def update(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_route.gsub(\":project_id\", @project.id.to_s)\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)",
        "path": "app/services/create_project_service.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352051",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352051"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352051"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352052",
        "pull_request_review_id": null,
        "id": 18352052,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDUy",
        "diff_hunk": "@@ -21,4 +22,17 @@ def execute(current_user, params, project_route)\n \n     @project\n   end\n+\n+  def update(current_user, project, project_url)\n+    opts = {\n+        token: project.token,",
        "path": "app/services/create_project_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.\n",
        "created_at": "2014-10-02T17:01:18Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352052",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352052"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352052"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352053",
        "pull_request_review_id": null,
        "id": 18352053,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDUz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352053",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352053"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352053"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352054",
        "pull_request_review_id": null,
        "id": 18352054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDU0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes\n+      matrix_build_data = eval(matrix_build_data.to_s)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 47,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352054",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352054"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352055",
        "pull_request_review_id": null,
        "id": 18352055,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDU1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Perceived complexity for builds is too high. [13/7]\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352055",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352055"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352055"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352056",
        "pull_request_review_id": null,
        "id": 18352056,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDU2",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Inconsistent indentation detected.\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352056",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352056"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352056"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352058",
        "pull_request_review_id": null,
        "id": 18352058,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDU4",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352058",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352058"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352058"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352059",
        "pull_request_review_id": null,
        "id": 18352059,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDU5",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:19Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352059",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352059"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352059"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352061",
        "pull_request_review_id": null,
        "id": 18352061,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDYx",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352061",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352061"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352061"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352062",
        "pull_request_review_id": null,
        "id": 18352062,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDYy",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352062",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352062"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352062"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352063",
        "pull_request_review_id": null,
        "id": 18352063,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDYz",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 38,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352063",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352063"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352063"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352064",
        "pull_request_review_id": null,
        "id": 18352064,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY0",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352064",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352064"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352064"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352065",
        "pull_request_review_id": null,
        "id": 18352065,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY1",
        "diff_hunk": "@@ -0,0 +1,52 @@\n+require 'travis/yaml'\n+require 'travis/yaml/nodes/language'\n+\n+class GenerateBuildsByConfigService\n+  attr_accessor :parameters, :params_for_combinations\n+  def builds(build_config_params, default_build, custom_attributes, &block)\n+    raise 'block must be specified' unless block_given?\n+``\n+\n+    @parameters = Travis::Yaml.parse(build_config_params)\n+\n+    if @parameters.branches\n+      if @parameters.branches.only\n+        return unless @parameters.branches.only.include? default_build.branch\n+      elsif @parameters.branches.except\n+        return if @parameters.branches.except.include? default_build.branch\n+      end\n+    end\n+\n+    Travis::Yaml.matrix(build_config_params).each do |matrix_entry|\n+      matrix_build_config = {}\n+      matrix_entry.mapping.each_key do |key|\n+        # call method to get matrix entry specialization for each mapped key\n+        # because Matrix::Entry redefines method for modified keys\n+        matrix_build_config[key] = matrix_entry.method(key).call()\n+      end\n+\n+      if matrix_entry.respond_to? :matrix_attributes\n+        matrix_env = matrix_entry.matrix_attributes[:env]\n+        matrix_attributes = matrix_entry.matrix_attributes\n+      else\n+        matrix_env = @parameters.env.matrix if @parameters.env\n+        matrix_attributes = nil\n+      end\n+\n+      # workaround for broken matrix_entry.global\n+      inherited_env = @parameters.env.global if @parameters.env\n+      matrix_build_config['env'] = [*matrix_env, *inherited_env].compact\n+\n+      # use eval to convert back to simple represtentation\n+      matrix_attributes = eval(matrix_attributes.to_s) if matrix_attributes\n+\n+      # make it as data\n+      matrix_build_data = {}\n+      matrix_build_data['config'] = matrix_build_config\n+      matrix_build_data['env_vars'] = custom_attributes",
        "path": "app/services/generate_builds_by_config_service.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352065",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352065"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352065"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352066",
        "pull_request_review_id": null,
        "id": 18352066,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY2",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `ref_name`. If it's necessary, use `_` or `_ref_name` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352066",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352066"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352066"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352067",
        "pull_request_review_id": null,
        "id": 18352067,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:20Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352067",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352067"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352067"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352068",
        "pull_request_review_id": null,
        "id": 18352068,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY4",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [101/80]\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352068",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352068"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352068"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352069",
        "pull_request_review_id": null,
        "id": 18352069,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDY5",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 36,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352069",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352069"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352069"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352070",
        "pull_request_review_id": null,
        "id": 18352070,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDcw",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)\n+    case build_method\n+      when 'travis'",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352070",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352070"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352070"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352071",
        "pull_request_review_id": null,
        "id": 18352071,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDcx",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Explicit non-nil checks are usually redundant.\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352071",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352071"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352071"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352072",
        "pull_request_review_id": null,
        "id": 18352072,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDcy",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352072",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352072"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352072"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352073",
        "pull_request_review_id": null,
        "id": 18352073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDcz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:21Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352073",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352073"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352074",
        "pull_request_review_id": null,
        "id": 18352074,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDc0",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+class LoadBuildConfigFileService\n+  def load(project, ref, sha, build_method, is_deploy = false)\n+    content = file_content(project, ref, sha, build_method, is_deploy)\n+    return YAML.load(content) unless content.nil?\n+    nil\n+  end\n+\n+  private\n+\n+  def cache_key(project, ref, sha)\n+    \"#{project.id}:#{project.gitlab_id}:#{ref}:#{sha}\"\n+  end\n+\n+  def file_content(project, ref_name, sha, build_method, is_deploy)\n+    config_file = file(project, sha, build_method, is_deploy)\n+    if config_file != nil\n+      return network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, config_file['name'])\n+    end\n+    nil\n+  end\n+\n+  def file(project, sha, build_method, is_deploy)\n+    files = network.list_repository_tree(url(project), project.gitlab_id, project.private_token, sha)\n+    case build_method\n+      when 'travis'\n+        config_file = get_file(files, '.release.yml') if is_deploy\n+        config_file = get_file(files, '.travis.yml') unless config_file\n+        config_file\n+      else\n+        nil\n+    end\n+  end\n+\n+  def get_file(files, file_name)\n+    files = files.select do |file|\n+      file['type'] == 'blob' and file['name'] == file_name\n+    end\n+    files.first unless files.empty?\n+  end\n+\n+  def url(project)\n+    project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/load_build_config_file_service.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352074",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352074"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352074"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352076",
        "pull_request_review_id": null,
        "id": 18352076,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDc2",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352076",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352076"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352076"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352077",
        "pull_request_review_id": null,
        "id": 18352077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDc3",
        "diff_hunk": "@@ -40,6 +40,11 @@ def build_gitlab_ci_url\n Settings.gitlab_ci['all_broken_builds'] = true if Settings.gitlab_ci['all_broken_builds'].nil?\n Settings.gitlab_ci['add_committer']     = false if Settings.gitlab_ci['add_committer'].nil?\n Settings.gitlab_ci['url']                 ||= Settings.send(:build_gitlab_ci_url)\n+begin\n+  Settings['travis_build']        ||= Settings.travis_build\n+rescue\n+  Settings['travis_build']        ||= {}",
        "path": "config/initializers/1_settings.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352077",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352077"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352078",
        "pull_request_review_id": null,
        "id": 18352078,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDc4",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352078",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352078"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352078"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352079",
        "pull_request_review_id": null,
        "id": 18352079,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDc5",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352079",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352079"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352079"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352080",
        "pull_request_review_id": null,
        "id": 18352080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDgw",
        "diff_hunk": "@@ -0,0 +1,11 @@\n+class AddTravisSupport < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :type, :string, default: 'shell'\n+    add_column :projects, :travis_environment, :string\n+\n+    add_column :builds, :type, :string, default: 'shell'\n+    add_column :builds, :language, :string, default: 'shell'",
        "path": "db/migrate/20140811133627_add_travis_support.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352080",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352080"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352081",
        "pull_request_review_id": null,
        "id": 18352081,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDgx",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeOs < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :os, :string, default: 'shell'",
        "path": "db/migrate/20140811134625_change_os.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:22Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352081",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352081"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352081"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352082",
        "pull_request_review_id": null,
        "id": 18352082,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDgy",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class ChangeTravisEnvironment < ActiveRecord::Migration\n+  def change\n+    change_column :projects, :travis_environment, :text, :limit => 65536",
        "path": "db/migrate/20140813093719_change_travis_environment.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352082",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352082"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352082"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352084",
        "pull_request_review_id": null,
        "id": 18352084,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDg0",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352084",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352084"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352084"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352085",
        "pull_request_review_id": null,
        "id": 18352085,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDg1",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+class ChangeBuildAttributes < ActiveRecord::Migration\n+  def change\n+    change_column :builds, :build_attributes, :text, :limit => 65536\n+    change_column :builds, :matrix_attributes, :text, :limit => 65536",
        "path": "db/migrate/20140813093729_change_build_attributes.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352085",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352085"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352085"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352086",
        "pull_request_review_id": null,
        "id": 18352086,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDg2",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 11,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [94/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352086",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352086"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352086"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352088",
        "pull_request_review_id": null,
        "id": 18352088,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDg4",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352088",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352088"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352088"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352089",
        "pull_request_review_id": null,
        "id": 18352089,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDg5",
        "diff_hunk": "@@ -80,7 +93,17 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        ref = params[:data][:ref]\n+        if ref && ref.include?('refs/tags/')\n+          tag = ref.scan(/tags\\/(.*)$/).flatten[0]\n+        end\n+\n+        if tag\n+          build = CreateBuildService.new.create_build_from_tag(project, tag, params[:data])",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [91/80]\n",
        "created_at": "2014-10-02T17:01:23Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352089",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352089"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352089"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352090",
        "pull_request_review_id": null,
        "id": 18352090,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDkw",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?\n+          builds = builds.where(language: @params['language']) unless @params['language'].nil?\n+          builds = builds.where.not(project_id: current_runner.current_running_projects) if @params['allow_only_one']\n           build =  builds.first_pending\n \n           not_found! and return unless build\n \n-          build.runner_id = current_runner.id\n-          build.save!\n-          build.run!\n-          present build, with: Entities::Build\n+          begin\n+            build.commands\n+            build.runner_id = current_runner.id\n+            build.save!\n+            build.run!\n+            present build, with: Entities::Build\n+          rescue => e\n+            # write trace output in case of present failure\n+            build.trace = e.to_s\n+            build.drop\n+            not_found! and return",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 31,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `&&` instead of `and`.\n",
        "created_at": "2014-10-02T17:01:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352090",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352090"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352090"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352092",
        "pull_request_review_id": null,
        "id": 18352092,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDky",
        "diff_hunk": "@@ -1,3 +1,5 @@\n+require 'shellwords'",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352092",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352092"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352092"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352093",
        "pull_request_review_id": null,
        "id": 18352093,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDkz",
        "diff_hunk": "@@ -16,14 +18,25 @@ class Builds < Grape::API\n         ActiveRecord::Base.transaction do\n           builds = Build.all\n           builds = builds.where(project_id: current_runner.projects) unless current_runner.shared?\n+          builds = builds.where(os: @params['os']) unless @params['os'].nil?",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352093",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352093"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352093"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352094",
        "pull_request_review_id": null,
        "id": 18352094,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzUyMDk0",
        "diff_hunk": "@@ -80,7 +93,17 @@ class Builds < Grape::API\n         required_attributes! [:project_id, :data, :project_token]\n         project = Project.find(params[:project_id])\n         authenticate_project_token!(project)\n-        build = CreateBuildService.new.execute(project, params[:data])\n+\n+        ref = params[:data][:ref]\n+        if ref && ref.include?('refs/tags/')",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 43,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "d2994f0f2b1f7878e146d7a32fdd1f01481ebc3c",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-02T17:01:24Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352094",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/18352094"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r18352094"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595304",
        "pull_request_review_id": null,
        "id": 19595304,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA0",
        "diff_hunk": "@@ -1,7 +1,50 @@\n class Admin::BuildsController < Admin::ApplicationController\n   before_filter :authenticate_user!\n+  before_filter :statistics, except: [:cancel]\n+\n+  layout 'admin_builds', except: []\n \n   def index\n     @builds = Build.order('created_at DESC').page(params[:page]).per(30)\n   end\n+\n+  def statistics\n+    @total_count = Build.all.count\n+    @pending_count = Build.pending.count\n+    @running_count = Build.running.count\n+    @building_count = @pending_count + @running_count\n+    @finished_count = Build.success.count + Build.failed.count\n+  end\n+\n+  def building\n+    @builds = Build.order('created_at ASC')\n+    @builds = @builds.where(status: [:pending, :running])\n+    @builds = @builds.page(params[:page]).per(30)\n+  end\n+\n+  def finished\n+    @builds = Build.order('created_at DESC')\n+    @builds = @builds.where(status: [:success, :failed])\n+    @builds = @builds.page(params[:page]).per(30)\n+  end\n+\n+  def charts\n+    @charts = {}\n+    @charts[:build_times] = Charts::GlobalBuildTime.new()",
        "path": "app/controllers/admin/builds_controller.rb",
        "position": 33,
        "original_position": 33,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-30T09:59:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595304",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595304"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595304"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595305",
        "pull_request_review_id": null,
        "id": 19595305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA1",
        "diff_hunk": "@@ -1,7 +1,50 @@\n class Admin::BuildsController < Admin::ApplicationController\n   before_filter :authenticate_user!\n+  before_filter :statistics, except: [:cancel]\n+\n+  layout 'admin_builds', except: []\n \n   def index\n     @builds = Build.order('created_at DESC').page(params[:page]).per(30)\n   end\n+\n+  def statistics\n+    @total_count = Build.all.count\n+    @pending_count = Build.pending.count\n+    @running_count = Build.running.count\n+    @building_count = @pending_count + @running_count\n+    @finished_count = Build.success.count + Build.failed.count\n+  end\n+\n+  def building\n+    @builds = Build.order('created_at ASC')\n+    @builds = @builds.where(status: [:pending, :running])\n+    @builds = @builds.page(params[:page]).per(30)\n+  end\n+\n+  def finished\n+    @builds = Build.order('created_at DESC')\n+    @builds = @builds.where(status: [:success, :failed])\n+    @builds = @builds.page(params[:page]).per(30)\n+  end\n+\n+  def charts\n+    @charts = {}\n+    @charts[:build_times] = Charts::GlobalBuildTime.new()\n+    @charts[:wait_times] = Charts::GlobalWaitTime.new()",
        "path": "app/controllers/admin/builds_controller.rb",
        "position": 34,
        "original_position": 34,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-10-30T09:59:25Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595305",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595305"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595306",
        "pull_request_review_id": null,
        "id": 19595306,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA2",
        "diff_hunk": "@@ -1,7 +1,50 @@\n class Admin::BuildsController < Admin::ApplicationController\n   before_filter :authenticate_user!\n+  before_filter :statistics, except: [:cancel]\n+\n+  layout 'admin_builds', except: []",
        "path": "app/controllers/admin/builds_controller.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595306",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595306"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595306"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595307",
        "pull_request_review_id": null,
        "id": 19595307,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA3",
        "diff_hunk": "@@ -1,7 +1,50 @@\n class Admin::BuildsController < Admin::ApplicationController\n   before_filter :authenticate_user!\n+  before_filter :statistics, except: [:cancel]\n+\n+  layout 'admin_builds', except: []\n \n   def index\n     @builds = Build.order('created_at DESC').page(params[:page]).per(30)\n   end\n+\n+  def statistics\n+    @total_count = Build.all.count\n+    @pending_count = Build.pending.count\n+    @running_count = Build.running.count\n+    @building_count = @pending_count + @running_count\n+    @finished_count = Build.success.count + Build.failed.count\n+  end\n+\n+  def building\n+    @builds = Build.order('created_at ASC')",
        "path": "app/controllers/admin/builds_controller.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595307",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595307"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595307"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595308",
        "pull_request_review_id": null,
        "id": 19595308,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA4",
        "diff_hunk": "@@ -1,7 +1,50 @@\n class Admin::BuildsController < Admin::ApplicationController\n   before_filter :authenticate_user!\n+  before_filter :statistics, except: [:cancel]\n+\n+  layout 'admin_builds', except: []\n \n   def index\n     @builds = Build.order('created_at DESC').page(params[:page]).per(30)\n   end\n+\n+  def statistics\n+    @total_count = Build.all.count\n+    @pending_count = Build.pending.count\n+    @running_count = Build.running.count\n+    @building_count = @pending_count + @running_count\n+    @finished_count = Build.success.count + Build.failed.count\n+  end\n+\n+  def building\n+    @builds = Build.order('created_at ASC')\n+    @builds = @builds.where(status: [:pending, :running])\n+    @builds = @builds.page(params[:page]).per(30)\n+  end\n+\n+  def finished\n+    @builds = Build.order('created_at DESC')",
        "path": "app/controllers/admin/builds_controller.rb",
        "position": 26,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595308",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595308"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595308"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595309",
        "pull_request_review_id": null,
        "id": 19595309,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzA5",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+class BuildGroupsController < ApplicationController\n+  before_filter :authenticate_user!, except: [:status]\n+  before_filter :project\n+  before_filter :authorize_access_project!, except: [:status]\n+  before_filter :build_group, except: [:status, :show]\n+\n+  def show\n+    if params[:id] =~ /\\A\\d+\\Z/\n+      @build_group = build_group\n+    else\n+      # try to find build by sha\n+      build_group = build_group_by_sha\n+\n+      if build\n+        # Redirect from sha to build with id\n+        redirect_to project_build_group_path(build_group.project, build_group)\n+        return\n+      end\n+    end\n+\n+    raise ActiveRecord::RecordNotFound unless @build_group\n+\n+    @builds = @build_group.builds\n+  end\n+\n+  def cancel\n+    build_group.cancel\n+\n+    redirect_to project_build_group_path(@project, build_group)\n+  end\n+\n+  def retry\n+    new_build_group = CreateBuildService.new.execute(project, build_group.push_data)\n+    unless new_build_group\n+      redirect_to project_build_group_path(project, build_group), alert: 'Cannot retry build'",
        "path": "app/controllers/build_groups_controller.rb",
        "position": 35,
        "original_position": 35,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595309",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595309"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595309"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595310",
        "pull_request_review_id": null,
        "id": 19595310,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzEw",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+class BuildGroupsController < ApplicationController\n+  before_filter :authenticate_user!, except: [:status]\n+  before_filter :project\n+  before_filter :authorize_access_project!, except: [:status]\n+  before_filter :build_group, except: [:status, :show]\n+\n+  def show\n+    if params[:id] =~ /\\A\\d+\\Z/\n+      @build_group = build_group\n+    else\n+      # try to find build by sha\n+      build_group = build_group_by_sha\n+\n+      if build\n+        # Redirect from sha to build with id\n+        redirect_to project_build_group_path(build_group.project, build_group)\n+        return\n+      end\n+    end\n+\n+    raise ActiveRecord::RecordNotFound unless @build_group\n+\n+    @builds = @build_group.builds\n+  end\n+\n+  def cancel\n+    build_group.cancel\n+\n+    redirect_to project_build_group_path(@project, build_group)\n+  end\n+\n+  def retry\n+    new_build_group = CreateBuildService.new.execute(project, build_group.push_data)\n+    unless new_build_group\n+      redirect_to project_build_group_path(project, build_group), alert: 'Cannot retry build'\n+      return\n+    end\n+\n+    redirect_to project_build_group_path(project, new_build_group)\n+  end\n+\n+  def status\n+    @build_group = build_group_by_sha\n+\n+    render json: @build_group.to_json(only: [:status, :id, :sha])\n+  end\n+\n+  protected\n+\n+  def project\n+    @project = Project.find(params[:project_id])\n+  end\n+\n+  def build_group\n+    @build_group ||= project.build_groups.find_by(id: params[:id])\n+  end\n+\n+  def build_group_by_sha\n+    project.build_groups.where(sha: params[:id]).last\n+  end\n+end",
        "path": "app/controllers/build_groups_controller.rb",
        "position": 61,
        "original_position": 61,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Final newline missing.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595310",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595310"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595310"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595311",
        "pull_request_review_id": null,
        "id": 19595311,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzEx",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": 68,
        "original_position": 68,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595311",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595311"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595311"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595312",
        "pull_request_review_id": null,
        "id": 19595312,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzEy",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'\n+        return\n+    end\n+\n+    after = commit[:id]\n+    before = commit[:parent_ids].first if commit[:parent_ids]\n+    before ||= '0000000'\n+    ref = \"refs/#{@ref_type}/#{@ref}\"\n+\n+    data = {\n+        after: after,\n+        before: before,\n+        ref: ref,\n+        ref_message: @ref_message,\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    begin\n+      @build_group = CreateBuildService.new.execute(project, data)\n+\n+      if @build_group\n+        if @build_group.one?\n+          redirect_to project_build_path(project, @build_group.builds.first)\n+        else\n+          redirect_to project_build_group_path(project, @build_group)\n+        end\n+      else\n+        @alert = 'No build created.'\n+        render 'new'\n+      end\n+    rescue => e\n+      @alert = \"Cannot create build: #{e.to_s}\"",
        "path": "app/controllers/builds_controller.rb",
        "position": 114,
        "original_position": 114,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant use of `Object#to_s` in interpolation.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595312",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595312"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595312"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595313",
        "pull_request_review_id": null,
        "id": 19595313,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzEz",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {",
        "path": "app/controllers/builds_controller.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595313",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595313"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595313"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595314",
        "pull_request_review_id": null,
        "id": 19595314,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE0",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {",
        "path": "app/controllers/builds_controller.rb",
        "position": 18,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.\n",
        "created_at": "2014-10-30T09:59:26Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595314",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595314"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595314"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595315",
        "pull_request_review_id": null,
        "id": 19595315,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE1",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'",
        "path": "app/controllers/builds_controller.rb",
        "position": 48,
        "original_position": 48,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595315",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595315"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595315"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595316",
        "pull_request_review_id": null,
        "id": 19595316,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE2",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'",
        "path": "app/controllers/builds_controller.rb",
        "position": 58,
        "original_position": 58,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indent `when` as deep as `case`.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595316",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595316"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595316"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595317",
        "pull_request_review_id": null,
        "id": 19595317,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE3",
        "diff_hunk": "@@ -2,7 +2,9 @@ class BuildsController < ApplicationController\n   before_filter :authenticate_user!, except: [:status]\n   before_filter :project\n   before_filter :authorize_access_project!, except: [:status]\n-  before_filter :build, except: [:status, :show]\n+  before_filter :build, except: [:status, :show, :tag, :create]\n+\n+  layout 'project', only: [:new, :create]",
        "path": "app/controllers/builds_controller.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595317",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595317"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595317"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595318",
        "pull_request_review_id": null,
        "id": 19595318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE4",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'",
        "path": "app/controllers/builds_controller.rb",
        "position": 27,
        "original_position": 27,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595318",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595318"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595319",
        "pull_request_review_id": null,
        "id": 19595319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzE5",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'",
        "path": "app/controllers/builds_controller.rb",
        "position": 28,
        "original_position": 28,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595319",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595319"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595320",
        "pull_request_review_id": null,
        "id": 19595320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzIw",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''",
        "path": "app/controllers/builds_controller.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595320",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595320"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595321",
        "pull_request_review_id": null,
        "id": 19595321,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzIx",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'",
        "path": "app/controllers/builds_controller.rb",
        "position": 51,
        "original_position": 51,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595321",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595321"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595321"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595322",
        "pull_request_review_id": null,
        "id": 19595322,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzIy",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'",
        "path": "app/controllers/builds_controller.rb",
        "position": 52,
        "original_position": 52,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595322",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595322"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595322"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595323",
        "pull_request_review_id": null,
        "id": 19595323,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzIz",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'",
        "path": "app/controllers/builds_controller.rb",
        "position": 69,
        "original_position": 69,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:27Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595323",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595323"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595323"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595324",
        "pull_request_review_id": null,
        "id": 19595324,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzI0",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'",
        "path": "app/controllers/builds_controller.rb",
        "position": 80,
        "original_position": 80,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595324",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595324"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595324"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595325",
        "pull_request_review_id": null,
        "id": 19595325,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzI1",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'",
        "path": "app/controllers/builds_controller.rb",
        "position": 81,
        "original_position": 81,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595325",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595325"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595325"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595326",
        "pull_request_review_id": null,
        "id": 19595326,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzI2",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'\n+        return\n+    end\n+\n+    after = commit[:id]\n+    before = commit[:parent_ids].first if commit[:parent_ids]\n+    before ||= '0000000'",
        "path": "app/controllers/builds_controller.rb",
        "position": 87,
        "original_position": 87,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595326",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595326"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595326"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595327",
        "pull_request_review_id": null,
        "id": 19595327,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzI3",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'\n+        return\n+    end\n+\n+    after = commit[:id]\n+    before = commit[:parent_ids].first if commit[:parent_ids]\n+    before ||= '0000000'\n+    ref = \"refs/#{@ref_type}/#{@ref}\"\n+\n+    data = {\n+        after: after,\n+        before: before,\n+        ref: ref,\n+        ref_message: @ref_message,\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    begin\n+      @build_group = CreateBuildService.new.execute(project, data)\n+\n+      if @build_group\n+        if @build_group.one?\n+          redirect_to project_build_path(project, @build_group.builds.first)\n+        else\n+          redirect_to project_build_group_path(project, @build_group)\n+        end\n+      else\n+        @alert = 'No build created.'",
        "path": "app/controllers/builds_controller.rb",
        "position": 110,
        "original_position": 110,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595327",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595327"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595327"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595328",
        "pull_request_review_id": null,
        "id": 19595328,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzI4",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'\n+        return\n+    end\n+\n+    after = commit[:id]\n+    before = commit[:parent_ids].first if commit[:parent_ids]\n+    before ||= '0000000'\n+    ref = \"refs/#{@ref_type}/#{@ref}\"\n+\n+    data = {\n+        after: after,\n+        before: before,\n+        ref: ref,\n+        ref_message: @ref_message,\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    begin\n+      @build_group = CreateBuildService.new.execute(project, data)\n+\n+      if @build_group\n+        if @build_group.one?\n+          redirect_to project_build_path(project, @build_group.builds.first)\n+        else\n+          redirect_to project_build_group_path(project, @build_group)\n+        end\n+      else\n+        @alert = 'No build created.'\n+        render 'new'",
        "path": "app/controllers/builds_controller.rb",
        "position": 111,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595328",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595328"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595328"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595330",
        "pull_request_review_id": null,
        "id": 19595330,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzMw",
        "diff_hunk": "@@ -28,15 +30,133 @@ def show\n       format.json {\n         render json: @build.to_json(methods: :trace_html)\n       }\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.sh {\n+        render text: @build.commands\n+      }\n+    end\n+  end\n+\n+  def new\n+    @build = Build.new\n+    @ref = @project.tracked_refs.first\n+    @ref_type = 'tags'\n+    @tag_name = '1.0'\n+    @tag_message = ''\n+    @alert = nil\n+\n+    # Fill with last tag message\n+    last_tag = @project.build_groups.tags.last\n+    @tag_name = last_tag.ref if last_tag\n+    @tag_message = last_tag.ref_or_commit_message if last_tag\n+  end\n+\n+  def create\n+    build = params[:build]\n+    @ref = build[:ref]\n+    @ref_type = build[:ref_type]\n+    @ref_message = nil\n+    @tag_name = build[:tag_name]\n+    @tag_message = build[:tag_message]\n+    @alert = nil\n+\n+    case @ref_type\n+      when 'heads'\n+        commit = Network.new.commit_for_ref_or_sha(current_user.url, project.gitlab_id, current_user.private_token, @ref)\n+        unless commit\n+          @alert = 'Cannot create build. Invalid ref name.'\n+          render 'new'\n+          return\n+        end\n+\n+        commit = commit.deep_symbolize_keys\n+\n+      when 'tags'\n+        tag_opts = {\n+            tag_name: @tag_name,\n+            message: @tag_message,\n+            ref: @ref\n+        }\n+\n+        begin\n+          created_tag = Network.new.create_tag(current_user.url, project.gitlab_id, current_user.private_token, tag_opts)\n+        rescue => e\n+          @alert = \"Cannot create tagged build: #{e.to_s}\"\n+          render 'new'\n+          NewRelic::Agent.notice_error(e)\n+          return\n+        end\n+\n+        created_tag = created_tag.deep_symbolize_keys\n+        commit = created_tag[:commit]\n+        @ref = @tag_name\n+        @ref_message = @tag_message\n+\n+      else\n+        @alert = 'Invalid option selected'\n+        render 'new'\n+        return\n+    end\n+\n+    after = commit[:id]\n+    before = commit[:parent_ids].first if commit[:parent_ids]\n+    before ||= '0000000'\n+    ref = \"refs/#{@ref_type}/#{@ref}\"\n+\n+    data = {\n+        after: after,\n+        before: before,\n+        ref: ref,\n+        ref_message: @ref_message,\n+        commits: [\n+            commit\n+        ]\n+    }\n+\n+    begin\n+      @build_group = CreateBuildService.new.execute(project, data)\n+\n+      if @build_group\n+        if @build_group.one?\n+          redirect_to project_build_path(project, @build_group.builds.first)\n+        else\n+          redirect_to project_build_group_path(project, @build_group)\n+        end\n+      else\n+        @alert = 'No build created.'\n+        render 'new'\n+      end\n+    rescue => e\n+      @alert = \"Cannot create build: #{e.to_s}\"\n+      render 'new'",
        "path": "app/controllers/builds_controller.rb",
        "position": 115,
        "original_position": 115,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595330",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595330"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595330"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595332",
        "pull_request_review_id": null,
        "id": 19595332,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzMy",
        "diff_hunk": "@@ -58,16 +77,19 @@ def edit\n   end\n \n   def update\n-    if project.update_attributes(params[:project])\n+    begin",
        "path": "app/controllers/projects_controller.rb",
        "position": 50,
        "original_position": 50,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `begin` block detected.\n",
        "created_at": "2014-10-30T09:59:28Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595332",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595332"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595332"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595333",
        "pull_request_review_id": null,
        "id": 19595333,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzMz",
        "diff_hunk": "@@ -36,9 +36,28 @@ def show\n \n     @ref = params[:ref]\n \n-    @builds = @project.builds\n-    @builds = @builds.where(ref: @ref) if @ref\n-    @builds = @builds.order('id DESC').page(params[:page]).per(20)\n+    # @builds = @project.builds\n+    # @builds = @builds.where(ref: @ref) if @ref\n+    # @builds = @builds.order('id DESC').page(params[:page]).per(20)\n+\n+    @build_groups = @project.build_groups\n+    @build_groups = @build_groups.where(ref: @ref) if @ref\n+    @build_groups = @build_groups.order('id DESC').page(params[:page]).per(20)",
        "path": "app/controllers/projects_controller.rb",
        "position": 26,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595333",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595333"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595333"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595334",
        "pull_request_review_id": null,
        "id": 19595334,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzM0",
        "diff_hunk": "@@ -36,9 +36,28 @@ def show\n \n     @ref = params[:ref]\n \n-    @builds = @project.builds\n-    @builds = @builds.where(ref: @ref) if @ref\n-    @builds = @builds.order('id DESC').page(params[:page]).per(20)\n+    # @builds = @project.builds\n+    # @builds = @builds.where(ref: @ref) if @ref\n+    # @builds = @builds.order('id DESC').page(params[:page]).per(20)\n+\n+    @build_groups = @project.build_groups\n+    @build_groups = @build_groups.where(ref: @ref) if @ref\n+    @build_groups = @build_groups.order('id DESC').page(params[:page]).per(20)\n+  end\n+\n+  def tags\n+    unless @project.public\n+      unless current_user\n+        redirect_to(new_user_sessions_path(return_to: request.fullpath)) and return\n+      end\n+\n+      unless current_user.can_access_project?(@project.gitlab_id)\n+        page_404 and return\n+      end\n+    end\n+\n+    @build_groups = @project.build_groups.tags\n+    @build_groups = @build_groups.order('id DESC').page(params[:page]).per(20)",
        "path": "app/controllers/projects_controller.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595334",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595334"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595334"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595335",
        "pull_request_review_id": null,
        "id": 19595335,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzM1",
        "diff_hunk": "@@ -82,6 +104,45 @@ def build\n     end\n   end\n \n+  def tag\n+    data = params.dup\n+\n+    # check if reg is tag\n+    ref = data[:ref]\n+    unless ref and ref.include?('refs/tags/')",
        "path": "app/controllers/projects_controller.rb",
        "position": 79,
        "original_position": 79,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595335",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595335"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595335"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595336",
        "pull_request_review_id": null,
        "id": 19595336,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzM2",
        "diff_hunk": "@@ -82,6 +104,45 @@ def build\n     end\n   end\n \n+  def tag\n+    data = params.dup\n+\n+    # check if reg is tag\n+    ref = data[:ref]\n+    unless ref and ref.include?('refs/tags/')\n+      head 400\n+      return\n+    end\n+    ref = ref.scan(/tags\\/(.*)$/).flatten[0]\n+\n+    gitlab_url = project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/controllers/projects_controller.rb",
        "position": 85,
        "original_position": 85,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595336",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595336"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595336"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595338",
        "pull_request_review_id": null,
        "id": 19595338,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzM4",
        "diff_hunk": "@@ -19,6 +19,16 @@ def build_status_alert_class build\n     end\n   end\n \n+  def build_group_status_alert_class build_group",
        "path": "app/helpers/projects_helper.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use def with parentheses when there are parameters.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595338",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595338"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595338"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595339",
        "pull_request_review_id": null,
        "id": 19595339,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzM5",
        "diff_hunk": "@@ -19,6 +19,16 @@ def build_status_alert_class build\n     end\n   end\n \n+  def build_group_status_alert_class build_group\n+    if build_group.success?\n+      'alert-success'",
        "path": "app/helpers/projects_helper.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595339",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595339"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595339"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595340",
        "pull_request_review_id": null,
        "id": 19595340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQw",
        "diff_hunk": "@@ -19,6 +19,16 @@ def build_status_alert_class build\n     end\n   end\n \n+  def build_group_status_alert_class build_group\n+    if build_group.success?\n+      'alert-success'\n+    elsif build_group.failed? || build_group.canceled?\n+      'alert-danger'",
        "path": "app/helpers/projects_helper.rb",
        "position": 8,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:29Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595340",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595340"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595341",
        "pull_request_review_id": null,
        "id": 19595341,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQx",
        "diff_hunk": "@@ -19,6 +19,16 @@ def build_status_alert_class build\n     end\n   end\n \n+  def build_group_status_alert_class build_group\n+    if build_group.success?\n+      'alert-success'\n+    elsif build_group.failed? || build_group.canceled?\n+      'alert-danger'\n+    else\n+      'alert-warning'",
        "path": "app/helpers/projects_helper.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595341",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595341"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595341"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595342",
        "pull_request_review_id": null,
        "id": 19595342,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQy",
        "diff_hunk": "@@ -18,28 +19,44 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'",
        "path": "app/models/build.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595342",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595342"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595342"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595343",
        "pull_request_review_id": null,
        "id": 19595343,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQz",
        "diff_hunk": "@@ -18,28 +19,44 @@\n #  runner_id   :integer\n #\n \n+require 'travis/build'\n+require 'shellwords'",
        "path": "app/models/build.rb",
        "position": 13,
        "original_position": 13,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595343",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595343"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595343"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595344",
        "pull_request_review_id": null,
        "id": 19595344,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQ0",
        "diff_hunk": "@@ -120,18 +151,40 @@ def ci_skip?\n     !!(git_commit_message =~ /(\\[ci skip\\])/)\n   end\n \n+  def head?\n+    ref_type == 'heads'",
        "path": "app/models/build.rb",
        "position": 116,
        "original_position": 116,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595344",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595344"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595344"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595345",
        "pull_request_review_id": null,
        "id": 19595345,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQ1",
        "diff_hunk": "@@ -120,18 +151,40 @@ def ci_skip?\n     !!(git_commit_message =~ /(\\[ci skip\\])/)\n   end\n \n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'",
        "path": "app/models/build.rb",
        "position": 120,
        "original_position": 120,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:30Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595345",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595345"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595345"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595347",
        "pull_request_review_id": null,
        "id": 19595347,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQ3",
        "diff_hunk": "@@ -179,6 +256,10 @@ def repo_url\n     end\n   end\n \n+  def repo_slug\n+    repo_url.split('/').last(2).join('/').gsub(/\\.git$/, '')",
        "path": "app/models/build.rb",
        "position": 198,
        "original_position": 198,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595347",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595347"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595347"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595348",
        "pull_request_review_id": null,
        "id": 19595348,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQ4",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/",
        "path": "app/models/build_group.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `self` detected.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595348",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595348"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595348"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595349",
        "pull_request_review_id": null,
        "id": 19595349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzQ5",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")",
        "path": "app/models/build_group.rb",
        "position": 21,
        "original_position": 21,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `self` detected.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595349",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595349"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595350",
        "pull_request_review_id": null,
        "id": 19595350,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzUw",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'",
        "path": "app/models/build_group.rb",
        "position": 55,
        "original_position": 55,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595350",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595350"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595350"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595351",
        "pull_request_review_id": null,
        "id": 19595351,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzUx",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'",
        "path": "app/models/build_group.rb",
        "position": 59,
        "original_position": 59,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595351",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595351"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595351"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595353",
        "pull_request_review_id": null,
        "id": 19595353,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzUz",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def pending?\n+    status == :pending\n+  end\n+\n+  def running?\n+    status == :running\n+  end\n+\n+  def success?\n+    status == :success\n+  end\n+\n+  def failed?\n+    status == :failed\n+  end\n+\n+  def canceled?\n+    status == :canceled\n+  end\n+\n+  def started?\n+    !pending? && started_at\n+  end\n+\n+  def active?\n+    running? || pending?\n+  end\n+\n+  def complete?\n+    success? || failed?\n+  end\n+\n+  def compare?\n+    gitlab? && before_sha\n+  end\n+\n+  def gitlab?\n+    project.gitlab?\n+  end\n+\n+  def ci_skip?\n+    !!(git_commit_message =~ /(\\[ci skip\\])/)\n+  end\n+\n+  def head?\n+    ref_type == 'heads'",
        "path": "app/models/build_group.rb",
        "position": 107,
        "original_position": 107,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:31Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595353",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595353"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595353"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595354",
        "pull_request_review_id": null,
        "id": 19595354,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzU0",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def pending?\n+    status == :pending\n+  end\n+\n+  def running?\n+    status == :running\n+  end\n+\n+  def success?\n+    status == :success\n+  end\n+\n+  def failed?\n+    status == :failed\n+  end\n+\n+  def canceled?\n+    status == :canceled\n+  end\n+\n+  def started?\n+    !pending? && started_at\n+  end\n+\n+  def active?\n+    running? || pending?\n+  end\n+\n+  def complete?\n+    success? || failed?\n+  end\n+\n+  def compare?\n+    gitlab? && before_sha\n+  end\n+\n+  def gitlab?\n+    project.gitlab?\n+  end\n+\n+  def ci_skip?\n+    !!(git_commit_message =~ /(\\[ci skip\\])/)\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'",
        "path": "app/models/build_group.rb",
        "position": 59,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595354",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595354"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595354"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595355",
        "pull_request_review_id": null,
        "id": 19595355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzU1",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def pending?\n+    status == :pending\n+  end\n+\n+  def running?\n+    status == :running\n+  end\n+\n+  def success?\n+    status == :success\n+  end\n+\n+  def failed?\n+    status == :failed\n+  end\n+\n+  def canceled?\n+    status == :canceled\n+  end\n+\n+  def started?\n+    !pending? && started_at\n+  end\n+\n+  def active?\n+    running? || pending?\n+  end\n+\n+  def complete?\n+    success? || failed?\n+  end\n+\n+  def compare?\n+    gitlab? && before_sha\n+  end\n+\n+  def gitlab?\n+    project.gitlab?\n+  end\n+\n+  def ci_skip?\n+    !!(git_commit_message =~ /(\\[ci skip\\])/)\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def git_author_name\n+    commit_data[:author][:name] if commit_data && commit_data[:author]\n+    commit_data[:author_name] if commit_data\n+  end\n+\n+  def git_author_email\n+    commit_data[:author][:email] if commit_data && commit_data[:author]\n+    commit_data[:author_email] if commit_data\n+  end\n+\n+  def git_commit_message\n+    commit_data[:message] if commit_data\n+  end\n+\n+  def ref_or_commit_message\n+    ref_message || git_commit_message\n+  end\n+\n+  def short_before_sha\n+    before_sha[0..8]\n+  end\n+\n+  def short_sha\n+    sha[0..8]\n+  end\n+\n+  def build_id\n+    project.build_groups.where(\"id <= ?\", id).count\n+  end\n+\n+  def commit_data\n+    push_data[:commits].each do |commit|\n+      return commit if commit[:id] == sha\n+    end\n+  rescue\n+    nil\n+  end\n+\n+  def timeout\n+    project.timeout\n+  end\n+\n+  def allow_git_fetch\n+    project.allow_git_fetch\n+  end\n+\n+  def project_name\n+    project.name\n+  end\n+\n+  def project_recipients\n+    recipients = project.email_recipients.split(' ')",
        "path": "app/models/build_group.rb",
        "position": 165,
        "original_position": 165,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595355",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595355"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595357",
        "pull_request_review_id": null,
        "id": 19595357,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzU3",
        "diff_hunk": "@@ -0,0 +1,199 @@\n+class BuildGroup < ActiveRecord::Base\n+  belongs_to :project\n+\n+  serialize :push_data\n+\n+  attr_accessible :project_id, :ref, :ref_type, :sha, :before_sha,\n+                  :started_at, :push_data, :ref_message\n+\n+  validates :before_sha, presence: true\n+  validates :sha, presence: true\n+  validates :ref, presence: true\n+  validates :ref_type, presence: true\n+\n+  has_many :builds, dependent: :destroy\n+\n+  scope :heads, ->() { where(ref_type: \"heads\") }\n+  scope :tags, ->() { where(ref_type: \"tags\") }\n+\n+  def valid_commit_sha\n+    if self.sha =~ /\\A00000000/\n+      self.errors.add(:sha, \" cant be 00000000 (branch removal)\")\n+    end\n+  end\n+\n+  def statuses\n+    Hash[builds.select(:status).distinct.map { |a| [a.status.to_sym, true] }]\n+  end\n+\n+  def status\n+    h = statuses\n+    if h[:running]\n+      :running\n+    elsif h[:pending]\n+      if h[:failed] || h[:success] || h[:canceled]\n+        :running\n+      else\n+        :pending\n+      end\n+    elsif h[:failed]\n+      :failed\n+    elsif h[:canceled]\n+      :canceled\n+    elsif h[:success]\n+      :success\n+    else\n+      :success\n+    end\n+  end\n+\n+  def one?\n+    builds.count == 1\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def pending?\n+    status == :pending\n+  end\n+\n+  def running?\n+    status == :running\n+  end\n+\n+  def success?\n+    status == :success\n+  end\n+\n+  def failed?\n+    status == :failed\n+  end\n+\n+  def canceled?\n+    status == :canceled\n+  end\n+\n+  def started?\n+    !pending? && started_at\n+  end\n+\n+  def active?\n+    running? || pending?\n+  end\n+\n+  def complete?\n+    success? || failed?\n+  end\n+\n+  def compare?\n+    gitlab? && before_sha\n+  end\n+\n+  def gitlab?\n+    project.gitlab?\n+  end\n+\n+  def ci_skip?\n+    !!(git_commit_message =~ /(\\[ci skip\\])/)\n+  end\n+\n+  def head?\n+    ref_type == 'heads'\n+  end\n+\n+  def tag?\n+    ref_type == 'tags'\n+  end\n+\n+  def git_author_name\n+    commit_data[:author][:name] if commit_data && commit_data[:author]\n+    commit_data[:author_name] if commit_data\n+  end\n+\n+  def git_author_email\n+    commit_data[:author][:email] if commit_data && commit_data[:author]\n+    commit_data[:author_email] if commit_data\n+  end\n+\n+  def git_commit_message\n+    commit_data[:message] if commit_data\n+  end\n+\n+  def ref_or_commit_message\n+    ref_message || git_commit_message\n+  end\n+\n+  def short_before_sha\n+    before_sha[0..8]\n+  end\n+\n+  def short_sha\n+    sha[0..8]\n+  end\n+\n+  def build_id\n+    project.build_groups.where(\"id <= ?\", id).count\n+  end\n+\n+  def commit_data\n+    push_data[:commits].each do |commit|\n+      return commit if commit[:id] == sha\n+    end\n+  rescue\n+    nil\n+  end\n+\n+  def timeout\n+    project.timeout\n+  end\n+\n+  def allow_git_fetch\n+    project.allow_git_fetch\n+  end\n+\n+  def project_name\n+    project.name\n+  end\n+\n+  def project_recipients\n+    recipients = project.email_recipients.split(' ')\n+    recipients << git_author_email if project.email_add_committer?\n+    recipients.uniq\n+  end\n+\n+  def duration\n+    if started_at && finished_at\n+      finished_at - started_at\n+    elsif started_at\n+      Time.now - started_at\n+    end\n+  end\n+\n+  def started_at\n+    builds.where.not(started_at: nil).minimum(:started_at)\n+  end\n+\n+  def finished_at\n+    builds.where.not(finished_at: nil).maximum(:finished_at)\n+  end\n+\n+  def wait\n+    if started_at\n+      started_at - created_at\n+    else\n+      Time.now - created_at\n+    end\n+  end\n+\n+  def cancel\n+    builds.each do |other_build|\n+      other_build.cancel\n+    end\n+  end\n+end",
        "path": "app/models/build_group.rb",
        "position": 199,
        "original_position": 199,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Final newline missing.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595357",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595357"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595357"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595358",
        "pull_request_review_id": null,
        "id": 19595358,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzU4",
        "diff_hunk": "@@ -112,4 +152,95 @@ def disable_ci(url, project_id, token)\n       nil\n     end\n   end\n+\n+  def create_tag(url, project_id, token, tag_opts)\n+    tag_opts.merge!(private_token: token)\n+\n+    opts = {\n+        body: tag_opts.to_json,\n+        headers: {\"Content-Type\" => \"application/json\"},\n+    }\n+\n+    query = \"projects/#{project_id}/repository/tags\"\n+\n+    endpoint = File.join(url, API_PREFIX, query)\n+    response = self.class.post(endpoint, opts)\n+\n+    if response.code == 200 || response.code == 201\n+      response.parsed_response\n+    elsif response.code == 400\n+      raise response.parsed_response['message']",
        "path": "app/models/network.rb",
        "position": 68,
        "original_position": 68,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595358",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595358"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595358"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595359",
        "pull_request_review_id": null,
        "id": 19595359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzU5",
        "diff_hunk": "@@ -176,7 +195,7 @@ def timeout_in_minutes=(value)\n     self.timeout = value.to_i * 60\n   end\n \n-  def skip_ref?(ref_name)\n+  def skip_ref?(ref_name, ref_type)",
        "path": "app/models/project.rb",
        "position": 73,
        "original_position": 73,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `ref_type`. If it's necessary, use `_` or `_ref_type` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595359",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595359"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595361",
        "pull_request_review_id": null,
        "id": 19595361,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzYx",
        "diff_hunk": "@@ -20,15 +20,25 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n+  attr_accessible :slack_only_broken_builds, :slack_notification_channel,\n+    :slack_notification_subdomain, :slack_notification_token",
        "path": "app/models/project.rb",
        "position": 9,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595361",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595361"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595361"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595362",
        "pull_request_review_id": null,
        "id": 19595362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzYy",
        "diff_hunk": "@@ -20,15 +20,25 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n+  attr_accessible :slack_only_broken_builds, :slack_notification_channel,\n+    :slack_notification_subdomain, :slack_notification_token\n+\n+  attr_accessible :slack_notification_webhook\n+\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,",
        "path": "app/models/project.rb",
        "position": 17,
        "original_position": 17,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595362",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595362"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595364",
        "pull_request_review_id": null,
        "id": 19595364,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzY0",
        "diff_hunk": "@@ -20,15 +20,25 @@\n #  email_recipients         :string(255)      default(\"\"), not null\n #  email_add_committer      :boolean          default(TRUE), not null\n #  email_only_broken_builds :boolean          default(TRUE), not null\n+#  private_token           :string\n #\n \n class Project < ActiveRecord::Base\n+  attr_accessible :slack_only_broken_builds, :slack_notification_channel,\n+    :slack_notification_subdomain, :slack_notification_token\n+\n+  attr_accessible :slack_notification_webhook\n+\n   attr_accessible :name, :path, :scripts, :timeout, :token, :timeout_in_minutes,\n     :default_ref, :gitlab_url, :always_build, :polling_interval,\n     :public, :ssh_url_to_repo, :gitlab_id, :allow_git_fetch, :skip_refs,\n-    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex\n+    :email_recipients, :email_add_committer, :email_only_broken_builds, :coverage_regex,\n+    :build_os, :build_image",
        "path": "app/models/project.rb",
        "position": 18,
        "original_position": 18,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595364",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595364"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595364"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595365",
        "pull_request_review_id": null,
        "id": 19595365,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzY1",
        "diff_hunk": "@@ -69,6 +79,11 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        build_os:                project.os || 'linux',\n+        build_image:             project.image || '',",
        "path": "app/models/project.rb",
        "position": 43,
        "original_position": 43,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:32Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595365",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595365"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595365"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595367",
        "pull_request_review_id": null,
        "id": 19595367,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzY3",
        "diff_hunk": "@@ -69,6 +79,11 @@ def parse(project_yaml)\n         ssh_url_to_repo:         project.ssh_url_to_repo,\n         email_add_committer:     GitlabCi.config.gitlab_ci.add_committer,\n         email_only_broken_builds: GitlabCi.config.gitlab_ci.all_broken_builds,\n+        private_token:           private_token,\n+        build_method:            project.build_method || 'shell',\n+        build_os:                project.os || 'linux',\n+        build_image:             project.image || '',\n+        travis_environment:      project.travis_environment || ''",
        "path": "app/models/project.rb",
        "position": 44,
        "original_position": 44,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595367",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595367"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595367"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595368",
        "pull_request_review_id": null,
        "id": 19595368,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1MzY4",
        "diff_hunk": "@@ -37,4 +37,12 @@ def display_name\n   def shared?\n     runner_projects.blank?\n   end\n+\n+  def current_running_builds\n+    builds.running\n+  end\n+\n+  def current_running_projects\n+    Project.joins(:builds).where({builds: {runner: self, status: :running}})",
        "path": "app/models/runner.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595368",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595368"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595368"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595370",
        "pull_request_review_id": null,
        "id": 19595370,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzcw",
        "diff_hunk": "@@ -1,30 +1,63 @@\n+require('travis_build_service')\n+require('shell_build_service')",
        "path": "app/services/create_build_service.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595370",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595370"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595370"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595371",
        "pull_request_review_id": null,
        "id": 19595371,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzcx",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']",
        "path": "app/services/create_project_service.rb",
        "position": 56,
        "original_position": 56,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595371",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595371"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595371"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595372",
        "pull_request_review_id": null,
        "id": 19595372,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzcy",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']\n+    end\n+    matching = matching.first\n \n-      opts = {\n-        token: @project.token,\n-        project_url: project_route.gsub(\":project_id\", @project.id.to_s),\n-      }\n+    # delete all other matching hooks\n+    hooks.each do |hook|\n+      next if matching == hook\n+      next unless hook['url'].start_with? project_route",
        "path": "app/services/create_project_service.rb",
        "position": 67,
        "original_position": 67,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595372",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595372"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595372"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595373",
        "pull_request_review_id": null,
        "id": 19595373,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzcz",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']\n+    end\n+    matching = matching.first\n \n-      opts = {\n-        token: @project.token,\n-        project_url: project_route.gsub(\":project_id\", @project.id.to_s),\n-      }\n+    # delete all other matching hooks\n+    hooks.each do |hook|\n+      next if matching == hook\n+      next unless hook['url'].start_with? project_route\n+      Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token)",
        "path": "app/services/create_project_service.rb",
        "position": 68,
        "original_position": 68,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595373",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595373"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595373"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595374",
        "pull_request_review_id": null,
        "id": 19595374,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc0",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']\n+    end\n+    matching = matching.first\n \n-      opts = {\n-        token: @project.token,\n-        project_url: project_route.gsub(\":project_id\", @project.id.to_s),\n-      }\n+    # delete all other matching hooks\n+    hooks.each do |hook|\n+      next if matching == hook\n+      next unless hook['url'].start_with? project_route\n+      Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token)\n+    end\n+\n+    # we are done, our hook is there\n+    return true if matching\n \n-      if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)\n-        true\n-      else\n-        raise ActiveRecord::Rollback\n+    # push new hook\n+    hook_opts = {\n+      url: hook_url,\n+      push_events: false,\n+      issues_events: false,\n+      merge_request_events: false,\n+      tag_push_events: true\n+    }\n+\n+    if Network.new.add_project_hook(current_user.url, project.gitlab_id, hook_opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def update_project_hooks(current_user, project, project_route)\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+\n+    if hooks\n+      hooks.each do |hook|\n+        Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token) if hook['url'].start_with? project_route",
        "path": "app/services/create_project_service.rb",
        "position": 99,
        "original_position": 99,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595374",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595374"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595374"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595375",
        "pull_request_review_id": null,
        "id": 19595375,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc1",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']\n+    end\n+    matching = matching.first\n \n-      opts = {\n-        token: @project.token,\n-        project_url: project_route.gsub(\":project_id\", @project.id.to_s),\n-      }\n+    # delete all other matching hooks\n+    hooks.each do |hook|\n+      next if matching == hook\n+      next unless hook['url'].start_with? project_route\n+      Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token)\n+    end\n+\n+    # we are done, our hook is there\n+    return true if matching\n \n-      if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)\n-        true\n-      else\n-        raise ActiveRecord::Rollback\n+    # push new hook\n+    hook_opts = {\n+      url: hook_url,\n+      push_events: false,\n+      issues_events: false,\n+      merge_request_events: false,\n+      tag_push_events: true\n+    }\n+\n+    if Network.new.add_project_hook(current_user.url, project.gitlab_id, hook_opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def update_project_hooks(current_user, project, project_route)\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+\n+    if hooks\n+      hooks.each do |hook|\n+        Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token) if hook['url'].start_with? project_route\n       end\n     end\n+  end\n \n-    @project\n+  def delete_project_hooks(current_user, project, project_route)\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    return unless hooks\n+\n+    hooks.each do |hook|\n+      next unless hook['url'].start_with? project_route",
        "path": "app/services/create_project_service.rb",
        "position": 110,
        "original_position": 110,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595375",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595375"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595375"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595376",
        "pull_request_review_id": null,
        "id": 19595376,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc2",
        "diff_hunk": "@@ -2,23 +2,103 @@ class CreateProjectService\n   include Rails.application.routes.url_helpers\n \n   def execute(current_user, params, project_route)\n-    @project = Project.parse(params)\n+    @project = Project.parse(params, current_user.private_token)\n+    @project.build_method = CreateBuildService.new.detect_build_method(@project)\n+    Project.transaction do\n+      update(current_user, @project, project_route)\n+    end\n+\n+    @project\n+  end\n+\n+  def update(current_user, project, project_route)\n+    project.save!\n \n+    project_url = project_route.gsub(\":project_id\", project.id.to_s)\n+    hook_tag_url = \"#{project_url}/tag?token=#{project.token}\"\n+\n+    # update only if token got changed\n+    enable_ci(current_user, project, project_url)\n+    ensure_project_hook_exist(current_user, project, project_url, hook_tag_url)\n+  end\n+\n+  def destroy(current_user, project, project_route)\n     Project.transaction do\n-      @project.save!\n+      project.destroy\n+      Network.new.disable_ci(current_user.url, project.gitlab_id, current_user.private_token)\n+      delete_project_hooks(current_user, project, project_route)\n+    end\n+  end\n+\n+  private\n+\n+  def enable_ci(current_user, project, project_url)\n+    opts = {\n+        token: project.token,\n+        project_url: project_url\n+    }\n+\n+    if Network.new.enable_ci(current_user.url, project.gitlab_id, opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def ensure_project_hook_exist(current_user, project, project_route, hook_url)\n+    # check current hooks\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    hooks ||= []\n+\n+    # look for hooks with same url\n+    matching = hooks.select do |hook|\n+      hook['url'] == hook_url and hook['tag_push_events'] and not hook['push_events'] and not hook['issues_events'] and not hook['merge_request_events']\n+    end\n+    matching = matching.first\n \n-      opts = {\n-        token: @project.token,\n-        project_url: project_route.gsub(\":project_id\", @project.id.to_s),\n-      }\n+    # delete all other matching hooks\n+    hooks.each do |hook|\n+      next if matching == hook\n+      next unless hook['url'].start_with? project_route\n+      Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token)\n+    end\n+\n+    # we are done, our hook is there\n+    return true if matching\n \n-      if Network.new.enable_ci(current_user.url, @project.gitlab_id, opts, current_user.private_token)\n-        true\n-      else\n-        raise ActiveRecord::Rollback\n+    # push new hook\n+    hook_opts = {\n+      url: hook_url,\n+      push_events: false,\n+      issues_events: false,\n+      merge_request_events: false,\n+      tag_push_events: true\n+    }\n+\n+    if Network.new.add_project_hook(current_user.url, project.gitlab_id, hook_opts, current_user.private_token)\n+      true\n+    else\n+      raise ActiveRecord::Rollback\n+    end\n+  end\n+\n+  def update_project_hooks(current_user, project, project_route)\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+\n+    if hooks\n+      hooks.each do |hook|\n+        Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token) if hook['url'].start_with? project_route\n       end\n     end\n+  end\n \n-    @project\n+  def delete_project_hooks(current_user, project, project_route)\n+    hooks = Network.new.list_project_hooks(current_user.url, project.gitlab_id, current_user.private_token)\n+    return unless hooks\n+\n+    hooks.each do |hook|\n+      next unless hook['url'].start_with? project_route\n+      Network.new.delete_project_hook(current_user.url, project.gitlab_id, hook['id'], current_user.private_token)",
        "path": "app/services/create_project_service.rb",
        "position": 111,
        "original_position": 111,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:33Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595376",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595376"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595376"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595377",
        "pull_request_review_id": null,
        "id": 19595377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc3",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+class CreateBuildService\n+  class Shell\n+    def execute(project, data)\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          build_data = data.dup\n+          build_data.merge!(build_os: project.build_os)\n+          build_data.merge!(build_image: project.build_image)\n+          build_data.merge!(build_group_id: build_group.id)\n+          build_data.merge!(build_attributes: nil)\n+          project.builds.create(build_data)\n+\n+          # return build group\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+        end\n+      end\n+    end\n+\n+    def detected?(project)",
        "path": "app/services/shell_build_service.rb",
        "position": 25,
        "original_position": 25,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `project`. If it's necessary, use `_` or `_project` as an argument name to indicate that it won't be used. You can also write as `detected?(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595377",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595377"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595378",
        "pull_request_review_id": null,
        "id": 19595378,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc4",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+class CreateBuildService\n+  class Shell\n+    def execute(project, data)\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          build_data = data.dup\n+          build_data.merge!(build_os: project.build_os)\n+          build_data.merge!(build_image: project.build_image)\n+          build_data.merge!(build_group_id: build_group.id)\n+          build_data.merge!(build_attributes: nil)\n+          project.builds.create(build_data)\n+\n+          # return build group\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      true\n+    end\n+\n+    def build_commands(build)\n+      build.project.scripts\n+    end\n+\n+    def custom_commands(build)",
        "path": "app/services/shell_build_service.rb",
        "position": 33,
        "original_position": 33,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `build`. If it's necessary, use `_` or `_build` as an argument name to indicate that it won't be used. You can also write as `custom_commands(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595378",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595378"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595378"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595379",
        "pull_request_review_id": null,
        "id": 19595379,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzc5",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+class CreateBuildService\n+  class Shell\n+    def execute(project, data)\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          build_data = data.dup\n+          build_data.merge!(build_os: project.build_os)\n+          build_data.merge!(build_image: project.build_image)\n+          build_data.merge!(build_group_id: build_group.id)\n+          build_data.merge!(build_attributes: nil)\n+          project.builds.create(build_data)\n+\n+          # return build group\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      true\n+    end\n+\n+    def build_commands(build)\n+      build.project.scripts\n+    end\n+\n+    def custom_commands(build)\n+      false\n+    end\n+\n+    def format_build_attributes(build)",
        "path": "app/services/shell_build_service.rb",
        "position": 37,
        "original_position": 37,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `build`. If it's necessary, use `_` or `_build` as an argument name to indicate that it won't be used. You can also write as `format_build_attributes(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595379",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595379"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595379"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595381",
        "pull_request_review_id": null,
        "id": 19595381,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzgx",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+class CreateBuildService\n+  class Shell\n+    def execute(project, data)\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          build_data = data.dup\n+          build_data.merge!(build_os: project.build_os)\n+          build_data.merge!(build_image: project.build_image)\n+          build_data.merge!(build_group_id: build_group.id)\n+          build_data.merge!(build_attributes: nil)\n+          project.builds.create(build_data)\n+\n+          # return build group\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      true\n+    end\n+\n+    def build_commands(build)\n+      build.project.scripts\n+    end\n+\n+    def custom_commands(build)\n+      false\n+    end\n+\n+    def format_build_attributes(build)\n+      nil\n+    end\n+\n+    def format_matrix_attributes(build)",
        "path": "app/services/shell_build_service.rb",
        "position": 41,
        "original_position": 41,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `build`. If it's necessary, use `_` or `_build` as an argument name to indicate that it won't be used. You can also write as `format_matrix_attributes(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595381",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595381"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595381"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595382",
        "pull_request_review_id": null,
        "id": 19595382,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzgy",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+class CreateBuildService\n+  class Shell\n+    def execute(project, data)\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          build_data = data.dup\n+          build_data.merge!(build_os: project.build_os)\n+          build_data.merge!(build_image: project.build_image)\n+          build_data.merge!(build_group_id: build_group.id)\n+          build_data.merge!(build_attributes: nil)\n+          project.builds.create(build_data)\n+\n+          # return build group\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      true\n+    end\n+\n+    def build_commands(build)\n+      build.project.scripts\n+    end\n+\n+    def custom_commands(build)\n+      false\n+    end\n+\n+    def format_build_attributes(build)\n+      nil\n+    end\n+\n+    def format_matrix_attributes(build)\n+      nil\n+    end\n+\n+    def build_end(build)",
        "path": "app/services/shell_build_service.rb",
        "position": 45,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `build`. If it's necessary, use `_` or `_build` as an argument name to indicate that it won't be used. You can also write as `build_end(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595382",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595382"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595382"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595383",
        "pull_request_review_id": null,
        "id": 19595383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzgz",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+# SlackNotificationService class\n+#\n+# Used for notifying users with on slack about different events\n+#\n+# Ex.\n+#   SlackNotificationService.new.build_ended(build)\n+#\n+require 'slack_notifier'\n+\n+class SlackNotificationService\n+  def build_started(build)\n+    return unless build.build_group\n+    return unless build.build_group.builds.where.not(started_at: nil).empty?\n+    Slack::Notifier.build_started_slack_post(build)\n+  end\n+\n+  def build_ended(build)\n+    return unless build.build_group\n+    case build.build_group.status.to_sym\n+    when :success\n+      Slack::Notifier.build_success_slack_post(build)\n+    when :failed\n+      Slack::Notifier.build_fail_slack_post(build)\n+    end\n+  end\n+",
        "path": "app/services/slack_notification_service.rb",
        "position": 26,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Extra empty line detected at body end.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595383",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595383"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595384",
        "pull_request_review_id": null,
        "id": 19595384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg0",
        "diff_hunk": "@@ -0,0 +1,27 @@\n+# SlackNotificationService class\n+#\n+# Used for notifying users with on slack about different events\n+#\n+# Ex.\n+#   SlackNotificationService.new.build_ended(build)\n+#\n+require 'slack_notifier'",
        "path": "app/services/slack_notification_service.rb",
        "position": 8,
        "original_position": 8,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595384",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595384"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595385",
        "pull_request_review_id": null,
        "id": 19595385,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg1",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")",
        "path": "app/services/travis_build_service.rb",
        "position": 105,
        "original_position": 105,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `eval` is a serious security risk.\n",
        "created_at": "2014-10-30T09:59:34Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595385",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595385"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595385"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595386",
        "pull_request_review_id": null,
        "id": 19595386,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg2",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil",
        "path": "app/services/travis_build_service.rb",
        "position": 39,
        "original_position": 39,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unreachable code detected.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595386",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595386"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595386"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595387",
        "pull_request_review_id": null,
        "id": 19595387,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg3",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')\n+      YAML.load(config_file) unless config_file.nil?\n+    end\n+\n+    def generate_builds(build_config_params, data, custom_attributes, &block)\n+      raise 'block must be specified' unless block_given?\n+      ``\n+\n+      build_config = ::Travis::Model::Build::Config.new(build_config_params, default_options).normalize\n+      if branches=build_config[:branches]\n+        if branches[:only]\n+          return unless branches[:only].include? data[:ref]\n+        elsif branches[:except]\n+          return if branches[:except].include? data[:ref]\n+        end\n+      end\n+\n+      # omit gh-pages unless specified in branches.only\n+      return if data[:ref] == 'gh-pages' unless build_config[:branches] and build_config[:branches][:only]\n+\n+      matrix_build = ::Travis::Model::Build::Config::Matrix.new(build_config, default_options)\n+      matrix_build.expand.each do |expanded_config|\n+        matrix_attributes = expanded_config.select do |key, value|",
        "path": "app/services/travis_build_service.rb",
        "position": 154,
        "original_position": 154,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused block argument - `value`. If it's necessary, use `_` or `_value` as an argument name to indicate that it won't be used.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595387",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595387"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595387"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595388",
        "pull_request_review_id": null,
        "id": 19595388,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg4",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)",
        "path": "app/services/travis_build_service.rb",
        "position": 77,
        "original_position": 77,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unused method argument - `build`. If it's necessary, use `_` or `_build` as an argument name to indicate that it won't be used. You can also write as `custom_commands(*)` if you want the method to accept any arguments but don't care about them.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595388",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595388"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595388"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595389",
        "pull_request_review_id": null,
        "id": 19595389,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzg5",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')\n+      YAML.load(config_file) unless config_file.nil?\n+    end\n+\n+    def generate_builds(build_config_params, data, custom_attributes, &block)\n+      raise 'block must be specified' unless block_given?\n+      ``\n+\n+      build_config = ::Travis::Model::Build::Config.new(build_config_params, default_options).normalize\n+      if branches=build_config[:branches]",
        "path": "app/services/travis_build_service.rb",
        "position": 141,
        "original_position": 141,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Surrounding space missing for operator '='.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595389",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595389"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595389"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595390",
        "pull_request_review_id": null,
        "id": 19595390,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzkw",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'",
        "path": "app/services/travis_build_service.rb",
        "position": 1,
        "original_position": 1,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595390",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595390"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595390"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595391",
        "pull_request_review_id": null,
        "id": 19595391,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzkx",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'",
        "path": "app/services/travis_build_service.rb",
        "position": 2,
        "original_position": 2,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595391",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595391"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595391"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595392",
        "pull_request_review_id": null,
        "id": 19595392,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzky",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)",
        "path": "app/services/travis_build_service.rb",
        "position": 9,
        "original_position": 9,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595392",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595392"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595392"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595393",
        "pull_request_review_id": null,
        "id": 19595393,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzkz",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'",
        "path": "app/services/travis_build_service.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595393",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595393"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595393"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595394",
        "pull_request_review_id": null,
        "id": 19595394,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzk0",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')",
        "path": "app/services/travis_build_service.rb",
        "position": 11,
        "original_position": 11,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:35Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595394",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595394"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595394"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595396",
        "pull_request_review_id": null,
        "id": 19595396,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzk2",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')",
        "path": "app/services/travis_build_service.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595396",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595396"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595396"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595397",
        "pull_request_review_id": null,
        "id": 19595397,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzk3",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')",
        "path": "app/services/travis_build_service.rb",
        "position": 26,
        "original_position": 26,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595397",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595397"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595397"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595398",
        "pull_request_review_id": null,
        "id": 19595398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzk4",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')",
        "path": "app/services/travis_build_service.rb",
        "position": 45,
        "original_position": 45,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595398",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595398"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595399",
        "pull_request_review_id": null,
        "id": 19595399,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1Mzk5",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config",
        "path": "app/services/travis_build_service.rb",
        "position": 83,
        "original_position": 83,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595399",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595399"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595399"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595400",
        "pull_request_review_id": null,
        "id": 19595400,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDAw",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config",
        "path": "app/services/travis_build_service.rb",
        "position": 89,
        "original_position": 89,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595400",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595400"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595400"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595401",
        "pull_request_review_id": null,
        "id": 19595401,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDAx",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''",
        "path": "app/services/travis_build_service.rb",
        "position": 95,
        "original_position": 95,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595401",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595401"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595401"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595402",
        "pull_request_review_id": null,
        "id": 19595402,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDAy",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''",
        "path": "app/services/travis_build_service.rb",
        "position": 97,
        "original_position": 97,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595402",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595402"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595402"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595403",
        "pull_request_review_id": null,
        "id": 19595403,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDAz",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged",
        "path": "app/services/travis_build_service.rb",
        "position": 131,
        "original_position": 131,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595403",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595403"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595403"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595404",
        "pull_request_review_id": null,
        "id": 19595404,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDA0",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')",
        "path": "app/services/travis_build_service.rb",
        "position": 132,
        "original_position": 132,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:36Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595404",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595404"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595404"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595405",
        "pull_request_review_id": null,
        "id": 19595405,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDA1",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')\n+      YAML.load(config_file) unless config_file.nil?\n+    end\n+\n+    def generate_builds(build_config_params, data, custom_attributes, &block)\n+      raise 'block must be specified' unless block_given?",
        "path": "app/services/travis_build_service.rb",
        "position": 137,
        "original_position": 137,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595405",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595405"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595405"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595406",
        "pull_request_review_id": null,
        "id": 19595406,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDA2",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')\n+      YAML.load(config_file) unless config_file.nil?\n+    end\n+\n+    def generate_builds(build_config_params, data, custom_attributes, &block)\n+      raise 'block must be specified' unless block_given?\n+      ``\n+\n+      build_config = ::Travis::Model::Build::Config.new(build_config_params, default_options).normalize\n+      if branches=build_config[:branches]\n+        if branches[:only]\n+          return unless branches[:only].include? data[:ref]\n+        elsif branches[:except]\n+          return if branches[:except].include? data[:ref]\n+        end\n+      end\n+\n+      # omit gh-pages unless specified in branches.only\n+      return if data[:ref] == 'gh-pages' unless build_config[:branches] and build_config[:branches][:only]",
        "path": "app/services/travis_build_service.rb",
        "position": 150,
        "original_position": 150,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595406",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595406"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595406"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595407",
        "pull_request_review_id": null,
        "id": 19595407,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk1NDA3",
        "diff_hunk": "@@ -0,0 +1,180 @@\n+require 'travis/model/build/config'\n+require 'travis/model/build/config/matrix'\n+\n+class CreateBuildService\n+  class Travis\n+    def execute(project, data)\n+      build_attributes = Array.new\n+      project.travis_environment.shellsplit.each do |env|\n+        key, value = env.split('=', 2)\n+        public = key[0] != '@'\n+        key = key.gsub(/^@/, '')\n+        build_attributes << {name: key, value: value, public: public}\n+      end\n+\n+      build_config_params = load_config(project, data[:sha], data[:ref_type] == 'tags')\n+      return nil if build_config_params.nil?\n+\n+      ActiveRecord::Base.transaction do\n+        begin\n+          build_group_data = data.dup\n+          build_group_data.delete(:build_method)\n+          build_group = project.build_groups.create(build_group_data)\n+\n+          generate_builds(build_config_params, data, build_attributes) do |new_data, new_attributes|\n+            new_data.merge!(build_attributes: new_attributes)\n+            new_data.merge!(build_os: new_attributes[:config][:os] || 'linux')\n+            new_data.merge!(build_image: build_image(new_attributes))\n+            new_data.merge!(build_group_id: build_group.id)\n+            project.builds.create(new_data)\n+          end\n+\n+          if build_group.builds.empty?\n+            raise ActiveRecord::Rollback\n+          end\n+\n+          build_group\n+        rescue\n+          raise ActiveRecord::Rollback\n+          nil\n+        end\n+      end\n+    end\n+\n+    def detected?(project)\n+      load_config(project, 'HEAD', 'HEAD')\n+    end\n+\n+    def build_commands(build)\n+      data = travis_config.dup\n+      data[:config] = build.build_attributes[:config]\n+      data[:env_vars] = (data[:env_vars] || []) + (build.build_attributes[:env_vars] || {})\n+\n+      data[:urls] = {\n+      }\n+      data[:repository] = {\n+          source_url: build.repo_url,\n+          slug: build.repo_slug\n+      }\n+      data[:source] = {\n+          id: build.build_group.id.to_s,           # in future change it to buildgroup.id\n+          number: build.build_group.build_id.to_s  # in future change it to buildgroup.build_id (next number for current proejct)\n+      }\n+      data[:job] = {\n+          id: build.id.to_s,\n+          number: \"#{build.build_id}.#{build.build_concurrent_id}\",\n+          branch: build.ref,\n+          commit: build.sha,\n+          commit_range: \"#{build.short_before_sha}..#{build.short_sha}\",\n+          pull_request: false, # not yet supported\n+          tag: build.tag? ? build.ref : nil\n+      }\n+\n+      script = ::Travis::Build.script(data, logs: { build: true, state: false })\n+      script.compile\n+    end\n+\n+    def custom_commands(build)\n+      true\n+    end\n+\n+    def format_build_attributes(build)\n+      build_config = build.build_attributes[:config] if build.build_attributes\n+      build_config = build_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if build_config\n+      build_config\n+    end\n+\n+    def format_matrix_attributes(build)\n+      matrix_config = build.build_attributes[:matrix_config] if build.build_attributes\n+      matrix_config = matrix_config.to_yaml.sub(\"---\\n\", '').gsub(/^:/, '') if matrix_config\n+      matrix_config\n+    end\n+\n+    def build_image(build_attributes)\n+      config = build_attributes[:config] || {}\n+      language = config[:language] || ''\n+      language = language.to_sym\n+      os = config[:os] || ''\n+      os = os.to_sym\n+\n+      language_mapping = travis_config[:language_mapping] || {}\n+      languages = language_mapping[os] || language_mapping[:default] || {}\n+      image = languages[language] || languages[:default]\n+      raise \"No language definition for #{config[:os]}:#{config[:language]}\" unless image\n+\n+      eval(\"\\\"#{image}\\\"\")\n+    end\n+\n+    def build_end(build)\n+      return unless build.build_group\n+\n+      build_attributes = build.build_attributes\n+      config = build_attributes[:config] if build_attributes\n+      matrix_config = build_attributes[:matrix] if config\n+      fast_finish = matrix_config[:fast_finish] if fast_finish\n+\n+      # cancel all builds\n+      if fast_finish\n+        build.build_group.builds.each do |other_build|\n+          other_build.cancel\n+        end\n+      end\n+    end\n+\n+    private\n+\n+    def travis_config\n+      @travis_config ||= Extension.deep_symbolize_keys(YAML.load_file(\"#{Rails.root}/config/travis.yml\")[Rails.env])\n+    end\n+\n+    def load_config(project, sha, is_tagged = false)\n+      config_file = network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.release.yml') if is_tagged\n+      config_file ||= network.raw_file_content(url(project), project.gitlab_id, project.private_token, sha, '.travis.yml')\n+      YAML.load(config_file) unless config_file.nil?\n+    end\n+\n+    def generate_builds(build_config_params, data, custom_attributes, &block)\n+      raise 'block must be specified' unless block_given?\n+      ``\n+\n+      build_config = ::Travis::Model::Build::Config.new(build_config_params, default_options).normalize\n+      if branches=build_config[:branches]\n+        if branches[:only]\n+          return unless branches[:only].include? data[:ref]\n+        elsif branches[:except]\n+          return if branches[:except].include? data[:ref]\n+        end\n+      end\n+\n+      # omit gh-pages unless specified in branches.only\n+      return if data[:ref] == 'gh-pages' unless build_config[:branches] and build_config[:branches][:only]\n+\n+      matrix_build = ::Travis::Model::Build::Config::Matrix.new(build_config, default_options)\n+      matrix_build.expand.each do |expanded_config|\n+        matrix_attributes = expanded_config.select do |key, value|\n+          matrix_build.send(:expand_keys).include? key and build_config[key].is_a?(Array)\n+        end\n+\n+        matrix_build_data = {\n+            config: expanded_config,\n+            matrix_config: matrix_attributes,\n+            env_vars: custom_attributes,\n+        }\n+\n+        block.call(data.dup, matrix_build_data)\n+      end\n+    end\n+\n+    def url(project)\n+      project.gitlab_url.split('/')[0..-3].join('/')",
        "path": "app/services/travis_build_service.rb",
        "position": 169,
        "original_position": 169,
        "commit_id": "bd05d124a98a27146f788ab407f06f4d4a62c141",
        "original_commit_id": "b9f2e62b61de229557a0bcb9beab8d10b6d9fccb",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-10-30T09:59:37Z",
        "updated_at": "2014-10-30T10:02:51Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595407",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/19595407"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/462#discussion_r19595407"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/462"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/21232208",
        "pull_request_review_id": null,
        "id": 21232208,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjMyMjA4",
        "diff_hunk": "@@ -38,6 +38,7 @@ class Project < ActiveRecord::Base\n   has_many :runners, through: :runner_projects\n   has_many :web_hooks, dependent: :destroy\n   has_many :jobs, dependent: :destroy\n+  has_one :last_build, ->() { order('id DESC') }, class_name: 'Build'",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "6e6e174cf6e3c57ed69c9da5cc2e5d68632e7a42",
        "original_commit_id": "16be7c83d5bb4db501daadea896a3784cc2b4855",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-12-03T14:01:05Z",
        "updated_at": "2014-12-03T17:09:23Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/510#discussion_r21232208",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/510",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/21232208"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/510#discussion_r21232208"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/510"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/21246904",
        "pull_request_review_id": null,
        "id": 21246904,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQ2OTA0",
        "diff_hunk": "@@ -111,6 +111,10 @@ def unassigned(runner)\n   def set_default_values\n     self.token = SecureRandom.hex(15) if self.token.blank?\n   end\n+  ",
        "path": "app/models/project.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "6e6e174cf6e3c57ed69c9da5cc2e5d68632e7a42",
        "original_commit_id": "6e6e174cf6e3c57ed69c9da5cc2e5d68632e7a42",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Trailing whitespace detected.\n",
        "created_at": "2014-12-03T17:09:27Z",
        "updated_at": "2014-12-03T17:09:27Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/510#discussion_r21246904",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/510",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/21246904"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/510#discussion_r21246904"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/510"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427632",
        "pull_request_review_id": null,
        "id": 20427632,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjMy",
        "diff_hunk": "@@ -46,6 +46,26 @@ def status\n     render json: @build.to_json(only: [:status, :id, :sha, :coverage])\n   end\n \n+  def log\n+    respond_to do |format|\n+      format.text {",
        "path": "app/controllers/builds_controller.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.\n",
        "created_at": "2014-11-17T10:47:17Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427632",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427632"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427632"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427633",
        "pull_request_review_id": null,
        "id": 20427633,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjMz",
        "diff_hunk": "@@ -46,6 +46,26 @@ def status\n     render json: @build.to_json(only: [:status, :id, :sha, :coverage])\n   end\n \n+  def log\n+    respond_to do |format|\n+      format.text {\n+        render text: @build.trace\n+      }\n+      format.json {",
        "path": "app/controllers/builds_controller.rb",
        "position": 9,
        "original_position": 9,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.\n",
        "created_at": "2014-11-17T10:47:17Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427633",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427633"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427633"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427634",
        "pull_request_review_id": null,
        "id": 20427634,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM0",
        "diff_hunk": "@@ -125,8 +125,18 @@ def self.retry(build)\n     to: :commit, prefix: false\n \n   def trace_html\n-    html = Ansi2html::convert(trace) if trace.present?\n-    html ||= ''\n+    html = Ansi2html::convert(trace)[:html] if trace.present?\n+    html ||= \"\"",
        "path": "app/models/build.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `html`. Use just operator `||`.\n",
        "created_at": "2014-11-17T10:47:17Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427634",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427634"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427634"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427635",
        "pull_request_review_id": null,
        "id": 20427635,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM1",
        "diff_hunk": "@@ -125,8 +125,18 @@ def self.retry(build)\n     to: :commit, prefix: false\n \n   def trace_html\n-    html = Ansi2html::convert(trace) if trace.present?\n-    html ||= ''\n+    html = Ansi2html::convert(trace)[:html] if trace.present?\n+    html ||= \"\"\n+  end\n+\n+  def trace_state\n+    state = Ansi2html::convert(trace)[:state] if trace.present?\n+    state ||= \"\"",
        "path": "app/models/build.rb",
        "position": 12,
        "original_position": 12,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `state`. Use just operator `||`.\n",
        "created_at": "2014-11-17T10:47:17Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427635",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427635"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427635"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427636",
        "pull_request_review_id": null,
        "id": 20427636,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM2",
        "diff_hunk": "@@ -125,8 +125,18 @@ def self.retry(build)\n     to: :commit, prefix: false\n \n   def trace_html\n-    html = Ansi2html::convert(trace) if trace.present?\n-    html ||= ''\n+    html = Ansi2html::convert(trace)[:html] if trace.present?\n+    html ||= \"\"\n+  end\n+\n+  def trace_state\n+    state = Ansi2html::convert(trace)[:state] if trace.present?\n+    state ||= \"\"\n+  end\n+\n+  def trace_for_state(state = nil)\n+    out = Ansi2html::convert(trace, state) if trace.present?\n+    out ||= {}",
        "path": "app/models/build.rb",
        "position": 17,
        "original_position": 17,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `out`. Use just operator `||`.\n",
        "created_at": "2014-11-17T10:47:17Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427636",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427636"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427636"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427637",
        "pull_request_review_id": null,
        "id": 20427637,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM3",
        "diff_hunk": "@@ -120,6 +138,20 @@ def handle_sequence(s)\n \n       evaluate_command_stack(commands)\n \n+      open_new_tag\n+    end\n+\n+    def evaluate_command_stack(stack)\n+      return unless command = stack.shift()",
        "path": "lib/ansi2html.rb",
        "position": 63,
        "original_position": 63,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do not use parentheses for method calls with no arguments.\n",
        "created_at": "2014-11-17T10:47:18Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427637",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427637"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427637"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427638",
        "pull_request_review_id": null,
        "id": 20427638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM4",
        "diff_hunk": "@@ -83,22 +83,40 @@ def on_106(s) set_bg_color(6, 'l') end\n     def on_107(s) set_bg_color(7, 'l') end\n     def on_109(s) set_bg_color(9, 'l') end\n \n-    def convert(ansi)\n+    def initialize(state = nil)\n+      @offset = 0\n       @out = \"\"\n       @n_open_tags = 0\n+      @append = false\n       reset()\n \n+      restore_state(state) if state\n+    end\n+\n+    def convert(ansi)\n+      @append = @offset <= ansi.length\n+      unless @append\n+        @offset = 0\n+        reset\n+      end\n+\n+      ansi = ansi[@offset..-1]\n+\n+      open_new_tag\n+\n       s = StringScanner.new(ansi.gsub(\"<\", \"&lt;\"))\n-      while(!s.eos?)\n+      while (!s.eos?)",
        "path": "lib/ansi2html.rb",
        "position": 39,
        "original_position": 39,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Don't use parentheses around the condition of a `while`.\n",
        "created_at": "2014-11-17T10:47:18Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427638",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427638"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427639",
        "pull_request_review_id": null,
        "id": 20427639,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI3NjM5",
        "diff_hunk": "@@ -120,6 +138,20 @@ def handle_sequence(s)\n \n       evaluate_command_stack(commands)\n \n+      open_new_tag\n+    end\n+\n+    def evaluate_command_stack(stack)\n+      return unless command = stack.shift()\n+\n+      if self.respond_to?(\"on_#{command}\", true)\n+        self.send(\"on_#{command}\", stack)",
        "path": "lib/ansi2html.rb",
        "position": 66,
        "original_position": 66,
        "commit_id": "8eddfc487c94e414b9be3ecbf6318162e6d47301",
        "original_commit_id": "b5bc2aa6b87384e0aad1bcc6136f4432ade540fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `self` detected.\n",
        "created_at": "2014-11-17T10:47:18Z",
        "updated_at": "2014-12-05T23:50:13Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427639",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20427639"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/495#discussion_r20427639"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/495"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22060928",
        "pull_request_review_id": null,
        "id": 22060928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDYwOTI4",
        "diff_hunk": "@@ -14,7 +14,7 @@\n \n class Commit < ActiveRecord::Base\n   belongs_to :project\n-  has_many :builds\n+  has_many :builds, :dependent=>:destroy",
        "path": "app/models/commit.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "original_commit_id": "1ab1a9dfe5ffc40f4e1c0f07338eda39ea1dabc8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.<br>Surrounding space missing for operator '=>'.\n",
        "created_at": "2014-12-18T18:36:46Z",
        "updated_at": "2014-12-18T22:31:42Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22060928",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22060928"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22060928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22062371",
        "pull_request_review_id": null,
        "id": 22062371,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDYyMzcx",
        "diff_hunk": "@@ -14,7 +14,7 @@\n \n class Commit < ActiveRecord::Base\n   belongs_to :project\n-  has_many :builds\n+  has_many :builds, :dependent=>:destroy",
        "path": "app/models/commit.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "original_commit_id": "1ab1a9dfe5ffc40f4e1c0f07338eda39ea1dabc8",
        "user": {
            "login": "vanboom",
            "id": 251706,
            "node_id": "MDQ6VXNlcjI1MTcwNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/251706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vanboom",
            "html_url": "https://github.com/vanboom",
            "followers_url": "https://api.github.com/users/vanboom/followers",
            "following_url": "https://api.github.com/users/vanboom/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanboom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vanboom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanboom/subscriptions",
            "organizations_url": "https://api.github.com/users/vanboom/orgs",
            "repos_url": "https://api.github.com/users/vanboom/repos",
            "events_url": "https://api.github.com/users/vanboom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vanboom/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done :)\n\nDate: Thu, 18 Dec 2014 10:36:49 -0800\nFrom: notifications@github.com\nTo: gitlab-ci@noreply.github.com\nCC: dvboom@hotmail.com\nSubject: Re: [gitlab-ci] associated builds for commit should be destroyed as dependent (#514)\n\nIn app/models/commit.rb:\n\n> @@ -14,7 +14,7 @@\n> \n>  class Commit < ActiveRecord::Base\n>    belongs_to :project\n> -  has_many :builds\n> -  has_many :builds, :dependent=>:destroy\n\nUse the new Ruby 1.9 hash syntax.\nSurrounding space missing for operator '=>'.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\n```\n                  =\n```\n",
        "created_at": "2014-12-18T18:58:38Z",
        "updated_at": "2014-12-18T22:31:42Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22062371",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22062371"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22062371"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22076764",
        "pull_request_review_id": null,
        "id": 22076764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDc2NzY0",
        "diff_hunk": "@@ -1,7 +1,7 @@\n class ProjectsController < ApplicationController\n   before_filter :authenticate_user!, except: [:build, :badge, :index, :show]\n-  before_filter :project, only: [:build, :integration, :show, :badge, :edit, :update, :destroy]\n-  before_filter :authorize_access_project!, except: [:build, :gitlab, :badge, :index, :show, :new, :create]\n+  before_filter :project, only: [:summary, :build, :integration, :show, :badge, :edit, :update, :destroy]",
        "path": "app/controllers/projects_controller.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "original_commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [105/80]\n",
        "created_at": "2014-12-18T22:31:45Z",
        "updated_at": "2014-12-18T22:31:45Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22076764",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22076764"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22076764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22076765",
        "pull_request_review_id": null,
        "id": 22076765,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDc2NzY1",
        "diff_hunk": "@@ -1,7 +1,7 @@\n class ProjectsController < ApplicationController\n   before_filter :authenticate_user!, except: [:build, :badge, :index, :show]\n-  before_filter :project, only: [:build, :integration, :show, :badge, :edit, :update, :destroy]\n-  before_filter :authorize_access_project!, except: [:build, :gitlab, :badge, :index, :show, :new, :create]\n+  before_filter :project, only: [:summary, :build, :integration, :show, :badge, :edit, :update, :destroy]\n+  before_filter :authorize_access_project!, except: [:summary, :build, :gitlab, :badge, :index, :show, :new, :create]",
        "path": "app/controllers/projects_controller.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "original_commit_id": "dbe5c21e44e063f7876d6dc4907d9a31849283c8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [117/80]\n",
        "created_at": "2014-12-18T22:31:45Z",
        "updated_at": "2014-12-18T22:31:45Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22076765",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22076765"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/514#discussion_r22076765"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/514"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22626846",
        "pull_request_review_id": null,
        "id": 22626846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjI2ODQ2",
        "diff_hunk": "@@ -31,11 +31,19 @@ the default editor.\n Install the required packages:\n \n     sudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev openssl\n-    sudo apt-get install redis-server \n+    sudo apt-get install redis-server\n \n # 2. Ruby\n+Download Ruby and compile it (Ubuntu 14.04):\n \n-Download Ruby and compile it:\n+    mkdir /tmp/ruby && cd /tmp/ruby\n+    curl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p481.tar.bz2 | tar xj\n+    cd ruby-2.0.0-p481",
        "path": "doc/install/installation.md",
        "position": 26,
        "original_position": 26,
        "commit_id": "8be6710b4673f0dbbb302ffc2b686985caafe3f0",
        "original_commit_id": "8be6710b4673f0dbbb302ffc2b686985caafe3f0",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you explain what is the reason of changing ruby version for newer ubuntu?\n",
        "created_at": "2015-01-08T00:01:38Z",
        "updated_at": "2015-01-08T00:01:38Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/518#discussion_r22626846",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/518",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22626846"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/518#discussion_r22626846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/518"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013595",
        "pull_request_review_id": null,
        "id": 20013595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDEzNTk1",
        "diff_hunk": "@@ -15,8 +15,11 @@ class Builds < Grape::API\n \n         ActiveRecord::Base.transaction do\n           build = if current_runner.shared?\n-                    Build.first_pending\n+                    # don't run projects which are assigned to specific runners\n+                    projects = RunnerProject.distinct(:project).pluck(:project_id)",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "cbf8711b87ab95f6dee1c81b7d0d9b7aefcdf645",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2014-11-07T14:50:23Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013595",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013595"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013596",
        "pull_request_review_id": null,
        "id": 20013596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDEzNTk2",
        "diff_hunk": "@@ -27,6 +30,24 @@\n \n         response.status.should == 404\n       end\n+\n+      it \"should return 404 error if no builds for specific runner\" do\n+        commit = FactoryGirl.create(:commit, project: shared_project)\n+        build = FactoryGirl.create(:build, commit: commit, status: 'pending' )",
        "path": "spec/requests/api/builds_spec.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "cbf8711b87ab95f6dee1c81b7d0d9b7aefcdf645",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `build`.<br>Space inside parentheses detected.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-11-07T14:50:23Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013596",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013596"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013597",
        "pull_request_review_id": null,
        "id": 20013597,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDEzNTk3",
        "diff_hunk": "@@ -27,6 +30,24 @@\n \n         response.status.should == 404\n       end\n+\n+      it \"should return 404 error if no builds for specific runner\" do\n+        commit = FactoryGirl.create(:commit, project: shared_project)\n+        build = FactoryGirl.create(:build, commit: commit, status: 'pending' )\n+\n+        post api(\"/builds/register\"), token: runner.token\n+\n+        response.status.should == 404\n+      end\n+\n+      it \"should return 404 error if no builds for shared runner\" do\n+        commit = FactoryGirl.create(:commit, project: project)\n+        build = FactoryGirl.create(:build, commit: commit, status: 'pending' )",
        "path": "spec/requests/api/builds_spec.rb",
        "position": null,
        "original_position": 26,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "cbf8711b87ab95f6dee1c81b7d0d9b7aefcdf645",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `build`.<br>Space inside parentheses detected.<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-11-07T14:50:23Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013597",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20013597"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20013597"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20014432",
        "pull_request_review_id": null,
        "id": 20014432,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDE0NDMy",
        "diff_hunk": "@@ -15,8 +15,12 @@ class Builds < Grape::API\n \n         ActiveRecord::Base.transaction do\n           build = if current_runner.shared?\n-                    Build.first_pending\n+                    # don't run projects which are assigned to specific runners\n+                    projects = RunnerProject.distinct(:project)\n+                                   .pluck(:project_id)",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "f2a902037d074421e203d5b0012851dda162c9b7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Place the . on the previous line, together with the method call receiver.\n",
        "created_at": "2014-11-07T15:02:29Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20014432",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20014432"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20014432"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368288",
        "pull_request_review_id": null,
        "id": 20368288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzY4Mjg4",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+.alert.alert-info\n+  %p\n+    This project uses\n+    %span.label.label-info specific\n+    runner.\n+    Builds will be run only by #{@project.runners.each.map { |r| \"#\" + r.id.to_s }.join(\", \")}.",
        "path": "app/views/projects/_specific_runner.html.haml",
        "position": null,
        "original_position": 6,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "move logic like `@project.runners.each.map { |r| \"#\" + r.id.to_s }.join(\", \")` to helper. \n",
        "created_at": "2014-11-14T16:19:02Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368288",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368288"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368331",
        "pull_request_review_id": null,
        "id": 20368331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzY4MzMx",
        "diff_hunk": "@@ -18,6 +18,8 @@\n     %hr\n     .container\n       .row\n+        = render 'projects/info'",
        "path": "app/views/layouts/project.html.haml",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think it will be annoying to see this message always for everyone. Maybe move it to project settings page?\n",
        "created_at": "2014-11-14T16:19:44Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368331",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368331"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368437",
        "pull_request_review_id": null,
        "id": 20368437,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzY4NDM3",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+- if Runner.count.nonzero?\n+  - if @project.runners.blank?\n+    - if Runner.shared.count.zero?",
        "path": "app/views/projects/_info.html.haml",
        "position": null,
        "original_position": 3,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "how about collapsing this cascade of `if`'s into helper method?\n",
        "created_at": "2014-11-14T16:21:24Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368437",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368437"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368437"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368635",
        "pull_request_review_id": null,
        "id": 20368635,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzY4NjM1",
        "diff_hunk": "@@ -15,8 +15,12 @@ class Builds < Grape::API\n \n         ActiveRecord::Base.transaction do\n           build = if current_runner.shared?\n-                    Build.first_pending\n+                    # don't run projects which are assigned to specific runners\n+                    projects = RunnerProject.distinct(:project)",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I dont like using `distinct`. And I think it is unnecessary here.\n",
        "created_at": "2014-11-14T16:24:25Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368635",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368635"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368635"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368852",
        "pull_request_review_id": null,
        "id": 20368852,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzY4ODUy",
        "diff_hunk": "@@ -20,6 +20,9 @@ class Runner < ActiveRecord::Base\n \n   before_validation :set_default_values\n \n+  scope :specific, ->() { where(id: RunnerProject.select(:runner_id).distinct) }",
        "path": "app/models/runner.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "dzaporozhets",
            "id": 305940,
            "node_id": "MDQ6VXNlcjMwNTk0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/305940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzaporozhets",
            "html_url": "https://github.com/dzaporozhets",
            "followers_url": "https://api.github.com/users/dzaporozhets/followers",
            "following_url": "https://api.github.com/users/dzaporozhets/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzaporozhets/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzaporozhets/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzaporozhets/subscriptions",
            "organizations_url": "https://api.github.com/users/dzaporozhets/orgs",
            "repos_url": "https://api.github.com/users/dzaporozhets/repos",
            "events_url": "https://api.github.com/users/dzaporozhets/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzaporozhets/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why you need distinct? \n",
        "created_at": "2014-11-14T16:28:03Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368852",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20368852"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20368852"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20425006",
        "pull_request_review_id": null,
        "id": 20425006,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI1MDA2",
        "diff_hunk": "@@ -15,8 +15,12 @@ class Builds < Grape::API\n \n         ActiveRecord::Base.transaction do\n           build = if current_runner.shared?\n-                    Build.first_pending\n+                    # don't run projects which are assigned to specific runners\n+                    projects = RunnerProject.distinct(:project)",
        "path": "lib/api/builds.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "ayufan",
            "id": 2419009,
            "node_id": "MDQ6VXNlcjI0MTkwMDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2419009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayufan",
            "html_url": "https://github.com/ayufan",
            "followers_url": "https://api.github.com/users/ayufan/followers",
            "following_url": "https://api.github.com/users/ayufan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayufan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayufan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayufan/subscriptions",
            "organizations_url": "https://api.github.com/users/ayufan/orgs",
            "repos_url": "https://api.github.com/users/ayufan/repos",
            "events_url": "https://api.github.com/users/ayufan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayufan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good catch.\n",
        "created_at": "2014-11-17T09:50:06Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20425006",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20425006"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20425006"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20425039",
        "pull_request_review_id": null,
        "id": 20425039,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI1MDM5",
        "diff_hunk": "@@ -20,6 +20,9 @@ class Runner < ActiveRecord::Base\n \n   before_validation :set_default_values\n \n+  scope :specific, ->() { where(id: RunnerProject.select(:runner_id).distinct) }",
        "path": "app/models/runner.rb",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "62201e420dd9aaa8318599725664e55a7e564788",
        "user": {
            "login": "ayufan",
            "id": 2419009,
            "node_id": "MDQ6VXNlcjI0MTkwMDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2419009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayufan",
            "html_url": "https://github.com/ayufan",
            "followers_url": "https://api.github.com/users/ayufan/followers",
            "following_url": "https://api.github.com/users/ayufan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayufan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayufan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayufan/subscriptions",
            "organizations_url": "https://api.github.com/users/ayufan/orgs",
            "repos_url": "https://api.github.com/users/ayufan/repos",
            "events_url": "https://api.github.com/users/ayufan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayufan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I though that there may be some performance penalty in case when we have large number of project assignments to runners.\n",
        "created_at": "2014-11-17T09:50:49Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20425039",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/20425039"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r20425039"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409308",
        "pull_request_review_id": null,
        "id": 22409308,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA5MzA4",
        "diff_hunk": "@@ -23,10 +23,10 @@\n     %ul\n       %li\n         %span.label.label-success shared\n-        \\- run any builds\n+        \\- run builds from all non-assigned projects",
        "path": "app/views/admin/runners/index.html.haml",
        "position": null,
        "original_position": 5,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "73cccecc8fbba9e5b1261fdfcfb0431b0a929a40",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Non-assigned -> unassigned\n",
        "created_at": "2015-01-02T12:24:24Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409308",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409308"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409308"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409331",
        "pull_request_review_id": null,
        "id": 22409331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA5MzMx",
        "diff_hunk": "@@ -9,12 +9,12 @@\n \n - if @runner.shared?\n   .bs-callout.bs-callout-success\n-    %h4 This runner will process build from ALL projects\n+    %h4 This runner will process build from ALL NON ASSIGNED projects",
        "path": "app/views/admin/runners/show.html.haml",
        "position": null,
        "original_position": 5,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "73cccecc8fbba9e5b1261fdfcfb0431b0a929a40",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Non-assigned -> unassigned in this file, too. \n",
        "created_at": "2015-01-02T12:26:06Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409331",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409331"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409340",
        "pull_request_review_id": null,
        "id": 22409340,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA5MzQw",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+.alert.alert-danger\n+  %p\n+    There is NO runners to build this project. Consider assigning this project to",
        "path": "app/views/projects/_no_shared_runners.html.haml",
        "position": null,
        "original_position": 3,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "73cccecc8fbba9e5b1261fdfcfb0431b0a929a40",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There are NO runners\n",
        "created_at": "2015-01-02T12:26:50Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409340",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409340"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409340"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409349",
        "pull_request_review_id": null,
        "id": 22409349,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA5MzQ5",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+.alert.alert-danger\n+  %p\n+    There is NO runners to build this project. Consider assigning this project to\n+    %span.label.label-info specific",
        "path": "app/views/projects/_no_shared_runners.html.haml",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "73cccecc8fbba9e5b1261fdfcfb0431b0a929a40",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "a specific\n",
        "created_at": "2015-01-02T12:27:23Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409349",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409349"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409349"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409353",
        "pull_request_review_id": null,
        "id": 22409353,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA5MzUz",
        "diff_hunk": "@@ -0,0 +1,6 @@\n+.alert.alert-info\n+  %p\n+    This project uses\n+    %span.label.label-info specific",
        "path": "app/views/projects/_specific_runner.html.haml",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "73cccecc8fbba9e5b1261fdfcfb0431b0a929a40",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "a specific\n",
        "created_at": "2015-01-02T12:27:51Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409353",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22409353"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22409353"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411881",
        "pull_request_review_id": null,
        "id": 22411881,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDExODgx",
        "diff_hunk": "@@ -9,12 +9,12 @@\n \n - if @runner.shared?\n   .bs-callout.bs-callout-success\n-    %h4 This runner will process build from ALL projects\n+    %h4 This runner will process build from ALL UNASSIGNED projects\n     %p If you want runner to build only specific projects you just need to enable them in table below\n - else\n   .bs-callout.bs-callout-info\n     %h4 This runner will process build only from ASSIGNED projects\n-    %p If you want runner to build all projects you just need to disable all assignee projects\n+    %p If you want runner to build non assigned projects you just need to disable all assignee projects",
        "path": "app/views/admin/runners/show.html.haml",
        "position": null,
        "original_position": 11,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "fbb4a8087c4a5ad8e20bb0054a80a00fbcd6f009",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Whoops, missed this `non-assigned`.\n",
        "created_at": "2015-01-02T14:57:58Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411881",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411881"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411881"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411917",
        "pull_request_review_id": null,
        "id": 22411917,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDExOTE3",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+.alert.alert-danger\n+  %p\n+    There are NO runners to build this project. Consider assigning this project to\n+    %span.label.label-info a specific",
        "path": "app/views/projects/_no_shared_runners.html.haml",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "fbb4a8087c4a5ad8e20bb0054a80a00fbcd6f009",
        "user": {
            "login": "dblessing",
            "id": 2394772,
            "node_id": "MDQ6VXNlcjIzOTQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2394772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dblessing",
            "html_url": "https://github.com/dblessing",
            "followers_url": "https://api.github.com/users/dblessing/followers",
            "following_url": "https://api.github.com/users/dblessing/following{/other_user}",
            "gists_url": "https://api.github.com/users/dblessing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dblessing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dblessing/subscriptions",
            "organizations_url": "https://api.github.com/users/dblessing/orgs",
            "repos_url": "https://api.github.com/users/dblessing/repos",
            "events_url": "https://api.github.com/users/dblessing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dblessing/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What does this look like in the UI? Does it make sense to have `a specific` inside the label or on the line before? Same with the specific runner partial.\n",
        "created_at": "2015-01-02T14:59:26Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411917",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411917"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411917"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411960",
        "pull_request_review_id": null,
        "id": 22411960,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDExOTYw",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+.alert.alert-danger\n+  %p\n+    There are NO runners to build this project. Consider assigning this project to\n+    %span.label.label-info a specific",
        "path": "app/views/projects/_no_shared_runners.html.haml",
        "position": null,
        "original_position": 4,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "fbb4a8087c4a5ad8e20bb0054a80a00fbcd6f009",
        "user": {
            "login": "ayufan",
            "id": 2419009,
            "node_id": "MDQ6VXNlcjI0MTkwMDk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2419009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayufan",
            "html_url": "https://github.com/ayufan",
            "followers_url": "https://api.github.com/users/ayufan/followers",
            "following_url": "https://api.github.com/users/ayufan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayufan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayufan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayufan/subscriptions",
            "organizations_url": "https://api.github.com/users/ayufan/orgs",
            "repos_url": "https://api.github.com/users/ayufan/repos",
            "events_url": "https://api.github.com/users/ayufan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayufan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right. It doesn't make sense. I just wanted to have the same label\nas in runners admin view.\n\nOn Fri, Jan 2, 2015 at 3:59 PM, Drew Blessing notifications@github.com\nwrote:\n\n> In app/views/projects/_no_shared_runners.html.haml\n> https://github.com/gitlabhq/gitlab-ci/pull/488#discussion-diff-22411917:\n> \n> > @@ -0,0 +1,5 @@\n> > +.alert.alert-danger\n> > -  %p\n> > -    There are NO runners to build this project. Consider assigning this project to\n> > -    %span.label.label-info a specific\n> \n> What does this look like in the UI? Does it make sense to have a specific\n> inside the label or on the line before? Same with the specific runner\n> partial.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/gitlabhq/gitlab-ci/pull/488/files#r22411917.\n\n## \n\nKamil Trzci\u0144ski\n\nayufan@ayufan.eu\nwww.ayufan.eu\n",
        "created_at": "2015-01-02T15:01:51Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411960",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22411960"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22411960"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629083",
        "pull_request_review_id": null,
        "id": 22629083,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjI5MDgz",
        "diff_hunk": "@@ -22,4 +22,16 @@ def html_badge_code(project, ref)\n     url = status_project_url(project, ref: ref, format: 'png')\n     \"<a href='#{project_url(project, ref: ref)}'><img src='#{url}' /></a>\"\n   end\n+\n+  def runners_for_project(project)\n+    project.runners.each.map { |r| \"#\" + r.id.to_s }.join(\", \")",
        "path": "app/helpers/projects_helper.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "b3463187bc05cbc01a1ad5388bb40bfefcc741b9",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "let's remove `each` from here\n",
        "created_at": "2015-01-08T00:57:28Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629083",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629083"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629083"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629172",
        "pull_request_review_id": null,
        "id": 22629172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjI5MTcy",
        "diff_hunk": "@@ -22,4 +22,16 @@ def html_badge_code(project, ref)\n     url = status_project_url(project, ref: ref, format: 'png')\n     \"<a href='#{project_url(project, ref: ref)}'><img src='#{url}' /></a>\"\n   end\n+\n+  def runners_for_project(project)\n+    project.runners.each.map { |r| \"#\" + r.id.to_s }.join(\", \")\n+  end\n+\n+  def project_uses_specific_runner?(project)\n+    project.runners.present?",
        "path": "app/helpers/projects_helper.rb",
        "position": null,
        "original_position": 10,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "b3463187bc05cbc01a1ad5388bb40bfefcc741b9",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "any? is more suitable here\n",
        "created_at": "2015-01-08T00:59:42Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629172",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629172"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629419",
        "pull_request_review_id": null,
        "id": 22629419,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjI5NDE5",
        "diff_hunk": "@@ -22,4 +22,16 @@ def html_badge_code(project, ref)\n     url = status_project_url(project, ref: ref, format: 'png')\n     \"<a href='#{project_url(project, ref: ref)}'><img src='#{url}' /></a>\"\n   end\n+\n+  def runners_for_project(project)\n+    project.runners.each.map { |r| \"#\" + r.id.to_s }.join(\", \")\n+  end\n+\n+  def project_uses_specific_runner?(project)\n+    project.runners.present?\n+  end\n+\n+  def no_shared_runners_for_project?(project)\n+    Runner.count.nonzero? && project.runners.blank? && Runner.shared.count.zero?",
        "path": "app/helpers/projects_helper.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "c6e8f2c261e7785813dbff9caf5d643d0a842177",
        "original_commit_id": "b3463187bc05cbc01a1ad5388bb40bfefcc741b9",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why not just like\n`Runner.shared.blank?` ?\n",
        "created_at": "2015-01-08T01:05:59Z",
        "updated_at": "2015-01-12T20:51:20Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629419",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/22629419"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/488#discussion_r22629419"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/488"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24120413",
        "pull_request_review_id": null,
        "id": 24120413,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTIwNDEz",
        "diff_hunk": "@@ -74,13 +82,16 @@ You can use either MySQL or PostgreSQL.\n \n     # Grant proper permissions to the MySQL User\n     mysql> GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlab_ci_production`.* TO 'gitlab_ci'@'localhost';\n-    \n+\n     # Logout MYSQL\n     mysql> exit;\n-    \n+\n ### PostgreSQL\n \n-    # Install the database packages\n+    # Install the database packages (Ubuntu 14.04)\n+    sudo apt-get install -y postgresql-9.3 libpq-dev\n+",
        "path": "doc/install/installation.md",
        "position": 50,
        "original_position": 50,
        "commit_id": "8be6710b4673f0dbbb302ffc2b686985caafe3f0",
        "original_commit_id": "8be6710b4673f0dbbb302ffc2b686985caafe3f0",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's the difference here?\n",
        "created_at": "2015-02-04T21:18:03Z",
        "updated_at": "2015-02-04T21:18:03Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/518#discussion_r24120413",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/518",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24120413"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/518#discussion_r24120413"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/518"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324242",
        "pull_request_review_id": null,
        "id": 24324242,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI0MjQy",
        "diff_hunk": "@@ -28,6 +28,61 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 32,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "edd07e7672f5d2ae761384415579b1ef8e1d1e59",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2015-02-09T12:17:04Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324242",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324242"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324242"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324243",
        "pull_request_review_id": null,
        "id": 24324243,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI0MjQz",
        "diff_hunk": "@@ -28,6 +28,61 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          project.jobs\n+        end\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 50,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "edd07e7672f5d2ae761384415579b1ef8e1d1e59",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [82/80]\n",
        "created_at": "2015-02-09T12:17:04Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324243",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324243"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324243"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324244",
        "pull_request_review_id": null,
        "id": 24324244,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI0MjQ0",
        "diff_hunk": "@@ -28,6 +28,61 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          project.jobs\n+        end\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          job = project.jobs.new({name: params[:name], commands: params[:commands]})",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 51,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "edd07e7672f5d2ae761384415579b1ef8e1d1e59",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]<br>Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2015-02-09T12:17:05Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324244",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324244"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324244"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324245",
        "pull_request_review_id": null,
        "id": 24324245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI0MjQ1",
        "diff_hunk": "@@ -28,6 +28,61 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          project.jobs\n+        end\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          job = project.jobs.new({name: params[:name], commands: params[:commands]})\n+\n+          if job.save\n+            present job, :with => Entities::Job\n+          else\n+            errors = web_hook.errors.full_messages.join(\", \")\n+            render_api_error!(errors, 400)\n+          end\n+        end\n+      end\n+\n+      # Delete a job for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   job_id (required) - The ID of the job to delete\n+      # Example Request\n+      #   DELETE /projects/:id/jobs/:job_id\n+      delete \":id/jobs/:job_id\" do\n+        project = Project.find(params[:id])\n+        job     = project.jobs.find_by_id(params[:job_id])\n+\n+        not_found! if project.blank? or job.blank?",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 73,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "edd07e7672f5d2ae761384415579b1ef8e1d1e59",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use `||` instead of `or`.\n",
        "created_at": "2015-02-09T12:17:05Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324245",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324245"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324246",
        "pull_request_review_id": null,
        "id": 24324246,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI0MjQ2",
        "diff_hunk": "@@ -28,6 +28,61 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          project.jobs\n+        end\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+          job = project.jobs.new({name: params[:name], commands: params[:commands]})\n+\n+          if job.save\n+            present job, :with => Entities::Job",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 54,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "edd07e7672f5d2ae761384415579b1ef8e1d1e59",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2015-02-09T12:17:05Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324246",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24324246"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24324246"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325287",
        "pull_request_review_id": null,
        "id": 24325287,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1Mjg3",
        "diff_hunk": "@@ -7,20 +7,21 @@ class Projects < Grape::API\n       # Register new webhook for project\n       #\n       # Parameters\n-      #   project_id (required) - The ID of a project\n+      #   id (required) - The ID of a project\n       #   web_hook (required) - WebHook URL\n       # Example Request\n-      #   POST /projects/:project_id/webhooks\n-      post \":project_id/webhooks\" do\n+      #   POST /projects/:id/webhooks\n+      post \":id/webhooks\" do\n         required_attributes! [:web_hook]\n \n-        project = Project.find(params[:project_id])\n+        project = Project.find(params[:id])\n \n-        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+        if project.present? \n+          && current_user.can_access_project?(project.gitlab_id)",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "1fa024d4301483a0a38623aca01b3c28bf9a7bd3",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tAMPER\n",
        "created_at": "2015-02-09T12:42:02Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325287",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325287"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325287"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325288",
        "pull_request_review_id": null,
        "id": 24325288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1Mjg4",
        "diff_hunk": "@@ -7,20 +7,21 @@ class Projects < Grape::API\n       # Register new webhook for project\n       #\n       # Parameters\n-      #   project_id (required) - The ID of a project\n+      #   id (required) - The ID of a project\n       #   web_hook (required) - WebHook URL\n       # Example Request\n-      #   POST /projects/:project_id/webhooks\n-      post \":project_id/webhooks\" do\n+      #   POST /projects/:id/webhooks\n+      post \":id/webhooks\" do\n         required_attributes! [:web_hook]\n \n-        project = Project.find(params[:project_id])\n+        project = Project.find(params[:id])\n \n-        if project.present? && current_user.can_access_project?(project.gitlab_id)\n+        if project.present? \n+          && current_user.can_access_project?(project.gitlab_id)\n           web_hook = project.web_hooks.new({url: params[:web_hook]})\n \n           if web_hook.save\n-            present web_hook, :with => Entities::WebHook\n+            present web_hook, :with Entities::WebHook",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "1fa024d4301483a0a38623aca01b3c28bf9a7bd3",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tCONSTANT\n",
        "created_at": "2015-02-09T12:42:02Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325288",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325288"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325289",
        "pull_request_review_id": null,
        "id": 24325289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1Mjg5",
        "diff_hunk": "@@ -28,6 +29,63 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present?\n+          && current_user.can_access_project?(project.gitlab_id)",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "1fa024d4301483a0a38623aca01b3c28bf9a7bd3",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tAMPER\n",
        "created_at": "2015-02-09T12:42:02Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325289",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325289"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325290",
        "pull_request_review_id": null,
        "id": 24325290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1Mjkw",
        "diff_hunk": "@@ -28,6 +29,63 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        if project.present?\n+          && current_user.can_access_project?(project.gitlab_id)\n+          project.jobs\n+        end\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        if project.present? && \n+          current_user.can_access_project?(project.gitlab_id)\n+          job_params = { name: params[:name], commands: params[:commands] }\n+          job = project.jobs.new(job_params)\n+          if job.save\n+            present job, :with Entities::Job",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 65,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "1fa024d4301483a0a38623aca01b3c28bf9a7bd3",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tCONSTANT\n",
        "created_at": "2015-02-09T12:42:02Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325290",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325290"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325560",
        "pull_request_review_id": null,
        "id": 24325560,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1NTYw",
        "diff_hunk": "@@ -28,6 +29,63 @@ class Projects < Grape::API\n         end\n       end\n \n+      # Retrieve all jobs for a project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      # Example Request\n+      #   GET /projects/:id/jobs\n+      get \":id/jobs\" do\n+        project = Project.find(params[:id])\n+\n+        not_found! if project.blank?\n+        unauthorized! unless current_user.can_access_project?(project.gitlab_id)\n+\n+        project.jobs\n+      end\n+\n+      # Register new job for project\n+      #\n+      # Parameters\n+      #   id (required) - The ID of a project\n+      #   name (required) - The job name\n+      #   commands (required) - The command line script for the job\n+      # Example Request\n+      #   POST /projects/:id/jobs\n+      post \":id/jobs\" do\n+        required_attributes! [:name, :commands]\n+\n+        project = Project.find(params[:id])\n+\n+        not_found! if project.blank?\n+        unauthorized! unless current_user.can_access_project?(project.gitlab_id)\n+\n+        job_params = { name: params[:name], commands: params[:commands] }\n+        job = project.jobs.new(job_params)\n+        if job.save\n+          present job, :with Entities::Job",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 66,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "a9d6711b8cde88c644494236fc9210805c9a0e37",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tCONSTANT\n",
        "created_at": "2015-02-09T12:48:48Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325560",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325560"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325560"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325778",
        "pull_request_review_id": null,
        "id": 24325778,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzI1Nzc4",
        "diff_hunk": "@@ -7,27 +7,86 @@ class Projects < Grape::API\n       # Register new webhook for project\n       #\n       # Parameters\n-      #   project_id (required) - The ID of a project\n+      #   id (required) - The ID of a project\n       #   web_hook (required) - WebHook URL\n       # Example Request\n-      #   POST /projects/:project_id/webhooks\n-      post \":project_id/webhooks\" do\n+      #   POST /projects/:id/webhooks\n+      post \":id/webhooks\" do\n         required_attributes! [:web_hook]\n+        project = Project.find(params[:id])\n \n-        project = Project.find(params[:project_id])\n+        not_found! if project.blank?\n+        unauthorized! unless current_user.can_access_project?(project.gitlab_id)\n \n-        if project.present? && current_user.can_access_project?(project.gitlab_id)\n-          web_hook = project.web_hooks.new({url: params[:web_hook]})\n+        web_hook = project.web_hooks.new({url: params[:web_hook]})\n+        if web_hook.save\n+          present web_hook, :with Entities::WebHook",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "5dc486d6dafcb2ed0af59c89078a74c46c62ab73",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unexpected token tCONSTANT\n",
        "created_at": "2015-02-09T12:53:53Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325778",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24325778"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24325778"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24381755",
        "pull_request_review_id": null,
        "id": 24381755,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzgxNzU1",
        "diff_hunk": "@@ -7,27 +7,86 @@ class Projects < Grape::API\n       # Register new webhook for project\n       #\n       # Parameters\n-      #   project_id (required) - The ID of a project\n+      #   id (required) - The ID of a project\n       #   web_hook (required) - WebHook URL\n       # Example Request\n-      #   POST /projects/:project_id/webhooks\n-      post \":project_id/webhooks\" do\n+      #   POST /projects/:id/webhooks\n+      post \":id/webhooks\" do\n         required_attributes! [:web_hook]\n+        project = Project.find(params[:id])\n \n-        project = Project.find(params[:project_id])\n+        not_found! if project.blank?\n+        unauthorized! unless current_user.can_access_project?(project.gitlab_id)\n \n-        if project.present? && current_user.can_access_project?(project.gitlab_id)\n-          web_hook = project.web_hooks.new({url: params[:web_hook]})\n+        web_hook = project.web_hooks.new({url: params[:web_hook]})",
        "path": "lib/api/projects.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "354aa0f17b3dd4695fc869c27d38526819c9a97a",
        "original_commit_id": "e32ead2a3bfd892489f6d18421f117129cae5531",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.\n",
        "created_at": "2015-02-10T01:14:10Z",
        "updated_at": "2015-02-10T01:19:32Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24381755",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/24381755"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/545#discussion_r24381755"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/545"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557159",
        "pull_request_review_id": null,
        "id": 25557159,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTU3MTU5",
        "diff_hunk": "@@ -16,9 +16,11 @@\n   end\n \n   describe 'latest_version_raw' do\n-    it 'should be latest version for GitLab 5' do\n+    it 'should be latest version for GitLab' do\n       upgrader.stub(current_version_raw: \"3.0.0\")\n-      upgrader.latest_version_raw.should == \"v3.2.0\"\n+      upgrader.stub(git_tags: [\n+        \"1b5bee25b51724214c7a3307ef94027ab93ec982        refs/tags/v7.8.1\"])",
        "path": "spec/lib/upgrader_spec.rb",
        "position": null,
        "original_position": 9,
        "commit_id": "9b9fb3b637599817268a06591ad2e02edebb2233",
        "original_commit_id": "5255f3076dafaaf47ff873f3542324e4d0b7866a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-02-28T12:30:18Z",
        "updated_at": "2015-02-28T12:31:14Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/554#discussion_r25557159",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/554",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557159"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/554#discussion_r25557159"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557160",
        "pull_request_review_id": null,
        "id": 25557160,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTU3MTYw",
        "diff_hunk": "@@ -16,9 +16,11 @@\n   end\n \n   describe 'latest_version_raw' do\n-    it 'should be latest version for GitLab 5' do\n+    it 'should be latest version for GitLab' do\n       upgrader.stub(current_version_raw: \"3.0.0\")\n-      upgrader.latest_version_raw.should == \"v3.2.0\"\n+      upgrader.stub(git_tags: [\n+        \"1b5bee25b51724214c7a3307ef94027ab93ec982        refs/tags/v7.8.1\"])\n+      upgrader.latest_version_raw.should == \"v7.8.1\"",
        "path": "spec/lib/upgrader_spec.rb",
        "position": null,
        "original_position": 10,
        "commit_id": "9b9fb3b637599817268a06591ad2e02edebb2233",
        "original_commit_id": "5255f3076dafaaf47ff873f3542324e4d0b7866a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-02-28T12:30:18Z",
        "updated_at": "2015-02-28T12:31:14Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/554#discussion_r25557160",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/554",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557160"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/554#discussion_r25557160"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/554"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505595",
        "pull_request_review_id": null,
        "id": 25505595,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTA1NTk1",
        "diff_hunk": "@@ -91,4 +89,9 @@ def prompt(message, choices = nil)\n     end while !choices.include?(answer)\n     answer\n   end\n+\n+  def git_tags\n+    git_tags = `git ls-remote --tags origin | grep tags\\/v#{current_version.major}`\n+    git_tags = git_tags.lines.to_a.select { |version| version =~ /v\\d\\.\\d\\.\\d\\Z/ }",
        "path": "lib/upgrader.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "b8e1c76dea7db463d9498f19f6c165cd3a4db7e8",
        "original_commit_id": "b770d1ed4d05308f2ea81b2326e194b763ea5fdc",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `git_tags`.<br>Line is too long. [82/80]\n",
        "created_at": "2015-02-27T13:25:58Z",
        "updated_at": "2015-02-28T12:38:36Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505595",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505595"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505595"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505596",
        "pull_request_review_id": null,
        "id": 25505596,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTA1NTk2",
        "diff_hunk": "@@ -91,4 +89,9 @@ def prompt(message, choices = nil)\n     end while !choices.include?(answer)\n     answer\n   end\n+\n+  def git_tags\n+    git_tags = `git ls-remote --tags origin | grep tags\\/v#{current_version.major}`",
        "path": "lib/upgrader.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "b8e1c76dea7db463d9498f19f6c165cd3a4db7e8",
        "original_commit_id": "b770d1ed4d05308f2ea81b2326e194b763ea5fdc",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [83/80]\n",
        "created_at": "2015-02-27T13:25:58Z",
        "updated_at": "2015-02-28T12:38:36Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505596",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505596"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505596"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505597",
        "pull_request_review_id": null,
        "id": 25505597,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTA1NTk3",
        "diff_hunk": "@@ -18,7 +18,8 @@\n   describe 'latest_version_raw' do\n     it 'should be latest version for GitLab 5' do\n       upgrader.stub(current_version_raw: \"3.0.0\")\n-      upgrader.latest_version_raw.should == \"v3.2.0\"\n+      upgrader.stub(git_tags: [\"1b5bee25b51724214c7a3307ef94027ab93ec982        refs/tags/v7.8.1\"])",
        "path": "spec/lib/upgrader_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "b8e1c76dea7db463d9498f19f6c165cd3a4db7e8",
        "original_commit_id": "b770d1ed4d05308f2ea81b2326e194b763ea5fdc",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [99/80]\n",
        "created_at": "2015-02-27T13:25:58Z",
        "updated_at": "2015-02-28T12:38:36Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505597",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25505597"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25505597"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557193",
        "pull_request_review_id": null,
        "id": 25557193,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTU3MTkz",
        "diff_hunk": "@@ -5,6 +5,10 @@ def show\n   end\n \n   def oauth2\n-    render layout: \"empty\"\n+    if valid_config?\n+      redirect_to root_path\n+    else\n+      render layout: \"empty\"",
        "path": "app/controllers/helps_controller.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "b8e1c76dea7db463d9498f19f6c165cd3a4db7e8",
        "original_commit_id": "f54a50244a371af524bcaceec641b8abb9501863",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-02-28T12:37:17Z",
        "updated_at": "2015-02-28T12:38:36Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25557193",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557193"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/550#discussion_r25557193"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/550"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557813",
        "pull_request_review_id": null,
        "id": 25557813,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTU3ODEz",
        "diff_hunk": "@@ -15,8 +15,8 @@ def initialize(project)\n \n     def push(from, to, format)\n       @labels << from.strftime(format)\n-      @total << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).count\n-      @success << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).success.count\n+      @total << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).count(:all)",
        "path": "lib/charts.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "76e531545382b4e4848b4d00502daaa02ac3d488",
        "original_commit_id": "c813b684576d7f9a68e2fe05be20c0a97a8f2d0a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [109/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-02-28T14:22:52Z",
        "updated_at": "2015-02-28T14:24:52Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/556#discussion_r25557813",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/556",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557813"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/556#discussion_r25557813"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/556"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557814",
        "pull_request_review_id": null,
        "id": 25557814,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTU3ODE0",
        "diff_hunk": "@@ -15,8 +15,8 @@ def initialize(project)\n \n     def push(from, to, format)\n       @labels << from.strftime(format)\n-      @total << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).count\n-      @success << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).success.count\n+      @total << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).count(:all)\n+      @success << project.builds.where(\"? > builds.created_at AND builds.created_at > ?\", to, from).success.count(:all)",
        "path": "lib/charts.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "76e531545382b4e4848b4d00502daaa02ac3d488",
        "original_commit_id": "c813b684576d7f9a68e2fe05be20c0a97a8f2d0a",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [119/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-02-28T14:22:52Z",
        "updated_at": "2015-02-28T14:24:52Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/556#discussion_r25557814",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/556",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/25557814"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/556#discussion_r25557814"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/556"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559045",
        "pull_request_review_id": null,
        "id": 27559045,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDQ1",
        "diff_hunk": "@@ -26,13 +26,30 @@ class Job < ActiveRecord::Base\n   scope :parallel, ->(){ where(job_type: \"parallel\") }\n   scope :deploy, ->(){ where(job_type: \"deploy\") }\n \n-  validate :refs, length: { maximum: 100 }\n-  \n+  validate :refs, length: { maximum: 255 }\n+\n   def deploy?\n     job_type == \"deploy\"\n   end\n \n   def run_for_ref?(ref)\n-    refs.blank? || refs.split(\",\").map{|ref| ref.strip}.include?(ref)\n+    refs.blank? || refs_include_ref?(ref)\n+  end\n+\n+  def refs_include_ref?(ref)\n+    includes = false\n+    # extract the refs - split by \",\"\n+    # is tricky because they can be in a regex too\n+    refs.scan(/\\w+|\\/+.*?\\/+/).map{|re| re.strip}.each do |re|\n+      # is regexp or not\n+      if re.start_with?(\"/\") && re.end_with?(\"/\")\n+        includes = !ref.match(/#{re.delete(\"/\")}/i).nil?\n+      else\n+        includes = ref == re\n+      end\n+\n+      break if includes == true\n+    end\n+    return includes",
        "path": "app/models/job.rb",
        "position": null,
        "original_position": 31,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `return` detected.\n",
        "created_at": "2015-04-01T10:39:32Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559045",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559045"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559045"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559046",
        "pull_request_review_id": null,
        "id": 27559046,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDQ2",
        "diff_hunk": "@@ -26,13 +26,30 @@ class Job < ActiveRecord::Base\n   scope :parallel, ->(){ where(job_type: \"parallel\") }\n   scope :deploy, ->(){ where(job_type: \"deploy\") }\n \n-  validate :refs, length: { maximum: 100 }\n-  \n+  validate :refs, length: { maximum: 255 }\n+\n   def deploy?\n     job_type == \"deploy\"\n   end\n \n   def run_for_ref?(ref)\n-    refs.blank? || refs.split(\",\").map{|ref| ref.strip}.include?(ref)\n+    refs.blank? || refs_include_ref?(ref)\n+  end\n+\n+  def refs_include_ref?(ref)\n+    includes = false\n+    # extract the refs - split by \",\"\n+    # is tricky because they can be in a regex too\n+    refs.scan(/\\w+|\\/+.*?\\/+/).map{|re| re.strip}.each do |re|",
        "path": "app/models/job.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space missing to the left of {.<br>Space between { and | missing.<br>Space missing inside }.<br>Pass `&:strip` as an argument to `map` instead of a block.\n",
        "created_at": "2015-04-01T10:39:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559046",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559046"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559046"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559047",
        "pull_request_review_id": null,
        "id": 27559047,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDQ3",
        "diff_hunk": "@@ -26,13 +26,30 @@ class Job < ActiveRecord::Base\n   scope :parallel, ->(){ where(job_type: \"parallel\") }\n   scope :deploy, ->(){ where(job_type: \"deploy\") }\n \n-  validate :refs, length: { maximum: 100 }\n-  \n+  validate :refs, length: { maximum: 255 }\n+\n   def deploy?\n     job_type == \"deploy\"\n   end\n \n   def run_for_ref?(ref)\n-    refs.blank? || refs.split(\",\").map{|ref| ref.strip}.include?(ref)\n+    refs.blank? || refs_include_ref?(ref)\n+  end\n+\n+  def refs_include_ref?(ref)\n+    includes = false\n+    # extract the refs - split by \",\"\n+    # is tricky because they can be in a regex too\n+    refs.scan(/\\w+|\\/+.*?\\/+/).map{|re| re.strip}.each do |re|\n+      # is regexp or not\n+      if re.start_with?(\"/\") && re.end_with?(\"/\")",
        "path": "app/models/job.rb",
        "position": null,
        "original_position": 23,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559047",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559047"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559047"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559048",
        "pull_request_review_id": null,
        "id": 27559048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDQ4",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [148/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559048",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559048"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559049",
        "pull_request_review_id": null,
        "id": 27559049,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDQ5",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559049",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559049"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559049"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559050",
        "pull_request_review_id": null,
        "id": 27559050,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDUw",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false\n+      job.run_for_ref?(\"testing\").should be_true",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 18,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559050",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559050"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559050"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559051",
        "pull_request_review_id": null,
        "id": 27559051,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDUx",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false\n+      job.run_for_ref?(\"testing\").should be_true\n+      job.run_for_ref?(\"testing-v0.1.0\").should be_true",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 19,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:34Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559051",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559051"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559051"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559052",
        "pull_request_review_id": null,
        "id": 27559052,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDUy",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false\n+      job.run_for_ref?(\"testing\").should be_true\n+      job.run_for_ref?(\"testing-v0.1.0\").should be_true\n+      job.run_for_ref?(\"unstable\").should be_true",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 20,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:34Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559052",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559052"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559052"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559053",
        "pull_request_review_id": null,
        "id": 27559053,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDUz",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false\n+      job.run_for_ref?(\"testing\").should be_true\n+      job.run_for_ref?(\"testing-v0.1.0\").should be_true\n+      job.run_for_ref?(\"unstable\").should be_true\n+      job.run_for_ref?(\"unstable-v0.1.0\").should be_true",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 21,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:34Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559053",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559053"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559053"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559054",
        "pull_request_review_id": null,
        "id": 27559054,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5MDU0",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"\n       job.run_for_ref?(\"master\").should be_true\n       job.run_for_ref?(\"staging\").should be_true\n+      job.run_for_ref?(\"staging-v0.1.0\").should be_false\n+      job.run_for_ref?(\"testing\").should be_true\n+      job.run_for_ref?(\"testing-v0.1.0\").should be_true\n+      job.run_for_ref?(\"unstable\").should be_true\n+      job.run_for_ref?(\"unstable-v0.1.0\").should be_true\n+      job.run_for_ref?(\"unstable-0.1.0\").should be_false",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T10:39:34Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559054",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559054"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559054"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559475",
        "pull_request_review_id": null,
        "id": 27559475,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU5NDc1",
        "diff_hunk": "@@ -30,9 +30,15 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, /testing.*/, /^unstable$/, /unstable-v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/\"",
        "path": "spec/models/job_spec.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "a04cae1fb0528b1daad569c1fc7c1e568e1df2b8",
        "user": {
            "login": "pixel-shock",
            "id": 3963057,
            "node_id": "MDQ6VXNlcjM5NjMwNTc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3963057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pixel-shock",
            "html_url": "https://github.com/pixel-shock",
            "followers_url": "https://api.github.com/users/pixel-shock/followers",
            "following_url": "https://api.github.com/users/pixel-shock/following{/other_user}",
            "gists_url": "https://api.github.com/users/pixel-shock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pixel-shock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pixel-shock/subscriptions",
            "organizations_url": "https://api.github.com/users/pixel-shock/orgs",
            "repos_url": "https://api.github.com/users/pixel-shock/repos",
            "events_url": "https://api.github.com/users/pixel-shock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pixel-shock/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should I fix a \"line too long\" hint on a spec file?\n",
        "created_at": "2015-04-01T10:48:32Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559475",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27559475"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27559475"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27562679",
        "pull_request_review_id": null,
        "id": 27562679,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTYyNjc5",
        "diff_hunk": "@@ -26,13 +26,21 @@ class Job < ActiveRecord::Base\n   scope :parallel, ->(){ where(job_type: \"parallel\") }\n   scope :deploy, ->(){ where(job_type: \"deploy\") }\n \n-  validate :refs, length: { maximum: 100 }\n-  \n+  validate :refs, length: { maximum: 255 }\n+\n   def deploy?\n     job_type == \"deploy\"\n   end\n \n   def run_for_ref?(ref)\n-    refs.blank? || refs.split(\",\").map{|ref| ref.strip}.include?(ref)\n+    if !refs.blank?\n+      refs.split(\",\").map(&:strip).each do |refsVal|",
        "path": "app/models/job.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "6b4148c8ca04ff3332be6452b8d6cfc6870bc780",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T11:58:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27562679",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27562679"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27562679"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27562680",
        "pull_request_review_id": null,
        "id": 27562680,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTYyNjgw",
        "diff_hunk": "@@ -30,9 +30,14 @@\n     end\n \n     it \"allows run for any ref in refs params\" do\n-      job = FactoryGirl.create :job, project: project, refs: \"master, staging\"\n+      job = FactoryGirl.create :job, project: project, refs: \"master, staging, tags/testing*\"",
        "path": "spec/models/job_spec.rb",
        "position": 14,
        "original_position": 14,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "6b4148c8ca04ff3332be6452b8d6cfc6870bc780",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [93/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-01T11:58:33Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27562680",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27562680"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27562680"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27576358",
        "pull_request_review_id": null,
        "id": 27576358,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTc2MzU4",
        "diff_hunk": "@@ -26,13 +26,21 @@ class Job < ActiveRecord::Base\n   scope :parallel, ->(){ where(job_type: \"parallel\") }\n   scope :deploy, ->(){ where(job_type: \"deploy\") }\n \n-  validate :refs, length: { maximum: 100 }\n-  \n+  validate :refs, length: { maximum: 255 }\n+\n   def deploy?\n     job_type == \"deploy\"\n   end\n \n   def run_for_ref?(ref)\n-    refs.blank? || refs.split(\",\").map{|ref| ref.strip}.include?(ref)\n+    if !refs.blank?\n+      refs.split(\",\").map(&:strip).each do |refsVal|",
        "path": "app/models/job.rb",
        "position": null,
        "original_position": 15,
        "commit_id": "8fd382d1d17fddc5c7aa3924552fab5af849db7d",
        "original_commit_id": "6b4148c8ca04ff3332be6452b8d6cfc6870bc780",
        "user": {
            "login": "vsizov",
            "id": 417636,
            "node_id": "MDQ6VXNlcjQxNzYzNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/417636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vsizov",
            "html_url": "https://github.com/vsizov",
            "followers_url": "https://api.github.com/users/vsizov/followers",
            "following_url": "https://api.github.com/users/vsizov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vsizov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vsizov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vsizov/subscriptions",
            "organizations_url": "https://api.github.com/users/vsizov/orgs",
            "repos_url": "https://api.github.com/users/vsizov/repos",
            "events_url": "https://api.github.com/users/vsizov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vsizov/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "CamelCase is not ruby style :)\n",
        "created_at": "2015-04-01T14:54:49Z",
        "updated_at": "2015-04-01T15:29:00Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27576358",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/27576358"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/573#discussion_r27576358"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/573"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324438",
        "pull_request_review_id": null,
        "id": 29324438,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDM4",
        "diff_hunk": "@@ -119,7 +119,7 @@ def no_cache\n \n   def project_params\n     params.require(:project).permit(:name, :path, :timeout, :token, :timeout_in_minutes,\n-    :default_ref, :gitlab_url, :always_build, :polling_interval,\n+    :default_ref, :gitlab_url, :always_build, :polling_interval, :cache_pattern,",
        "path": "app/controllers/projects_controller.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2015-04-29T10:27:19Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324438",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324438"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324438"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324439",
        "pull_request_review_id": null,
        "id": 29324439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDM5",
        "diff_hunk": "@@ -46,7 +47,7 @@ class Project < ActiveRecord::Base\n   # Validations\n   #\n   validates_presence_of :name, :timeout, :token, :default_ref,\n-    :gitlab_url, :ssh_url_to_repo, :gitlab_id\n+    :gitlab_url, :ssh_url_to_repo, :gitlab_id, :cache_pattern",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 13,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2015-04-29T10:27:20Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324439",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324439"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324441",
        "pull_request_review_id": null,
        "id": 29324441,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDQx",
        "diff_hunk": "@@ -166,6 +167,14 @@ def timeout_in_minutes=(value)\n     self.timeout = value.to_i * 60\n   end\n \n+  def cache_pattern_list\n+    self.cache_pattern.split(',').map(&:strip)",
        "path": "app/models/project.rb",
        "position": null,
        "original_position": 22,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Redundant `self` detected.\n",
        "created_at": "2015-04-29T10:27:20Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324441",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324441"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324441"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324443",
        "pull_request_review_id": null,
        "id": 29324443,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDQz",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+class AddCachePatternToProjects < ActiveRecord::Migration\n+  def change\n+    add_column :projects, :cache_pattern, :string, :default => \"\"",
        "path": "db/migrate/20150429072423_add_cache_pattern_to_projects.rb",
        "position": null,
        "original_position": 3,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.\n",
        "created_at": "2015-04-29T10:27:20Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324443",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324443"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324443"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324444",
        "pull_request_review_id": null,
        "id": 29324444,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDQ0",
        "diff_hunk": "@@ -9,7 +9,8 @@ class Commit < Grape::Entity\n \n     class Build < Grape::Entity\n       expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url,\n-        :before_sha, :timeout, :allow_git_fetch, :project_name\n+        :before_sha, :timeout, :allow_git_fetch, :project_name,",
        "path": "lib/api/entities.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2015-04-29T10:27:20Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324444",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324444"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324444"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324445",
        "pull_request_review_id": null,
        "id": 29324445,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NDQ1",
        "diff_hunk": "@@ -9,7 +9,8 @@ class Commit < Grape::Entity\n \n     class Build < Grape::Entity\n       expose :id, :commands, :path, :ref, :sha, :project_id, :repo_url,\n-        :before_sha, :timeout, :allow_git_fetch, :project_name\n+        :before_sha, :timeout, :allow_git_fetch, :project_name,\n+        :cache_pattern_list",
        "path": "lib/api/entities.rb",
        "position": 6,
        "original_position": 6,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "4e5ad1bdb4af5d7871ef2c71009f0ec73ffa4cf7",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2015-04-29T10:27:20Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324445",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29324445"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29324445"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29944749",
        "pull_request_review_id": null,
        "id": 29944749,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5OTQ0NzQ5",
        "diff_hunk": "@@ -121,6 +121,7 @@ def project_params\n     params.require(:project).permit(:path, :timeout, :timeout_in_minutes, :default_ref, :always_build,\n       :polling_interval, :public, :ssh_url_to_repo, :allow_git_fetch, :skip_refs, :email_recipients,\n       :email_add_pusher, :email_only_broken_builds, :coverage_regex, :shared_runners_enabled, :token,\n+      :cache_pattern,",
        "path": "app/controllers/projects_controller.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "8f73137027c0fca872b7a58144666feba17c9467",
        "original_commit_id": "de7808b07b6b5e1d6a1273a79ec4b6f8dcfee557",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Align the parameters of a method call if they span more than one line.\n",
        "created_at": "2015-05-08T14:40:59Z",
        "updated_at": "2015-05-09T07:13:44Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29944749",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/29944749"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/590#discussion_r29944749"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/590"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31622540",
        "pull_request_review_id": null,
        "id": 31622540,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIyNTQw",
        "diff_hunk": "@@ -52,6 +52,6 @@\n     it { page.should have_content 'Builds chart for last week' }\n     it { page.should have_content 'Builds chart for last month' }\n     it { page.should have_content 'Builds chart for last year' }\n-    it { page.should have_content 'Commit duration in minutes for last 30 commits' }\n+    it { page.should have_content 'Build duration in minutes for last 30 commits' }",
        "path": "spec/features/projects_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "85f336323024e5c4c7a354d3e866fa53996ab3dd",
        "original_commit_id": "4c37a888230c229cecd932246129b72e32d27426",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [83/80]\n",
        "created_at": "2015-06-03T13:36:21Z",
        "updated_at": "2015-06-05T07:54:55Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31622540",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31622540"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31622540"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31623141",
        "pull_request_review_id": null,
        "id": 31623141,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIzMTQx",
        "diff_hunk": "@@ -52,6 +52,7 @@\n     it { page.should have_content 'Builds chart for last week' }\n     it { page.should have_content 'Builds chart for last month' }\n     it { page.should have_content 'Builds chart for last year' }\n-    it { page.should have_content 'Commit duration in minutes for last 30 commits' }\n+    it { page.should have_content \n+         'Build duration in minutes for last 30 commits' }",
        "path": "spec/features/projects_spec.rb",
        "position": null,
        "original_position": 6,
        "commit_id": "85f336323024e5c4c7a354d3e866fa53996ab3dd",
        "original_commit_id": "5ca6f70f7cf4580114472724db421e898643ed8f",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Expression at 56, 58 should be on its own line.\n",
        "created_at": "2015-06-03T13:41:47Z",
        "updated_at": "2015-06-05T07:54:55Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31623141",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31623141"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31623141"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31623142",
        "pull_request_review_id": null,
        "id": 31623142,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjIzMTQy",
        "diff_hunk": "@@ -52,6 +52,7 @@\n     it { page.should have_content 'Builds chart for last week' }\n     it { page.should have_content 'Builds chart for last month' }\n     it { page.should have_content 'Builds chart for last year' }\n-    it { page.should have_content 'Commit duration in minutes for last 30 commits' }\n+    it { page.should have_content ",
        "path": "spec/features/projects_spec.rb",
        "position": null,
        "original_position": 5,
        "commit_id": "85f336323024e5c4c7a354d3e866fa53996ab3dd",
        "original_commit_id": "5ca6f70f7cf4580114472724db421e898643ed8f",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Avoid using {...} for multi-line blocks.<br>Block body expression is on the same line as the block start.<br>Trailing whitespace detected.\n",
        "created_at": "2015-06-03T13:41:47Z",
        "updated_at": "2015-06-05T07:54:55Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31623142",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31623142"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31623142"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31793648",
        "pull_request_review_id": null,
        "id": 31793648,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNzkzNjQ4",
        "diff_hunk": "@@ -52,6 +52,6 @@\n     it { page.should have_content 'Builds chart for last week' }\n     it { page.should have_content 'Builds chart for last month' }\n     it { page.should have_content 'Builds chart for last year' }\n-    it { page.should have_content 'Commit duration in minutes for last 30 commits' }\n+    it { page.should have_content 'Builds duration in minutes for last 30 commits' }",
        "path": "spec/features/projects_spec.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "85f336323024e5c4c7a354d3e866fa53996ab3dd",
        "original_commit_id": "85f336323024e5c4c7a354d3e866fa53996ab3dd",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [84/80]\n",
        "created_at": "2015-06-05T07:54:59Z",
        "updated_at": "2015-06-05T07:54:59Z",
        "html_url": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31793648",
        "pull_request_url": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/comments/31793648"
            },
            "html": {
                "href": "https://github.com/gitlabhq/gitlab-ci/pull/601#discussion_r31793648"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/gitlabhq/gitlab-ci/pulls/601"
            }
        }
    }
]