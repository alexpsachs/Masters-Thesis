[
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4580167",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4580167",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4580167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODAxNjc=",
        "user": {
            "login": "Kalyse",
            "id": 199760,
            "node_id": "MDQ6VXNlcjE5OTc2MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/199760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kalyse",
            "html_url": "https://github.com/Kalyse",
            "followers_url": "https://api.github.com/users/Kalyse/followers",
            "following_url": "https://api.github.com/users/Kalyse/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kalyse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kalyse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kalyse/subscriptions",
            "organizations_url": "https://api.github.com/users/Kalyse/orgs",
            "repos_url": "https://api.github.com/users/Kalyse/repos",
            "events_url": "https://api.github.com/users/Kalyse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kalyse/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T18:26:02Z",
        "updated_at": "2012-03-19T18:26:02Z",
        "author_association": "NONE",
        "body": "Just rename the project to tesseract.js. \n\nTesseract is a perfect name for Square. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4580722",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4580722",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4580722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA3MjI=",
        "user": {
            "login": "stevegraham",
            "id": 18622,
            "node_id": "MDQ6VXNlcjE4NjIy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevegraham",
            "html_url": "https://github.com/stevegraham",
            "followers_url": "https://api.github.com/users/stevegraham/followers",
            "following_url": "https://api.github.com/users/stevegraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevegraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevegraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevegraham/subscriptions",
            "organizations_url": "https://api.github.com/users/stevegraham/orgs",
            "repos_url": "https://api.github.com/users/stevegraham/repos",
            "events_url": "https://api.github.com/users/stevegraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevegraham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T18:52:06Z",
        "updated_at": "2012-03-19T18:52:06Z",
        "author_association": "NONE",
        "body": "+1 to renaming this project. Also merely appending js to the name suggests this is a js implementation of the Tesseract OCR engine. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4580854",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4580854",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4580854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA4NTQ=",
        "user": {
            "login": "mindcrime",
            "id": 231338,
            "node_id": "MDQ6VXNlcjIzMTMzOA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/231338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mindcrime",
            "html_url": "https://github.com/mindcrime",
            "followers_url": "https://api.github.com/users/mindcrime/followers",
            "following_url": "https://api.github.com/users/mindcrime/following{/other_user}",
            "gists_url": "https://api.github.com/users/mindcrime/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mindcrime/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mindcrime/subscriptions",
            "organizations_url": "https://api.github.com/users/mindcrime/orgs",
            "repos_url": "https://api.github.com/users/mindcrime/repos",
            "events_url": "https://api.github.com/users/mindcrime/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mindcrime/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T18:58:18Z",
        "updated_at": "2012-03-19T18:58:18Z",
        "author_association": "NONE",
        "body": "+1 for renaming.  Tesseract (OCR)  is pretty well established with that name already.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4581017",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4581017",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4581017,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEwMTc=",
        "user": {
            "login": "robraux",
            "id": 145411,
            "node_id": "MDQ6VXNlcjE0NTQxMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/145411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robraux",
            "html_url": "https://github.com/robraux",
            "followers_url": "https://api.github.com/users/robraux/followers",
            "following_url": "https://api.github.com/users/robraux/following{/other_user}",
            "gists_url": "https://api.github.com/users/robraux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robraux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robraux/subscriptions",
            "organizations_url": "https://api.github.com/users/robraux/orgs",
            "repos_url": "https://api.github.com/users/robraux/repos",
            "events_url": "https://api.github.com/users/robraux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robraux/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:06:27Z",
        "updated_at": "2012-03-19T19:06:27Z",
        "author_association": "NONE",
        "body": "Agreed. Interesting project, but definitely confused me immediately. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4581054",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4581054",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4581054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEwNTQ=",
        "user": {
            "login": "amoffat",
            "id": 259113,
            "node_id": "MDQ6VXNlcjI1OTExMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amoffat",
            "html_url": "https://github.com/amoffat",
            "followers_url": "https://api.github.com/users/amoffat/followers",
            "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
            "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
            "organizations_url": "https://api.github.com/users/amoffat/orgs",
            "repos_url": "https://api.github.com/users/amoffat/repos",
            "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amoffat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:07:44Z",
        "updated_at": "2012-03-19T19:07:44Z",
        "author_association": "NONE",
        "body": "-1, leave it.  Tesseract is a fitting name.  We don't name people completely unique names, or insist that a person with a name already taken change it, why do it for software?  \"But there's already an established person with that name!\"\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4581094",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4581094",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4581094,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEwOTQ=",
        "user": {
            "login": "stevegraham",
            "id": 18622,
            "node_id": "MDQ6VXNlcjE4NjIy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/18622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevegraham",
            "html_url": "https://github.com/stevegraham",
            "followers_url": "https://api.github.com/users/stevegraham/followers",
            "following_url": "https://api.github.com/users/stevegraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevegraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevegraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevegraham/subscriptions",
            "organizations_url": "https://api.github.com/users/stevegraham/orgs",
            "repos_url": "https://api.github.com/users/stevegraham/repos",
            "events_url": "https://api.github.com/users/stevegraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevegraham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:09:24Z",
        "updated_at": "2012-03-19T19:09:24Z",
        "author_association": "NONE",
        "body": "@amoffat stay tuned for this new js library i'm working on. I'm going to call it \"Linux\" :P\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4581406",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-4581406",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 4581406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODE0MDY=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:23:08Z",
        "updated_at": "2012-03-19T19:23:22Z",
        "author_association": "COLLABORATOR",
        "body": "Hmm, this failing test case didn't actually reproduce the problem, because this quicksort implementation isn't stable.\n\nI've pushed a new test that demonstrates the issue; namely taking ages to sort an array with 50% NaNs (does the same thing for undefined values). I think the stack limit in browsers must be much lower than in Node.js.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4581748",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4581748",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4581748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODE3NDg=",
        "user": {
            "login": "carbocation",
            "id": 218804,
            "node_id": "MDQ6VXNlcjIxODgwNA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/218804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carbocation",
            "html_url": "https://github.com/carbocation",
            "followers_url": "https://api.github.com/users/carbocation/followers",
            "following_url": "https://api.github.com/users/carbocation/following{/other_user}",
            "gists_url": "https://api.github.com/users/carbocation/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carbocation/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carbocation/subscriptions",
            "organizations_url": "https://api.github.com/users/carbocation/orgs",
            "repos_url": "https://api.github.com/users/carbocation/repos",
            "events_url": "https://api.github.com/users/carbocation/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carbocation/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:40:23Z",
        "updated_at": "2012-03-19T19:40:23Z",
        "author_association": "NONE",
        "body": "This is a meaningful issue. I can already `brew search tesseract` or `aptitude search tesseract` to find the FOSS OCR software. It would be great for this project to have a different name, at least publicly.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4582114",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-4582114",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 4582114,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODIxMTQ=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T19:55:48Z",
        "updated_at": "2012-03-19T19:55:48Z",
        "author_association": "COLLABORATOR",
        "body": "Okay, here's a fix! The issue is occurring because `!(NaN <= NaN || NaN >= NaN)` (likewise for `undefined`).  Native sort moves these values to the end of the array, so for consistency it's simple enough to make a single pass and move such values to the end. Unfortunately it affects performance a bit, but perhaps it can be optimised by effectively performing this check on-the-fly elsewhere in the code.\n\nI also wondered if caching coerced values would be useful e.g. to avoid calling valueOf twice for every comparison for dates, but perhaps smart JS VMs already optimise for this.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4582585",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4582585",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4582585,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI1ODU=",
        "user": {
            "login": "amoffat",
            "id": 259113,
            "node_id": "MDQ6VXNlcjI1OTExMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amoffat",
            "html_url": "https://github.com/amoffat",
            "followers_url": "https://api.github.com/users/amoffat/followers",
            "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
            "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
            "organizations_url": "https://api.github.com/users/amoffat/orgs",
            "repos_url": "https://api.github.com/users/amoffat/repos",
            "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amoffat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T20:16:02Z",
        "updated_at": "2012-03-19T20:26:14Z",
        "author_association": "NONE",
        "body": "@stevegraham that's fine :)  To nerd out for a minute, this is kind of how I visualize it:\n\n```\nhow_fine = how_fitting * fitting_weight\nif has_name_collision:\n   how_fine -= audience_weight / collision_potential_audience_size\n   how_fine -= category_weight / collision_category_distance\n\nis_fine_name = how_fine > some_threshold\n```\n\nTesseract has a high `how_fitting`, because the name is pretty logical choice for the project and company.  `collision_potential_audience_size` is the ratio of this project's potential audience size to the existing audience size of the collision's project.  I think this is pretty high too (the audience of OCR guys is a lot smaller than data-slicing guys).  The `collision_category_distance` is pretty large too...OCR is in a pretty different space than data slicing.\n\nYour hypothetical js library...small `how_fitting`, small `collision_potential_audience_size`, and probably large `collision_category_distance`.  Probably doesn't meet the threshold, so \"Linux\" is a bad name :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4582624",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4582624",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4582624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODI2MjQ=",
        "user": {
            "login": "davidcelis",
            "id": 36873,
            "node_id": "MDQ6VXNlcjM2ODcz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/36873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidcelis",
            "html_url": "https://github.com/davidcelis",
            "followers_url": "https://api.github.com/users/davidcelis/followers",
            "following_url": "https://api.github.com/users/davidcelis/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidcelis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidcelis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidcelis/subscriptions",
            "organizations_url": "https://api.github.com/users/davidcelis/orgs",
            "repos_url": "https://api.github.com/users/davidcelis/repos",
            "events_url": "https://api.github.com/users/davidcelis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidcelis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T20:17:46Z",
        "updated_at": "2012-03-19T20:17:46Z",
        "author_association": "NONE",
        "body": "Naming software is too hard of a problem to worry about collision like this.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4583152",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4583152",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4583152,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxNTI=",
        "user": {
            "login": "terretta",
            "id": 1420610,
            "node_id": "MDQ6VXNlcjE0MjA2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1420610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terretta",
            "html_url": "https://github.com/terretta",
            "followers_url": "https://api.github.com/users/terretta/followers",
            "following_url": "https://api.github.com/users/terretta/following{/other_user}",
            "gists_url": "https://api.github.com/users/terretta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terretta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terretta/subscriptions",
            "organizations_url": "https://api.github.com/users/terretta/orgs",
            "repos_url": "https://api.github.com/users/terretta/repos",
            "events_url": "https://api.github.com/users/terretta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terretta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T20:45:03Z",
        "updated_at": "2012-03-19T20:45:03Z",
        "author_association": "NONE",
        "body": "Consider another name for the concept, such as _cubicprism_, that also conveniently enough helps convey what the project helps do: look at an OLAP cube in a different light.\n\n@amoffat \u2014 Wikipedia's http://en.wikipedia.org/wiki/Tesseract_(software) is not a disambiguation page. \"Collision potential\" = 100%.   And I doubt OCR has fewer users than data cubes.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4583297",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4583297",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4583297,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMyOTc=",
        "user": {
            "login": "amoffat",
            "id": 259113,
            "node_id": "MDQ6VXNlcjI1OTExMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amoffat",
            "html_url": "https://github.com/amoffat",
            "followers_url": "https://api.github.com/users/amoffat/followers",
            "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
            "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
            "organizations_url": "https://api.github.com/users/amoffat/orgs",
            "repos_url": "https://api.github.com/users/amoffat/repos",
            "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amoffat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T20:51:57Z",
        "updated_at": "2012-03-19T20:51:57Z",
        "author_association": "NONE",
        "body": "@terretta I know it's 100%...but I don't see how that changes my argument.  But I disagree on the audience size.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4584435",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4584435",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4584435,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQ0MzU=",
        "user": {
            "login": "terretta",
            "id": 1420610,
            "node_id": "MDQ6VXNlcjE0MjA2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1420610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terretta",
            "html_url": "https://github.com/terretta",
            "followers_url": "https://api.github.com/users/terretta/followers",
            "following_url": "https://api.github.com/users/terretta/following{/other_user}",
            "gists_url": "https://api.github.com/users/terretta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terretta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terretta/subscriptions",
            "organizations_url": "https://api.github.com/users/terretta/orgs",
            "repos_url": "https://api.github.com/users/terretta/repos",
            "events_url": "https://api.github.com/users/terretta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terretta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T21:46:30Z",
        "updated_at": "2012-03-19T21:46:30Z",
        "author_association": "NONE",
        "body": "@amoffat Most anyone I know with an Android or iOS phone has a smattering of document related apps with OCR, such as Evernote or JotNot.  Few have a data cube reporting visualizer, unless Google Analytics counts.  Same goes for desktop.  So I'm referencing the audience size of both devs _and end users_ who may use tools or see project credits in their apps, and saying more _use_ OCR.\n\nIn any case, with Google SERPs showing the number two link for the word [Tesseract](http://en.wikipedia.org/wiki/Tesseract_%28software%29) linking to the 25 year old project now funded by Google, seems like the discussion should already be over.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4586004",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4586004",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4586004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYwMDQ=",
        "user": {
            "login": "amoffat",
            "id": 259113,
            "node_id": "MDQ6VXNlcjI1OTExMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amoffat",
            "html_url": "https://github.com/amoffat",
            "followers_url": "https://api.github.com/users/amoffat/followers",
            "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
            "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
            "organizations_url": "https://api.github.com/users/amoffat/orgs",
            "repos_url": "https://api.github.com/users/amoffat/repos",
            "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amoffat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T23:17:35Z",
        "updated_at": "2012-03-19T23:18:18Z",
        "author_association": "NONE",
        "body": "@terretta You're muddling things.  My point is that the potential audience size for data analysis software, which is huge, is larger than people who know about the Tesseract OCR package.  People who use OCR in general do not count, because \"Tesseract\" is not a name collision to them.  It's only a name collision to people who know Tesseract OCR.  We can agree to disagree.\n\nArguing about this is stupid though.  It's not up to us :)  I just disagree with the idea that someone should change a fitting name because the name is already used for something.  Maybe the math guys should demand that Tesseract (OCR) be renamed something that isn't already used as a geometric concept, because, shit, that's been used since 1888!  :)  Double-edged sword.\n\nThat said, it's not a big deal either way\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4586295",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4586295",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4586295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYyOTU=",
        "user": {
            "login": "terretta",
            "id": 1420610,
            "node_id": "MDQ6VXNlcjE0MjA2MTA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1420610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/terretta",
            "html_url": "https://github.com/terretta",
            "followers_url": "https://api.github.com/users/terretta/followers",
            "following_url": "https://api.github.com/users/terretta/following{/other_user}",
            "gists_url": "https://api.github.com/users/terretta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/terretta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/terretta/subscriptions",
            "organizations_url": "https://api.github.com/users/terretta/orgs",
            "repos_url": "https://api.github.com/users/terretta/repos",
            "events_url": "https://api.github.com/users/terretta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/terretta/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-19T23:40:28Z",
        "updated_at": "2012-03-19T23:40:28Z",
        "author_association": "NONE",
        "body": "It is a big deal.  This kind of move by a well regarded player in the software community -- failure to self regulate a namespace collision with a highly regarded, well respected tool appearing under its own name in a decade of publications -- is what drives the continuing perception of a \"need\" for trademarks and patents.  Your argument that Square should be able to override the name regardless of history simply because this new tool may be more popular, is particularly graceless.\n\nBtw, it's not Tesseract OCR. It's just Tesseract.  Check out Linux Journal, July 2007, for example:\n\n> _Recently, I was looking again and found a project called Tesseract. Tesseract is the product of HP research efforts that occurred in the late 1980s and early 1990s. HP and UNLV placed it on SourceForge in 2005, and it is in the process of migrating to Google Code._\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4586847",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4586847",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4586847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY4NDc=",
        "user": {
            "login": "audionerd",
            "id": 23459,
            "node_id": "MDQ6VXNlcjIzNDU5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/23459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/audionerd",
            "html_url": "https://github.com/audionerd",
            "followers_url": "https://api.github.com/users/audionerd/followers",
            "following_url": "https://api.github.com/users/audionerd/following{/other_user}",
            "gists_url": "https://api.github.com/users/audionerd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/audionerd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/audionerd/subscriptions",
            "organizations_url": "https://api.github.com/users/audionerd/orgs",
            "repos_url": "https://api.github.com/users/audionerd/repos",
            "events_url": "https://api.github.com/users/audionerd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/audionerd/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T00:25:27Z",
        "updated_at": "2012-03-20T00:25:27Z",
        "author_association": "NONE",
        "body": "Call it Tesseractor because it acts on tesseracts.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4587287",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4587287",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4587287,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODcyODc=",
        "user": {
            "login": "amoffat",
            "id": 259113,
            "node_id": "MDQ6VXNlcjI1OTExMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amoffat",
            "html_url": "https://github.com/amoffat",
            "followers_url": "https://api.github.com/users/amoffat/followers",
            "following_url": "https://api.github.com/users/amoffat/following{/other_user}",
            "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions",
            "organizations_url": "https://api.github.com/users/amoffat/orgs",
            "repos_url": "https://api.github.com/users/amoffat/repos",
            "events_url": "https://api.github.com/users/amoffat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amoffat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T01:06:12Z",
        "updated_at": "2012-03-20T01:06:28Z",
        "author_association": "NONE",
        "body": "> It is a big deal. ...failure to self regulate a namespace collision ... is what drives the continuing perception of a \"need\" for trademarks and patents.\n\nI agree, it is clear the creator should commit seppuku to restore his honor.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4587374",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-4587374",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 4587374,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODczNzQ=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T01:15:11Z",
        "updated_at": "2012-03-20T01:15:11Z",
        "author_association": "NONE",
        "body": "Out of curiosity, why do you want to sort NaN values?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4587411",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-4587411",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 4587411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODc0MTE=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T01:20:41Z",
        "updated_at": "2012-03-20T01:20:41Z",
        "author_association": "COLLABORATOR",
        "body": "My test data had a field that was `undefined` for a large number of cases, which has the same comparative qualities as NaN. It's simple enough to work around but I can imagine it happening a lot in practice as real-world data doesn't always have consistent fields.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4587887",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4587887",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4587887,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODc4ODc=",
        "user": {
            "login": "benatkin",
            "id": 4126,
            "node_id": "MDQ6VXNlcjQxMjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benatkin",
            "html_url": "https://github.com/benatkin",
            "followers_url": "https://api.github.com/users/benatkin/followers",
            "following_url": "https://api.github.com/users/benatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/benatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/benatkin/orgs",
            "repos_url": "https://api.github.com/users/benatkin/repos",
            "events_url": "https://api.github.com/users/benatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T02:06:38Z",
        "updated_at": "2012-03-20T02:06:38Z",
        "author_association": "NONE",
        "body": "Of all the suggested names, I prefer _tesseract_. :trollface:\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4593495",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4593495",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4593495,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTM0OTU=",
        "user": {
            "login": "ironclad-zz",
            "id": 1168351,
            "node_id": "MDQ6VXNlcjExNjgzNTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1168351?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ironclad-zz",
            "html_url": "https://github.com/ironclad-zz",
            "followers_url": "https://api.github.com/users/ironclad-zz/followers",
            "following_url": "https://api.github.com/users/ironclad-zz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ironclad-zz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ironclad-zz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ironclad-zz/subscriptions",
            "organizations_url": "https://api.github.com/users/ironclad-zz/orgs",
            "repos_url": "https://api.github.com/users/ironclad-zz/repos",
            "events_url": "https://api.github.com/users/ironclad-zz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ironclad-zz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T11:38:13Z",
        "updated_at": "2012-03-20T11:38:13Z",
        "author_association": "NONE",
        "body": "+1 How about changing to 8-cell, octachoron or tetracube?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4595935",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4595935",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4595935,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTU5MzU=",
        "user": {
            "login": "jkuhnert",
            "id": 151783,
            "node_id": "MDQ6VXNlcjE1MTc4Mw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/151783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkuhnert",
            "html_url": "https://github.com/jkuhnert",
            "followers_url": "https://api.github.com/users/jkuhnert/followers",
            "following_url": "https://api.github.com/users/jkuhnert/following{/other_user}",
            "gists_url": "https://api.github.com/users/jkuhnert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jkuhnert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jkuhnert/subscriptions",
            "organizations_url": "https://api.github.com/users/jkuhnert/orgs",
            "repos_url": "https://api.github.com/users/jkuhnert/repos",
            "events_url": "https://api.github.com/users/jkuhnert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jkuhnert/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T14:09:18Z",
        "updated_at": "2012-03-20T14:09:18Z",
        "author_association": "NONE",
        "body": "Have to agree with @benatkin, the project name should be changed to tesseract. Kind of has a nice ring to it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4604279",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-4604279",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 4604279,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQyNzk=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T20:07:35Z",
        "updated_at": "2012-03-20T20:07:35Z",
        "author_association": "COLLABORATOR",
        "body": "IE8- is not supported. Try IE9+, and make sure you have <!DOCTYPE html>.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4607345",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-4607345",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 4607345,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDczNDU=",
        "user": {
            "login": "drewyeaton",
            "id": 72983,
            "node_id": "MDQ6VXNlcjcyOTgz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/72983?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drewyeaton",
            "html_url": "https://github.com/drewyeaton",
            "followers_url": "https://api.github.com/users/drewyeaton/followers",
            "following_url": "https://api.github.com/users/drewyeaton/following{/other_user}",
            "gists_url": "https://api.github.com/users/drewyeaton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drewyeaton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drewyeaton/subscriptions",
            "organizations_url": "https://api.github.com/users/drewyeaton/orgs",
            "repos_url": "https://api.github.com/users/drewyeaton/repos",
            "events_url": "https://api.github.com/users/drewyeaton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drewyeaton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-20T22:55:55Z",
        "updated_at": "2012-03-20T22:55:55Z",
        "author_association": "NONE",
        "body": "Got it. Can you include a section on browser support in the readme? Fantastic work BTW.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4651825",
        "html_url": "https://github.com/square/crossfilter/pull/11#issuecomment-4651825",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/11",
        "id": 4651825,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTE4MjU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-23T01:14:19Z",
        "updated_at": "2012-03-23T01:14:19Z",
        "author_association": "COLLABORATOR",
        "body": "They're there so that you can play with the tesseract in the console. I don't see any harm in the example? Although perhaps it's setting a bad precedent.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4657047",
        "html_url": "https://github.com/square/crossfilter/pull/11#issuecomment-4657047",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/11",
        "id": 4657047,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTcwNDc=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-23T10:59:25Z",
        "updated_at": "2012-03-23T10:59:25Z",
        "author_association": "COLLABORATOR",
        "body": "I guess a comment would make it clear for people copying and pasting, just in case it causes a problem.  Updated with a comment.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4668792",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-4668792",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 4668792,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Njg3OTI=",
        "user": {
            "login": "wjbuys",
            "id": 31602,
            "node_id": "MDQ6VXNlcjMxNjAy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjbuys",
            "html_url": "https://github.com/wjbuys",
            "followers_url": "https://api.github.com/users/wjbuys/followers",
            "following_url": "https://api.github.com/users/wjbuys/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjbuys/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjbuys/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjbuys/subscriptions",
            "organizations_url": "https://api.github.com/users/wjbuys/orgs",
            "repos_url": "https://api.github.com/users/wjbuys/repos",
            "events_url": "https://api.github.com/users/wjbuys/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjbuys/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-23T22:00:41Z",
        "updated_at": "2012-03-23T22:00:41Z",
        "author_association": "NONE",
        "body": "+1: This is essential for working with qualitative dimensions. Perhaps that should be a first-class concept: a dimension with a low cardinality and weakly ordered values.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4674847",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4674847",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4674847,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzQ4NDc=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T16:56:24Z",
        "updated_at": "2012-03-24T16:56:24Z",
        "author_association": "COLLABORATOR",
        "body": "This is the expected behavior: the _records_ are filtered, not the _groups_. In your example, the groups are returned in the expected order by descending value, including those groups whose value happens to be zero.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4675070",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4675070",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4675070,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUwNzA=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T17:24:38Z",
        "updated_at": "2012-03-24T17:24:38Z",
        "author_association": "NONE",
        "body": "Thanks for the note. I believe this is simply a misunderstanding of the documentation. In your example, the `links` group definitely is filtered by tokens matching \"Jimmy\", but it contains empty groups (`value == 0`). That's why you're seeing three results. From the documentation:\n\n> If there are fewer than k groups according to all of the tesseract's filters, then an array smaller than k will be returned. If there are fewer than k non-empty groups, this method may also return empty groups (for example, those with a count of zero).\n\nIn your example, `k` is `Infinity`, so all the empty groups will be returned. Using [this jsfiddle](http://jsfiddle.net/5yzUp/), I got these results:\n\n``` js\nlinks.top(Infinity) // no filters\n[\n  {\"key\":\"http://www.engadget.com/2012/03/17/us-navy-lasr-research-facility-builds-robots-not-ray-guns/\",\n   \"value\":20},\n  {\"key\":\"http://feedproxy.google.com/~r/oreilly/radar/atom/~3/VUnm8ikk8a4/encyclopaedia-britannica-copyright-paypal-censorship.html\",\n   \"value\":10},\n  {\"key\":\"http://feeds.arstechnica.com/~r/arstechnica/index/~3/_dcrXs9GTTo/ion-beam-manufacturing-halves-production-cost-of-pv-panels.ars\",\n   \"value\":9}\n]\n\nlinks.top(Infinity) // filtering token by \"Jimmy\"\n[\n  {\"key\":\"http://www.engadget.com/2012/03/17/us-navy-lasr-research-facility-builds-robots-not-ray-guns/\",\n   \"value\":0},\n  {\"key\":\"http://feedproxy.google.com/~r/oreilly/radar/atom/~3/VUnm8ikk8a4/encyclopaedia-britannica-copyright-paypal-censorship.html\",\n   \"value\":1},\n  {\"key\":\"http://feeds.arstechnica.com/~r/arstechnica/index/~3/_dcrXs9GTTo/ion-beam-manufacturing-halves-production-cost-of-pv-panels.ars\",\n   \"value\":0}\n]\n```\n\nNote that there are the same number of group results in each but the values are different. Also note that I used `console.log(JSON.stringify(...))` because tesseract reuses the groups (I think) so inspecting their values after modifying them by filtering is misleading. If I completely misunderstood, please reopen this issue with a clarification. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4675476",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4675476",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4675476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0NzY=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T18:24:58Z",
        "updated_at": "2012-03-24T18:24:58Z",
        "author_association": "NONE",
        "body": "Thanks to you both for the clarification--I can see now that the behavior is expected. The jsfiddle results were particularly helpful.\n\nAny advice on how I might get obtain _only_ the set of links that contain the token \"Jimmy\"? For my purposes, the empty groups are just noise.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4676421",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4676421",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4676421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY0MjE=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T20:42:36Z",
        "updated_at": "2012-03-24T20:42:36Z",
        "author_association": "NONE",
        "body": "Just ignore the entries with `value == 0`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4676537",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4676537",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4676537,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY1Mzc=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T21:01:23Z",
        "updated_at": "2012-03-24T21:05:19Z",
        "author_association": "NONE",
        "body": "Are you suggesting to post-processing of the result set (e.g. a simple iteration through the results of the group function)? I don't see any \"ignore entries\" function for the group results listed in the API reference.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4676674",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4676674",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4676674,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY2NzQ=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T21:18:21Z",
        "updated_at": "2012-03-24T21:18:21Z",
        "author_association": "COLLABORATOR",
        "body": "Correct. This would work:\n\n``` js\nlinks.top(Infinity).filter(function(d) { return d.value; })\n```\n\nIf you have lots and lots of groups, you could also use bisection (tesseract.bisect) to find the first zero-group and cut the array there. Or, if you're planning on iterating over the groups, just stop iterating when the value is zero.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4676997",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4676997",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4676997,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY5OTc=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T22:08:07Z",
        "updated_at": "2012-03-24T22:08:07Z",
        "author_association": "NONE",
        "body": "Excellent, thanks.\n\nIn investigating why group.top(Infinity) was preferable to group.all(), I encountered this in the group.all() documentation:\n\n> Unlike top, however, the returned array may contain empty groups, whose value is the return value from the group's reduce initial function.\n\nDoesn't this conflict with the statement (two or three lines above) that eventualbuddha referenced?\n\n> If there are fewer than k non-empty groups, this method may also return empty groups (for example, those with a count of zero).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4677365",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4677365",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4677365,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzczNjU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T23:08:23Z",
        "updated_at": "2012-03-24T23:08:23Z",
        "author_association": "COLLABORATOR",
        "body": "I'll fix the documentation re. group.all(). I don't recall exactly, but I think the behavior may have changed from an earlier (unreleased) version of Tesseract that did not use incremental update for groups.\n\nIt _might_ be possible to filter zero-value groups from group.top, but that would either require tracking the count separately (which is a non-significant cost), or by comparing the top groups to the result of the reduceInitial function using the group's order accessor (using bisection, so it'd be fast). It's a bit tricky since the top groups are in descending order, and the bisection assumes ascending order, but in theory it's possible. And, I think it would improve the API.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4677383",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-4677383",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 4677383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzczODM=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T23:11:58Z",
        "updated_at": "2012-03-24T23:11:58Z",
        "author_association": "COLLABORATOR",
        "body": "Related: Allow records to have multiple values for a single dimension, such as labels or tags.\n\nRelated: Allow independent filters on the same dimension. These could be intersected or unioned.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4677666",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-4677666",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 4677666,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc2NjY=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-24T23:34:18Z",
        "updated_at": "2012-03-24T23:34:18Z",
        "author_association": "COLLABORATOR",
        "body": "That would be awesome!  I have a dataset with a multi-valued field, and managed to make it filter on this field by generating a new record for each value in the field for each original record (thus making it ~10x larger).  Then I used a custom reduce function to ensure the counts and summations were only on unique records (keyed by a unique ID per original record).  I think this uniqueness checking hurt the performance quite a bit though so it would be great to do this efficiently internally.\n\nSomething like this might work:\n\n``` javascript\nt.dimension.multiple(function(d) { return d.multipleValues; });\n```\n\nIndependent filters on the same dimension with union and intersection would solve my filterMultiple question; let me know if I can help with anything.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4677988",
        "html_url": "https://github.com/square/crossfilter/issues/6#issuecomment-4677988",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/6",
        "id": 4677988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc5ODg=",
        "user": {
            "login": "notmatt",
            "id": 92480,
            "node_id": "MDQ6VXNlcjkyNDgw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/92480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notmatt",
            "html_url": "https://github.com/notmatt",
            "followers_url": "https://api.github.com/users/notmatt/followers",
            "following_url": "https://api.github.com/users/notmatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/notmatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notmatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notmatt/subscriptions",
            "organizations_url": "https://api.github.com/users/notmatt/orgs",
            "repos_url": "https://api.github.com/users/notmatt/repos",
            "events_url": "https://api.github.com/users/notmatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notmatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-25T00:22:04Z",
        "updated_at": "2012-03-25T00:22:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "In the mean time, you can install Tesseract with npm via tarball (provided by github automatically) or by git SHA:\n\nnpm install https://github.com/square/tesseract/tarball/master\nnpm install git://github.com/square/tesseract.git#master\n\nOr add to your package.json in a similar way:\n\n```\n{\n  \"dependencies\" : {\n    \"tesseract\": \"git://github.com/square/tesseract.git#69a383dd7ed04c9407edad71f931c1c4ab75804a\"\n  }\n}\n```\n\n(For some reason #master doesn't work for me via package.json, seems to need a SHA.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4678064",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4678064",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4678064,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzgwNjQ=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-25T00:41:01Z",
        "updated_at": "2012-03-25T00:41:01Z",
        "author_association": "NONE",
        "body": "I can't speak for others, but filtering zero-value groups would certainly be useful for my usage of the API. :) I can see the zero-value groups being useful in other cases, though, so I think you'd want to make the filter optional.\n\nOn the subject of API adjustments, have you considered aliasing `top(Infinity)` with an overload of the `all` function? Using `group.all(Boolean clone)` would be slightly less [astonishing](http://en.wikipedia.org/wiki/Principle_of_least_astonishment) to me, compared to top(Infinity).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4678172",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4678172",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4678172,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzgxNzI=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-25T00:56:58Z",
        "updated_at": "2012-03-25T00:56:58Z",
        "author_association": "COLLABORATOR",
        "body": "No; group.top returns groups by descending value, whereas group.all returns groups by ascending key. The top method thus requires selecting + sorting, whereas the all method just returns the groups as-is. Another difference is that group.top returns a copy (of maximum size K), whereas group.all returns the internal array. I don't think it's a good idea to merge these into a single method, given that they do different things.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4678425",
        "html_url": "https://github.com/square/crossfilter/issues/12#issuecomment-4678425",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/12",
        "id": 4678425,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzg0MjU=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-25T01:20:45Z",
        "updated_at": "2012-03-25T01:20:45Z",
        "author_association": "NONE",
        "body": "Arrr, I must be getting senile--I thought I read both result sets were in descending order. Sorry.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4700953",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4700953",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4700953,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDA5NTM=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-26T18:36:53Z",
        "updated_at": "2012-03-26T18:37:01Z",
        "author_association": "COLLABORATOR",
        "body": "Sure, just set up dimensions on origin, destination, or route. For example, for flights from PHX:\n\n``` js\nvar origin = flight.dimension(function(d) { return d.origin; });\norigin.filterExact(\"PHX\");\n```\n\nOr for flights from PHX to ONT:\n\n``` js\nvar route = flight.dimension(function(d) { return d.origin + \"-\" + d.destination; });\nroute.filterExact(\"PHX-ONT\");\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4705254",
        "html_url": "https://github.com/square/crossfilter/pull/11#issuecomment-4705254",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/11",
        "id": 4705254,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDUyNTQ=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-26T21:57:17Z",
        "updated_at": "2012-03-26T21:57:17Z",
        "author_association": "COLLABORATOR",
        "body": "I decided to take your advice and add the var. It'll be in 1.0.2.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4706390",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4706390",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4706390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDYzOTA=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-26T23:02:25Z",
        "updated_at": "2012-03-26T23:02:25Z",
        "author_association": "COLLABORATOR",
        "body": "Renamed to Crossfilter, partly in homage to [Chris Weaver](http://www.cs.ou.edu/~weaver/academic/publications.html)'s work on [multidimensional visualization](http://www.computer.org/portal/web/csdl/doi/10.1109/TVCG.2009.94). It may not have the intrigue of \"tesseract\", but it does describe the library's function succinctly.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4706921",
        "html_url": "https://github.com/square/crossfilter/issues/1#issuecomment-4706921",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/1",
        "id": 4706921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY5MjE=",
        "user": {
            "login": "benatkin",
            "id": 4126,
            "node_id": "MDQ6VXNlcjQxMjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benatkin",
            "html_url": "https://github.com/benatkin",
            "followers_url": "https://api.github.com/users/benatkin/followers",
            "following_url": "https://api.github.com/users/benatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/benatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/benatkin/orgs",
            "repos_url": "https://api.github.com/users/benatkin/repos",
            "events_url": "https://api.github.com/users/benatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-26T23:43:02Z",
        "updated_at": "2012-03-26T23:43:02Z",
        "author_association": "NONE",
        "body": ":+1:\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4748894",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4748894",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4748894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDg4OTQ=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-28T05:12:46Z",
        "updated_at": "2012-03-28T05:12:46Z",
        "author_association": "NONE",
        "body": "@mbostock do you have a recommendation for filtering on a non-continuous range (e.g. PHX and SMF but not SAN)? It seems like it'd be possible to do by assigning a dimension to each airport code, but I'm wondering if there's a Better Way.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4770529",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4770529",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4770529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzA1Mjk=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-28T16:46:41Z",
        "updated_at": "2012-03-28T16:46:41Z",
        "author_association": "COLLABORATOR",
        "body": "Crossfilter only supports filtering contiguous ranges at the moment. For categorical dimensions (such as airport codes) I think it would make sense to implement a different type of filter can toggle arbitrary values rather than recording a contiguous range. So, I would fix that by adding a new feature. :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4794897",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4794897",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4794897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQ4OTc=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-29T01:09:32Z",
        "updated_at": "2012-03-29T01:10:56Z",
        "author_association": "NONE",
        "body": "Noted. In the meantime, this has worked well for me so far:\n\n```\noriginPHX = crossfilter.dimension (function(d) { return d.origin == 'PHX' });\n//...\noriginPHX.filter(true); //use false to get all flights were the origin isn't PHX\n```\n\nThis snippet seems quite susceptible to generalization, assuming there aren't performance concerns...\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4820937",
        "html_url": "https://github.com/square/crossfilter/issues/14#issuecomment-4820937",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/14",
        "id": 4820937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjA5Mzc=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-29T14:19:53Z",
        "updated_at": "2012-03-29T14:19:53Z",
        "author_association": "NONE",
        "body": "I might be misunderstanding, but is there a difference between what you're proposing and simply post-processing the returned array?\n\n``` js\n// Array does not have .map in all browsers\ncf.top(k).map(accessor);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4821161",
        "html_url": "https://github.com/square/crossfilter/issues/14#issuecomment-4821161",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/14",
        "id": 4821161,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjExNjE=",
        "user": {
            "login": "macroscian",
            "id": 1587213,
            "node_id": "MDQ6VXNlcjE1ODcyMTM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1587213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/macroscian",
            "html_url": "https://github.com/macroscian",
            "followers_url": "https://api.github.com/users/macroscian/followers",
            "following_url": "https://api.github.com/users/macroscian/following{/other_user}",
            "gists_url": "https://api.github.com/users/macroscian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/macroscian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/macroscian/subscriptions",
            "organizations_url": "https://api.github.com/users/macroscian/orgs",
            "repos_url": "https://api.github.com/users/macroscian/repos",
            "events_url": "https://api.github.com/users/macroscian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/macroscian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-29T14:27:20Z",
        "updated_at": "2012-03-29T14:27:20Z",
        "author_association": "NONE",
        "body": "Brian, you're spot on there.  There's no difference, and that was what I was doing (although not using the map function, of which I was ignorant).  Just worrying about creating a large array that I'd mostly throw away, and an unnecessary loop through a large array when the 'top' method has a loop I could subvert for that purpose.  map mitigates the latter worry to some extent.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4822703",
        "html_url": "https://github.com/square/crossfilter/issues/14#issuecomment-4822703",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/14",
        "id": 4822703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjI3MDM=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-29T15:10:02Z",
        "updated_at": "2012-03-29T15:10:02Z",
        "author_association": "NONE",
        "body": "@gavinpaulkelly Ah, okay. Just checking. I'd encourage you to try out crossfilter as it is and with your proposed change over at http://jsperf.com/. It won't tell you much about the extra storage required by having a duplicate array (except for any GC-related slowdown), but it should be able to answer your question about any speed penalty you might incur by doing the loop twice.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4853352",
        "html_url": "https://github.com/square/crossfilter/pull/15#issuecomment-4853352",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/15",
        "id": 4853352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTMzNTI=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-31T00:26:30Z",
        "updated_at": "2012-03-31T00:26:53Z",
        "author_association": "NONE",
        "body": "This actually is intentional. The prefix `+` is a shortcut for getting the primitive numeric value of an object. So if, for example, `f(v)` returned a `Date` or a `String` then the `+` would turn it into a number. For example:\n\n``` js\n3 + '9' // '39'\n3 + (+'9') // 12\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4853773",
        "html_url": "https://github.com/square/crossfilter/pull/15#issuecomment-4853773",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/15",
        "id": 4853773,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTM3NzM=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-03-31T01:16:59Z",
        "updated_at": "2012-03-31T01:16:59Z",
        "author_association": "COLLABORATOR",
        "body": "Correct, and it's not needed with subtract, because there's no ambiguity with string concatentation; the `-` operator coerces to a number.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4863007",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4863007",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4863007,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjMwMDc=",
        "user": {
            "login": "Sigfried",
            "id": 1586931,
            "node_id": "MDQ6VXNlcjE1ODY5MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1586931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sigfried",
            "html_url": "https://github.com/Sigfried",
            "followers_url": "https://api.github.com/users/Sigfried/followers",
            "following_url": "https://api.github.com/users/Sigfried/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sigfried/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sigfried/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sigfried/subscriptions",
            "organizations_url": "https://api.github.com/users/Sigfried/orgs",
            "repos_url": "https://api.github.com/users/Sigfried/repos",
            "events_url": "https://api.github.com/users/Sigfried/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sigfried/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-01T00:32:44Z",
        "updated_at": "2012-04-01T00:32:44Z",
        "author_association": "NONE",
        "body": "But I thought there were performance concerns.  There are limits to the number of dimensions and making dimensions, according to the documentation is expensive.  \n\nI was building a sizable piece of code on D3 and when I saw that crossfilter did a lot of stuff that I was building in my own data management code, I switched over, but this issue is really hitting me now.  I've been trying to figure out how to get this functionality, but it does look impossible without adding the feature to the software as Mike suggested, and that looks too hard for me to try.  \n\nIn my code there's going to be lots of turning on and off of various values of various categorical dimensions, so I probably made a mistake trying to use crossfilter, though I've learned a bunch by playing with it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4863071",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4863071",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4863071,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjMwNzE=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-01T00:48:17Z",
        "updated_at": "2012-04-01T00:48:17Z",
        "author_association": "COLLABORATOR",
        "body": "The first part to better support categorical dimensions is deciding on an API, so you might consider that even if you don't feel comfortable tackling the implementation.\n\nI think the first decision is whether we want to support this as \"dimensions can have multiple filters\" (perhaps that can be intersected or unioned), or as \"dimensions can be either quantitative or ordinal\", in which case the filters on an ordinal dimension are tracked as a set of discrete values, rather than a contiguous range.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4863163",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4863163",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4863163,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjMxNjM=",
        "user": {
            "login": "Sigfried",
            "id": 1586931,
            "node_id": "MDQ6VXNlcjE1ODY5MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1586931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sigfried",
            "html_url": "https://github.com/Sigfried",
            "followers_url": "https://api.github.com/users/Sigfried/followers",
            "following_url": "https://api.github.com/users/Sigfried/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sigfried/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sigfried/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sigfried/subscriptions",
            "organizations_url": "https://api.github.com/users/Sigfried/orgs",
            "repos_url": "https://api.github.com/users/Sigfried/repos",
            "events_url": "https://api.github.com/users/Sigfried/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sigfried/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-01T01:12:18Z",
        "updated_at": "2012-04-01T01:12:18Z",
        "author_association": "NONE",
        "body": "Just to check that I'm not missing something important: you're using the word ordinal now rather than categorical.  I guess all categorical dimensions can be considered ordinal by putting them in, e.g., alphabetical order.  If there are implications beyond that for the word choice, I'm not catching them.\n\nIt may be uncommon but certainly not impossible that someone will want multiple filters on a quantitative dimension, so the idea of allowing those to be intersected or unioned is nice.  But your suggestion above for filters that allow toggling of individual values is very appealing.  I don't have a clear sense of the performance implications.\n\nOne of my use cases is that I'd like to perform some calculation on the values of dimension X for all combinations of specific values for dimensions A, B and C, and allowing this to happen quickly as the user sets filters on dimensions B, C and D.  Right now it looks to me like I have to remember the filters on B, C and D (where each filter can have multiple values) while temporarily setting single-value filters on all the combinations of A, B and C.\n\nIs that kind of use case something that you'd like crossfilter to be able to support?  I'll think more about what might be a nice API and report back later.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4863417",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4863417",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4863417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjM0MTc=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-01T02:12:36Z",
        "updated_at": "2012-04-01T02:12:36Z",
        "author_association": "COLLABORATOR",
        "body": ">  I guess all categorical dimensions can be considered ordinal by putting them in, e.g., alphabetical order.\n\nYep, that's all I meant.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4864274",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4864274",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4864274,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjQyNzQ=",
        "user": {
            "login": "Sigfried",
            "id": 1586931,
            "node_id": "MDQ6VXNlcjE1ODY5MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1586931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sigfried",
            "html_url": "https://github.com/Sigfried",
            "followers_url": "https://api.github.com/users/Sigfried/followers",
            "following_url": "https://api.github.com/users/Sigfried/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sigfried/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sigfried/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sigfried/subscriptions",
            "organizations_url": "https://api.github.com/users/Sigfried/orgs",
            "repos_url": "https://api.github.com/users/Sigfried/repos",
            "events_url": "https://api.github.com/users/Sigfried/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sigfried/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-01T05:15:50Z",
        "updated_at": "2012-04-01T05:15:50Z",
        "author_association": "NONE",
        "body": "Did that use case make sense?  Is it something you'd want to support?\nOn Mar 31, 2012 10:12 PM, \"Mike Bostock\" <\nreply@reply.github.com>\nwrote:\n\n> >  I guess all categorical dimensions can be considered ordinal by putting\n> > them in, e.g., alphabetical order.\n> \n> Yep, that's all I meant.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/square/crossfilter/issues/13#issuecomment-4863417\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4894404",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-4894404",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 4894404,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTQ0MDQ=",
        "user": {
            "login": "cqcallaw",
            "id": 312296,
            "node_id": "MDQ6VXNlcjMxMjI5Ng==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/312296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqcallaw",
            "html_url": "https://github.com/cqcallaw",
            "followers_url": "https://api.github.com/users/cqcallaw/followers",
            "following_url": "https://api.github.com/users/cqcallaw/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqcallaw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqcallaw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqcallaw/subscriptions",
            "organizations_url": "https://api.github.com/users/cqcallaw/orgs",
            "repos_url": "https://api.github.com/users/cqcallaw/repos",
            "events_url": "https://api.github.com/users/cqcallaw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqcallaw/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-03T04:42:23Z",
        "updated_at": "2012-04-03T04:42:23Z",
        "author_association": "NONE",
        "body": "As an API consumer, I'm inclined to vote for Option B (ordinal dimensions) because I don't see a clean way to represent the union and intersection operations for Option A (multi-filter) without some sort of domain-specific query language or array messiness, particularly when the operations are mixed. It does seem possible--albeit awkard--to synthesize Option B's behavior with Option A by taking the union of a set of ranges that match the discrete boundaries plus or minus some tolerance.\n\nI must confess that I don't follow the description of @Sigfried's use case, so I can't say which option would fit that case better.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4958249",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-4958249",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 4958249,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTgyNDk=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-04T17:09:12Z",
        "updated_at": "2012-04-04T17:09:12Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, but you'll want to use an [ordinal scale](/mbostock/d3/wiki/Ordinal-Scales) for the bottom axis. Also, brushing doesn't make a whole lot of sense with a categorical dimension such as origin, so you might want to just listen for click events on the bars rather than using a brush. But, it is possible to [brush on ordinal axes](/mbostock/d3/blob/master/examples/brush/brush-ordinal.html) if you like.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4968376",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-4968376",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 4968376,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjgzNzY=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-05T04:30:21Z",
        "updated_at": "2012-04-05T04:37:57Z",
        "author_association": "NONE",
        "body": "Thanks for the reply.\nIve been going through the documentation and I believe that\n\n<code>\n\n```\nvar originArray = new Array();\nflights.map(function(d) { \noriginArray.push(d.origin); \n}); \noriginArray  = unique(originArray);\n\n barChart()\n    .dimension(originid)\n    .group(originids)       \n .x(d3.scale.ordinal()\n    .domain(originArray)\n.rangeRoundBands([0, 900], 1))\n```\n\n</code>\n\nshould be interchangeable with:\n\n<code>\n\n  barChart()\n        .dimension(originid)\n        .group(originids)  \n    .x(d3.scale.linear()\n        .domain([0, 30])\n        .rangeRound([0, 10 \\* 90]))\n\n</code>\nhowever i cant seem to get it to work :(\nCan you tell me what i am missing?\n\nhttp://www.pixeltradr.com/crossfilter/\nhttp://www.pixeltradr.com/crossfilter/indexOrdinal.html\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4977225",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-4977225",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 4977225,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzcyMjU=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-05T14:14:44Z",
        "updated_at": "2012-04-05T14:14:44Z",
        "author_association": "NONE",
        "body": "Tried again with a simple example\n\nI got the X axis to display the string values\n\nhttp://pixeltradr.com/crossfilter/indexName.html\n\nIn the example above there are 3 charts, the first 2 are the ones using ordinal scales and the third uses a linear scale.\nThe problem is that the charts using ordinal scales dont filter the charts when using the brush.\n\nThe linear scale example does what i need it to do, but i need string labels instead of numbers\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4981155",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-4981155",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 4981155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODExNTU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-05T17:15:50Z",
        "updated_at": "2012-04-05T17:15:50Z",
        "author_association": "COLLABORATOR",
        "body": "As shown in the \"brush on ordinal axis\" example I linked, the brush extent is different when you use an ordinal scale\u2014it's defined in terms of pixels rather than a range of ordinal values. So, you can't simply pass the brush extent to dimension.filterRange when using an ordinal scale. (And, like I said, brushing isn't a good affordance with ordinal scales anyway\u2014it'd probably be better if you let people click on the ordinal bars rather than brushing them.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4997385",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-4997385",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 4997385,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTczODU=",
        "user": {
            "login": "michael",
            "id": 2931,
            "node_id": "MDQ6VXNlcjI5MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael",
            "html_url": "https://github.com/michael",
            "followers_url": "https://api.github.com/users/michael/followers",
            "following_url": "https://api.github.com/users/michael/following{/other_user}",
            "gists_url": "https://api.github.com/users/michael/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michael/subscriptions",
            "organizations_url": "https://api.github.com/users/michael/orgs",
            "repos_url": "https://api.github.com/users/michael/repos",
            "events_url": "https://api.github.com/users/michael/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michael/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-06T15:46:05Z",
        "updated_at": "2012-04-06T15:46:05Z",
        "author_association": "NONE",
        "body": "Any updates on this? I need it! Very urgent :)\n\nIn terms of the API, why not allowing value accessing functions returning arrays?\n\n``` js\nvar countries = crossfilter([\n  {name: \"USA\", languages: [\"Spanish\", \"English\", \"Chinese\", \"French\"]},\n  {name: \"Canada\", languages: [\"French\", \"English\"]}\n]);\n\ncountriesByLanguage = countries.dimension(function(d) {return d.languages });\ncountriesByLanguage.filter('English');\n\ncountriesByLanguage.top(Infinity) // => [USA, Canada]\n```\n\nFYI: I'm currently stripping down [Data.js](http://github.com/michael/data), in order to make it fast and to remove unneeded complexity. I'm going to drop the Data.Hash datastructures in favor of native Javascript primitives (arrays, objects). At the end of the day it should no longer be a Data Manipulation Library, but a Data Representation Library, letting users use Crossfilter for the sake of filtering.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/4997851",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-4997851",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 4997851,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTc4NTE=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-06T16:12:58Z",
        "updated_at": "2012-04-06T16:12:58Z",
        "author_association": "NONE",
        "body": "Thanks again for the reply\nYea i think clicking on the bars would be alot better, ive seen a few examples that do that, ill work on that.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5000487",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5000487",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5000487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDA0ODc=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-06T18:56:45Z",
        "updated_at": "2012-04-06T18:56:45Z",
        "author_association": "NONE",
        "body": "I'm having a hard time grokking the problem. Could you come up with something that doesn't use d3 (only crossfilter) and shows some numbers rather than bars? That might help identify the problem.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5006180",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5006180",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5006180,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDYxODA=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-07T05:47:04Z",
        "updated_at": "2012-04-07T11:48:03Z",
        "author_association": "NONE",
        "body": "hey there, I think i narrowed it down, the problem isnt with reduceSum\n\nits to do with the <code>y.domain([-100, group.top(1)[0].value]);</code>\n\nwhich shows the key and value of the largest in the group\nThis works fine when all values in the y axis are positive:\n\n---\n\n<code>\nObject { key=3, value=300}   // selects correct value\n// key:[1] value:[90] \n// key:[2] value:[100] \n// key:[3] value:[300]                 // largest value\n\n## </code>\n\nhowever when you have negative values the largest number is the smallest negative.\n\n---\n\n<code>\nObject { key=1, value=-90}  // selects incorrect value\n// key:[1] value:[-90] \n// key:[2] value:[-100] \n// key:[3] value:[-300]              // largest negative value\n\n## </code>\n\nThe reason why the bars are exceeding the 0-100 y range is that the maximum value is based on an incorrect figure (of -90, when it should be based on -300)\n\ni wonder if it would be possible to create another function - that would return the top array sorted with absolute values\n\n<code>y.domain([0, group.<b>topAbs</b>(1)[0].value]);</code>\n\nI believe that using absolute values would solve this issue \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5007579",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5007579",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5007579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDc1Nzk=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-07T11:35:53Z",
        "updated_at": "2012-04-07T12:22:23Z",
        "author_association": "NONE",
        "body": "I think i solved it, but dont know what the effects will be on the rest of the crossfilter plugin\n\nhttp://www.pixeltradr.com/crossfilter/indexPaymentsCrossfilter.html\nhttp://www.pixeltradr.com/crossfilter/indexPaymentsCrossfilterNegative.html\nhttp://www.pixeltradr.com/crossfilter/indexPaymentsCrossfilterPositive.html\n\nIve changed the crossfilter plugin in <b>function heapselect()</b> to include <b>Math.abs()</b> in three places:\n\n---\n\n<code>\nfunction heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),  min,   i,   x,   d;  \n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n    if (lo < hi) {\n      min =  <b>Math.abs</b>(f(queue[0]));  \n      do {  \n        if (x = <b>Math.abs</b>(f(d = a[lo])) > min) {\n          queue[0] = d;\n          min = <b>Math.abs</b>(f(heap(queue, 0, k)[0]));\n        }\n      } while (++lo < hi);\n    }\n    return queue;\n  }\n</code>\n\n---\n\nAlso edited the html file itself and added <b>Math.abs()</b> to:\n\n<code>y.domain([0, <b>Math.abs</b>(group.top(1)[0].value)]);</code>\n\nand in <b>function barPath(group)</b>\n\n---\n\n<code>\nfunction barPath(groups) {\n        var path = [],    pathPositive = [], pathNegative = [], pathBoth = [], i = -1, n = groups.length, d;\n        while (++i < n) {\n                 d = groups[i];  \n          if(d.value < 0 || d.key < 0){ \n            pathNegative.push(\"M\", x(d.key), \",\", height, \"V\", y(<b>Math.abs</b>(d.value)), \"h9V\", height);  \n          }else{\n            pathPositive.push(\"M\", x(d.key), \",\", height, \"V\", y(<b>Math.abs</b>(d.value)), \"h9V\", height);\n          }\n          pathBoth.push(\"M\", x(d.key), \",\", height, \"V\", y(<b>Math.abs</b>(d.value)), \"h9V\", height);  \n        }\n    path[0] = pathPositive.join(\"\")\n        path[1] = pathNegative.join(\"\")\n        path[2] = pathBoth.join(\"\")\n        return path;\n      }\n</code>\n\n---\n\nI think it would probably be better to create new functions like -  function heapselectAbs(a, lo, hi, k) {}\n for example to to handle this situation.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5008981",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5008981",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5008981,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg5ODE=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-07T15:24:59Z",
        "updated_at": "2012-04-07T15:24:59Z",
        "author_association": "NONE",
        "body": "Decided to leave the old sort functions alone, and create new ones to handle this situation:\n\ninstead of:\n<code>y.domain([0, group.top(1)[0].value]);</code>\nits now \n<code>y.domain([0, group.topAbs(1)[0].value]);</code>\n\nNew crossfilter file:\nhttp://pixeltradr.com/crossfilter/crossfilter.v1.abs.js\n\nchanges:\n- function topAbs(k)\n- function heapselectAbs_by(f) \n  ----- function heapselectAbs(a, lo, hi, k) \n\nhttp://pixeltradr.com/crossfilter/crossfilter.v1.abs.js\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5014134",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5014134",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5014134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTQxMzQ=",
        "user": {
            "login": "kpascual",
            "id": 509773,
            "node_id": "MDQ6VXNlcjUwOTc3Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/509773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kpascual",
            "html_url": "https://github.com/kpascual",
            "followers_url": "https://api.github.com/users/kpascual/followers",
            "following_url": "https://api.github.com/users/kpascual/following{/other_user}",
            "gists_url": "https://api.github.com/users/kpascual/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kpascual/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kpascual/subscriptions",
            "organizations_url": "https://api.github.com/users/kpascual/orgs",
            "repos_url": "https://api.github.com/users/kpascual/repos",
            "events_url": "https://api.github.com/users/kpascual/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kpascual/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-08T08:42:01Z",
        "updated_at": "2012-04-08T08:42:01Z",
        "author_association": "NONE",
        "body": "I think option B (dimensions as ordinal/categorical) would have more practical usage than option A (multiple filters on dimension).\n\nWhile I'm sure there are cases where you'd want to apply multiple filters on a dimension (e.g. lunch hour and dinner hour on a time of day dimension), I think filtering by particular categorical values is a much more common use case.  Using the payments metaphor in the tutorial, I'd imagine a very common use case for a merchant would be to filter payments by multiple zip codes, states, or credit card types.\n\nJust throwing this out there, but I was imagining an API of an optional is_categorical flag on the dimension, while using the existing filter() APIs.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5017971",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5017971",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5017971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTc5NzE=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-08T19:52:29Z",
        "updated_at": "2012-04-08T19:52:50Z",
        "author_association": "COLLABORATOR",
        "body": "The existing API already supports categorical dimensions, provided you only need a single exact match (use filterExact). This issue is about allowing _multiple_ values to be selected. We could enable that specifically for categorical dimensions, in which case the filter API would allow you to get or set multiple selected values. Or, we could figure out how to do it more generally for both categorical and quantitative dimensions. My guess is that enabling a different filter API for categorical dimensions would be less work and more convenient for the common use case. But, the general solution might be more powerful.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5028342",
        "html_url": "https://github.com/square/crossfilter/pull/20#issuecomment-5028342",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/20",
        "id": 5028342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjgzNDI=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T16:35:59Z",
        "updated_at": "2012-04-09T16:35:59Z",
        "author_association": "COLLABORATOR",
        "body": "Awesome. Thank you!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5028354",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5028354",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5028354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjgzNTQ=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T16:36:44Z",
        "updated_at": "2012-04-09T16:36:44Z",
        "author_association": "COLLABORATOR",
        "body": "Sorry, I don't understand what you're asking. What's the difference between a running total and a sum?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5029990",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5029990",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5029990,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjk5OTA=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T17:59:45Z",
        "updated_at": "2012-04-09T18:00:36Z",
        "author_association": "NONE",
        "body": "Hi Mike, a running total takes the previous x sum value and adds it to the next x sum value, then takes the combined um of those values and adds it to the following sum and so on till the end. In the image in the first post, the second chart contains the same info as the first chart but each value is added to the next creating a running total along the x axis. :D cheers\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5030171",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5030171",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5030171,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzAxNzE=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T18:09:08Z",
        "updated_at": "2012-04-09T18:09:08Z",
        "author_association": "COLLABORATOR",
        "body": "Sure, you could do that. Use crossfilter to compute the sums, and then iterate over the sums at the end to compute the running total.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5030373",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5030373",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5030373,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzAzNzM=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T18:19:30Z",
        "updated_at": "2012-04-09T18:19:30Z",
        "author_association": "NONE",
        "body": "Compute the sums in the barpath function? That's how i managed to get it to work a little while ago, but i was wondering if it was possible within crossfilter itself?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5030429",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5030429",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5030429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzA0Mjk=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T18:22:00Z",
        "updated_at": "2012-04-09T18:22:00Z",
        "author_association": "COLLABORATOR",
        "body": "Easier to do it outside of crossfilter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5030679",
        "html_url": "https://github.com/square/crossfilter/issues/21#issuecomment-5030679",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/21",
        "id": 5030679,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzA2Nzk=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-09T18:31:42Z",
        "updated_at": "2012-04-09T18:31:42Z",
        "author_association": "NONE",
        "body": ":D thx\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5037402",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5037402",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5037402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc0MDI=",
        "user": {
            "login": "notmatt",
            "id": 92480,
            "node_id": "MDQ6VXNlcjkyNDgw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/92480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notmatt",
            "html_url": "https://github.com/notmatt",
            "followers_url": "https://api.github.com/users/notmatt/followers",
            "following_url": "https://api.github.com/users/notmatt/following{/other_user}",
            "gists_url": "https://api.github.com/users/notmatt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notmatt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notmatt/subscriptions",
            "organizations_url": "https://api.github.com/users/notmatt/orgs",
            "repos_url": "https://api.github.com/users/notmatt/repos",
            "events_url": "https://api.github.com/users/notmatt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notmatt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-10T01:24:54Z",
        "updated_at": "2012-04-10T01:24:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think the result you're looking for is entirely achievable via the existing API. The easiest way I can think of is to order the group by the absolute value of the sum.\n\n``` javascript\nvar data = [ { key : 1, value : 1 }, { key : 2, value : -2 }, { key : 3, value : 3 }, { key : 4, value : -4 } ]\nvar cf = crossfilter(data);\nvar key = cf.dimension(function(d) { return d.key });\n\nvar group = key.group().order(function(p) { return Math.abs(p) });\ngroup.reduceSum(function(d) { return d.value });\ngroup.top(2);\n\n// producing\n[ { key: 4, value: -4 },\n  { key: 3, value: 3 } ]\n```\n\nIt also possible to use `group.reduce()` to write your own reduction that finds the absolute value directly (and you wouldn't need to change the ordering).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5084935",
        "html_url": "https://github.com/square/crossfilter/pull/20#issuecomment-5084935",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/20",
        "id": 5084935,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODQ5MzU=",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-12T05:51:48Z",
        "updated_at": "2012-04-12T05:51:48Z",
        "author_association": "NONE",
        "body": "Seems like we should accept this. Did you just forget to press the big green button, @mbostock?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5085081",
        "html_url": "https://github.com/square/crossfilter/issues/17#issuecomment-5085081",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/17",
        "id": 5085081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwODUwODE=",
        "user": {
            "login": "flamebunny",
            "id": 1611141,
            "node_id": "MDQ6VXNlcjE2MTExNDE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1611141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flamebunny",
            "html_url": "https://github.com/flamebunny",
            "followers_url": "https://api.github.com/users/flamebunny/followers",
            "following_url": "https://api.github.com/users/flamebunny/following{/other_user}",
            "gists_url": "https://api.github.com/users/flamebunny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/flamebunny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/flamebunny/subscriptions",
            "organizations_url": "https://api.github.com/users/flamebunny/orgs",
            "repos_url": "https://api.github.com/users/flamebunny/repos",
            "events_url": "https://api.github.com/users/flamebunny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/flamebunny/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-12T06:12:06Z",
        "updated_at": "2012-04-12T06:12:06Z",
        "author_association": "NONE",
        "body": "Wow thats awesome!\nIt works, Thanks alot!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5095122",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-5095122",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 5095122,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTUxMjI=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-12T16:37:12Z",
        "updated_at": "2012-04-12T16:37:12Z",
        "author_association": "NONE",
        "body": "Can someone more familiar with the codebase comment on the feasibility of doing this?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5099273",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5099273",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5099273,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkyNzM=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-12T19:56:08Z",
        "updated_at": "2012-04-12T19:56:08Z",
        "author_association": "NONE",
        "body": "I'm taking a stab at this right now.  Leaning toward the generic solution, but we'll see.  I don't think we need support for intersections? The result of an intersection is going to be something that can be passed directly to filterRange today.  Also, if we could enable a way to clone a dimension, you can perform intersections by applying the different filters to each dimension copy.\n\nFor the union of multiple filters, I'm just going to work on letting filter() take multiple arguments.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5099335",
        "html_url": "https://github.com/square/crossfilter/pull/20#issuecomment-5099335",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/20",
        "id": 5099335,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkzMzU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-12T19:59:02Z",
        "updated_at": "2012-04-12T19:59:02Z",
        "author_association": "COLLABORATOR",
        "body": "It LGTM, but I just haven't gotten around to pulling it yet. Probably need to rebuild crossfilter.min.js, create a new tag, npm publish, etc.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5151765",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5151765",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5151765,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTE3NjU=",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-16T13:10:12Z",
        "updated_at": "2012-04-16T13:10:12Z",
        "author_association": "NONE",
        "body": "Zackham,\n\nI've been testing your branch and I've noticed something strange to me, but perhaps this is the proper behavior? In your test you filter by the \"total\" dim, and then you get the data through the \"date\" dim. This gives you the right answer. But if you check through the \"total\" dim you get the wrong answer, it is still filtered by the first variable only and not the union. Is this by design?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5160288",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5160288",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5160288,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjAyODg=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-16T19:26:42Z",
        "updated_at": "2012-04-16T19:26:42Z",
        "author_association": "NONE",
        "body": "beefsoup,\n\nThanks for the second set of eyes.  I was not expanding the hi0/lo0 range to include the additional ranges.  This is fixed now and I also modified the test.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5179098",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-5179098",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 5179098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzkwOTg=",
        "user": {
            "login": "Sigfried",
            "id": 1586931,
            "node_id": "MDQ6VXNlcjE1ODY5MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1586931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sigfried",
            "html_url": "https://github.com/Sigfried",
            "followers_url": "https://api.github.com/users/Sigfried/followers",
            "following_url": "https://api.github.com/users/Sigfried/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sigfried/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sigfried/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sigfried/subscriptions",
            "organizations_url": "https://api.github.com/users/Sigfried/orgs",
            "repos_url": "https://api.github.com/users/Sigfried/repos",
            "events_url": "https://api.github.com/users/Sigfried/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sigfried/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-17T16:10:33Z",
        "updated_at": "2012-04-17T16:10:33Z",
        "author_association": "NONE",
        "body": "Hi Mike,\n\nI'm not sure the best way to email you, but trying this.\n\nI was wondering if you'd be interested in/willing to have a brief phone\nconversation about the future of visualization frameworks built on top of\nD3?  My perspective is that I'm at a firm that does a lot of contracting\nwork on an impressive array of scientific and administrative projects for\nthe NIH, FDA, and other organizations in the public health and clinical\nscience arenas, and I'm trying to build something general on top of D3 to\nallow us to navigate a wide range of disparate data and incorporate these\nvisualizations into web apps.\n\nI'm working on some ideas, which, a few weeks ago, led me to take up and\nthen abandon Tesseract/Crossfilter as my way of managing and filtering data\nsets.  The approach that I'm taking would probably seem pretty ugly to you\n(it seems ugly to me quite often): OOP class hierarchies of UI elements and\ndata elements that allow me from the perspective of any piece of data to\naccess methods relating to how it wants to be displayed (colored, sized,\netc.), whether it's been filtered, who its parents and children are; also\nthings like: when a chunk of data results from the intersection of two\ndimension values, and it's display is partly based on methods related to a\nthird dimension value, the thing figures out what to do where.\n\nTo some degree, I think what I'm trying to make (unfortunately, without\nsufficient experience and background), is an API to let myself and others\nmake Spotfire/Tableau-like visualizations from RDBMS data.  So the initial\nhierarchy of any of this data (for purposes of letting users assign columns\nto visualization dimensions and stuff) is: table name (or query name) -->\ncolumn name --> column value --> result subset.  Clearly in Crossfilter\nyou're coming up with ways of addressing some of the same general issues.\n\nYour data models in D3 and Crossfilter are nice and flat and clean and tie\nthe data so closely to the visualization that all the logic about colors\nand inter-data-point calculations can be performed directly in the\nvisualization code.  That works well for making beautiful individual\nvisualizations.  In my case where I want to make more of a dashboard thing,\nwith various visualizations all tied to the same or related underlying\ndata, I think there are aspects of the data and its interrelationships that\nneed help from classes and methods that cross visualization boundaries.\n\nAnyway, I thought a conversation might be fruitful.  What do you think?\n\nThanks,\nSigfried\n\nGiven that\n\nOn Sat, Mar 31, 2012 at 8:48 PM, Mike Bostock <\nreply@reply.github.com\n\n> wrote:\n> \n> The first part to better support categorical dimensions is deciding on an\n> API, so you might consider that even if you don't feel comfortable tackling\n> the implementation.\n> \n> I think the first decision is whether we want to support this as\n> \"dimensions can have multiple filters\" (perhaps that can be intersected or\n> unioned), or as \"dimensions can be either quantitative or ordinal\", in\n> which case the filters on an ordinal dimension are tracked as a set of\n> discrete values, rather than a contiguous range.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/square/crossfilter/issues/13#issuecomment-4863071\n\n## \n\nSigfried Gold\n\nC: 301-202-4556\nH: 301-920-0530\nwww.sigfried.org\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5201541",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-5201541",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 5201541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDE1NDE=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-18T15:38:58Z",
        "updated_at": "2012-04-18T15:38:58Z",
        "author_association": "COLLABORATOR",
        "body": "Nice!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5252680",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-5252680",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 5252680,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTI2ODA=",
        "user": {
            "login": "Asgaroth",
            "id": 755568,
            "node_id": "MDQ6VXNlcjc1NTU2OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/755568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Asgaroth",
            "html_url": "https://github.com/Asgaroth",
            "followers_url": "https://api.github.com/users/Asgaroth/followers",
            "following_url": "https://api.github.com/users/Asgaroth/following{/other_user}",
            "gists_url": "https://api.github.com/users/Asgaroth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Asgaroth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Asgaroth/subscriptions",
            "organizations_url": "https://api.github.com/users/Asgaroth/orgs",
            "repos_url": "https://api.github.com/users/Asgaroth/repos",
            "events_url": "https://api.github.com/users/Asgaroth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Asgaroth/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-20T20:41:13Z",
        "updated_at": "2012-04-20T20:41:13Z",
        "author_association": "NONE",
        "body": "OMG, you really need to add this to the README, now I have to migrate a project into native array stuff.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5255476",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-5255476",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 5255476,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU0NzY=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-20T23:58:00Z",
        "updated_at": "2012-04-20T23:58:00Z",
        "author_association": "NONE",
        "body": "If you need IE7/8 support you can try my IE8 compatible fork.  Don't expect to use D3 though, but if you just need crossfilter check it out: https://github.com/zackham/crossfilter/tree/ie8compatible\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5255495",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-5255495",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 5255495,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU0OTU=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-20T23:59:50Z",
        "updated_at": "2012-04-20T23:59:50Z",
        "author_association": "NONE",
        "body": "FYI just filled out the contributor agreement, didn't notice it until now.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5255539",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-5255539",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 5255539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU1Mzk=",
        "user": {
            "login": "Asgaroth",
            "id": 755568,
            "node_id": "MDQ6VXNlcjc1NTU2OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/755568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Asgaroth",
            "html_url": "https://github.com/Asgaroth",
            "followers_url": "https://api.github.com/users/Asgaroth/followers",
            "following_url": "https://api.github.com/users/Asgaroth/following{/other_user}",
            "gists_url": "https://api.github.com/users/Asgaroth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Asgaroth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Asgaroth/subscriptions",
            "organizations_url": "https://api.github.com/users/Asgaroth/orgs",
            "repos_url": "https://api.github.com/users/Asgaroth/repos",
            "events_url": "https://api.github.com/users/Asgaroth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Asgaroth/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-21T00:04:54Z",
        "updated_at": "2012-04-21T00:04:54Z",
        "author_association": "NONE",
        "body": "Thank you very much, but unfortunately we are still supporting IE7, we don't really have much of a laaarge dataset, so we might be just fine with native array sort and jquery.grep\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5255569",
        "html_url": "https://github.com/square/crossfilter/issues/8#issuecomment-5255569",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/8",
        "id": 5255569,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU1Njk=",
        "user": {
            "login": "zackham",
            "id": 4191,
            "node_id": "MDQ6VXNlcjQxOTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zackham",
            "html_url": "https://github.com/zackham",
            "followers_url": "https://api.github.com/users/zackham/followers",
            "following_url": "https://api.github.com/users/zackham/following{/other_user}",
            "gists_url": "https://api.github.com/users/zackham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zackham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zackham/subscriptions",
            "organizations_url": "https://api.github.com/users/zackham/orgs",
            "repos_url": "https://api.github.com/users/zackham/repos",
            "events_url": "https://api.github.com/users/zackham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zackham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-21T00:09:05Z",
        "updated_at": "2012-04-21T00:09:05Z",
        "author_association": "NONE",
        "body": "This should work in IE7 I just haven't tested it yet.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5260835",
        "html_url": "https://github.com/square/crossfilter/issues/18#issuecomment-5260835",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/18",
        "id": 5260835,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjA4MzU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-21T14:30:24Z",
        "updated_at": "2012-04-21T14:30:24Z",
        "author_association": "COLLABORATOR",
        "body": "Interesting. Thanks for the suggestion!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5358421",
        "html_url": "https://github.com/square/crossfilter/issues/23#issuecomment-5358421",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/23",
        "id": 5358421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTg0MjE=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-04-26T14:58:18Z",
        "updated_at": "2012-04-26T14:58:18Z",
        "author_association": "COLLABORATOR",
        "body": "Please use Stack Overflow to post questions like this. As you can see from the documentation for [group.size](/square/crossfilter/wiki/API-Reference#wiki-group_size), it \"returns the number of distinct values in the group, independent of any filters; the cardinality.\" If you want to count the non-empty groups, then you want to do something like `group.all().filter(function(d) { return d.length; }).length`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5551064",
        "html_url": "https://github.com/square/crossfilter/issues/24#issuecomment-5551064",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/24",
        "id": 5551064,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTEwNjQ=",
        "user": {
            "login": "robin900",
            "id": 325578,
            "node_id": "MDQ6VXNlcjMyNTU3OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/325578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robin900",
            "html_url": "https://github.com/robin900",
            "followers_url": "https://api.github.com/users/robin900/followers",
            "following_url": "https://api.github.com/users/robin900/following{/other_user}",
            "gists_url": "https://api.github.com/users/robin900/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robin900/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robin900/subscriptions",
            "organizations_url": "https://api.github.com/users/robin900/orgs",
            "repos_url": "https://api.github.com/users/robin900/repos",
            "events_url": "https://api.github.com/users/robin900/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robin900/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-05-07T14:22:15Z",
        "updated_at": "2012-05-07T14:22:15Z",
        "author_association": "NONE",
        "body": "I'm finding the same problem, both with the flight dataset and with my own dataset that I adapted the example application to show.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5577417",
        "html_url": "https://github.com/square/crossfilter/issues/24#issuecomment-5577417",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/24",
        "id": 5577417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzc0MTc=",
        "user": {
            "login": "robin900",
            "id": 325578,
            "node_id": "MDQ6VXNlcjMyNTU3OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/325578?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robin900",
            "html_url": "https://github.com/robin900",
            "followers_url": "https://api.github.com/users/robin900/followers",
            "following_url": "https://api.github.com/users/robin900/following{/other_user}",
            "gists_url": "https://api.github.com/users/robin900/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robin900/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robin900/subscriptions",
            "organizations_url": "https://api.github.com/users/robin900/orgs",
            "repos_url": "https://api.github.com/users/robin900/repos",
            "events_url": "https://api.github.com/users/robin900/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robin900/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-05-08T15:29:14Z",
        "updated_at": "2012-05-08T15:29:14Z",
        "author_association": "NONE",
        "body": "Found a possible solution: stepbystep/timsort on github offers a JS implementation of timsort. I have a local modification of crossfilter working with the timsort. Plenty fast, and a stable sort. Only hack was need to provide slice() for the Uint*Array prototypes. I'll work on a pull request in next day or two.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/5830965",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-5830965",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 5830965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA5NjU=",
        "user": {
            "login": "cambridgemike",
            "id": 163429,
            "node_id": "MDQ6VXNlcjE2MzQyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/163429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cambridgemike",
            "html_url": "https://github.com/cambridgemike",
            "followers_url": "https://api.github.com/users/cambridgemike/followers",
            "following_url": "https://api.github.com/users/cambridgemike/following{/other_user}",
            "gists_url": "https://api.github.com/users/cambridgemike/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cambridgemike/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cambridgemike/subscriptions",
            "organizations_url": "https://api.github.com/users/cambridgemike/orgs",
            "repos_url": "https://api.github.com/users/cambridgemike/repos",
            "events_url": "https://api.github.com/users/cambridgemike/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cambridgemike/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-05-21T19:07:11Z",
        "updated_at": "2012-05-21T19:07:11Z",
        "author_association": "NONE",
        "body": "I just wanted to check in and see if there is any suggestion on how to accomplish the above. I'm able to re-run the group/reduce but this is causing a performance nightmare. \n\nAre there any other avenues for developers to get support? There is an open question on SO, http://stackoverflow.com/questions/10509478/using-crossfilter-is-it-possible-to-track-max-min-when-grouping but that's all I could find.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6301648",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-6301648",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 6301648,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDE2NDg=",
        "user": {
            "login": "baank",
            "id": 657041,
            "node_id": "MDQ6VXNlcjY1NzA0MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/657041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baank",
            "html_url": "https://github.com/baank",
            "followers_url": "https://api.github.com/users/baank/followers",
            "following_url": "https://api.github.com/users/baank/following{/other_user}",
            "gists_url": "https://api.github.com/users/baank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baank/subscriptions",
            "organizations_url": "https://api.github.com/users/baank/orgs",
            "repos_url": "https://api.github.com/users/baank/repos",
            "events_url": "https://api.github.com/users/baank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baank/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-13T13:57:50Z",
        "updated_at": "2012-06-13T13:58:11Z",
        "author_association": "NONE",
        "body": "Is there someone wrong with this commit ? .. it's a valuable feature and would be great to have in the main Square repo. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6439748",
        "html_url": "https://github.com/square/crossfilter/pull/26#issuecomment-6439748",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/26",
        "id": 6439748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mzk3NDg=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-19T22:37:38Z",
        "updated_at": "2012-06-19T22:37:38Z",
        "author_association": "COLLABORATOR",
        "body": "So, this is _bottom(k)_?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6459637",
        "html_url": "https://github.com/square/crossfilter/pull/26#issuecomment-6459637",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/26",
        "id": 6459637,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTk2Mzc=",
        "user": {
            "login": "john-guerra",
            "id": 1216843,
            "node_id": "MDQ6VXNlcjEyMTY4NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john-guerra",
            "html_url": "https://github.com/john-guerra",
            "followers_url": "https://api.github.com/users/john-guerra/followers",
            "following_url": "https://api.github.com/users/john-guerra/following{/other_user}",
            "gists_url": "https://api.github.com/users/john-guerra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john-guerra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john-guerra/subscriptions",
            "organizations_url": "https://api.github.com/users/john-guerra/orgs",
            "repos_url": "https://api.github.com/users/john-guerra/repos",
            "events_url": "https://api.github.com/users/john-guerra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john-guerra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-20T16:26:02Z",
        "updated_at": "2012-06-20T16:26:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "hehehe, yes I guess that is a better name :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6462277",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-6462277",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 6462277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjIyNzc=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-20T18:02:57Z",
        "updated_at": "2012-06-20T18:04:13Z",
        "author_association": "COLLABORATOR",
        "body": "This sounds like an issue involving undefined values. See #3.\n\nYou can avoid this by filtering them out, by using the patch in #3, or by replacing them with something else that can be sorted.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6464512",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-6464512",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 6464512,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjQ1MTI=",
        "user": {
            "login": "john-guerra",
            "id": 1216843,
            "node_id": "MDQ6VXNlcjEyMTY4NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john-guerra",
            "html_url": "https://github.com/john-guerra",
            "followers_url": "https://api.github.com/users/john-guerra/followers",
            "following_url": "https://api.github.com/users/john-guerra/following{/other_user}",
            "gists_url": "https://api.github.com/users/john-guerra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john-guerra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john-guerra/subscriptions",
            "organizations_url": "https://api.github.com/users/john-guerra/orgs",
            "repos_url": "https://api.github.com/users/john-guerra/repos",
            "events_url": "https://api.github.com/users/john-guerra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john-guerra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-20T19:26:59Z",
        "updated_at": "2012-06-20T19:26:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jasondavies you were right, the problem is with the nan values\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6536707",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-6536707",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 6536707,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzY3MDc=",
        "user": {
            "login": "iros",
            "id": 18690,
            "node_id": "MDQ6VXNlcjE4Njkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iros",
            "html_url": "https://github.com/iros",
            "followers_url": "https://api.github.com/users/iros/followers",
            "following_url": "https://api.github.com/users/iros/following{/other_user}",
            "gists_url": "https://api.github.com/users/iros/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iros/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iros/subscriptions",
            "organizations_url": "https://api.github.com/users/iros/orgs",
            "repos_url": "https://api.github.com/users/iros/repos",
            "events_url": "https://api.github.com/users/iros/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iros/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-24T21:54:24Z",
        "updated_at": "2012-06-24T21:54:24Z",
        "author_association": "NONE",
        "body": "Major +1 to this. \nHere is an example of how the filtering breaks if there are NaNs in the data to begin with:\nhttp://jsfiddle.net/iros/wc8ba/3/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6666138",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-6666138",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 6666138,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjYxMzg=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-29T16:10:30Z",
        "updated_at": "2013-02-13T22:14:24Z",
        "author_association": "COLLABORATOR",
        "body": "The record with the minimum value is returned by [dimension.top(1)](/square/crossfilter/wiki/API-Reference#wiki-dimension_top). And #26 adds support for dimension.bottom, so you could use that to extract the maximum value, too. I could maybe see adding dimension.extent() to return a two-element array containing the minimum and maximum value, which would be slightly more convenient in this case. Although less parsimonious. :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6677212",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-6677212",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 6677212,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzcyMTI=",
        "user": {
            "login": "iros",
            "id": 18690,
            "node_id": "MDQ6VXNlcjE4Njkw",
            "avatar_url": "https://avatars2.githubusercontent.com/u/18690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iros",
            "html_url": "https://github.com/iros",
            "followers_url": "https://api.github.com/users/iros/followers",
            "following_url": "https://api.github.com/users/iros/following{/other_user}",
            "gists_url": "https://api.github.com/users/iros/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iros/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iros/subscriptions",
            "organizations_url": "https://api.github.com/users/iros/orgs",
            "repos_url": "https://api.github.com/users/iros/repos",
            "events_url": "https://api.github.com/users/iros/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iros/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-06-29T20:24:56Z",
        "updated_at": "2012-06-29T20:24:56Z",
        "author_association": "NONE",
        "body": "It might be nice to have a specific interface for that purpose. I find myself retrieving those two all the time and it would just make things that much cleaner.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/6693612",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-6693612",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 6693612,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTM2MTI=",
        "user": {
            "login": "richardpoole",
            "id": 151069,
            "node_id": "MDQ6VXNlcjE1MTA2OQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/151069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/richardpoole",
            "html_url": "https://github.com/richardpoole",
            "followers_url": "https://api.github.com/users/richardpoole/followers",
            "following_url": "https://api.github.com/users/richardpoole/following{/other_user}",
            "gists_url": "https://api.github.com/users/richardpoole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/richardpoole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/richardpoole/subscriptions",
            "organizations_url": "https://api.github.com/users/richardpoole/orgs",
            "repos_url": "https://api.github.com/users/richardpoole/repos",
            "events_url": "https://api.github.com/users/richardpoole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/richardpoole/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-07-01T13:51:24Z",
        "updated_at": "2012-07-01T13:51:24Z",
        "author_association": "NONE",
        "body": "Posted a possible solution on SO. Hopefully it's more efficient than re-running the group/reduce.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7103042",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-7103042",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 7103042,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDMwNDI=",
        "user": {
            "login": "ppong",
            "id": 1063140,
            "node_id": "MDQ6VXNlcjEwNjMxNDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1063140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppong",
            "html_url": "https://github.com/ppong",
            "followers_url": "https://api.github.com/users/ppong/followers",
            "following_url": "https://api.github.com/users/ppong/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppong/subscriptions",
            "organizations_url": "https://api.github.com/users/ppong/orgs",
            "repos_url": "https://api.github.com/users/ppong/repos",
            "events_url": "https://api.github.com/users/ppong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-07-19T16:21:54Z",
        "updated_at": "2012-07-19T16:21:54Z",
        "author_association": "NONE",
        "body": "This looks awesome! will this be merged in anytime soon?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7193092",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-7193092",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 7193092,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTMwOTI=",
        "user": {
            "login": "johnistan",
            "id": 800669,
            "node_id": "MDQ6VXNlcjgwMDY2OQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/800669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnistan",
            "html_url": "https://github.com/johnistan",
            "followers_url": "https://api.github.com/users/johnistan/followers",
            "following_url": "https://api.github.com/users/johnistan/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnistan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnistan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnistan/subscriptions",
            "organizations_url": "https://api.github.com/users/johnistan/orgs",
            "repos_url": "https://api.github.com/users/johnistan/repos",
            "events_url": "https://api.github.com/users/johnistan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnistan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-07-23T22:08:30Z",
        "updated_at": "2012-07-23T22:08:30Z",
        "author_association": "NONE",
        "body": "great feature. bump to merge.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7194876",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-7194876",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 7194876,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTQ4NzY=",
        "user": {
            "login": "tesseralis",
            "id": 1278991,
            "node_id": "MDQ6VXNlcjEyNzg5OTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1278991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tesseralis",
            "html_url": "https://github.com/tesseralis",
            "followers_url": "https://api.github.com/users/tesseralis/followers",
            "following_url": "https://api.github.com/users/tesseralis/following{/other_user}",
            "gists_url": "https://api.github.com/users/tesseralis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tesseralis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tesseralis/subscriptions",
            "organizations_url": "https://api.github.com/users/tesseralis/orgs",
            "repos_url": "https://api.github.com/users/tesseralis/repos",
            "events_url": "https://api.github.com/users/tesseralis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tesseralis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-07-23T23:33:40Z",
        "updated_at": "2012-07-23T23:33:40Z",
        "author_association": "NONE",
        "body": "Maybe undesired behavior: `dim.filter(1)` (single argument) returns the dimension object, but `dim.filter(1, 2)` (multiple arguments) returns the last value.\n\nAlso, if you pass in the same value twice (like `dim.filter(1, 1)`) or any even number of times, it 'cancels out' and the dimension ignores filtering by that dimension.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7232170",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-7232170",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 7232170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzIxNzA=",
        "user": {
            "login": "christophe-g",
            "id": 1168053,
            "node_id": "MDQ6VXNlcjExNjgwNTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1168053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophe-g",
            "html_url": "https://github.com/christophe-g",
            "followers_url": "https://api.github.com/users/christophe-g/followers",
            "following_url": "https://api.github.com/users/christophe-g/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophe-g/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophe-g/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophe-g/subscriptions",
            "organizations_url": "https://api.github.com/users/christophe-g/orgs",
            "repos_url": "https://api.github.com/users/christophe-g/repos",
            "events_url": "https://api.github.com/users/christophe-g/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophe-g/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-07-24T20:24:43Z",
        "updated_at": "2012-07-24T20:24:43Z",
        "author_association": "NONE",
        "body": "+1, agree with wjbuys above.\n\nThe lib is fantastic, but it really need support multiple values for being used in most real-world cases dealing with qualitative dimension. \nIs there any chance this feature will be integrated one day ?\nCheers,\nC.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7500321",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-7500321",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 7500321,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDAzMjE=",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-04T08:48:10Z",
        "updated_at": "2012-08-04T08:48:29Z",
        "author_association": "NONE",
        "body": "I tried this, and `data.total.filter([0, 100], 190, [200, 300]);` works as expected, however after adding this filter, the filters on the other dimensions didn't work anymore?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7538031",
        "html_url": "https://github.com/square/crossfilter/issues/30#issuecomment-7538031",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/30",
        "id": 7538031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzgwMzE=",
        "user": {
            "login": "vladisac",
            "id": 324175,
            "node_id": "MDQ6VXNlcjMyNDE3NQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/324175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vladisac",
            "html_url": "https://github.com/vladisac",
            "followers_url": "https://api.github.com/users/vladisac/followers",
            "following_url": "https://api.github.com/users/vladisac/following{/other_user}",
            "gists_url": "https://api.github.com/users/vladisac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vladisac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vladisac/subscriptions",
            "organizations_url": "https://api.github.com/users/vladisac/orgs",
            "repos_url": "https://api.github.com/users/vladisac/repos",
            "events_url": "https://api.github.com/users/vladisac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vladisac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-06T22:11:39Z",
        "updated_at": "2012-08-06T22:11:39Z",
        "author_association": "NONE",
        "body": "I trust this will get you along http://nickqizhu.github.com/dc.js/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7642153",
        "html_url": "https://github.com/square/crossfilter/issues/18#issuecomment-7642153",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/18",
        "id": 7642153,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDIxNTM=",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-10T13:39:51Z",
        "updated_at": "2012-08-10T13:39:51Z",
        "author_association": "NONE",
        "body": "This would be great. The `emit` function is also used in mongo map/reduce. \n\nThe classic example is to use map/reduce for e.g. creating a wordcloud from records containing text sentences, so every sentence needs to get mapped to multiple words.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7752159",
        "html_url": "https://github.com/square/crossfilter/pull/31#issuecomment-7752159",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/31",
        "id": 7752159,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTIxNTk=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-15T09:44:59Z",
        "updated_at": "2012-08-15T09:44:59Z",
        "author_association": "COLLABORATOR",
        "body": "This works fine with UglifyJS. Which minifier are you using?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7752219",
        "html_url": "https://github.com/square/crossfilter/pull/31#issuecomment-7752219",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/31",
        "id": 7752219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTIyMTk=",
        "user": {
            "login": "LeonFedotov",
            "id": 130342,
            "node_id": "MDQ6VXNlcjEzMDM0Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/130342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeonFedotov",
            "html_url": "https://github.com/LeonFedotov",
            "followers_url": "https://api.github.com/users/LeonFedotov/followers",
            "following_url": "https://api.github.com/users/LeonFedotov/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeonFedotov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeonFedotov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeonFedotov/subscriptions",
            "organizations_url": "https://api.github.com/users/LeonFedotov/orgs",
            "repos_url": "https://api.github.com/users/LeonFedotov/repos",
            "events_url": "https://api.github.com/users/LeonFedotov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeonFedotov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-15T09:48:37Z",
        "updated_at": "2012-08-15T09:48:37Z",
        "author_association": "NONE",
        "body": "jsmin, but i guess that UglifyJS is just looking for these +[space]+p and adds the parentheses itself, i would suggest you to run your code trough jshint, jslint and get it cleaned up + spaced :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/7752315",
        "html_url": "https://github.com/square/crossfilter/pull/31#issuecomment-7752315",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/31",
        "id": 7752315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTIzMTU=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-08-15T09:55:24Z",
        "updated_at": "2012-08-15T09:55:24Z",
        "author_association": "COLLABORATOR",
        "body": "Sounds like you're using a buggy version of jsmin: this was fixed in douglascrockford/JSMin@633d99205798c589eaec7b3d158319797dfcadb3.\n\nNo parentheses are necessary if the space is correctly retained.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/8804014",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-8804014",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 8804014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDQwMTQ=",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-09-23T23:01:32Z",
        "updated_at": "2012-09-23T23:01:32Z",
        "author_association": "NONE",
        "body": "This is really helpful Jason! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/8808549",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-8808549",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 8808549,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDg1NDk=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-09-24T06:36:38Z",
        "updated_at": "2012-09-24T06:36:38Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks! I've successfully used bit vectors to represent multi-valued fields that only have up to 32 values. You can also simply use objects or arrays for more values.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9125433",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9125433",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9125433,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjU0MzM=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-03T22:57:15Z",
        "updated_at": "2012-10-03T22:57:15Z",
        "author_association": "COLLABORATOR",
        "body": "Yikes. This looks tricky to debug.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9126057",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9126057",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9126057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjYwNTc=",
        "user": {
            "login": "evenwestvang",
            "id": 172952,
            "node_id": "MDQ6VXNlcjE3Mjk1Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/172952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenwestvang",
            "html_url": "https://github.com/evenwestvang",
            "followers_url": "https://api.github.com/users/evenwestvang/followers",
            "following_url": "https://api.github.com/users/evenwestvang/following{/other_user}",
            "gists_url": "https://api.github.com/users/evenwestvang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evenwestvang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evenwestvang/subscriptions",
            "organizations_url": "https://api.github.com/users/evenwestvang/orgs",
            "repos_url": "https://api.github.com/users/evenwestvang/repos",
            "events_url": "https://api.github.com/users/evenwestvang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evenwestvang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-03T23:29:01Z",
        "updated_at": "2012-10-03T23:29:01Z",
        "author_association": "NONE",
        "body": "I'd offer my time, but the internals of Crossfilter seem daunting. Scary, even. Substituting a firm grasp of reality with intuition I'd go with a change in the typed arrays. I'll check the dev and canary builds to see if help is on the way upstream.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9126165",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9126165",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9126165,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjYxNjU=",
        "user": {
            "login": "evenwestvang",
            "id": 172952,
            "node_id": "MDQ6VXNlcjE3Mjk1Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/172952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenwestvang",
            "html_url": "https://github.com/evenwestvang",
            "followers_url": "https://api.github.com/users/evenwestvang/followers",
            "following_url": "https://api.github.com/users/evenwestvang/following{/other_user}",
            "gists_url": "https://api.github.com/users/evenwestvang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evenwestvang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evenwestvang/subscriptions",
            "organizations_url": "https://api.github.com/users/evenwestvang/orgs",
            "repos_url": "https://api.github.com/users/evenwestvang/repos",
            "events_url": "https://api.github.com/users/evenwestvang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evenwestvang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-03T23:35:22Z",
        "updated_at": "2012-10-03T23:35:22Z",
        "author_association": "NONE",
        "body": "Both 24.0.1284.2 dev and 24.0.1285.0 canary display the same behaviour.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9127546",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9127546",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9127546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMjc1NDY=",
        "user": {
            "login": "jacobsandlund",
            "id": 698077,
            "node_id": "MDQ6VXNlcjY5ODA3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/698077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobsandlund",
            "html_url": "https://github.com/jacobsandlund",
            "followers_url": "https://api.github.com/users/jacobsandlund/followers",
            "following_url": "https://api.github.com/users/jacobsandlund/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobsandlund/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobsandlund/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobsandlund/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobsandlund/orgs",
            "repos_url": "https://api.github.com/users/jacobsandlund/repos",
            "events_url": "https://api.github.com/users/jacobsandlund/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobsandlund/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T00:56:15Z",
        "updated_at": "2012-10-04T00:56:15Z",
        "author_association": "NONE",
        "body": "I also found this issue when working on [DataZooka](http://www.datazooka.com). If you play around with it, you can see weird things going on. I noticed that sometimes it would throw a TypeError [here](https://github.com/square/crossfilter/blob/master/src/crossfilter.js#L406) in the `updateMany` routine.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9133213",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9133213",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9133213,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzMyMTM=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T07:43:47Z",
        "updated_at": "2012-10-04T07:43:47Z",
        "author_association": "COLLABORATOR",
        "body": "It could be [this issue](https://code.google.com/p/v8/issues/detail?id=2326) that I spotted in beta a while ago. It was only fixed in V8 recently, so I don't know how long it'll take to filter down. I'll see if I can get the fix backported.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9133702",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9133702",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9133702,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzM3MDI=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T08:07:50Z",
        "updated_at": "2012-10-04T08:07:50Z",
        "author_association": "COLLABORATOR",
        "body": "Update: it looks like it's definitely the same [issue](http://code.google.com/p/v8/issues/detail?id=2326#c11), and it hasn't been merged into the release branches of V8 yet. I'll keep you updated.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9134153",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-9134153",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 9134153,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzQxNTM=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T08:27:53Z",
        "updated_at": "2012-10-04T08:27:53Z",
        "author_association": "COLLABORATOR",
        "body": "It can\u2019t handle NaN or undefined values at the moment. See #3 for a patch. One workaround is to replace missing values (NaN or undefined) with values that can be compared, e.g. zeroes or empty strings.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9139340",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9139340",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9139340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzkzNDA=",
        "user": {
            "login": "evenwestvang",
            "id": 172952,
            "node_id": "MDQ6VXNlcjE3Mjk1Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/172952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenwestvang",
            "html_url": "https://github.com/evenwestvang",
            "followers_url": "https://api.github.com/users/evenwestvang/followers",
            "following_url": "https://api.github.com/users/evenwestvang/following{/other_user}",
            "gists_url": "https://api.github.com/users/evenwestvang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evenwestvang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evenwestvang/subscriptions",
            "organizations_url": "https://api.github.com/users/evenwestvang/orgs",
            "repos_url": "https://api.github.com/users/evenwestvang/repos",
            "events_url": "https://api.github.com/users/evenwestvang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evenwestvang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T12:19:44Z",
        "updated_at": "2012-10-04T12:19:44Z",
        "author_association": "NONE",
        "body": "Excellent, and well spotted. I'll be watching that thread.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9142874",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-9142874",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 9142874,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDI4NzQ=",
        "user": {
            "login": "jlv100",
            "id": 2449546,
            "node_id": "MDQ6VXNlcjI0NDk1NDY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2449546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlv100",
            "html_url": "https://github.com/jlv100",
            "followers_url": "https://api.github.com/users/jlv100/followers",
            "following_url": "https://api.github.com/users/jlv100/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlv100/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlv100/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlv100/subscriptions",
            "organizations_url": "https://api.github.com/users/jlv100/orgs",
            "repos_url": "https://api.github.com/users/jlv100/repos",
            "events_url": "https://api.github.com/users/jlv100/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlv100/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T14:22:01Z",
        "updated_at": "2012-10-04T14:22:01Z",
        "author_association": "NONE",
        "body": "Thanks for your response, Jason-\n\nI had already considered issue #3.  I'm using the latest version, so NaN's are being sorted- the problem is they create a huge bar in my histograms that overshadows all others.  That's why I need the reduce function to ignore them entirely.  But, when I try to override the reduce function, I get all kinds of negative and erroneous bars.\n\nIn the example flight data, consider a situation where all flights to a certain subset of destinations have no flight distance value (it doesn't make sense in this context, but just go with it).  How would you get the example histograms to ignore those missing values?\n\nThanks again.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9142972",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-9142972",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 9142972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDI5NzI=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T14:24:21Z",
        "updated_at": "2012-10-04T14:24:21Z",
        "author_association": "COLLABORATOR",
        "body": "Unless you apply the patch from #3, NaNs and undefined values will break Crossfilter, since it cannot sort them properly. You either need to apply the patch, or replace them with something else _prior_ to passing the data to Crossfilter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9143875",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9143875",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9143875,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNDM4NzU=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T14:47:50Z",
        "updated_at": "2012-10-04T14:47:50Z",
        "author_association": "COLLABORATOR",
        "body": "Kudos, Jason!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9152916",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9152916",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9152916,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNTI5MTY=",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T18:58:34Z",
        "updated_at": "2012-10-04T18:58:34Z",
        "author_association": "NONE",
        "body": "I have been exploring Crossfilter on a node.js server with dynamic updating through Ajax (or websockets).  The main benefit is faster browser initiation speed since the filter is already prepared.    But this setup could also circumvent browser related javascript issues, provided the Node V8 engine on the server is sound?\n\nI forked a quick example here with the code split between node.js and index.html:\nhttps://github.com/ZJONSSON/crossfilter/tree/gh-pages-ajax\n\nThis code is live for a short time here: \nhttp://zjonsson.com:8888/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9161063",
        "html_url": "https://github.com/square/crossfilter/pull/41#issuecomment-9161063",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/41",
        "id": 9161063,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNjEwNjM=",
        "user": {
            "login": "jacobsandlund",
            "id": 698077,
            "node_id": "MDQ6VXNlcjY5ODA3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/698077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobsandlund",
            "html_url": "https://github.com/jacobsandlund",
            "followers_url": "https://api.github.com/users/jacobsandlund/followers",
            "following_url": "https://api.github.com/users/jacobsandlund/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobsandlund/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobsandlund/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobsandlund/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobsandlund/orgs",
            "repos_url": "https://api.github.com/users/jacobsandlund/repos",
            "events_url": "https://api.github.com/users/jacobsandlund/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobsandlund/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-04T23:41:26Z",
        "updated_at": "2012-10-04T23:41:26Z",
        "author_association": "NONE",
        "body": "I reduced the size even further by renaming the `crossfilter/index` module as `crossfilter`. That saved 13 bytes, to bring it down to 319 bytes (or 9.97%--hey, less than ten percent!) added overall.\n\nThe next commit removes `src/version.js`, and just builds it with the version parsed from `package.json`. This makes it so `src/package.js` is unnecessary, and saves another ten bytes (309, or 9.7% added). The downside being that crossfilter has no \"version\" property in node. If you removed \"version\" altogether (didn't [build](https://github.com/jakesandlund/crossfilter/blob/4a174dbcc27a6771a0c3c4e3c301843d725a4a9c/build) it in), that would save another 12 bytes (297, or 9.3% added).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9163820",
        "html_url": "https://github.com/square/crossfilter/pull/41#issuecomment-9163820",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/41",
        "id": 9163820,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxNjM4MjA=",
        "user": {
            "login": "jacobsandlund",
            "id": 698077,
            "node_id": "MDQ6VXNlcjY5ODA3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/698077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobsandlund",
            "html_url": "https://github.com/jacobsandlund",
            "followers_url": "https://api.github.com/users/jacobsandlund/followers",
            "following_url": "https://api.github.com/users/jacobsandlund/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobsandlund/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobsandlund/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobsandlund/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobsandlund/orgs",
            "repos_url": "https://api.github.com/users/jacobsandlund/repos",
            "events_url": "https://api.github.com/users/jacobsandlund/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobsandlund/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-05T02:40:48Z",
        "updated_at": "2012-10-05T02:40:48Z",
        "author_association": "NONE",
        "body": "This last commit doesn't change `vaccine.js` functionally, it just optimizes the `require` routine for minification. Down to 301 bytes (9.4%) added.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9241644",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9241644",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9241644,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkyNDE2NDQ=",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-08T21:53:40Z",
        "updated_at": "2012-10-08T21:53:40Z",
        "author_association": "NONE",
        "body": "Another browser issue is data-size.  Chrome kills a page when memory use goes over 100mb.  I manage to avoid the problem by running the filter on a server instead.\n\nMoved the flights example to Heroku:  http://flights-ajax.herokuapp.com/\nAnd here is another example close to home: http://icequake.herokuapp.com/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9488003",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9488003",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9488003,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODgwMDM=",
        "user": {
            "login": "jnordberg",
            "id": 95886,
            "node_id": "MDQ6VXNlcjk1ODg2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/95886?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnordberg",
            "html_url": "https://github.com/jnordberg",
            "followers_url": "https://api.github.com/users/jnordberg/followers",
            "following_url": "https://api.github.com/users/jnordberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnordberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnordberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnordberg/subscriptions",
            "organizations_url": "https://api.github.com/users/jnordberg/orgs",
            "repos_url": "https://api.github.com/users/jnordberg/repos",
            "events_url": "https://api.github.com/users/jnordberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnordberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-16T13:34:45Z",
        "updated_at": "2012-10-16T13:34:45Z",
        "author_association": "NONE",
        "body": "I also ran in to this issue. It seems to be fixed in beta channel now (using 23.0.1271.26)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9488251",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-9488251",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 9488251,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0ODgyNTE=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-16T13:41:35Z",
        "updated_at": "2012-10-16T13:41:35Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, the fix was merged into M23 a few days ago, but I think it\u2019s yet to be backported to M21 (stable).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9563907",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-9563907",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 9563907,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk1NjM5MDc=",
        "user": {
            "login": "niko",
            "id": 3075,
            "node_id": "MDQ6VXNlcjMwNzU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/3075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/niko",
            "html_url": "https://github.com/niko",
            "followers_url": "https://api.github.com/users/niko/followers",
            "following_url": "https://api.github.com/users/niko/following{/other_user}",
            "gists_url": "https://api.github.com/users/niko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/niko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/niko/subscriptions",
            "organizations_url": "https://api.github.com/users/niko/orgs",
            "repos_url": "https://api.github.com/users/niko/repos",
            "events_url": "https://api.github.com/users/niko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/niko/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-18T13:19:40Z",
        "updated_at": "2012-10-18T13:19:40Z",
        "author_association": "NONE",
        "body": "I have the same issue. I applied the patch, but still the huge bar for the zero value overshadows all other bars in the graph. How can I ignore some values alltogether?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9564303",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-9564303",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 9564303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk1NjQzMDM=",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-18T13:31:45Z",
        "updated_at": "2012-10-18T13:31:45Z",
        "author_association": "COLLABORATOR",
        "body": "If you want to ignore them _everywhere_, just don\u2019t pass them to Crossfilter in the first place. For example:\n\n``` js\nvar db = crossfilter(data.filter(function(d) { return d.foo > 0; }));\n```\n\nThis will only include records with d.foo > 0.\n\nAlternatively, if you only want to ignore that particular _group_, just filter it out _after_ performing the group calculation.\n\n``` js\nvar group = dimension.group();\n// Filter out the stuff we don\u2019t want,\n// assuming we are grouping by some numerical key.\nvar groups = group.all().filter(function(d) { return +d.key > 0; });\n```\n\nStackOverflow would be a better forum for asking questions like this, since having one huge bar for zero is not a bug.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9621413",
        "html_url": "https://github.com/square/crossfilter/issues/42#issuecomment-9621413",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/42",
        "id": 9621413,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2MjE0MTM=",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-19T21:34:20Z",
        "updated_at": "2012-10-19T21:34:20Z",
        "author_association": "COLLABORATOR",
        "body": "Crossfilter doesn't do any rendering, so I'm assuming you copied the bar chart from the [introduction page](http://square.github.com/crossfilter)? Yes, you may need to change the code if you are presenting different data.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9680836",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-9680836",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 9680836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2ODA4MzY=",
        "user": {
            "login": "john-guerra",
            "id": 1216843,
            "node_id": "MDQ6VXNlcjEyMTY4NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john-guerra",
            "html_url": "https://github.com/john-guerra",
            "followers_url": "https://api.github.com/users/john-guerra/followers",
            "following_url": "https://api.github.com/users/john-guerra/following{/other_user}",
            "gists_url": "https://api.github.com/users/john-guerra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john-guerra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john-guerra/subscriptions",
            "organizations_url": "https://api.github.com/users/john-guerra/orgs",
            "repos_url": "https://api.github.com/users/john-guerra/repos",
            "events_url": "https://api.github.com/users/john-guerra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john-guerra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-22T21:12:11Z",
        "updated_at": "2012-10-22T21:12:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for this addition I really need it on my code, however I think there is still an error when you have half your numer of items or more NaNs in your data. I think this illustrates it (copying @iros jsfiddle)\n\nhttp://jsfiddle.net/wc8ba/53/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/9799239",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-9799239",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 9799239,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTkyMzk=",
        "user": {
            "login": "enjalot",
            "id": 96189,
            "node_id": "MDQ6VXNlcjk2MTg5",
            "avatar_url": "https://avatars2.githubusercontent.com/u/96189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enjalot",
            "html_url": "https://github.com/enjalot",
            "followers_url": "https://api.github.com/users/enjalot/followers",
            "following_url": "https://api.github.com/users/enjalot/following{/other_user}",
            "gists_url": "https://api.github.com/users/enjalot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enjalot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enjalot/subscriptions",
            "organizations_url": "https://api.github.com/users/enjalot/orgs",
            "repos_url": "https://api.github.com/users/enjalot/repos",
            "events_url": "https://api.github.com/users/enjalot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enjalot/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-10-26T00:21:42Z",
        "updated_at": "2012-10-26T00:21:42Z",
        "author_association": "NONE",
        "body": "This definitely saved me a lot of trouble! Thanks.\nHere is a simple example of using arrays: http://enjalot.com/tributary/3955491/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10292764",
        "html_url": "https://github.com/square/crossfilter/issues/16#issuecomment-10292764",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/16",
        "id": 10292764,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjkyNzY0",
        "user": {
            "login": "martindaniel4",
            "id": 695006,
            "node_id": "MDQ6VXNlcjY5NTAwNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/695006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindaniel4",
            "html_url": "https://github.com/martindaniel4",
            "followers_url": "https://api.github.com/users/martindaniel4/followers",
            "following_url": "https://api.github.com/users/martindaniel4/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindaniel4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindaniel4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindaniel4/subscriptions",
            "organizations_url": "https://api.github.com/users/martindaniel4/orgs",
            "repos_url": "https://api.github.com/users/martindaniel4/repos",
            "events_url": "https://api.github.com/users/martindaniel4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindaniel4/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-12T15:58:57Z",
        "updated_at": "2012-11-12T15:58:57Z",
        "author_association": "NONE",
        "body": "Hi if you are still interested in implementing a filter based on an ordinal scale, I did it with the following principles : \n- I used svg:rect rather than path to allow a click on each element\n- I added an additional variable that allows me to draw either ordinal or continuous chart\n- I updated the 'render charts' part to trigger renderAll function \n- I added a background white path, that deselect the bar when clicked\n\nI am sure there is a better way to achieve this task, but I am pretty happy with the result !\n\nCheers,\n\nMartin\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10319438",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-10319438",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 10319438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzE5NDM4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-13T08:53:20Z",
        "updated_at": "2012-11-13T08:53:20Z",
        "author_association": "COLLABORATOR",
        "body": "M23 is now stable, so this issue should be resolved.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10379725",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-10379725",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 10379725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzc5NzI1",
        "user": {
            "login": "kapadia",
            "id": 581337,
            "node_id": "MDQ6VXNlcjU4MTMzNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/581337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kapadia",
            "html_url": "https://github.com/kapadia",
            "followers_url": "https://api.github.com/users/kapadia/followers",
            "following_url": "https://api.github.com/users/kapadia/following{/other_user}",
            "gists_url": "https://api.github.com/users/kapadia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kapadia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kapadia/subscriptions",
            "organizations_url": "https://api.github.com/users/kapadia/orgs",
            "repos_url": "https://api.github.com/users/kapadia/repos",
            "events_url": "https://api.github.com/users/kapadia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kapadia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-14T19:20:58Z",
        "updated_at": "2012-11-14T19:20:58Z",
        "author_association": "NONE",
        "body": "I concur with @iros.  A convenience function on dimension would be useful.  By the way, this is a super useful library!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10441737",
        "html_url": "https://github.com/square/crossfilter/issues/43#issuecomment-10441737",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/43",
        "id": 10441737,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQxNzM3",
        "user": {
            "login": "gkostov",
            "id": 410519,
            "node_id": "MDQ6VXNlcjQxMDUxOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/410519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkostov",
            "html_url": "https://github.com/gkostov",
            "followers_url": "https://api.github.com/users/gkostov/followers",
            "following_url": "https://api.github.com/users/gkostov/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkostov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkostov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkostov/subscriptions",
            "organizations_url": "https://api.github.com/users/gkostov/orgs",
            "repos_url": "https://api.github.com/users/gkostov/repos",
            "events_url": "https://api.github.com/users/gkostov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkostov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-16T09:49:47Z",
        "updated_at": "2012-11-16T09:49:47Z",
        "author_association": "NONE",
        "body": "I just came to the same problem and #36 seems to be solving it. So you could do\n\n``` javascript\nvar matcher=/pattern/g;\ndim.filter(function (val, ind){\n    return matcher.test(val);\n});\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10510635",
        "html_url": "https://github.com/square/crossfilter/issues/40#issuecomment-10510635",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/40",
        "id": 10510635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTEwNjM1",
        "user": {
            "login": "evenwestvang",
            "id": 172952,
            "node_id": "MDQ6VXNlcjE3Mjk1Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/172952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenwestvang",
            "html_url": "https://github.com/evenwestvang",
            "followers_url": "https://api.github.com/users/evenwestvang/followers",
            "following_url": "https://api.github.com/users/evenwestvang/following{/other_user}",
            "gists_url": "https://api.github.com/users/evenwestvang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evenwestvang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evenwestvang/subscriptions",
            "organizations_url": "https://api.github.com/users/evenwestvang/orgs",
            "repos_url": "https://api.github.com/users/evenwestvang/repos",
            "events_url": "https://api.github.com/users/evenwestvang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evenwestvang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-19T11:42:58Z",
        "updated_at": "2012-11-19T11:42:58Z",
        "author_association": "NONE",
        "body": "Yes, as far as I can tell this has been resolved.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10563951",
        "html_url": "https://github.com/square/crossfilter/issues/44#issuecomment-10563951",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/44",
        "id": 10563951,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTYzOTUx",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-20T17:23:26Z",
        "updated_at": "2012-11-20T17:23:26Z",
        "author_association": "COLLABORATOR",
        "body": "There are no asynchronous methods in Crossfilter, so there's no need for it to incorporate an event-listener model. The only time events would be sent are when your code changes the filters.\n\nIf you want to use event listeners, then I recommend adding an event listener framework to your code so that you can loosely-couple side-effects when filters change. For example, if you use [D3.js](http://d3js.org), you can use [d3.dispatch](https://github.com/mbostock/d3/wiki/Internals#wiki-d3_dispatch). There are likely other stand-alone libraries for creating custom events and notifying listeners if you'd prefer to use a different library.\n\nIn the [provided example](https://github.com/square/crossfilter/blob/gh-pages/index.html#L484-L509), the view is coordinated with the filters through D3's brush events.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10572468",
        "html_url": "https://github.com/square/crossfilter/issues/45#issuecomment-10572468",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/45",
        "id": 10572468,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTcyNDY4",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-20T20:52:46Z",
        "updated_at": "2012-11-20T20:52:46Z",
        "author_association": "COLLABORATOR",
        "body": "Yup, GitHub revved their Markdown parser, and it broke much of the API reference in this project and others.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10576610",
        "html_url": "https://github.com/square/crossfilter/issues/45#issuecomment-10576610",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/45",
        "id": 10576610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTc2NjEw",
        "user": {
            "login": "strathmeyer",
            "id": 23256,
            "node_id": "MDQ6VXNlcjIzMjU2",
            "avatar_url": "https://avatars1.githubusercontent.com/u/23256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/strathmeyer",
            "html_url": "https://github.com/strathmeyer",
            "followers_url": "https://api.github.com/users/strathmeyer/followers",
            "following_url": "https://api.github.com/users/strathmeyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/strathmeyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/strathmeyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/strathmeyer/subscriptions",
            "organizations_url": "https://api.github.com/users/strathmeyer/orgs",
            "repos_url": "https://api.github.com/users/strathmeyer/repos",
            "events_url": "https://api.github.com/users/strathmeyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/strathmeyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-20T22:27:55Z",
        "updated_at": "2012-11-20T22:27:55Z",
        "author_association": "NONE",
        "body": "I'll see what I can do!  :poodle: \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10612060",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-10612060",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 10612060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjEyMDYw",
        "user": {
            "login": "evenwestvang",
            "id": 172952,
            "node_id": "MDQ6VXNlcjE3Mjk1Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/172952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenwestvang",
            "html_url": "https://github.com/evenwestvang",
            "followers_url": "https://api.github.com/users/evenwestvang/followers",
            "following_url": "https://api.github.com/users/evenwestvang/following{/other_user}",
            "gists_url": "https://api.github.com/users/evenwestvang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evenwestvang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evenwestvang/subscriptions",
            "organizations_url": "https://api.github.com/users/evenwestvang/orgs",
            "repos_url": "https://api.github.com/users/evenwestvang/repos",
            "events_url": "https://api.github.com/users/evenwestvang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evenwestvang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-11-21T20:03:01Z",
        "updated_at": "2012-11-21T20:03:01Z",
        "author_association": "NONE",
        "body": "A great many thanks for authoring this Jason. I'm currently working on a project where this is very handy and I've set up a little regexp filter for a text dimension. It works great apart from one of the 6 dimensions simply not updating its group once an arbitrary filter has been set. Clearing the filter on the dimension with filterAll doesn't help.\n\nI've coerced it into behaving by exposing the resetMany call on group and calling it manually on the recalcitrant chart for every renderAll. I'll see if I can work up a negative test for this, but I'm wondering what's causing it since the other groups are updating fine.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/10983296",
        "html_url": "https://github.com/square/crossfilter/issues/47#issuecomment-10983296",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/47",
        "id": 10983296,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTgzMjk2",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-04T03:51:48Z",
        "updated_at": "2012-12-04T03:51:48Z",
        "author_association": "NONE",
        "body": "This is more of a d3 question. Ask on stack overflow, tag d3, or the d3 google group.\n\n--Brandon\n\nOn Dec 1, 2012, at 4:19 AM, owenhaberf notifications@github.com wrote:\n\n> This may be simple - but I'm new to d3, but how can I modify the crossfilter example to add y-axes with updating axes values? I've managed to add y axes with the following additions to the chart function:\n> \n> var yaxis = d3.svg.axis()\n> .scale(y)\n> .orient(\"left\")\n> .ticks(5)\n> .tickFormat(function (v) { return v / 2; });\n> \n> and\n> \n> g.append(\"g\")\n> .attr(\"class\", \"yaxis\")\n> .call(yaxis)\n> \n> This works fine, I get get axes on all the chart with the correct initial values. However, when the data is filtered the y axis tick values are not updated to reflect the data on the filtered charts. Any help on this would be very much appreciated.\n> \n> Thanks :-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11102753",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-11102753",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 11102753,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTAyNzUz",
        "user": {
            "login": "christophe-g",
            "id": 1168053,
            "node_id": "MDQ6VXNlcjExNjgwNTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1168053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophe-g",
            "html_url": "https://github.com/christophe-g",
            "followers_url": "https://api.github.com/users/christophe-g/followers",
            "following_url": "https://api.github.com/users/christophe-g/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophe-g/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophe-g/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophe-g/subscriptions",
            "organizations_url": "https://api.github.com/users/christophe-g/orgs",
            "repos_url": "https://api.github.com/users/christophe-g/repos",
            "events_url": "https://api.github.com/users/christophe-g/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophe-g/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-06T20:39:12Z",
        "updated_at": "2012-12-06T20:39:12Z",
        "author_association": "NONE",
        "body": "Pretty cool ;) \n\nWrote this https://github.com/NickQiZhu/dc.js/pull/91 to serve the same purpose !\nCheers,\nC.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11138106",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-11138106",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 11138106,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTM4MTA2",
        "user": {
            "login": "chondl",
            "id": 82033,
            "node_id": "MDQ6VXNlcjgyMDMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/82033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chondl",
            "html_url": "https://github.com/chondl",
            "followers_url": "https://api.github.com/users/chondl/followers",
            "following_url": "https://api.github.com/users/chondl/following{/other_user}",
            "gists_url": "https://api.github.com/users/chondl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chondl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chondl/subscriptions",
            "organizations_url": "https://api.github.com/users/chondl/orgs",
            "repos_url": "https://api.github.com/users/chondl/repos",
            "events_url": "https://api.github.com/users/chondl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chondl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-07T17:16:45Z",
        "updated_at": "2012-12-07T17:16:45Z",
        "author_association": "NONE",
        "body": "Thanks.  I had seen your fork as well, but for my project I was looking for an API where I wouldn't have to think about the pivot grouping when writing the reduce functions.  I haven't looked at how to tie this into one of the various charting components that use crossfilter since currently I'm using crossfilter inside node to create Excel and PDF tabular reports.  Hopefully there will be a future version of crossfilter with some version of pivot groups built in.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11496244",
        "html_url": "https://github.com/square/crossfilter/issues/50#issuecomment-11496244",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/50",
        "id": 11496244,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNDk2MjQ0",
        "user": {
            "login": "sjzabel",
            "id": 17985,
            "node_id": "MDQ6VXNlcjE3OTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjzabel",
            "html_url": "https://github.com/sjzabel",
            "followers_url": "https://api.github.com/users/sjzabel/followers",
            "following_url": "https://api.github.com/users/sjzabel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjzabel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjzabel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjzabel/subscriptions",
            "organizations_url": "https://api.github.com/users/sjzabel/orgs",
            "repos_url": "https://api.github.com/users/sjzabel/repos",
            "events_url": "https://api.github.com/users/sjzabel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjzabel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-18T17:22:41Z",
        "updated_at": "2012-12-18T17:22:41Z",
        "author_association": "NONE",
        "body": "I have the same question. Essentially, I'm working with a data set that has a dimension for US state code and a selection model that allows the user to select multiple states from a map. Is it possible to filter using crossfilter in this manner? \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11496461",
        "html_url": "https://github.com/square/crossfilter/issues/50#issuecomment-11496461",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/50",
        "id": 11496461,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNDk2NDYx",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-18T17:27:35Z",
        "updated_at": "2012-12-18T18:00:40Z",
        "author_association": "NONE",
        "body": "Use cross filter pull request https://github.com/square/crossfilter/pull/33  \n\nSupports filter unions.\n\nFor more specific needs, use https://github.com/square/crossfilter/pull/36\n\nThat supports custom filter functions.  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11497367",
        "html_url": "https://github.com/square/crossfilter/issues/50#issuecomment-11497367",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/50",
        "id": 11497367,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNDk3MzY3",
        "user": {
            "login": "sjzabel",
            "id": 17985,
            "node_id": "MDQ6VXNlcjE3OTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjzabel",
            "html_url": "https://github.com/sjzabel",
            "followers_url": "https://api.github.com/users/sjzabel/followers",
            "following_url": "https://api.github.com/users/sjzabel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjzabel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjzabel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjzabel/subscriptions",
            "organizations_url": "https://api.github.com/users/sjzabel/orgs",
            "repos_url": "https://api.github.com/users/sjzabel/repos",
            "events_url": "https://api.github.com/users/sjzabel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjzabel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-18T17:49:48Z",
        "updated_at": "2012-12-18T17:49:48Z",
        "author_association": "NONE",
        "body": "Thanks for the insight... I just pulled 36 and it looks like it works\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/11503664",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-11503664",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 11503664,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNTAzNjY0",
        "user": {
            "login": "sjzabel",
            "id": 17985,
            "node_id": "MDQ6VXNlcjE3OTg1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17985?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjzabel",
            "html_url": "https://github.com/sjzabel",
            "followers_url": "https://api.github.com/users/sjzabel/followers",
            "following_url": "https://api.github.com/users/sjzabel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjzabel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjzabel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjzabel/subscriptions",
            "organizations_url": "https://api.github.com/users/sjzabel/orgs",
            "repos_url": "https://api.github.com/users/sjzabel/repos",
            "events_url": "https://api.github.com/users/sjzabel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjzabel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2012-12-18T20:29:44Z",
        "updated_at": "2012-12-18T20:29:44Z",
        "author_association": "NONE",
        "body": "Thank you Jason... I'm using this in conjunction with the D3 geo library to filter data by state selection\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12262067",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-12262067",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 12262067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjYyMDY3",
        "user": {
            "login": "martindaniel4",
            "id": 695006,
            "node_id": "MDQ6VXNlcjY5NTAwNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/695006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindaniel4",
            "html_url": "https://github.com/martindaniel4",
            "followers_url": "https://api.github.com/users/martindaniel4/followers",
            "following_url": "https://api.github.com/users/martindaniel4/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindaniel4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindaniel4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindaniel4/subscriptions",
            "organizations_url": "https://api.github.com/users/martindaniel4/orgs",
            "repos_url": "https://api.github.com/users/martindaniel4/repos",
            "events_url": "https://api.github.com/users/martindaniel4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindaniel4/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-15T11:07:33Z",
        "updated_at": "2013-01-15T11:07:33Z",
        "author_association": "NONE",
        "body": "Hi Krikou,\n\nMany thanks for having developped this useful feature. \n\nYour remove function works fine for me when I pass the record as the object to remove. \n\nSince I mostly use the remove function based on a dimension (i.e : remove the flight named ORYJFK), I first filter with the corresponding dimension and pass the result to the remove function using top function i.e :\n\n// Init crossfilter\n\nvar flight = crossfilter(data),\n     flightName = flight.dimension(function(d) {return d.name;});\n\n// Filter the element to remove\n\nvar elementToBeRemoved = flightName.filterExact(\"ORYJFK\").top(1)[0];\n\n// Remove the element from Crossfilter\n\nflight.remove(elementToBeRemoved);\n\nI am pretty sure this is not the best way to achieve your task. It would be then great to have the remove function available for dimension as well. What do you think ?\n\nCrossfilter looks to work normally after this. Did you notice any issues after having remove an element from the initial crossfilter ? \n\nBest,\n\nMartin\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12266026",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-12266026",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 12266026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY2MDI2",
        "user": {
            "login": "christophe-g",
            "id": 1168053,
            "node_id": "MDQ6VXNlcjExNjgwNTM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1168053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christophe-g",
            "html_url": "https://github.com/christophe-g",
            "followers_url": "https://api.github.com/users/christophe-g/followers",
            "following_url": "https://api.github.com/users/christophe-g/following{/other_user}",
            "gists_url": "https://api.github.com/users/christophe-g/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christophe-g/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christophe-g/subscriptions",
            "organizations_url": "https://api.github.com/users/christophe-g/orgs",
            "repos_url": "https://api.github.com/users/christophe-g/repos",
            "events_url": "https://api.github.com/users/christophe-g/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christophe-g/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-15T13:16:08Z",
        "updated_at": "2013-01-15T13:23:59Z",
        "author_association": "NONE",
        "body": "Hi Martin\nThanks for the feedback\n\n> Crossfilter looks to work normally after this. Did you notice any issues after having remove an element from the initial crossfilter ?\n\nWell actually, I think I did - but I am not using this plugin anymore. From what I can remember, the problem lies withing groups. There should be a group level listener when data is removed.\n\nSomething like this might work: \nin dimension: \n\n``` js\n   onDataRemoveListeners = []\n```\n\nin group: \n\n``` js\n...\n      filterListeners.push(update);\n      onDataRemoveListeners.push(onDataRemove);\n      indexListeners.push(add);\n...\n       // recompute the group when data is removed. \n       function onDataRemove() {\n           resetNeeded = true;\n           k = 0; \n           add(values, index,0,n)\n       };\n\n```\n\nI am pretty sure the renown owner of this repo will have a much better way to handle data removing ;) \nCheers\nC.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12267270",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-12267270",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 12267270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY3Mjcw",
        "user": {
            "login": "martindaniel4",
            "id": 695006,
            "node_id": "MDQ6VXNlcjY5NTAwNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/695006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindaniel4",
            "html_url": "https://github.com/martindaniel4",
            "followers_url": "https://api.github.com/users/martindaniel4/followers",
            "following_url": "https://api.github.com/users/martindaniel4/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindaniel4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindaniel4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindaniel4/subscriptions",
            "organizations_url": "https://api.github.com/users/martindaniel4/orgs",
            "repos_url": "https://api.github.com/users/martindaniel4/repos",
            "events_url": "https://api.github.com/users/martindaniel4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindaniel4/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-15T13:47:25Z",
        "updated_at": "2013-01-15T13:47:25Z",
        "author_association": "NONE",
        "body": "Ok got you. I just had this error while trying to remove a record from the crossfilter :\n\n> Uncaught TypeError: Cannot read property 'value' of undefined \n\nI'll try to implement your code in the source file. I'll keep you posted. \n\nI agree with you, I am sure the owner will have a good way to achieve this task. Unfortunately it looks like this library is not maintained. \n\nCheers,\n\nMartin\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12271548",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-12271548",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 12271548,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjcxNTQ4",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-15T15:14:10Z",
        "updated_at": "2013-01-15T15:14:10Z",
        "author_association": "NONE",
        "body": "You might want to check with the jasondavies fork of cross filter. He has added some features recently, and might be a good place to send pull requests.  \n\n## \n\nBrandon Myers\n\nOn Tuesday, January 15, 2013 at 7:47 AM, Martin Daniel wrote:\n\n> Ok got you. I just had this error while trying to remove a record from the crossfilter :\n> \n> > Uncaught TypeError: Cannot read property 'value' of undefined  \n> \n> I'll try to implement your code in the source file. I'll keep you posted.  \n> I agree with you, I am sure the owner will have a good way to achieve this task. Unfortunately it looks like this library is not maintained.  \n> Cheers,\n> Martin\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/pull/46#issuecomment-12267270).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12276484",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-12276484",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 12276484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjc2NDg0",
        "user": {
            "login": "martindaniel4",
            "id": 695006,
            "node_id": "MDQ6VXNlcjY5NTAwNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/695006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindaniel4",
            "html_url": "https://github.com/martindaniel4",
            "followers_url": "https://api.github.com/users/martindaniel4/followers",
            "following_url": "https://api.github.com/users/martindaniel4/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindaniel4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindaniel4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindaniel4/subscriptions",
            "organizations_url": "https://api.github.com/users/martindaniel4/orgs",
            "repos_url": "https://api.github.com/users/martindaniel4/repos",
            "events_url": "https://api.github.com/users/martindaniel4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindaniel4/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-15T16:44:34Z",
        "updated_at": "2013-01-15T16:44:34Z",
        "author_association": "NONE",
        "body": "Ok I'll try. Thanks Brandon. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12391345",
        "html_url": "https://github.com/square/crossfilter/issues/52#issuecomment-12391345",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/52",
        "id": 12391345,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzkxMzQ1",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-17T20:59:57Z",
        "updated_at": "2013-01-17T20:59:57Z",
        "author_association": "COLLABORATOR",
        "body": "Discarding any references to the old crossfilter object should be sufficient to allow garbage collection.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12391507",
        "html_url": "https://github.com/square/crossfilter/issues/52#issuecomment-12391507",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/52",
        "id": 12391507,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzkxNTA3",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-17T21:04:10Z",
        "updated_at": "2013-01-17T21:04:10Z",
        "author_association": "NONE",
        "body": "Just to be sure, this includes the references to dimensions, and the embedded data within, correct?\n\nI think I may have a memory leak somewhere in my code that is causing the browser to not release large chunks of memory.\nI use D3 and Crossfilter to display a time series graph with multi-filtered dimensions. (I incorporated union filter code by @JasonDavies )\n\nIs there a memory profiling tool that you recommend that could help find the problem?  \n\nOn Thursday, January 17, 2013 at 3:00 PM, Mike Bostock wrote:\n\n> Discarding any references to the old crossfilter object should be sufficient to allow garbage collection.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/52#issuecomment-12391345).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12811944",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-12811944",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 12811944,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyODExOTQ0",
        "user": {
            "login": "kisielk",
            "id": 58618,
            "node_id": "MDQ6VXNlcjU4NjE4",
            "avatar_url": "https://avatars2.githubusercontent.com/u/58618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kisielk",
            "html_url": "https://github.com/kisielk",
            "followers_url": "https://api.github.com/users/kisielk/followers",
            "following_url": "https://api.github.com/users/kisielk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kisielk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kisielk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kisielk/subscriptions",
            "organizations_url": "https://api.github.com/users/kisielk/orgs",
            "repos_url": "https://api.github.com/users/kisielk/repos",
            "events_url": "https://api.github.com/users/kisielk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kisielk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-28T23:35:09Z",
        "updated_at": "2013-01-28T23:35:09Z",
        "author_association": "NONE",
        "body": "Just wondering if there's a reason this hasn't been merged yet? We are looking at using this same functionality for custom regexp filters.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/12819717",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-12819717",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 12819717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyODE5NzE3",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-01-29T04:07:45Z",
        "updated_at": "2013-01-29T04:07:45Z",
        "author_association": "COLLABORATOR",
        "body": "There's no reason this hasn't been merged other than time\u2026\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13300692",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-13300692",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 13300692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzAwNjky",
        "user": {
            "login": "chondl",
            "id": 82033,
            "node_id": "MDQ6VXNlcjgyMDMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/82033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chondl",
            "html_url": "https://github.com/chondl",
            "followers_url": "https://api.github.com/users/chondl/followers",
            "following_url": "https://api.github.com/users/chondl/following{/other_user}",
            "gists_url": "https://api.github.com/users/chondl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chondl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chondl/subscriptions",
            "organizations_url": "https://api.github.com/users/chondl/orgs",
            "repos_url": "https://api.github.com/users/chondl/repos",
            "events_url": "https://api.github.com/users/chondl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chondl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-08T17:16:20Z",
        "updated_at": "2013-02-08T17:16:20Z",
        "author_association": "NONE",
        "body": "I'm not sure I understand the question Brandon asked about \"imagine trying\nto sum the values of a column in group A while counting the ones the group\nB\".   Perhaps you can send a simple example with a few records and the\nexpected results of the calculation?\n\nThe pivot group just supports grouping the records by the dimension and the\nreduce function has access to all records in the group as they are added\nand removed.\n\nOn Thu, Feb 7, 2013 at 10:21 AM, Brandon notifications@github.com wrote:\n\n> I see the reduce methods in the pivot group, but imagine that I want to\n> adjust the group to be used in the pivot before the pivot combines them.\n> \n> So, imagine trying to sum the values of a column in group A while counting\n> the ones the group B\n> Then, in the pivot, multiply the 2 values in the reduce.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/square/crossfilter/pull/48#issuecomment-13251495.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13301100",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-13301100",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 13301100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzAxMTAw",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-08T17:24:26Z",
        "updated_at": "2013-02-08T17:24:26Z",
        "author_association": "NONE",
        "body": "Yea.. never mind on that. I figured out my problem.\nIt was some of my code altering the result of .all() on a group because all() doesn't return a copy.\nFixed with a .slice(0) on the return.\nSo:\n\n``` javascript\nvar cf = crossfilter(myData)\n  , d1 = cf.dimension(function(d){return d.key1})\n  , d2 = cf.dimension(function(d){return d.key2})\n  , g1 = d1.group()\n  , g2 = d2.group()\n  , x = g.all()\n  , s = []\n\nwhile(x.length) s.push(x.shift())\n\npg = cf.pivotGroup([g1,g2]) // Error should occur here\n\n```\n\nThat is just an example to expose what is happening. It doesn't do anything interesting.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13301268",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-13301268",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 13301268,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzAxMjY4",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-08T17:28:22Z",
        "updated_at": "2013-02-08T17:28:22Z",
        "author_association": "NONE",
        "body": "In commit: e528105 there is an issue in that removeListeners becomes global since there is a ; on the line before.\nChange it to , and this should fix it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13472328",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13472328",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13472328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDcyMzI4",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T03:01:43Z",
        "updated_at": "2013-02-13T03:01:43Z",
        "author_association": "NONE",
        "body": "Are you willing to rewrite my code to accomodate this API change? :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13473377",
        "html_url": "https://github.com/square/crossfilter/issues/55#issuecomment-13473377",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/55",
        "id": 13473377,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDczMzc3",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T03:51:32Z",
        "updated_at": "2013-02-13T03:51:32Z",
        "author_association": "NONE",
        "body": "Addendum.\n\nI stumbled into this bug only by accident on seeing rogue reduce.add() / reduce.remove() calls - objects I thought had gone out of scope but were still alive. I think this is due to the symantics and naming:\n\ncrossfilter.group()\n\ndoesn't really indicate a new and connected object will be created (well... you could say the same about the dimension() call but its more apparent in the documentation that these are \"heavyweight\"). I would rather see this renamed \"crossfilter.addGroup()\", and the corresponding crossfilter.removeGroup().\n\n-or-\n\nreimplement these as flyweight closure classes that are truly compute on demand.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13473448",
        "html_url": "https://github.com/square/crossfilter/issues/52#issuecomment-13473448",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/52",
        "id": 13473448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDczNDQ4",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T03:55:03Z",
        "updated_at": "2013-02-13T03:55:03Z",
        "author_association": "NONE",
        "body": "If you are doing anything sophisticated creating groups dynamically you might be running into the issue I reported here:\n\nhttps://github.com/square/crossfilter/issues/55\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13475694",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13475694",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13475694,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc1Njk0",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T05:57:40Z",
        "updated_at": "2013-02-13T06:02:02Z",
        "author_association": "NONE",
        "body": "Is your code open source?\n\nWell.. that's why I say _should_\nIt's a proposal for the next version.\nWhen unions, dimension removal, and group removal changes are, possibly, added.\n\nI took time to update my version of cross filter, and make the changes to my code.\n\nI posted this because it just seemed odd that for the execution to take that path.\n\nPass undefined as the parameter, then: update filter() to have if(range === undefined)\nThen, anywhere you call filter(null) update to filter() or filter(undefined).\n\ni may be oversimplifying things.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13496163",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-13496163",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 13496163,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDk2MTYz",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T14:33:12Z",
        "updated_at": "2013-02-13T14:33:12Z",
        "author_association": "NONE",
        "body": "@jasondavies:\nJust wondering what the scope of lo1 in src/crossfilter.js on line 287 should be.\nIt's being set in global scope.\nIf I comment it out, the tests still work fine.\nintroduced in commit 63d50a3\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13499462",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-13499462",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 13499462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDk5NDYy",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T15:33:38Z",
        "updated_at": "2013-02-13T15:33:38Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, this was a dangling global and I\u2019ve removed it now. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13504117",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13504117",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13504117,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTA0MTE3",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T16:51:18Z",
        "updated_at": "2013-02-13T16:51:18Z",
        "author_association": "NONE",
        "body": "I'm no javascript expert, but I'm not certain deliberate use of undefined is a common idiom in js apis. I pose it as a question.\n\nThere may also be some precedent (expectations) based on null and three-state logic used in SQL.\n\nWe have a textbook case here in the difficulty of executing the principle of least astonishment. Honestly when I used filter(null) it seemed very natural. But again, my data does not contain nulls, so I never filter on a null value.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13505483",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13505483",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13505483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTA1NDgz",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T17:17:43Z",
        "updated_at": "2013-02-13T17:17:43Z",
        "author_association": "NONE",
        "body": "Actually, it's not deliberately using undefined as a parameter, more so the exclusion of parameters to the filter() function.\n\nThis should be enough to say that we wish to call filterAll() (which in itself expects no parameters)\nAll other filter handler functions expect one or more parameters.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13518526",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13518526",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13518526,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTE4NTI2",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T21:15:35Z",
        "updated_at": "2013-02-13T21:18:03Z",
        "author_association": "NONE",
        "body": "I'm not passionate about it either way, but FYI here is my typical use case.\n\nvar filter = someControlViewer.getTheFilter();\ndimension.filter(filter);\n\nSo.. the proposal means my control needs to return \"undefined\" rather than \"null\" to mean - there is no filter selected. As I mention previously, this is a bit of an odd idiom.\n\nAlternatively, I need intermediary controller logic which determines if the control's filter is empty, or selected, and calls concrete methods filterExact(filter) or filterAll(). By this logic, the filter() method is completely unnecessary and redundant.\n\nAs a convenience function filter() has the exact semantics I am looking for and follows \"null as empty\" conventions I am accustomed to. Rather than describe this as an \"inconsistency\", I would argue it is a very useful feature.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13520162",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13520162",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13520162,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIwMTYy",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T21:48:00Z",
        "updated_at": "2013-02-13T21:57:49Z",
        "author_association": "NONE",
        "body": "Assuming **like me**, the OP wants the min/max dimension value (not the fact row), this is a bit more of a pain than you make it out to be. And in fact is impossible to implement in a generic way because the dimension accessor function (passed into the dimension function) is **not stored anywhere on the returned dimension.**\n\nConsider how I would _like_ the implementation to look:\n\ntopValue: function(dimension) {\n  var topFact = dimension.top(1);\n  if (topFact == null || topFact.length == 0) return null; **// Handle no fact rows, just in case**\n  return dimension.value(topFact[0]); **// Whoops - value() doesn't exist!**\n}\n\nA messy hack is to store the dimension accessor function and map to your dimensions, or reproduce the value accessor function. Not Very Dry. Rather I would like to see:\n\ndimension.topValue()\ndimension.bottomValue()\n\nThe use case for these functions is quite obvious - creating min/max range extents for slider controls to allow the user to dynamically filter based on a dimension.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13521341",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13521341",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13521341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIxMzQx",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T22:10:43Z",
        "updated_at": "2013-02-13T22:10:43Z",
        "author_association": "NONE",
        "body": "simple change would be: dimension.filter(filter||undefined);\n\nIf filter is null, the undefined value is passed instead.\n\nAs a convenience function filter should be meant to filter on whatever is passed.\nIf you pass nothing, nothing is filtered (aka filterAll()) if null is passed, filter on null (as in the filterExact() test cases)\n\n## \n\nBrandon Myers\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\n\nOn Wednesday, February 13, 2013 at 3:15 PM, aaronaverill wrote:\n\n> I'm not passionate about it either way, but FYI here is my typical use case.\n> var filter = someControlViewer.getTheFilter();\n> dimension.filter(filter);  \n> So.. the proposal means my control needs to return \"undefined\" rather than \"null\" to mean - there is no filter selected. As I mention previously, this is a bit of an odd idiom.\n> Alternatively, I need intermediary controller logic which determines if the control's filter is empty, or selected, and calls concrete methods filterExact(filter) or filterAll(). By this logic, the filter() method is completely unnessary and redundant.\n> As a convenience function filter() has the exact semantics I am looking for.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/54#issuecomment-13518526).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13521723",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13521723",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13521723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIxNzIz",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T22:17:49Z",
        "updated_at": "2013-02-13T22:17:49Z",
        "author_association": "COLLABORATOR",
        "body": "Exposing the value accessor on the dimension (and likewise the key accessor on the group) seems reasonable. It\u2019s a little dangerous in that it could be overwritten, but I don\u2019t see that being a problem.\n\nExposing dimension.topValues(k) and dimension.bottomValues(k) (note: plural) also sounds reasonable.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13521903",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13521903",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13521903,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIxOTAz",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T22:22:21Z",
        "updated_at": "2013-02-13T22:22:21Z",
        "author_association": "NONE",
        "body": "\"dimension.filter(filter||undefined);\"\n\nIf your goal with this bit of code is a more consistent, readable and easily understood API, you have failed, at least for me. Now we have not only added \"undefined\", but the null || idiom in passing function arguments. Pity the junior coder that comes along on the project and tries to unravel the reason for this, or the outsourced overseas agency that needs to make a quick change on a short term contract. \n\nI leave these kinds of gymnastics to the js minifiers but understand it is a personal preference to style. I guess we will have to disagree on this.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13521941",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13521941",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13521941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIxOTQx",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T22:22:55Z",
        "updated_at": "2013-02-13T22:22:55Z",
        "author_association": "COLLABORATOR",
        "body": "Having different behavior for null _vs._ undefined is a bit surprising, since `null == undefined` and they are sometimes used ambiguously. More generally, dimension.filter is a convenience function for calling dimension.filterExact, dimension.filterRange or dimension.filterAll; so, if you want to be unambiguous, you should use those methods exclusively rather than dimension.filter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13523630",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-13523630",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 13523630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTIzNjMw",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T22:58:20Z",
        "updated_at": "2013-02-13T22:58:20Z",
        "author_association": "NONE",
        "body": "null == undefined  \nbut\nnull !== undefined\n\nIn any case, it was just a suggestion since filterExact(null) actually performs a filter function, and I am using filter as a entry for multiple filter types on a common code path. So this would make sense for my case.\nBeing readable, I would indeed split into each filter function based on type\u2026 but I would be repeating the same work that filter already does.\nAdditionally, I use the union feature, which means, for my case, the filter variable as an array could be a union or a filterRange.\nfilter() already does the detection for me. I call dimension.filter.apply with the dimension and data array parameters.\nIf I have no values to filter, then filter() is called with no parameters, which means filterAll(), one value filterExact (even if null), etc\u2026.\n\nFrom the test cases, there are several values of \"null\" for tip. (which is suppose to convert to zero) for numeric values that is fine.\nBut for string or object values where null means null, this might be a problem. I don't know yet as I haven't hit that possibility.\n\n## \n\nBrandon Myers\n\nOn Wednesday, February 13, 2013 at 4:22 PM, Mike Bostock wrote:\n\n> Having different behavior for null vs. undefined is a bit surprising, since null == undefined and they are sometimes used ambiguously. More generally, dimension.filter is a convenience function for calling dimension.filterExact, dimension.filterRange or dimension.filterAll; so, if you want to be unambiguous, you should use those methods exclusively rather than dimension.filter.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/54#issuecomment-13521941).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13524319",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13524319",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13524319,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI0MzE5",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T23:16:04Z",
        "updated_at": "2013-02-13T23:21:28Z",
        "author_association": "NONE",
        "body": "Voila: https://github.com/square/crossfilter/pull/56\n\nNote this returns an array, so to get the min/max of a dimension you'll still need to check an array return of zero size and pick the first element.\n\nvar max = dimension.topValues(1);\nmax = max.length ? max[0] : null;\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13525095",
        "html_url": "https://github.com/square/crossfilter/pull/56#issuecomment-13525095",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/56",
        "id": 13525095,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI1MDk1",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T23:36:07Z",
        "updated_at": "2013-02-13T23:36:07Z",
        "author_association": "COLLABORATOR",
        "body": "You'll want to edit src/crossfilter.js, rather than the concatenated generated crossfilter.js. Also, would you mind adding tests for the same functionality?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13525374",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13525374",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13525374,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI1Mzc0",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T23:44:23Z",
        "updated_at": "2013-02-13T23:44:23Z",
        "author_association": "NONE",
        "body": "It is impossible for the dimension to know exactly what value you want back from the array.  \n\nYou could just set it on the dimension itself.\n\n``` javascript\nvar dimAFunc = function(d){return d.field}\n  , d  = cf.dimension(dimAValue)\nd.value = dimAValue\n\nvar extent = [d.value(d.bottom(1)[0]),d.value(d.top(1)[0])]\n```\n\n## \n\nBrandon Myers\n\nOn Wednesday, February 13, 2013 at 3:48 PM, aaronaverill wrote:\n\n> Assuming like me, the OP wants the min/max dimension value (not the fact row), this is a bit more of a pain than you make it out to be. And in fact is impossible to implement in a generic way because the dimension accessor function (passed into the dimension function) is not stored anywhere on the returned dimension.\n> Consider how I would like the implementation to look:\n> topValue: function(dimension) {\n> var topFact = dimension.top(1);\n> if (topFact == null || topFact.length == 0) return null; // Handle no fact rows.\n> return dimension.value(topFact); // Whoops - this doesn't exist!\n> }  \n> A messy hack is to store the dimension accessor function and map to your dimensions, or reproduce the value accessor function. Not Very Dry. Rather I would like to see:\n> dimension.topValue()\n> dimension.bottomValue()  \n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/28#issuecomment-13520162).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13525585",
        "html_url": "https://github.com/square/crossfilter/pull/56#issuecomment-13525585",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/56",
        "id": 13525585,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI1NTg1",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-13T23:49:57Z",
        "updated_at": "2013-02-13T23:49:57Z",
        "author_association": "NONE",
        "body": "\"You'll want to edit src/crossfilter.js, rather than the concatenated generated crossfilter.js\"\n\nDone.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13526130",
        "html_url": "https://github.com/square/crossfilter/pull/56#issuecomment-13526130",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/56",
        "id": 13526130,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI2MTMw",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-14T00:03:51Z",
        "updated_at": "2013-02-14T00:03:51Z",
        "author_association": "NONE",
        "body": "\"Also, would you mind adding tests for the same functionality?\"\n\nThis is going to be tough. Not familiar with vows or test data, and I don't have D3. So the test environment setup is a steep hill.\n\nIn theory, it should be easy to use the top() / bottom() tests, but pull out the dimension value.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13526267",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13526267",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13526267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI2MjY3",
        "user": {
            "login": "aaronaverill",
            "id": 1642163,
            "node_id": "MDQ6VXNlcjE2NDIxNjM=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1642163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronaverill",
            "html_url": "https://github.com/aaronaverill",
            "followers_url": "https://api.github.com/users/aaronaverill/followers",
            "following_url": "https://api.github.com/users/aaronaverill/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronaverill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronaverill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronaverill/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronaverill/orgs",
            "repos_url": "https://api.github.com/users/aaronaverill/repos",
            "events_url": "https://api.github.com/users/aaronaverill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronaverill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-14T00:07:35Z",
        "updated_at": "2013-02-14T00:07:35Z",
        "author_association": "NONE",
        "body": "\"It is impossible for the dimension to know exactly what value you want back from the array.\"\n\nI think there is some confusion. Myself at least (maybe not the OP) - I am looking for the min/max of the actual dimension itself, eg - the value returned from the valueaccessor function parameter passed to crossfilter.dimension(value).\n\nUsing the test data as an example, say you have a dimension of payment date, these functions would allow you to find in a single call the earliest and latest payment date. \n\nWe're using these as the range for a jQuery slider that allows to filter on a dimension.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13527196",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-13527196",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 13527196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI3MTk2",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-14T00:39:11Z",
        "updated_at": "2013-02-14T00:39:11Z",
        "author_association": "NONE",
        "body": "I was probably thinking in a totally, and probably wrong, direction\u2026  \n\n## \n\nBrandon Myers\n\nOn Wednesday, February 13, 2013 at 6:07 PM, aaronaverill wrote:\n\n> \"It is impossible for the dimension to know exactly what value you want back from the array.\"\n> I think there is some confusion. Myself at least (maybe not the OP) - I am looking for the min/max of the actual dimension itself, eg - the value returned from the valueaccessor function parameter passed to crossfilter.dimension(value).\n> Using the test data as an example, say you have a dimension of payment date, these functions would allow you to find in a single call the earliest and latest payment date.  \n> We're using these as the range for a jQuery slider that allows to filter on a dimension.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/28#issuecomment-13526267).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13527269",
        "html_url": "https://github.com/square/crossfilter/pull/56#issuecomment-13527269",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/56",
        "id": 13527269,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTI3MjY5",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-14T00:41:27Z",
        "updated_at": "2013-02-14T00:41:27Z",
        "author_association": "NONE",
        "body": "I could write them.  \n\nI won't be able to get to it until tomorrow.\n\n## \n\nBrandon Myers\n\nOn Wednesday, February 13, 2013 at 6:03 PM, aaronaverill wrote:\n\n> \"Also, would you mind adding tests for the same functionality?\"\n> This is going to be tough. Not familiar with vows or test data, and I don't have D3. So the test environment setup is a steep hill.\n> In theory, it should be easy to use the top() / bottom() tests, but pull out the dimension value.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/pull/56#issuecomment-13526130).  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13983450",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13983450",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13983450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTgzNDUw",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T02:22:12Z",
        "updated_at": "2013-02-23T02:22:12Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed by #3.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13983989",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13983989",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13983989,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTgzOTg5",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T03:04:08Z",
        "updated_at": "2013-02-23T03:04:08Z",
        "author_association": "NONE",
        "body": "Ah Thanks. Hope it can be merged into the master branch soon.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13991741",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-13991741",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 13991741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTkxNzQx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T15:33:06Z",
        "updated_at": "2013-02-23T15:33:06Z",
        "author_association": "COLLABORATOR",
        "body": "@john-guerra Thank you for noticing this; I\u2019ve fixed the issue and included a test case for bisect.right, which was the underlying cause.  I\u2019ve also merged with the latest master, so that jsfiddle no longer works due to the name change (tesseract\u2192crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13997292",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13997292",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13997292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTk3Mjky",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T20:41:27Z",
        "updated_at": "2013-02-23T20:41:27Z",
        "author_association": "NONE",
        "body": "@jasondavies @mbostock I updated the jsfiddle to use Jason's branch, but it still returns incorrect results?\n\nhttp://jsfiddle.net/Cr44L/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13997478",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13997478",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13997478,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTk3NDc4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T20:51:44Z",
        "updated_at": "2013-02-23T20:51:44Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, it looks like it is incorrectly counting 10 for quantity=2, when it should be 8.  I\u2019ll look into it soon.  I think the code that updates groups needs adjusting slightly.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13997576",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13997576",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13997576,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTk3NTc2",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T20:55:59Z",
        "updated_at": "2013-02-23T20:55:59Z",
        "author_association": "NONE",
        "body": "Thanks for looking at this. It seams that each of the fields is counted incorrectly. Can we reopen this issue  @mbostock?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/13999099",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-13999099",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 13999099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTk5MDk5",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T22:17:26Z",
        "updated_at": "2013-02-23T22:17:26Z",
        "author_association": "COLLABORATOR",
        "body": "@jeroenooms I think it makes more sense to track that issue on #3.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14000267",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14000267",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14000267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAwMjY3",
        "user": {
            "login": "john-guerra",
            "id": 1216843,
            "node_id": "MDQ6VXNlcjEyMTY4NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john-guerra",
            "html_url": "https://github.com/john-guerra",
            "followers_url": "https://api.github.com/users/john-guerra/followers",
            "following_url": "https://api.github.com/users/john-guerra/following{/other_user}",
            "gists_url": "https://api.github.com/users/john-guerra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john-guerra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john-guerra/subscriptions",
            "organizations_url": "https://api.github.com/users/john-guerra/orgs",
            "repos_url": "https://api.github.com/users/john-guerra/repos",
            "events_url": "https://api.github.com/users/john-guerra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john-guerra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-23T23:28:53Z",
        "updated_at": "2013-02-23T23:28:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jasondavies It seems that the problem persists if the number of NaNs is big enough, check this case:\n\nhttp://jsfiddle.net/wc8ba/94/\n\nAm I missing something?\n\nThanks for looking at this, it would be great to get this fixed, I need it desperately for my code, so I offer my help in whatever I can\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14000723",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14000723",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14000723,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAwNzIz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-24T00:05:22Z",
        "updated_at": "2013-02-24T00:05:22Z",
        "author_association": "COLLABORATOR",
        "body": "@john-guerra Fixed.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14000822",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14000822",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14000822,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAwODIy",
        "user": {
            "login": "john-guerra",
            "id": 1216843,
            "node_id": "MDQ6VXNlcjEyMTY4NDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1216843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/john-guerra",
            "html_url": "https://github.com/john-guerra",
            "followers_url": "https://api.github.com/users/john-guerra/followers",
            "following_url": "https://api.github.com/users/john-guerra/following{/other_user}",
            "gists_url": "https://api.github.com/users/john-guerra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/john-guerra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/john-guerra/subscriptions",
            "organizations_url": "https://api.github.com/users/john-guerra/orgs",
            "repos_url": "https://api.github.com/users/john-guerra/repos",
            "events_url": "https://api.github.com/users/john-guerra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/john-guerra/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-24T00:12:46Z",
        "updated_at": "2013-02-24T00:12:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jasondavies you sir have just won a big thank you note in my PhD dissertation! hehehe Thanks a lot!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14001036",
        "html_url": "https://github.com/square/crossfilter/issues/57#issuecomment-14001036",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/57",
        "id": 14001036,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAxMDM2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-24T00:29:26Z",
        "updated_at": "2013-02-24T00:29:26Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed in #3.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14001043",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14001043",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14001043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAxMDQz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-24T00:29:43Z",
        "updated_at": "2013-02-24T00:29:43Z",
        "author_association": "COLLABORATOR",
        "body": "Awesome. :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14002019",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14002019",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14002019,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDAyMDE5",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-24T02:05:09Z",
        "updated_at": "2013-02-24T02:05:09Z",
        "author_association": "NONE",
        "body": "Great, thank you so much! Hope to see this make its way into the master soon!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14246971",
        "html_url": "https://github.com/square/crossfilter/pull/58#issuecomment-14246971",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/58",
        "id": 14246971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQ2OTcx",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T17:57:15Z",
        "updated_at": "2013-02-28T17:57:15Z",
        "author_association": "NONE",
        "body": "Fantastic!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14248915",
        "html_url": "https://github.com/square/crossfilter/issues/50#issuecomment-14248915",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/50",
        "id": 14248915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQ4OTE1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T18:32:07Z",
        "updated_at": "2013-02-28T18:32:07Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed by #36.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14248936",
        "html_url": "https://github.com/square/crossfilter/issues/43#issuecomment-14248936",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/43",
        "id": 14248936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQ4OTM2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T18:32:26Z",
        "updated_at": "2013-02-28T18:32:26Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed by #36.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14249671",
        "html_url": "https://github.com/square/crossfilter/issues/6#issuecomment-14249671",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/6",
        "id": 14249671,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQ5Njcx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T18:44:17Z",
        "updated_at": "2013-02-28T18:44:17Z",
        "author_association": "COLLABORATOR",
        "body": "https://npmjs.org/package/crossfilter\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14249992",
        "html_url": "https://github.com/square/crossfilter/issues/51#issuecomment-14249992",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/51",
        "id": 14249992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjQ5OTky",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T18:50:24Z",
        "updated_at": "2013-02-28T18:50:24Z",
        "author_association": "COLLABORATOR",
        "body": "Please use the [crossfilter tag](http://stackoverflow.com/questions/tagged/crossfilter) on Stack Overflow if you want help. These issues are for feature requests and bug reports only. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14250568",
        "html_url": "https://github.com/square/crossfilter/issues/39#issuecomment-14250568",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/39",
        "id": 14250568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjUwNTY4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T19:00:33Z",
        "updated_at": "2013-02-28T19:00:33Z",
        "author_association": "COLLABORATOR",
        "body": "Issues with incomparable values (NaN and undefined) and grouping by such values are fixed in #3.\n\nYou still need to account for such values when visualising e.g. you might want to ignore the group representing missing values when computing the y-scale for your histogram, as mentioned above.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14251278",
        "html_url": "https://github.com/square/crossfilter/issues/53#issuecomment-14251278",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/53",
        "id": 14251278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjUxMjc4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T19:12:29Z",
        "updated_at": "2013-02-28T19:12:29Z",
        "author_association": "COLLABORATOR",
        "body": "Are you passing a host object e.g. a DOM object to the worker?  Crossfilter doesn\u2019t rely on the DOM so it should work fine inside a worker provided you\u2019re aware of the constraints.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14251670",
        "html_url": "https://github.com/square/crossfilter/issues/14#issuecomment-14251670",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/14",
        "id": 14251670,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjUxNjcw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T19:19:30Z",
        "updated_at": "2013-02-28T19:19:30Z",
        "author_association": "COLLABORATOR",
        "body": "I think the performance penalty of iterating over the returned array again to transform each element is negligible.  Note that array.map creates a fresh array, so if you\u2019re worried about performance you might prefer to replace each element in-place:\n\n``` js\nvar a = d.top(k);\nfor (var i = 0, n = a.length; i < n; ++i) {\n  a[i] = accessor(a[i]);\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14259642",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-14259642",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 14259642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjU5NjQy",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T21:47:16Z",
        "updated_at": "2013-02-28T21:47:16Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #58.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14259667",
        "html_url": "https://github.com/square/crossfilter/pull/29#issuecomment-14259667",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/29",
        "id": 14259667,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjU5NjY3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T21:47:52Z",
        "updated_at": "2013-02-28T21:47:52Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #58.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14263121",
        "html_url": "https://github.com/square/crossfilter/issues/32#issuecomment-14263121",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/32",
        "id": 14263121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjYzMTIx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T22:57:52Z",
        "updated_at": "2013-02-28T22:57:52Z",
        "author_association": "COLLABORATOR",
        "body": "Please use the [crossfilter tag](http://stackoverflow.com/questions/tagged/crossfilter) on Stack Overflow if you want help. These issues are for feature requests and bug reports only. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14263289",
        "html_url": "https://github.com/square/crossfilter/issues/49#issuecomment-14263289",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/49",
        "id": 14263289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjYzMjg5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T23:01:08Z",
        "updated_at": "2013-02-28T23:01:08Z",
        "author_association": "COLLABORATOR",
        "body": "You\u2019re probably better off opening an issue at DefinitelyTyped. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14263328",
        "html_url": "https://github.com/square/crossfilter/issues/30#issuecomment-14263328",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/30",
        "id": 14263328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjYzMzI4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T23:01:49Z",
        "updated_at": "2013-02-28T23:01:49Z",
        "author_association": "COLLABORATOR",
        "body": "Please use the [crossfilter tag](http://stackoverflow.com/questions/tagged/crossfilter) on Stack Overflow if you want help. These issues are for feature requests and bug reports only. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14264767",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-14264767",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 14264767,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjY0NzY3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T23:36:17Z",
        "updated_at": "2013-02-28T23:36:17Z",
        "author_association": "COLLABORATOR",
        "body": "You could keep a sorted array per group key, but then the overhead of maintaining this may be greater than simply recomputing the min/max per group key entirely from scratch.  Perhaps the lack of a reduceRemove function could force each group to be recomputed from scratch if anything is removed from that group, while still allowing incremental updates when records are added.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14264985",
        "html_url": "https://github.com/square/crossfilter/issues/37#issuecomment-14264985",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/37",
        "id": 14264985,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjY0OTg1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T23:41:25Z",
        "updated_at": "2013-02-28T23:41:25Z",
        "author_association": "COLLABORATOR",
        "body": "Please use the [crossfilter tag](http://stackoverflow.com/questions/tagged/crossfilter) on Stack Overflow if you want help. These issues are for feature requests and bug reports only. Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14265500",
        "html_url": "https://github.com/square/crossfilter/pull/41#issuecomment-14265500",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/41",
        "id": 14265500,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjY1NTAw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-02-28T23:54:59Z",
        "updated_at": "2013-02-28T23:54:59Z",
        "author_association": "COLLABORATOR",
        "body": "Interesting, thanks.  Since Crossfilter already works fine in both browsers and Node.js, I\u2019m not convinced there\u2019s any reason to change anything here.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14279618",
        "html_url": "https://github.com/square/crossfilter/issues/55#issuecomment-14279618",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/55",
        "id": 14279618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc5NjE4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T09:28:54Z",
        "updated_at": "2013-03-01T09:28:54Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed by #60.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14282750",
        "html_url": "https://github.com/square/crossfilter/pull/10#issuecomment-14282750",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/10",
        "id": 14282750,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjgyNzUw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T10:54:38Z",
        "updated_at": "2013-03-01T10:54:38Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #60.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14285623",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-14285623",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 14285623,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjg1NjIz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T11:51:52Z",
        "updated_at": "2013-03-01T11:51:52Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed in #61.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14299285",
        "html_url": "https://github.com/square/crossfilter/pull/60#issuecomment-14299285",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/60",
        "id": 14299285,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjk5Mjg1",
        "user": {
            "login": "eventualbuddha",
            "id": 1938,
            "node_id": "MDQ6VXNlcjE5Mzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eventualbuddha",
            "html_url": "https://github.com/eventualbuddha",
            "followers_url": "https://api.github.com/users/eventualbuddha/followers",
            "following_url": "https://api.github.com/users/eventualbuddha/following{/other_user}",
            "gists_url": "https://api.github.com/users/eventualbuddha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eventualbuddha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eventualbuddha/subscriptions",
            "organizations_url": "https://api.github.com/users/eventualbuddha/orgs",
            "repos_url": "https://api.github.com/users/eventualbuddha/repos",
            "events_url": "https://api.github.com/users/eventualbuddha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eventualbuddha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T16:57:18Z",
        "updated_at": "2013-03-01T16:57:18Z",
        "author_association": "NONE",
        "body": "Nice! Might make sense to have tests around this, though I'm not sure exactly what behavior you'd be testing.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14306821",
        "html_url": "https://github.com/square/crossfilter/pull/58#issuecomment-14306821",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/58",
        "id": 14306821,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA2ODIx",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T19:30:47Z",
        "updated_at": "2013-03-01T19:30:47Z",
        "author_association": "COLLABORATOR",
        "body": ":+1: LGTM.\n\n@mbostock do you want to merge and bump versions, or add me and Jason to the npm package so we can take care of it?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14308099",
        "html_url": "https://github.com/square/crossfilter/pull/62#issuecomment-14308099",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/62",
        "id": 14308099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA4MDk5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T19:56:39Z",
        "updated_at": "2013-03-01T19:56:39Z",
        "author_association": "COLLABORATOR",
        "body": "I\u2019ve updated `src/package.js` since package.json is auto-generated, and converted the author, contributors and maintainers to be hashes.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14308404",
        "html_url": "https://github.com/square/crossfilter/pull/58#issuecomment-14308404",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/58",
        "id": 14308404,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA4NDA0",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T20:02:34Z",
        "updated_at": "2013-03-01T20:02:34Z",
        "author_association": "COLLABORATOR",
        "body": "I have added jasondavies and randometc as owners of crossfilter. Godspeed, chaps!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14308449",
        "html_url": "https://github.com/square/crossfilter/pull/58#issuecomment-14308449",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/58",
        "id": 14308449,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA4NDQ5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T20:03:38Z",
        "updated_at": "2013-03-01T20:03:38Z",
        "author_association": "COLLABORATOR",
        "body": "Tally ho, me old china!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14308644",
        "html_url": "https://github.com/square/crossfilter/pull/62#issuecomment-14308644",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/62",
        "id": 14308644,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA4NjQ0",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T20:07:39Z",
        "updated_at": "2013-03-01T20:07:39Z",
        "author_association": "COLLABORATOR",
        "body": "Oh ha, good catch. Makes sense :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14314337",
        "html_url": "https://github.com/square/crossfilter/pull/62#issuecomment-14314337",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/62",
        "id": 14314337,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzE0MzM3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T22:08:53Z",
        "updated_at": "2013-03-01T22:08:53Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #58.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14316762",
        "html_url": "https://github.com/square/crossfilter/pull/60#issuecomment-14316762",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/60",
        "id": 14316762,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzE2NzYy",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-01T23:08:23Z",
        "updated_at": "2013-03-01T23:08:23Z",
        "author_association": "COLLABORATOR",
        "body": "Tests added.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14318438",
        "html_url": "https://github.com/square/crossfilter/pull/60#issuecomment-14318438",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/60",
        "id": 14318438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzE4NDM4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-02T00:00:04Z",
        "updated_at": "2013-03-02T00:00:04Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #63.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14318446",
        "html_url": "https://github.com/square/crossfilter/pull/61#issuecomment-14318446",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/61",
        "id": 14318446,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzE4NDQ2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-02T00:00:20Z",
        "updated_at": "2013-03-02T00:00:20Z",
        "author_association": "COLLABORATOR",
        "body": "Folded into #63.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14320057",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-14320057",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 14320057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzIwMDU3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-02T01:10:37Z",
        "updated_at": "2013-03-02T01:10:37Z",
        "author_association": "COLLABORATOR",
        "body": "Superseded by #64.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14339935",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-14339935",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 14339935,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM5OTM1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T01:51:53Z",
        "updated_at": "2013-03-03T01:51:53Z",
        "author_association": "COLLABORATOR",
        "body": "I\u2019m not sure it\u2019s worth the effort to support undefined or NaN group reduce values, because the concept of a \u201cmissing value\u201d doesn\u2019t make sense there.  However, it might be useful for reduceSum to ignore NaN values.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14357216",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14357216",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14357216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU3MjE2",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T22:38:57Z",
        "updated_at": "2013-03-03T22:38:57Z",
        "author_association": "COLLABORATOR",
        "body": "I can confirm this is a bug as well. Crossfilter 1.1.1 shows the MSY-HOU flight with delay 29 when the filter is set to include the maximum delay of 150. If the filter is nudged down to 149.something then that flight is not shown any more. I note there are two MSY-HOU flights with delay 29 in the data-set, could that have something to do with it?\n\nI can look into this some more later this week - in the meantime @jasondavies any idea?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14357234",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14357234",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14357234,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU3MjM0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T22:40:07Z",
        "updated_at": "2013-03-03T22:40:07Z",
        "author_association": "COLLABORATOR",
        "body": "I\u2019ll look into it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14357257",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14357257",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14357257,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU3MjU3",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T22:41:11Z",
        "updated_at": "2013-03-03T22:48:21Z",
        "author_association": "COLLABORATOR",
        "body": "Update: the erroneous flight is the last row in the data. There is also a blank line at the end of the file. Removing the blank line fixes the bug.\n\nI assume this is something to do with the new null/NaN handling?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14357460",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14357460",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14357460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU3NDYw",
        "user": {
            "login": "asherkin",
            "id": 865360,
            "node_id": "MDQ6VXNlcjg2NTM2MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/865360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asherkin",
            "html_url": "https://github.com/asherkin",
            "followers_url": "https://api.github.com/users/asherkin/followers",
            "following_url": "https://api.github.com/users/asherkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/asherkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asherkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asherkin/subscriptions",
            "organizations_url": "https://api.github.com/users/asherkin/orgs",
            "repos_url": "https://api.github.com/users/asherkin/repos",
            "events_url": "https://api.github.com/users/asherkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asherkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T22:50:30Z",
        "updated_at": "2013-03-03T22:50:30Z",
        "author_association": "NONE",
        "body": "Removing the newline from the end of my CSV file does indeed seemed to have fixed both erroneous matches (which is even odder as one of them is in the middle of the file), thanks @RandomEtc.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14357715",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14357715",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14357715,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU3NzE1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T23:03:24Z",
        "updated_at": "2013-03-03T23:03:24Z",
        "author_association": "COLLABORATOR",
        "body": "@asherkin the new release has different support for the handling of NaN and null values, so that must what is causing the issue. We'll figure it out :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14358141",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14358141",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14358141,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU4MTQx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-03T23:27:32Z",
        "updated_at": "2013-03-03T23:27:32Z",
        "author_association": "COLLABORATOR",
        "body": "Fixed in version 1.1.2; see b742be6146441195dd08d3f3b9f33601d1e175f8.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14359009",
        "html_url": "https://github.com/square/crossfilter/issues/66#issuecomment-14359009",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/66",
        "id": 14359009,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzU5MDA5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-04T00:16:11Z",
        "updated_at": "2013-03-04T00:16:11Z",
        "author_association": "COLLABORATOR",
        "body": "See also: mishoo/UglifyJS2#143.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14527650",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-14527650",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 14527650,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTI3NjUw",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-06T21:36:26Z",
        "updated_at": "2013-03-06T21:42:21Z",
        "author_association": "NONE",
        "body": "Thanks for looking into this. I think putting some effort in making sure missing values are handled gracefully is worth wile and will pay off in the long run. Especially in javascript where there are no strong-typed structures, and data records might literally contain anything, null or NaN values can easily arise. \n\nI don't think it is very important to maintain `top(Infinity).reverse() === bottom(Infinity)`. Actually, if this would be the case, there wouldn't be a need for both `top()` and `bottom()`. The sorting behavior of R has proven to make a good default, in the sense of the principle of least surprise. The behavior of putting null values at the top on the other hand is, I think, quite unexpected.  \n\nIn R, the `sum` function has an argument on how to deal with `NA`. The default in R is to be safe. Perhaps in javascript, ignoring missing values makes a better default.\n\n```\nR> c(1,3,NA,5,6)\n[1]  1  3 NA  5  6\nR> sum(c(1,3,NA,5,6))\n[1] NA\nR> sum(c(1,3,NA,5,6), na.rm=TRUE)\n[1] 15\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14536418",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-14536418",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 14536418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTM2NDE4",
        "user": {
            "login": "denzo",
            "id": 1874772,
            "node_id": "MDQ6VXNlcjE4NzQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1874772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denzo",
            "html_url": "https://github.com/denzo",
            "followers_url": "https://api.github.com/users/denzo/followers",
            "following_url": "https://api.github.com/users/denzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/denzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denzo/subscriptions",
            "organizations_url": "https://api.github.com/users/denzo/orgs",
            "repos_url": "https://api.github.com/users/denzo/repos",
            "events_url": "https://api.github.com/users/denzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-07T00:48:49Z",
        "updated_at": "2013-03-07T00:48:49Z",
        "author_association": "NONE",
        "body": "What is the status on this? Is there a plan to merge it any time soon?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14539625",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-14539625",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 14539625,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTM5NjI1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-07T02:32:42Z",
        "updated_at": "2013-03-07T02:32:42Z",
        "author_association": "COLLABORATOR",
        "body": "#13 and #5 are currently in the 1.3 Milestone - organized by @jasondavies who has better idea of the dependencies than I do - that puts it a couple of releases off but no big API changes are in the way: https://github.com/square/crossfilter/issues/milestones\n\nWe both just took over maintenance of the project last week, so bear with us but things should be moving again soon!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14539835",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-14539835",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 14539835,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTM5ODM1",
        "user": {
            "login": "denzo",
            "id": 1874772,
            "node_id": "MDQ6VXNlcjE4NzQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1874772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denzo",
            "html_url": "https://github.com/denzo",
            "followers_url": "https://api.github.com/users/denzo/followers",
            "following_url": "https://api.github.com/users/denzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/denzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denzo/subscriptions",
            "organizations_url": "https://api.github.com/users/denzo/orgs",
            "repos_url": "https://api.github.com/users/denzo/repos",
            "events_url": "https://api.github.com/users/denzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-07T02:41:25Z",
        "updated_at": "2013-03-07T02:41:25Z",
        "author_association": "NONE",
        "body": "That is truly awesome! You guys doing an amazing job!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14782016",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-14782016",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 14782016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzgyMDE2",
        "user": {
            "login": "RoxanaTorre",
            "id": 2083355,
            "node_id": "MDQ6VXNlcjIwODMzNTU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2083355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoxanaTorre",
            "html_url": "https://github.com/RoxanaTorre",
            "followers_url": "https://api.github.com/users/RoxanaTorre/followers",
            "following_url": "https://api.github.com/users/RoxanaTorre/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoxanaTorre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoxanaTorre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoxanaTorre/subscriptions",
            "organizations_url": "https://api.github.com/users/RoxanaTorre/orgs",
            "repos_url": "https://api.github.com/users/RoxanaTorre/repos",
            "events_url": "https://api.github.com/users/RoxanaTorre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoxanaTorre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-12T15:31:15Z",
        "updated_at": "2013-03-12T15:31:15Z",
        "author_association": "NONE",
        "body": "Should it be possible with #64 to filter two or more values of a (categorical) dimension? and if so, how?\nThanks\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14782289",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-14782289",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 14782289,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzgyMjg5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-12T15:35:02Z",
        "updated_at": "2013-03-12T15:35:02Z",
        "author_association": "COLLABORATOR",
        "body": "``` js\nvar query = [\"foo\", \"bar\"];\ndimension.filter(function(d) { return query.indexOf(d) >= 0; });\n```\n\nSlightly faster but trickier if you want to create dynamic filters:\n\n``` js\ndimension.filter(function(d) { return d === \"foo\" || d === \"bar\"; });\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14786098",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-14786098",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 14786098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg2MDk4",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-12T16:30:24Z",
        "updated_at": "2013-03-12T16:30:24Z",
        "author_association": "COLLABORATOR",
        "body": "Also worth trying an object if you have more/dynamic terms to match:\n\n``` javascript\nvar query = { foo: 1, bar: 1 };\ndimension.filter(function(d) { return d in query; });\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/14828099",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-14828099",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 14828099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODI4MDk5",
        "user": {
            "login": "RoxanaTorre",
            "id": 2083355,
            "node_id": "MDQ6VXNlcjIwODMzNTU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2083355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoxanaTorre",
            "html_url": "https://github.com/RoxanaTorre",
            "followers_url": "https://api.github.com/users/RoxanaTorre/followers",
            "following_url": "https://api.github.com/users/RoxanaTorre/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoxanaTorre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoxanaTorre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoxanaTorre/subscriptions",
            "organizations_url": "https://api.github.com/users/RoxanaTorre/orgs",
            "repos_url": "https://api.github.com/users/RoxanaTorre/repos",
            "events_url": "https://api.github.com/users/RoxanaTorre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoxanaTorre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-13T07:33:57Z",
        "updated_at": "2013-03-13T07:33:57Z",
        "author_association": "NONE",
        "body": "Thanks a lot!! I understand how this works now!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15027240",
        "html_url": "https://github.com/square/crossfilter/issues/68#issuecomment-15027240",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/68",
        "id": 15027240,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDI3MjQw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-17T17:55:44Z",
        "updated_at": "2013-03-17T17:55:44Z",
        "author_association": "COLLABORATOR",
        "body": "If you want to run the example locally, you may need a Web server to get around the strict security settings in Chrome.  If you have Python, you can simply say:\n\n```\npython -mSimpleHTTPServer\n```\n\nThen access the example via http://127.0.0.1:8000/.\n\nI\u2019ve also just pushed an update to use D3 version 3, which allows you to use Safari or Firefox locally without requiring a Web server.  For Chrome, the above still applies.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15034485",
        "html_url": "https://github.com/square/crossfilter/issues/68#issuecomment-15034485",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/68",
        "id": 15034485,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM0NDg1",
        "user": {
            "login": "jykim",
            "id": 98535,
            "node_id": "MDQ6VXNlcjk4NTM1",
            "avatar_url": "https://avatars1.githubusercontent.com/u/98535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jykim",
            "html_url": "https://github.com/jykim",
            "followers_url": "https://api.github.com/users/jykim/followers",
            "following_url": "https://api.github.com/users/jykim/following{/other_user}",
            "gists_url": "https://api.github.com/users/jykim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jykim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jykim/subscriptions",
            "organizations_url": "https://api.github.com/users/jykim/orgs",
            "repos_url": "https://api.github.com/users/jykim/repos",
            "events_url": "https://api.github.com/users/jykim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jykim/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-18T00:26:01Z",
        "updated_at": "2013-03-18T00:26:01Z",
        "author_association": "NONE",
        "body": "Works beautifully now. Thanks for the quick response!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15038053",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-15038053",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 15038053,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDM4MDUz",
        "user": {
            "login": "jaytjioe",
            "id": 3894969,
            "node_id": "MDQ6VXNlcjM4OTQ5Njk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3894969?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaytjioe",
            "html_url": "https://github.com/jaytjioe",
            "followers_url": "https://api.github.com/users/jaytjioe/followers",
            "following_url": "https://api.github.com/users/jaytjioe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaytjioe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaytjioe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaytjioe/subscriptions",
            "organizations_url": "https://api.github.com/users/jaytjioe/orgs",
            "repos_url": "https://api.github.com/users/jaytjioe/repos",
            "events_url": "https://api.github.com/users/jaytjioe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaytjioe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-18T03:49:31Z",
        "updated_at": "2013-03-18T03:49:31Z",
        "author_association": "NONE",
        "body": "Hi there! I've been a \"fan\" of Crossfilter for more than year now and I'm really excited with all the updates that have been implemented recently. Kudos to the contributors! However, I'm a lil confused with how Github works and I'm wondering what's the latest version of Crossfilter in accordance with @jasondavies repo - is it 1.1.3 or 1.1.2?\n\nApparently, 1.1.2 is able to have custom filter as mentioned above but 1.1.3 has no such capabilities yet?\n\nAlso, has the ability to filter multiple arguments as such \"dimension.filter([1,5],10,[13,16])\" been implemented? A solution was mentioned in #22 but I can't seem to do such filtering using Crossfilter 1.1.2. If it hasn't, then is there any way I could do such filtering using version 1.1.2?\n\nThanks for the help rendered!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15043686",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-15043686",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 15043686,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDQzNjg2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-18T08:34:26Z",
        "updated_at": "2013-03-18T08:34:26Z",
        "author_association": "COLLABORATOR",
        "body": "On second thoughts, we can probably find a way to support this without having to recompute groups from scratch.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15043711",
        "html_url": "https://github.com/square/crossfilter/pull/36#issuecomment-15043711",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/36",
        "id": 15043711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDQzNzEx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-18T08:35:17Z",
        "updated_at": "2013-03-18T08:35:17Z",
        "author_association": "COLLABORATOR",
        "body": "@jaytjioe, Crossfilter uses [semver](http://semver.org), thus there have been no new features added in v1.1.x since v1.1.0 (these are called patch versions).  The next minor version will be v1.2.0, and will include filtering by arbitrary functions.  Efficient multi-range filtering will probably not be until v1.3.0.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15044098",
        "html_url": "https://github.com/square/crossfilter/pull/64#issuecomment-15044098",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/64",
        "id": 15044098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDQ0MDk4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-18T08:48:53Z",
        "updated_at": "2013-03-18T08:48:53Z",
        "author_association": "COLLABORATOR",
        "body": "Staged in #63.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15149436",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15149436",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15149436,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ5NDM2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-19T23:08:22Z",
        "updated_at": "2013-03-19T23:08:22Z",
        "author_association": "COLLABORATOR",
        "body": "So effectively you want to say something like:\n\n``` sql\nSELECT AVG(value)\nFROM table\nWHERE\n  yearmo=\"Jan 13\" AND\n    (value1 BETWEEN 80 AND 100) AND \n    (value7 BETWEEN 80 AND 100) OR\n  yearmo<>\"Jan 13\"\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15150703",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15150703",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15150703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTUwNzAz",
        "user": {
            "login": "neverfox",
            "id": 3344033,
            "node_id": "MDQ6VXNlcjMzNDQwMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neverfox",
            "html_url": "https://github.com/neverfox",
            "followers_url": "https://api.github.com/users/neverfox/followers",
            "following_url": "https://api.github.com/users/neverfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions",
            "organizations_url": "https://api.github.com/users/neverfox/orgs",
            "repos_url": "https://api.github.com/users/neverfox/repos",
            "events_url": "https://api.github.com/users/neverfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neverfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-19T23:40:43Z",
        "updated_at": "2013-03-19T23:43:48Z",
        "author_association": "NONE",
        "body": "That's close, yes. It would actually be:\n\n``` SQL\nSELECT yearmo, AVG(value1)... -- for each series included on the trend chart\nFROM table\nWHERE (yearmo = 'Jan 13'\n  AND (value1 BETWEEN 80 AND 100)\n  AND (value7 BETWEEN 80 AND 100))\n   OR yearmo <> 'Jan 13'\nGROUP BY yearmo\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15152038",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15152038",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15152038,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTUyMDM4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-20T00:22:43Z",
        "updated_at": "2013-03-20T00:22:43Z",
        "author_association": "COLLABORATOR",
        "body": "Hmm. Would you want the trend line for each metric to ignore the filter on that metric?  This seems more in keeping with the way crossfilter approaches filters.  So in your example, the trend for value1 would ignore the value1 filter, but keep the value7 filter:\n\n``` sql\nSELECT yearmo, AVG(value1)\nFROM table\nWHERE (yearmo = 'Jan 13' AND value7 BETWEEN 80 AND 100) OR yearmo <> 'Jan 13'\nGROUP BY yearmo\n```\n\nAnd similarly for value7, etc.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15153830",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15153830",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15153830,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTUzODMw",
        "user": {
            "login": "neverfox",
            "id": 3344033,
            "node_id": "MDQ6VXNlcjMzNDQwMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neverfox",
            "html_url": "https://github.com/neverfox",
            "followers_url": "https://api.github.com/users/neverfox/followers",
            "following_url": "https://api.github.com/users/neverfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions",
            "organizations_url": "https://api.github.com/users/neverfox/orgs",
            "repos_url": "https://api.github.com/users/neverfox/repos",
            "events_url": "https://api.github.com/users/neverfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neverfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-20T01:25:44Z",
        "updated_at": "2013-03-20T01:25:44Z",
        "author_association": "NONE",
        "body": "Unfortunately, no. The goal is to filter the set of entities down based on the selected month ranges and then view the trend lines for _those_ entities. Putting that in terms of a simple, real-world use case, the user would request entities who are _currently_ above some threshold (e.g. value1 and value7 >= 80) and then they could glance at the trend lines to see how that subset is trending. For the trendlines representing value1 and value7, they would essentially be constraining that point somewhere between 80 and 100.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15178935",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15178935",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15178935,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTc4OTM1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-20T14:33:03Z",
        "updated_at": "2013-03-20T14:33:03Z",
        "author_association": "COLLABORATOR",
        "body": "This is technically possible using the new custom filter function support coming in version 1.2.0, which is staged in #63.  One trick is to use a dummy dimension to perform the filtering (which will then be intersected across all dimensions, including the one that you are using to group your averages).\n\n``` js\nvar dummy = db.dimension(function(d) { return d; });\ndummy.filter(function(d) {\n  return d.yearmo !== \"Jan 13\" || 80 <= d.value1 && d.value1 < 100 && 80 <= d.value7 && d.value7 < 100;\n});\n```\n\nA more ideal solution would be to allow independent range filters on dimensions that can then be combined in arbitrary ways, as this would be more efficient due to using binary search for range filtering rather than a full scan of all rows.  The above would still be reasonably efficient though, since the most time-consuming part is usually MapReduce, which remains incremental even for custom filter functions.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15182416",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-15182416",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 15182416,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTgyNDE2",
        "user": {
            "login": "Trakkasure",
            "id": 134164,
            "node_id": "MDQ6VXNlcjEzNDE2NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/134164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Trakkasure",
            "html_url": "https://github.com/Trakkasure",
            "followers_url": "https://api.github.com/users/Trakkasure/followers",
            "following_url": "https://api.github.com/users/Trakkasure/following{/other_user}",
            "gists_url": "https://api.github.com/users/Trakkasure/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Trakkasure/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Trakkasure/subscriptions",
            "organizations_url": "https://api.github.com/users/Trakkasure/orgs",
            "repos_url": "https://api.github.com/users/Trakkasure/repos",
            "events_url": "https://api.github.com/users/Trakkasure/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Trakkasure/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-20T15:26:17Z",
        "updated_at": "2013-03-20T15:26:17Z",
        "author_association": "NONE",
        "body": "That's an excellent idea.  \n\nLet us know when you've completed it. :)  \n\n## \n\nBrandon Myers\n\nOn Wednesday, March 20, 2013 at 9:49 AM, Ziggy Jonsson wrote:\n\n> After few failed attempts to read the crossfilter code in one sitting, I realized that a \"Technical overview\" wiki page could be immensely helpful.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub (https://github.com/square/crossfilter/issues/70).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15183588",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-15183588",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 15183588,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTgzNTg4",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-20T15:43:44Z",
        "updated_at": "2013-03-20T15:43:44Z",
        "author_association": "NONE",
        "body": "I'd be more than happy to put time into it, but still lack good understanding how the code ties together.   I was hoping a technical overview might benefit a wide audience.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15325070",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15325070",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15325070,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI1MDcw",
        "user": {
            "login": "neverfox",
            "id": 3344033,
            "node_id": "MDQ6VXNlcjMzNDQwMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neverfox",
            "html_url": "https://github.com/neverfox",
            "followers_url": "https://api.github.com/users/neverfox/followers",
            "following_url": "https://api.github.com/users/neverfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions",
            "organizations_url": "https://api.github.com/users/neverfox/orgs",
            "repos_url": "https://api.github.com/users/neverfox/repos",
            "events_url": "https://api.github.com/users/neverfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neverfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-22T22:42:02Z",
        "updated_at": "2013-03-22T22:42:02Z",
        "author_association": "NONE",
        "body": "Thank you. I will try this out and see how it goes. So if I use crossfilter.js from the 1.2.0 branch, it will contain this extra functionality?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15325098",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15325098",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15325098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI1MDk4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-22T22:42:53Z",
        "updated_at": "2013-03-22T22:42:53Z",
        "author_association": "COLLABORATOR",
        "body": "Yes.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15325957",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-15325957",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 15325957,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI1OTU3",
        "user": {
            "login": "neverfox",
            "id": 3344033,
            "node_id": "MDQ6VXNlcjMzNDQwMzM=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neverfox",
            "html_url": "https://github.com/neverfox",
            "followers_url": "https://api.github.com/users/neverfox/followers",
            "following_url": "https://api.github.com/users/neverfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions",
            "organizations_url": "https://api.github.com/users/neverfox/orgs",
            "repos_url": "https://api.github.com/users/neverfox/repos",
            "events_url": "https://api.github.com/users/neverfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neverfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-22T23:11:28Z",
        "updated_at": "2013-03-22T23:11:28Z",
        "author_association": "NONE",
        "body": "Looking back on the SQL I posted, it's wrong for my purposes. In reality it would be this:\n\n``` SQL\nSELECT yearmo, AVG(value1), ...\n  FROM table\n WHERE id IN (SELECT DISTINCT id FROM table WHERE yearmo = 'Jan 13' AND value7 BETWEEN 80 AND 100)\n GROUP BY yearmo\n```\n\nSo for the following data:\n\n```\nid  yearmo  value1  value7\n1  Nov 12  60  60\n1  Dec 12  70  70\n1  Jan 13  80  80\n2  Nov 12  50  50\n2  Dec 12  60  60\n2  Jan 13  70  70\n3  Nov 12  90  90\n3  Dec 12  70  70\n3  Jan 13  90  90\n```\n\nI would get, which is what I want for the trend graph:\n\n```\nid  yearmo  value1  value7\n1  Nov 12  60  60\n1  Dec 12  70  70\n1  Jan 13  80  80\n3  Nov 12  90  90\n3  Dec 12  70  70\n3  Jan 13  90  90\n```\n\nThe old query would have given me:\n\n```\n1  Nov 12  60  60\n1  Dec 12  70  70\n1  Jan 13  80  80\n2  Nov 12  50  50 <= No\n2  Dec 12  60  60 <= No\n3  Nov 12  90  90\n3  Dec 12  70  70\n3  Jan 13  90  90\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15478872",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-15478872",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 15478872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc4ODcy",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-26T18:42:20Z",
        "updated_at": "2013-03-26T18:42:20Z",
        "author_association": "NONE",
        "body": "totally agree.  I'm having a difficult time with the example code.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15487779",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15487779",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15487779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDg3Nzc5",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-26T20:52:25Z",
        "updated_at": "2013-03-26T20:52:25Z",
        "author_association": "NONE",
        "body": "if I divide the values each by 10, so I have a range of 0-400 then it works fine.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15489415",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15489415",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15489415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDg5NDE1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-26T21:22:39Z",
        "updated_at": "2013-03-26T21:22:39Z",
        "author_association": "COLLABORATOR",
        "body": "Can you post a reproducible example somewhere, e.g. http://bl.ocks.org or http://jsfiddle.net ?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15496106",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15496106",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15496106,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDk2MTA2",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-26T23:44:16Z",
        "updated_at": "2013-03-26T23:44:16Z",
        "author_association": "NONE",
        "body": "It must be a data issue.  If I generate a similar dataset randomly it works as one would expect. I'm going to see if I can narrow it down. There must be something in the data that just happens to be at the 1000th group that is breaking it.  It seemed too convenient, but I'll validate the data and reopen this if I find there is a bug.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15496173",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15496173",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15496173,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDk2MTcz",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-26T23:46:07Z",
        "updated_at": "2013-03-26T23:46:07Z",
        "author_association": "COLLABORATOR",
        "body": "Check for blank lines, `null` values, `undefined` values and `NaN` values in your input?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15500330",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15500330",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15500330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTAwMzMw",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T02:03:12Z",
        "updated_at": "2013-03-27T02:03:12Z",
        "author_association": "NONE",
        "body": "I wasn't casting the value to a Number in my dimension call.  Not exactly sure what that means.  Most places it was smart enough to convert the string to a numeric value as you would expect, but apparently after it got to 4 digits it broke down. Doesn't seem like a crossfilter bug to me.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15502150",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15502150",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15502150,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTAyMTUw",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T03:17:13Z",
        "updated_at": "2013-03-27T03:18:25Z",
        "author_association": "COLLABORATOR",
        "body": "Is your number column comma-separated?\n\n```\n> var a = '100'\nundefined\n> +a\n100\n> var b = '1,000'\nundefined\n> +b\nNaN\n> \n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15517453",
        "html_url": "https://github.com/square/crossfilter/issues/72#issuecomment-15517453",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/72",
        "id": 15517453,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE3NDUz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T11:08:52Z",
        "updated_at": "2013-03-27T11:08:52Z",
        "author_association": "COLLABORATOR",
        "body": "Related #65, #71.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15518423",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15518423",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15518423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE4NDIz",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T11:31:03Z",
        "updated_at": "2013-03-27T11:31:03Z",
        "author_association": "NONE",
        "body": "None of my values have commas in them.  They come out of a CSV file.  I have verified that every value only contains numeric values. I had sorted the data as numbers in descending order, but it looks like the crossfilter sorted them as strings, I found the larger values lower in the list of values.  It seemed to exclude all the 0 values however.  It seems I need to clean up my data after I load the CSV.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15518521",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15518521",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15518521,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE4NTIx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T11:33:33Z",
        "updated_at": "2013-03-27T11:33:33Z",
        "author_association": "COLLABORATOR",
        "body": "Crossfilter will sort according to the natural order of the values, so if they are strings, it will sort them as strings.  It sounds like you needed to coerce them to numbers in the value accessor, e.g.\n\n``` js\ndb.dimension(function(d) { return +d.myField; });\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15518598",
        "html_url": "https://github.com/square/crossfilter/issues/72#issuecomment-15518598",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/72",
        "id": 15518598,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE4NTk4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T11:35:28Z",
        "updated_at": "2013-03-27T11:35:28Z",
        "author_association": "COLLABORATOR",
        "body": "On the other hand, it does seem convenient to support the concept of \u201cmissing values\u201d using undefined.  But the concept can already be implemented without much work: the value accessor should return a naturally-orderable value, such as 0 or Infinity, and if such values should be ignored the MapReduce functions can ignore them.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15518909",
        "html_url": "https://github.com/square/crossfilter/issues/71#issuecomment-15518909",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/71",
        "id": 15518909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTE4OTA5",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-27T11:44:36Z",
        "updated_at": "2013-03-27T11:44:36Z",
        "author_association": "NONE",
        "body": "yes, that is exactly what I did.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15673207",
        "html_url": "https://github.com/square/crossfilter/issues/74#issuecomment-15673207",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/74",
        "id": 15673207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjczMjA3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-30T11:38:26Z",
        "updated_at": "2013-03-30T11:38:26Z",
        "author_association": "COLLABORATOR",
        "body": "I believe the approach (and eventual name!) was inspired by Chris Weaver\u2019s [Multidimensional Visual Analysis Using Cross-Filtered Views](http://www.purdue.edu/discoverypark/vaccine/assets/pdfs/publications/pdf/Multidimensional%20Visual%20Analysis.pdf).\n\nGitHub is not really the best place to ask for support; the issues are meant for reporting bugs and feature requests. You can ask support questions using the [crossfilter tag on StackOverflow](http://stackoverflow.com/questions/tagged/crossfilter) instead.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/15682554",
        "html_url": "https://github.com/square/crossfilter/issues/74#issuecomment-15682554",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/74",
        "id": 15682554,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjgyNTU0",
        "user": {
            "login": "denzo",
            "id": 1874772,
            "node_id": "MDQ6VXNlcjE4NzQ3NzI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1874772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denzo",
            "html_url": "https://github.com/denzo",
            "followers_url": "https://api.github.com/users/denzo/followers",
            "following_url": "https://api.github.com/users/denzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/denzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denzo/subscriptions",
            "organizations_url": "https://api.github.com/users/denzo/orgs",
            "repos_url": "https://api.github.com/users/denzo/repos",
            "events_url": "https://api.github.com/users/denzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-03-30T21:51:30Z",
        "updated_at": "2013-03-30T21:51:30Z",
        "author_association": "NONE",
        "body": "Well, I have asked more than 10 days ago\nhttp://stackoverflow.com/questions/15492896/why-is-this-so-in-crossfilter\n\nOn Saturday, March 30, 2013, Jason Davies wrote:\n\n> I believe the approach (and eventual name!) was inspired by Chris Weaver\u2019s Multidimensional\n> Visual Analysis Using Cross-Filtered Viewshttp://www.purdue.edu/discoverypark/vaccine/assets/pdfs/publications/pdf/Multidimensional%20Visual%20Analysis.pdf\n> .\n> \n> GitHub is not really the best place to ask for support; the issues are\n> meant for reporting bugs and feature requests. You can ask support\n> questions using the crossfilter tag on StackOverflowhttp://stackoverflow.com/questions/tagged/crossfilterinstead.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/square/crossfilter/issues/74#issuecomment-15673207\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/16184037",
        "html_url": "https://github.com/square/crossfilter/issues/72#issuecomment-16184037",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/72",
        "id": 16184037,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTg0MDM3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-04-10T16:06:38Z",
        "updated_at": "2013-04-10T16:06:38Z",
        "author_association": "COLLABORATOR",
        "body": "Reverted in #63.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/16199721",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-16199721",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 16199721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTk5NzIx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-04-10T20:26:29Z",
        "updated_at": "2013-04-10T20:26:29Z",
        "author_association": "COLLABORATOR",
        "body": "Closing this for now, since support for NaN values was reverted in 1.2.0.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/16238066",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-16238066",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 16238066,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjM4MDY2",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-04-11T14:32:35Z",
        "updated_at": "2013-04-11T14:32:35Z",
        "author_association": "COLLABORATOR",
        "body": "> There may be a slight performance\u2026\n\nThere are benchmarks, so you should be able to measure exactly what the performance cost is. (My guess is it\u2019s worth switching implementations when there are more than 32 dimensions.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/16239904",
        "html_url": "https://github.com/square/crossfilter/issues/76#issuecomment-16239904",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/76",
        "id": 16239904,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjM5OTA0",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-04-11T14:58:55Z",
        "updated_at": "2013-04-11T14:58:55Z",
        "author_association": "COLLABORATOR",
        "body": "The results of a Cube query are delivered as JSON and the input to Crossfilter is JSON. I'm not sure there's anything more to it?\n\nRegardless, please post on Stack Overflow or the Cube Google Group for questions like this. If you try it and run into bugs feel free to post back here.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/16241142",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-16241142",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 16241142,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjQxMTQy",
        "user": {
            "login": "sciyoshi",
            "id": 39950,
            "node_id": "MDQ6VXNlcjM5OTUw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciyoshi",
            "html_url": "https://github.com/sciyoshi",
            "followers_url": "https://api.github.com/users/sciyoshi/followers",
            "following_url": "https://api.github.com/users/sciyoshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciyoshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciyoshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciyoshi/subscriptions",
            "organizations_url": "https://api.github.com/users/sciyoshi/orgs",
            "repos_url": "https://api.github.com/users/sciyoshi/repos",
            "events_url": "https://api.github.com/users/sciyoshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciyoshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-04-11T15:18:30Z",
        "updated_at": "2013-04-11T15:18:30Z",
        "author_association": "NONE",
        "body": "Running the benchmarks seems to show around a 5% slowdown for 1,000,000 size dataset. If this isn't acceptable, there might be a way to change the implementation in-place but not sure if that's worth the effort. It's working well enough for me as-is :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18118658",
        "html_url": "https://github.com/square/crossfilter/issues/77#issuecomment-18118658",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/77",
        "id": 18118658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE4NjU4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-05-19T14:41:31Z",
        "updated_at": "2013-05-19T14:41:31Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, that seems wrong.  I\u2019m looking into it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18119215",
        "html_url": "https://github.com/square/crossfilter/issues/77#issuecomment-18119215",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/77",
        "id": 18119215,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTE5MjE1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-05-19T15:18:01Z",
        "updated_at": "2013-05-19T15:18:01Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for the bug report.  There was no bug in Crossfilter or D3, but the example needed adjusting to return the top 40 flights by time as well as by day.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18330034",
        "html_url": "https://github.com/square/crossfilter/issues/78#issuecomment-18330034",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/78",
        "id": 18330034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzMwMDM0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-05-23T08:30:12Z",
        "updated_at": "2013-05-23T08:30:12Z",
        "author_association": "COLLABORATOR",
        "body": "Strictly speaking, JSON is text-based encoding format, so I think you just want to retrieve the filtered records (as JavaScript objects), not JSON.\n\nTo retrieve all records intersected by the current filters, you can use [dimension.top(Infinity)](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top), which will retrieve all records, sorted by that dimension (in descending order).  You can also use dimension.bottom(Infinity) to retrieve in ascending order.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18403447",
        "html_url": "https://github.com/square/crossfilter/issues/79#issuecomment-18403447",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/79",
        "id": 18403447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDAzNDQ3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-05-24T13:04:31Z",
        "updated_at": "2013-05-24T13:04:31Z",
        "author_association": "COLLABORATOR",
        "body": "I\u2019d need more information to reproduce this:\n- The dimension\u2019s value accessor.\n- The line number (in the unminified source) of the error.\n- The data in question (or a representative sample).\n\nEven better would be a working example on http://jsfiddle.net or http://bl.ocks.org.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18408538",
        "html_url": "https://github.com/square/crossfilter/issues/79#issuecomment-18408538",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/79",
        "id": 18408538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDA4NTM4",
        "user": {
            "login": "jeffmaxwell",
            "id": 3164243,
            "node_id": "MDQ6VXNlcjMxNjQyNDM=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3164243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffmaxwell",
            "html_url": "https://github.com/jeffmaxwell",
            "followers_url": "https://api.github.com/users/jeffmaxwell/followers",
            "following_url": "https://api.github.com/users/jeffmaxwell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffmaxwell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffmaxwell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffmaxwell/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffmaxwell/orgs",
            "repos_url": "https://api.github.com/users/jeffmaxwell/repos",
            "events_url": "https://api.github.com/users/jeffmaxwell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffmaxwell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-05-24T14:35:56Z",
        "updated_at": "2013-05-24T14:35:56Z",
        "author_association": "NONE",
        "body": "Hi Jason, In preparing the jsfiddle I saw that the problem was in my use of top(k). So no issue requiring action.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/18855040",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-18855040",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 18855040,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODU1MDQw",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-06-03T16:56:38Z",
        "updated_at": "2013-06-03T16:56:38Z",
        "author_association": "NONE",
        "body": "@sciyoshi, I was interested in this and applied your changes and found that it caused another issue.  I found that the filtered counts were all off after a filter was applied.  I haven't dug in yet to see why that is happening, but I thought I'd let you know that something doesn't seem right.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/19014808",
        "html_url": "https://github.com/square/crossfilter/issues/80#issuecomment-19014808",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/80",
        "id": 19014808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDE0ODA4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-06-05T22:57:00Z",
        "updated_at": "2013-06-05T22:57:00Z",
        "author_association": "COLLABORATOR",
        "body": "Duplicate of #31; this is a bug in JSMin, which was fixed around 11 months ago, so updating your JSMin should fix it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/19023836",
        "html_url": "https://github.com/square/crossfilter/issues/80#issuecomment-19023836",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/80",
        "id": 19023836,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDIzODM2",
        "user": {
            "login": "ajpiano",
            "id": 155599,
            "node_id": "MDQ6VXNlcjE1NTU5OQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/155599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajpiano",
            "html_url": "https://github.com/ajpiano",
            "followers_url": "https://api.github.com/users/ajpiano/followers",
            "following_url": "https://api.github.com/users/ajpiano/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajpiano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajpiano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajpiano/subscriptions",
            "organizations_url": "https://api.github.com/users/ajpiano/orgs",
            "repos_url": "https://api.github.com/users/ajpiano/repos",
            "events_url": "https://api.github.com/users/ajpiano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajpiano/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-06-06T04:04:06Z",
        "updated_at": "2013-06-06T04:04:06Z",
        "author_association": "NONE",
        "body": "Dreadfully sorry for the dupe, will pass it along, thanks @jasondavies \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/19775205",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-19775205",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 19775205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5Nzc1MjA1",
        "user": {
            "login": "JDvorak",
            "id": 821240,
            "node_id": "MDQ6VXNlcjgyMTI0MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/821240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JDvorak",
            "html_url": "https://github.com/JDvorak",
            "followers_url": "https://api.github.com/users/JDvorak/followers",
            "following_url": "https://api.github.com/users/JDvorak/following{/other_user}",
            "gists_url": "https://api.github.com/users/JDvorak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JDvorak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JDvorak/subscriptions",
            "organizations_url": "https://api.github.com/users/JDvorak/orgs",
            "repos_url": "https://api.github.com/users/JDvorak/repos",
            "events_url": "https://api.github.com/users/JDvorak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JDvorak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-06-20T18:54:01Z",
        "updated_at": "2013-06-20T18:54:01Z",
        "author_association": "NONE",
        "body": "Has anything been done with this in the last few months?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/19939771",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-19939771",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 19939771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTM5Nzcx",
        "user": {
            "login": "chondl",
            "id": 82033,
            "node_id": "MDQ6VXNlcjgyMDMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/82033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chondl",
            "html_url": "https://github.com/chondl",
            "followers_url": "https://api.github.com/users/chondl/followers",
            "following_url": "https://api.github.com/users/chondl/following{/other_user}",
            "gists_url": "https://api.github.com/users/chondl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chondl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chondl/subscriptions",
            "organizations_url": "https://api.github.com/users/chondl/orgs",
            "repos_url": "https://api.github.com/users/chondl/repos",
            "events_url": "https://api.github.com/users/chondl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chondl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-06-24T22:11:22Z",
        "updated_at": "2013-06-24T22:11:22Z",
        "author_association": "NONE",
        "body": "I've been using it within my node.js application for report generation for the past several months, but haven't heard from anyone else using it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/20275474",
        "html_url": "https://github.com/square/crossfilter/issues/81#issuecomment-20275474",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/81",
        "id": 20275474,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjc1NDc0",
        "user": {
            "login": "goetas",
            "id": 776743,
            "node_id": "MDQ6VXNlcjc3Njc0Mw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/776743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goetas",
            "html_url": "https://github.com/goetas",
            "followers_url": "https://api.github.com/users/goetas/followers",
            "following_url": "https://api.github.com/users/goetas/following{/other_user}",
            "gists_url": "https://api.github.com/users/goetas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goetas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goetas/subscriptions",
            "organizations_url": "https://api.github.com/users/goetas/orgs",
            "repos_url": "https://api.github.com/users/goetas/repos",
            "events_url": "https://api.github.com/users/goetas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goetas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-07-01T11:10:00Z",
        "updated_at": "2013-07-01T11:10:00Z",
        "author_association": "NONE",
        "body": "sorry, wrong place here to add this issue. is related to dc.js\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/20417192",
        "html_url": "https://github.com/square/crossfilter/issues/18#issuecomment-20417192",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/18",
        "id": 20417192,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDE3MTky",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-07-03T14:04:10Z",
        "updated_at": "2013-07-03T14:04:10Z",
        "author_association": "NONE",
        "body": "I need this too.  Finding it very frustrating to try and deal with a dimension where each object can have multiple values assigned.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/21730484",
        "html_url": "https://github.com/square/crossfilter/issues/83#issuecomment-21730484",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/83",
        "id": 21730484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzMwNDg0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-07-29T16:10:11Z",
        "updated_at": "2013-07-29T16:10:11Z",
        "author_association": "COLLABORATOR",
        "body": "This is working as expected; the delay dimension is clamped to be between -60 and 149 inclusive:\n\n``` js\ndelay = flight.dimension(function(d) {\n  return Math.max(-60, Math.min(149, d.delay));\n}),\n```\n\nAs a result, the first and last bars of the graph include delays smaller than -60 and larger than 149 respectively, therefore filtering works as expected.\n\nPerhaps the axes could be clearer, but I\u2019ll close this bug for now unless anyone has any suggestions for improving them.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22581252",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-22581252",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 22581252,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTgxMjUy",
        "user": {
            "login": "davidkbainbridge",
            "id": 1957837,
            "node_id": "MDQ6VXNlcjE5NTc4Mzc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1957837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidkbainbridge",
            "html_url": "https://github.com/davidkbainbridge",
            "followers_url": "https://api.github.com/users/davidkbainbridge/followers",
            "following_url": "https://api.github.com/users/davidkbainbridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidkbainbridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidkbainbridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidkbainbridge/subscriptions",
            "organizations_url": "https://api.github.com/users/davidkbainbridge/orgs",
            "repos_url": "https://api.github.com/users/davidkbainbridge/repos",
            "events_url": "https://api.github.com/users/davidkbainbridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidkbainbridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-13T17:13:18Z",
        "updated_at": "2013-08-13T17:13:18Z",
        "author_association": "NONE",
        "body": "I am looking to leverage crossfilter for time series data, used mostly for graphing. Part of the need is for moving time window graphs. The ability to add data to a crossfilter works find for adding data, but removing data is needed as well, which is why I am interested in this fork. \n\nThe question I have is as opposed to, or rather in addition to, being about to specify the \"entity\" to be removed it would be interesting to be able to apply a \"filter function\" to a crossfilter where if the function returned \"true\" then the data point would be removed, else it would be left in the set (or the reverse). \n\nThis way, for time series data, i could use the filter to control the time amount of data in the cross filter based on a moving time window.\n\nI see this as an extension of this work, but curious on your thoughts.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22596418",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-22596418",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 22596418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTk2NDE4",
        "user": {
            "login": "davidkbainbridge",
            "id": 1957837,
            "node_id": "MDQ6VXNlcjE5NTc4Mzc=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1957837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidkbainbridge",
            "html_url": "https://github.com/davidkbainbridge",
            "followers_url": "https://api.github.com/users/davidkbainbridge/followers",
            "following_url": "https://api.github.com/users/davidkbainbridge/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidkbainbridge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidkbainbridge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidkbainbridge/subscriptions",
            "organizations_url": "https://api.github.com/users/davidkbainbridge/orgs",
            "repos_url": "https://api.github.com/users/davidkbainbridge/repos",
            "events_url": "https://api.github.com/users/davidkbainbridge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidkbainbridge/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-13T20:50:18Z",
        "updated_at": "2013-08-13T21:39:01Z",
        "author_association": "NONE",
        "body": "I am seeing unexpected behavior when using the remove function, in that when adding elements to a crossfilter I see the dimensions and the groups get updated (i.e. their various accessor and filters are called), but when I remove records these methods are not called and the dimensions and groups associated with the crossfilter don't seem to be updated.\n\nI expected that I would see similar action when removing data as when adding it.\n\nAs a example, assuming data points of { key : <char>, value : <int> } where key is [a..d]:\n\n1) create crossfilter of (a..d);\n2) create identity dimension\n3) create identity group\n4) reduceCount group (there are now 3 groups each with a value of 1)\n5) add data point 'd' to crossfilter (there are now 4 groups each with a value of 1)\n6) remove data point 'c' \n*) there are still 4 groups, 3 of which have a value of 1 and the other has a value of 0\n\nWhile this is technically correct, I suppose, I would expect to see 3 groups, i.e. a regrouping to occur on a delete. The symmetry would be that groups are added when values are added to the crossfilter, shouldn't they also be removed when data is removed?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22738427",
        "html_url": "https://github.com/square/crossfilter/issues/84#issuecomment-22738427",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/84",
        "id": 22738427,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzM4NDI3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-15T23:31:07Z",
        "updated_at": "2013-08-15T23:31:07Z",
        "author_association": "COLLABORATOR",
        "body": "Can you be a bit more specific about your requirements?  Crossfilter already allows you to create groups, e.g. based on time (hourly, daily, etc.), and you can then specify arbitrary reduce functions for groups to compute various aggregates.  In your example, you could do something like:\n\n``` js\nfunction reduceAdd(p, v) { if (v.success) ++p.success; else ++p.failure; }\nfunction reduceRemove(p, v) { if (v.success) --p.success; else --p.failure; }\nfunction reduceInitial(d) { return {failure: 0, success: 0}; }\nfunction orderValue(p) { return p.success / (p.success + p.failure); }\n\nvar transactionsByDay = transactions.dimension(function(d) { return d.day; }),\n    transactionSuccessByDay = transactionsByDay.group()\n      .reduce(reduceAdd, reduceRemove, reduceInitial)\n      .order(orderValue);\n```\n\nThis would create daily groups, ordered by success rate, so you could easily list the top ten days by success rate, for instance.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22775143",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-22775143",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 22775143,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzc1MTQz",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-16T15:50:54Z",
        "updated_at": "2013-08-16T15:50:54Z",
        "author_association": "NONE",
        "body": "Any plans to merge this into crossfilter mainline?  Looks like an important addition for crossfilter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22789780",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-22789780",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 22789780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzg5Nzgw",
        "user": {
            "login": "JDvorak",
            "id": 821240,
            "node_id": "MDQ6VXNlcjgyMTI0MA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/821240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JDvorak",
            "html_url": "https://github.com/JDvorak",
            "followers_url": "https://api.github.com/users/JDvorak/followers",
            "following_url": "https://api.github.com/users/JDvorak/following{/other_user}",
            "gists_url": "https://api.github.com/users/JDvorak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JDvorak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JDvorak/subscriptions",
            "organizations_url": "https://api.github.com/users/JDvorak/orgs",
            "repos_url": "https://api.github.com/users/JDvorak/repos",
            "events_url": "https://api.github.com/users/JDvorak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JDvorak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-16T19:54:32Z",
        "updated_at": "2013-08-16T19:54:32Z",
        "author_association": "NONE",
        "body": "I would also be interested in this being made more official\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22795301",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-22795301",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 22795301,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzk1MzAx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-16T21:32:02Z",
        "updated_at": "2013-08-16T21:32:02Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for the contribution.  Note that the equivalent can be achieved by creating a special dimension with a unique value for each possible combination of pivot groups:\n\n``` js\nvar pivotGroup = c\n    .dimension(function(d) { return d.gender + \"/\" + d.handed; })\n    .group(); // default groups use the dimension value\n```\n\nThis requires somewhat careful choice of separator (\"/\" seems convenient here, but you could use any character, even something like \"\\0\").\n\nA special dimension is required because group keys can only be based on the dimension value.  Alternatively, perhaps arbitrary groups on a \u201cdummy dimension\u201d, similar to [crossfilter.groupAll](https://github.com/square/crossfilter/wiki/API-Reference#wiki-crossfilter_groupAll) could be supported, that allow a group keys to be generated based on a record, e.g. `c.group(function(d) { return d.gender + \"/\" + d.handed; })`.\n\nI\u2019m inclined to keep the API simple and fast, and the use of a special dimension seems reasonable here.  The advantage over your pivotGroup implementation is that other standard group methods are also available, such as [top](https://github.com/square/crossfilter/wiki/API-Reference#wiki-group_top) and [order](https://github.com/square/crossfilter/wiki/API-Reference#wiki-group_order), and the special dimension can also be [removed](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_remove) when no longer needed.\n\nI\u2019m closing for now, but feel free to add comments if you think there\u2019s a problem with my approach, or an advantage to having a specialised API.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22797224",
        "html_url": "https://github.com/square/crossfilter/issues/67#issuecomment-22797224",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/67",
        "id": 22797224,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzk3MjI0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-16T22:10:22Z",
        "updated_at": "2013-08-16T22:10:22Z",
        "author_association": "COLLABORATOR",
        "body": "Duplicate of #48.  You can achieve this by creating a dummy dimension with the value accessor being the multi-valued group key, then group using an identity function:\n\n``` js\nvar group = db\n    .dimension(function(d) { return d.week_date + \"/\" + d.target; })\n    .group();\n```\n\nThere may be a case for adding a database-wide group, but it would amount to the same thing, e.g. `db.group(function(d) { return d.week_date + \"/\" + d.target; })`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22820487",
        "html_url": "https://github.com/square/crossfilter/issues/7#issuecomment-22820487",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/7",
        "id": 22820487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODIwNDg3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-17T22:03:31Z",
        "updated_at": "2013-08-17T22:03:31Z",
        "author_association": "COLLABORATOR",
        "body": "Implemented in #85.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22820509",
        "html_url": "https://github.com/square/crossfilter/pull/46#issuecomment-22820509",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/46",
        "id": 22820509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyODIwNTA5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-17T22:05:20Z",
        "updated_at": "2013-08-17T22:05:20Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for the contribution!  I think it would be preferable to allow removal of all currently-selected records, reusing the existing fast filter logic, rather than a much slower table scan comparing object identities as in your implementation.  I have implemented this in #85, and would welcome feedback.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22978594",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-22978594",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 22978594,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTc4NTk0",
        "user": {
            "login": "pangratz",
            "id": 341877,
            "node_id": "MDQ6VXNlcjM0MTg3Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/341877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pangratz",
            "html_url": "https://github.com/pangratz",
            "followers_url": "https://api.github.com/users/pangratz/followers",
            "following_url": "https://api.github.com/users/pangratz/following{/other_user}",
            "gists_url": "https://api.github.com/users/pangratz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pangratz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pangratz/subscriptions",
            "organizations_url": "https://api.github.com/users/pangratz/orgs",
            "repos_url": "https://api.github.com/users/pangratz/repos",
            "events_url": "https://api.github.com/users/pangratz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pangratz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-20T21:17:56Z",
        "updated_at": "2013-08-20T21:17:56Z",
        "author_association": "NONE",
        "body": ":heart_eyes: \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/22979456",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-22979456",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 22979456,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTc5NDU2",
        "user": {
            "login": "chondl",
            "id": 82033,
            "node_id": "MDQ6VXNlcjgyMDMz",
            "avatar_url": "https://avatars1.githubusercontent.com/u/82033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chondl",
            "html_url": "https://github.com/chondl",
            "followers_url": "https://api.github.com/users/chondl/followers",
            "following_url": "https://api.github.com/users/chondl/following{/other_user}",
            "gists_url": "https://api.github.com/users/chondl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chondl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chondl/subscriptions",
            "organizations_url": "https://api.github.com/users/chondl/orgs",
            "repos_url": "https://api.github.com/users/chondl/repos",
            "events_url": "https://api.github.com/users/chondl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chondl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-20T21:31:22Z",
        "updated_at": "2013-08-20T21:31:22Z",
        "author_association": "NONE",
        "body": "The alternative of creating a compound dimension using a separator is reasonable, and I've used it in other situations.  \n\nOne drawback is that I've encountered performance issues using the compound dimension technique in other situations due to the string manipulation.  That said, I don't have head-to-head benchmarks of the compound dimension technique against this pull request.\n\nWith crossfilter, I wanted something that took advantage of the existing group indexes and had an API expressed in terms of tuples as opposed to the compound strings.  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23055946",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-23055946",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 23055946,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDU1OTQ2",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-21T22:37:25Z",
        "updated_at": "2013-08-21T22:37:25Z",
        "author_association": "NONE",
        "body": "I'd really like to see this functionality added one way or another. We're using CrossFilter to back a browser based visualization application that works on arbitrary data sets and it would be nice to be able to be more generous to users with regards to the number of dimensions that can be created when using certain visualization components that require large numbers of dimensions.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23337994",
        "html_url": "https://github.com/square/crossfilter/pull/87#issuecomment-23337994",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/87",
        "id": 23337994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzM3OTk0",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-27T13:56:54Z",
        "updated_at": "2013-08-27T13:56:54Z",
        "author_association": "NONE",
        "body": "sorry, github changed the interface and I did that wrong.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23477653",
        "html_url": "https://github.com/square/crossfilter/issues/88#issuecomment-23477653",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/88",
        "id": 23477653,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc3NjUz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-29T09:38:12Z",
        "updated_at": "2013-08-29T09:38:12Z",
        "author_association": "COLLABORATOR",
        "body": "GitHub issues are meant for reporting bugs and feature requests. You can ask support questions using the [crossfilter tag on StackOverflow](http://stackoverflow.com/questions/tagged/crossfilter) instead, though your question sounds more generally related to using [D3](http://stackoverflow.com/questions/tagged/d3.js).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23525469",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-23525469",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 23525469,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTI1NDY5",
        "user": {
            "login": "theoreticaLee",
            "id": 591833,
            "node_id": "MDQ6VXNlcjU5MTgzMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/591833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theoreticaLee",
            "html_url": "https://github.com/theoreticaLee",
            "followers_url": "https://api.github.com/users/theoreticaLee/followers",
            "following_url": "https://api.github.com/users/theoreticaLee/following{/other_user}",
            "gists_url": "https://api.github.com/users/theoreticaLee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theoreticaLee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theoreticaLee/subscriptions",
            "organizations_url": "https://api.github.com/users/theoreticaLee/orgs",
            "repos_url": "https://api.github.com/users/theoreticaLee/repos",
            "events_url": "https://api.github.com/users/theoreticaLee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theoreticaLee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-29T21:35:26Z",
        "updated_at": "2013-08-29T21:35:43Z",
        "author_association": "NONE",
        "body": "@jasondavies I like the idea, and I would additionally like to reserve the namespace for removing all records in crossfilter.\n\nSo what about naming it db.removeFiltered() ?\n\nI am actually having to write my own db.remove() method right now so I can re-add data that has another column worth of information. \n\nthoughts?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23550315",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-23550315",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 23550315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTUwMzE1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-30T09:33:54Z",
        "updated_at": "2013-08-30T09:34:53Z",
        "author_association": "COLLABORATOR",
        "body": "I agree about `db.remove` not being an ideal name.  I don\u2019t see the need for a separate method for removing all records, though, you can simply call `db.removeRecords` (or whatever we call it) with no filters applied.  The main reason I don\u2019t like `db.remove` is that it\u2019s inconsistent with `dimension.remove` and `group.remove`, and it implies removal of the whole database (dimensions and groups), not just records.\n\nIf there was a good reason for a separate call to remove all records, I\u2019d call it `db.removeAll`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23569126",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-23569126",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 23569126,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTY5MTI2",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-30T15:29:44Z",
        "updated_at": "2013-08-30T15:29:44Z",
        "author_association": "COLLABORATOR",
        "body": "My 2\u00a2: keep the name db.remove, and rename dimension.remove and group.remove to dimension.dispose and group.dispose (or \u201cdestroy\u201d if you prefer) . The name db.remove should be symmetric with db.add, and I always prefer if you can use a one-word name over two.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23569187",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-23569187",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 23569187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTY5MTg3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-30T15:30:44Z",
        "updated_at": "2013-08-30T15:30:44Z",
        "author_association": "COLLABORATOR",
        "body": "Yes, I wish I had named them \u201cdestroy\u201d now\u2026 :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23578715",
        "html_url": "https://github.com/square/crossfilter/pull/85#issuecomment-23578715",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/85",
        "id": 23578715,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTc4NzE1",
        "user": {
            "login": "theoreticaLee",
            "id": 591833,
            "node_id": "MDQ6VXNlcjU5MTgzMw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/591833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theoreticaLee",
            "html_url": "https://github.com/theoreticaLee",
            "followers_url": "https://api.github.com/users/theoreticaLee/followers",
            "following_url": "https://api.github.com/users/theoreticaLee/following{/other_user}",
            "gists_url": "https://api.github.com/users/theoreticaLee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/theoreticaLee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theoreticaLee/subscriptions",
            "organizations_url": "https://api.github.com/users/theoreticaLee/orgs",
            "repos_url": "https://api.github.com/users/theoreticaLee/repos",
            "events_url": "https://api.github.com/users/theoreticaLee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/theoreticaLee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-08-30T17:56:06Z",
        "updated_at": "2013-08-30T17:56:06Z",
        "author_association": "NONE",
        "body": "Good point about keeping `db.remove` symmetric w/ `db.add`.\n\nLet's just keep it as is then.\n\nthanks guys\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23640628",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-23640628",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 23640628,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjQwNjI4",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-02T04:38:08Z",
        "updated_at": "2013-09-02T04:38:08Z",
        "author_association": "NONE",
        "body": "I happen to have written something like this. Where would be a good place to post it for review?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23657518",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-23657518",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 23657518,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjU3NTE4",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-02T12:32:06Z",
        "updated_at": "2013-09-02T12:32:54Z",
        "author_association": "NONE",
        "body": "That is fantastic @gordonwoodhull look forward reading it.   You should really post it on the Wiki as a new page (Technical overview)  https://github.com/square/crossfilter/wiki/_pages   You can state at the top that the document is a draft and ask for comments/modifications?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/23665737",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-23665737",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 23665737,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY1NzM3",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-02T15:15:47Z",
        "updated_at": "2013-09-02T15:15:47Z",
        "author_association": "NONE",
        "body": "Sure, let me revise it a bit more and then I'll do that.\n\nI was hoping to get some feedback before posting, in case it's, you know, Wrong, but I guess a wiki can serve that purpose too. Maybe I'll post it to the d3 mailing list first.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24351421",
        "html_url": "https://github.com/square/crossfilter/pull/92#issuecomment-24351421",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/92",
        "id": 24351421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzUxNDIx",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-12T20:05:24Z",
        "updated_at": "2013-09-12T20:05:24Z",
        "author_association": "NONE",
        "body": "Sorry, this pull request is based on the 1.2 version. If that's a problem, I'll look into updating. We haven't tested our application with the 1.3.x versions yet.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24362626",
        "html_url": "https://github.com/square/crossfilter/pull/94#issuecomment-24362626",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/94",
        "id": 24362626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzYyNjI2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-12T23:04:35Z",
        "updated_at": "2013-09-12T23:04:35Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks!  Fixed in version 1.3.3.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24448274",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24448274",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24448274,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ4Mjc0",
        "user": {
            "login": "pdaems",
            "id": 3865185,
            "node_id": "MDQ6VXNlcjM4NjUxODU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3865185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pdaems",
            "html_url": "https://github.com/pdaems",
            "followers_url": "https://api.github.com/users/pdaems/followers",
            "following_url": "https://api.github.com/users/pdaems/following{/other_user}",
            "gists_url": "https://api.github.com/users/pdaems/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pdaems/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pdaems/subscriptions",
            "organizations_url": "https://api.github.com/users/pdaems/orgs",
            "repos_url": "https://api.github.com/users/pdaems/repos",
            "events_url": "https://api.github.com/users/pdaems/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pdaems/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-14T14:41:20Z",
        "updated_at": "2013-09-14T14:44:39Z",
        "author_association": "NONE",
        "body": "@jasondavies  \n\nIm currently calculating the maximum of my group like:\n\n```\n                                 var barGroup = datedimension.group().reduce(\n                                 function (p, v) {\n                                     p.values.push(+v[6]);\n                                     if (p.max < +v[6]) {\n                                         p.max = +v[6];\n                                     }\n                                     return p;\n                                 },\n                                 function (p, v) {\n                                     var index = p.values.indexOf(+v[6]);\n                                     if (index >= 0) {\n                                         p.values.splice(index, 1);\n                                         p.values.sort(function (a, b) { return a - b });\n                                     }\n                                     if (p.values.length > 0) {\n                                         p.max = p.values[p.values.length - 1];\n                                     } else {\n                                         p.max = 0;\n                                     }\n                                     return p;\n                                 },\n                                 function () {\n                                     return { max: 0, values: new Array() };\n                                 }\n                                );\n```\n\nHowever the reduceRemoval takes a long time to process each time i use a filter on a dimension.\nWhenever i try and use the group.reduce function without reduceRemoval i get the following error \n\n![undefined](https://f.cloud.github.com/assets/3865185/1143621/828da6f6-1d4b-11e3-8627-d4596c9c1078.png)\n\n```\n                                var barGroup = datedimension.group().reduce(\n                                 function (p, v) {\n                                     p.values.push(+v[6]);\n                                     if (p.max < +v[6]) {\n                                         p.max = +v[6];\n                                     }\n                                     return p;\n                                 },\n                                 function () {\n                                     return { max: 0, values: new Array() };\n                                 }\n                                );\n```\n\nAny idea's ? Thanks in advance !\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24460149",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24460149",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24460149,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYwMTQ5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-14T22:04:06Z",
        "updated_at": "2013-09-14T22:04:06Z",
        "author_association": "COLLABORATOR",
        "body": "Making reduceRemove optional never made it into a release, as it would be preferable to avoid recomputing groups from scratch.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24466874",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24466874",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24466874,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY2ODc0",
        "user": {
            "login": "pdaems",
            "id": 3865185,
            "node_id": "MDQ6VXNlcjM4NjUxODU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3865185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pdaems",
            "html_url": "https://github.com/pdaems",
            "followers_url": "https://api.github.com/users/pdaems/followers",
            "following_url": "https://api.github.com/users/pdaems/following{/other_user}",
            "gists_url": "https://api.github.com/users/pdaems/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pdaems/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pdaems/subscriptions",
            "organizations_url": "https://api.github.com/users/pdaems/orgs",
            "repos_url": "https://api.github.com/users/pdaems/repos",
            "events_url": "https://api.github.com/users/pdaems/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pdaems/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-15T08:51:51Z",
        "updated_at": "2013-09-15T08:51:51Z",
        "author_association": "NONE",
        "body": "@jasondavies  I get the same error by using the version with the optional reduceRemoval in it.\n\nhttps://raw.github.com/square/crossfilter/6c20e31090a6f96962f25bcedc891b9827777a8c/crossfilter.js\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24467858",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24467858",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24467858,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY3ODU4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-15T09:33:09Z",
        "updated_at": "2013-09-15T09:33:09Z",
        "author_association": "COLLABORATOR",
        "body": "Ah, you need to pass `null`, e.g. `.reduce(add, null, initial)`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24468068",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24468068",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24468068,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY4MDY4",
        "user": {
            "login": "pdaems",
            "id": 3865185,
            "node_id": "MDQ6VXNlcjM4NjUxODU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/3865185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pdaems",
            "html_url": "https://github.com/pdaems",
            "followers_url": "https://api.github.com/users/pdaems/followers",
            "following_url": "https://api.github.com/users/pdaems/following{/other_user}",
            "gists_url": "https://api.github.com/users/pdaems/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pdaems/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pdaems/subscriptions",
            "organizations_url": "https://api.github.com/users/pdaems/orgs",
            "repos_url": "https://api.github.com/users/pdaems/repos",
            "events_url": "https://api.github.com/users/pdaems/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pdaems/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-15T09:39:56Z",
        "updated_at": "2013-09-15T09:39:56Z",
        "author_association": "NONE",
        "body": "@jasondavies Alright, thanks works great now !\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24616421",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24616421",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24616421,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE2NDIx",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-17T19:46:04Z",
        "updated_at": "2013-09-17T19:46:04Z",
        "author_association": "NONE",
        "body": "Didn't see this and I think I've basically duplicated it in #92 . However, correct me if I'm wrong, but does this solution properly calculate a maximum if a group is created on a crossfilter that already has filters applied? I don't think so, but I'm not sure.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24657255",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24657255",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24657255,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjU3MjU1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-18T11:24:07Z",
        "updated_at": "2013-09-18T11:24:07Z",
        "author_association": "COLLABORATOR",
        "body": "If you are referring to the optional reduceRemove in #61 then no, they are different.  Making reduceRemove optional means that removing records (due to filters) forces a full rebuild of the group index (using reduceAdd only).  Thus it will work correctly with filters, but we decided it would be preferable to find a performant solution instead for finding maxima (e.g. using a heap), since rebuilding the group index from scratch is slow.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24670190",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-24670190",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 24670190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjcwMTkw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-18T14:52:05Z",
        "updated_at": "2013-09-18T14:52:05Z",
        "author_association": "NONE",
        "body": "I see. Yes, that is a different use-case - finding filtered max/min vs my need in #92 for finding unfiltered max/min for new groups after a filter has already been applied.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/24966590",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-24966590",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 24966590,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTY2NTkw",
        "user": {
            "login": "ZJONSSON",
            "id": 1082488,
            "node_id": "MDQ6VXNlcjEwODI0ODg=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1082488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZJONSSON",
            "html_url": "https://github.com/ZJONSSON",
            "followers_url": "https://api.github.com/users/ZJONSSON/followers",
            "following_url": "https://api.github.com/users/ZJONSSON/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZJONSSON/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZJONSSON/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZJONSSON/subscriptions",
            "organizations_url": "https://api.github.com/users/ZJONSSON/orgs",
            "repos_url": "https://api.github.com/users/ZJONSSON/repos",
            "events_url": "https://api.github.com/users/ZJONSSON/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZJONSSON/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-09-24T00:26:58Z",
        "updated_at": "2013-09-24T00:26:58Z",
        "author_association": "NONE",
        "body": "@gordonwoodhull, maybe you could post it to this thread for discussion?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26369533",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26369533",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26369533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzY5NTMz",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T20:31:29Z",
        "updated_at": "2013-10-15T20:31:29Z",
        "author_association": "NONE",
        "body": "Hi @jasondavies,\n\nOne problem with the string concatenation solution is that it's very messy to supply tuples that include numbers.  They have to be zero-padded.  I wonder if you would consider a PR for native support of tuple keys?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26372924",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26372924",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26372924,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzcyOTI0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T21:15:17Z",
        "updated_at": "2013-10-15T21:15:17Z",
        "author_association": "COLLABORATOR",
        "body": "Why do they need to be zero-padded?  As long as you pick a suitable separator, no padding is necessary (`,` or `/` would work fine for numbers, or even `\\0` as discussed above).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26374916",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26374916",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26374916,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc0OTE2",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T21:41:23Z",
        "updated_at": "2013-10-15T21:41:23Z",
        "author_association": "NONE",
        "body": "```\ngordon$ cat commas\n1,1\n10,2\n2,3\n1,9\n11,15\ngordon$ sort commas\n1,1\n1,9\n10,2\n11,15\n2,3\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26375298",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26375298",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26375298,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc1Mjk4",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T21:46:46Z",
        "updated_at": "2013-10-15T21:52:02Z",
        "author_association": "NONE",
        "body": "Similar problem if the character code is greater than digits:\n\n```\ngordon$ cat bars\n1|1\n10|2\n2|3\n1|9\n11|15\n1|11\n10|1\n11|1\n11|2\ngordon$ sort bars\n10|1\n10|2\n11|1\n11|15\n11|2\n1|1\n1|11\n1|9\n2|3\n```\n\nI could be wrong, but I don't think lexicographical ordering ever works for tuples of variable length fields.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26376709",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26376709",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26376709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc2NzA5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T22:06:42Z",
        "updated_at": "2013-10-15T22:06:42Z",
        "author_association": "COLLABORATOR",
        "body": "Right, the array of all groups as returned by [group.all](https://github.com/square/crossfilter/wiki/API-Reference#wiki-group_all) will be in ascending natural order, so I agree the order could be unexpected if you have variable-length keys.  However, the grouping behaviour and top-K groups will all work as expected, which is the main point of using a dummy dimension in this manner.\n\nI\u2019d be open to considering proper tuple support, but only if performance remains reasonably fast.  Though not ideal, you can always clone the returned group.all array and sort it afterwards if you really need it to be sorted differently.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26377368",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26377368",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26377368,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc3MzY4",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T22:16:16Z",
        "updated_at": "2013-10-15T22:18:50Z",
        "author_association": "NONE",
        "body": "Yes, that almost works, but for example, I would want to be able to select the range [1,1] -> [1,19], but without native support [1,2] would be left out.\n\nI think it boils down to parameterizing the ordering function.  So there wouldn't be any extra logic during sorting.  I would hope this isn't worse than the valueOf() call that is already happening, and you'd pay for what you need.  I can benchmark it and find out.  Thanks for considering it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26377786",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26377786",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26377786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc3Nzg2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T22:22:33Z",
        "updated_at": "2013-10-15T22:22:33Z",
        "author_association": "COLLABORATOR",
        "body": "The dummy dimension is really only intended as a way to group by multiple keys at once, rather than for filtering.  If you want to filter, you can use an individual dimension that has the correct ordering.  So for your example you could say:\n\n``` js\ndimension0.filterExact(1);\ndimension1.filterRange([1, 19]);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26378755",
        "html_url": "https://github.com/square/crossfilter/pull/48#issuecomment-26378755",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/48",
        "id": 26378755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc4NzU1",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-15T22:37:04Z",
        "updated_at": "2013-10-15T22:37:04Z",
        "author_association": "NONE",
        "body": "Ah, right.  Thanks, got it.  And it would be very unlikely that one would want to filter by e.g. range [1,10] -> [2,9]\n\nI will see if I can make some wrappers to hide the mess.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26416306",
        "html_url": "https://github.com/square/crossfilter/issues/76#issuecomment-26416306",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/76",
        "id": 26416306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDE2MzA2",
        "user": {
            "login": "toddpi314",
            "id": 251627,
            "node_id": "MDQ6VXNlcjI1MTYyNw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/251627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/toddpi314",
            "html_url": "https://github.com/toddpi314",
            "followers_url": "https://api.github.com/users/toddpi314/followers",
            "following_url": "https://api.github.com/users/toddpi314/following{/other_user}",
            "gists_url": "https://api.github.com/users/toddpi314/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/toddpi314/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/toddpi314/subscriptions",
            "organizations_url": "https://api.github.com/users/toddpi314/orgs",
            "repos_url": "https://api.github.com/users/toddpi314/repos",
            "events_url": "https://api.github.com/users/toddpi314/events{/privacy}",
            "received_events_url": "https://api.github.com/users/toddpi314/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-16T13:15:35Z",
        "updated_at": "2013-10-16T13:15:35Z",
        "author_association": "NONE",
        "body": "Where did this issue land?  \n\nI would like retrieve the entire data value for an event without explicitly identifying which fields to include in my response set. \n\nSomething like this is desired:\nhttp://localhost:1081/1.0/event?expression=eventtype(*).eq(subType,'yo')\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26614307",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26614307",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26614307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE0MzA3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T17:31:57Z",
        "updated_at": "2013-10-18T17:31:57Z",
        "author_association": "COLLABORATOR",
        "body": "Note that you can already retrieve the filtered records using [dimension.top](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top) (sorted by the dimension\u2019s natural order).  Is there a particular reason why that wouldn\u2019t be useful in your scenario?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26615097",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26615097",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26615097,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE1MDk3",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T17:42:36Z",
        "updated_at": "2013-10-18T17:42:36Z",
        "author_association": "NONE",
        "body": "This scenario is actually related to my request to be able to retrieve only the filtered records.  We are using DC.js and thus CrossFilter to provide a dynamic reporting environment to our end users.  Once the users have filtered down their views we want to provide a CSV download to them of only the records they are looking at.\n\nIf I can get to the filtered record's only then I can extract out the record ID's, send them back to the server, and have it serve up the corresponding CSV file.\n\nUsing dimension.top doesn't work in this case as the filters come from different locations.  The crossfilter groupAll() method returns a proper group and the .all() method returns the correct # of records affected by all filters, but I can't find a dimension that would then return only those records.\n\nAnother solution would be to add an each operator to the groupAll() output group allowing iteration of affected records, thus providing a paged way of getting to each record.  This may possibly reduce the overhead, don't know.\n\nIf I'm wrong, please point me in the right direction :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26615333",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26615333",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26615333,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE1MzMz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T17:45:53Z",
        "updated_at": "2013-10-18T17:46:04Z",
        "author_association": "COLLABORATOR",
        "body": "> Using dimension.top doesn't work in this case as the filters come from different locations.\n\nCan you explain what you mean by the filters coming from different locations?  `dimension.top(Infinity)` does exactly the same as your patch, except that the records would be ordered by the dimension value (in descending order; `dimension.bottom(Infinity)` orders them in ascending order).  In other words, all filters are applied (including any on the dimension you\u2019re sorting by) before returning the records.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26615991",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26615991",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26615991,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE1OTkx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T17:55:14Z",
        "updated_at": "2013-10-18T17:55:14Z",
        "author_association": "COLLABORATOR",
        "body": "Perhaps you\u2019re confusing the behaviour of dimension.top with groups, which exclude their associated dimension\u2019s filter for computing reduce values.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26617300",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26617300",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26617300,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE3MzAw",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T18:13:10Z",
        "updated_at": "2013-10-18T18:13:10Z",
        "author_association": "NONE",
        "body": "I thought the dimension only included a subset of the data associated with the root.\n\nUsing something similar to the follow structure:\n\n```\n{\n  _id: <Identity>,\n  date: Date(),\n  state: <state text>,\n  ...\n}\n```\n\nIE: If I have a dimension on \"date\" then I would only see the date column in the dimension.  So performing a top(Infinity) on that dimension wouldn't get me back the _id column as an example.\n\nIn the above I would have a group all to get the top.  And say I had a dimension on date and state.  Now if I filter based on a state of MO || KS and a date of > 3 days ago my all count goes down to whatever...\n\nSaying that my root crossfilter is called ndx, then my root ndx records value will have everything including the filtered out records.\n\nMy goal would be to get only the records that match the filters MO || KS > 3 days ago.  Of course I don't really know what the user has filtered to :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26617559",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26617559",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26617559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE3NTU5",
        "user": {
            "login": "jrideout",
            "id": 197338,
            "node_id": "MDQ6VXNlcjE5NzMzOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/197338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrideout",
            "html_url": "https://github.com/jrideout",
            "followers_url": "https://api.github.com/users/jrideout/followers",
            "following_url": "https://api.github.com/users/jrideout/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrideout/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrideout/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrideout/subscriptions",
            "organizations_url": "https://api.github.com/users/jrideout/orgs",
            "repos_url": "https://api.github.com/users/jrideout/repos",
            "events_url": "https://api.github.com/users/jrideout/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrideout/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T18:16:49Z",
        "updated_at": "2013-10-18T18:16:49Z",
        "author_association": "NONE",
        "body": "dimension.top is my current workaround. Although it seems odd to grab an arbitrary dimension and call .top(Infinity) on it just to retrieve all the filtered records. The semantic link between the operation and the output feels weak, but it certainly works.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26617701",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26617701",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26617701,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE3NzAx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T18:18:56Z",
        "updated_at": "2013-10-18T18:18:56Z",
        "author_association": "COLLABORATOR",
        "body": "@jdarling Read the documentation for [dimension.top](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_top) (or try it for yourself); you\u2019ll see that it returns the records, not the computed dimension values.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/26622529",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-26622529",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 26622529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjIyNTI5",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-10-18T19:20:20Z",
        "updated_at": "2013-10-18T19:20:20Z",
        "author_association": "NONE",
        "body": "Just tried it with our live data, and of course you are correct :).  I think it would be useful to have this documented explicitly though as I searched for an answer for quite some time before chasing this on GitHub.  Hopefully others find the thread if they run into the same problem.  Great work all over.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28549517",
        "html_url": "https://github.com/square/crossfilter/issues/96#issuecomment-28549517",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/96",
        "id": 28549517,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQ5NTE3",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-15T06:09:45Z",
        "updated_at": "2013-11-15T06:09:45Z",
        "author_association": "COLLABORATOR",
        "body": "Speaking as a maintainer: \n\nI'd happily take a pull request, even a broken one, and help you try to fix it. Showing us what doesn't work can be helpful too :)\n\nCan you point me at a good tutorial or documentation for the component format so I can understand how it's used and if it would benefit crossfilter in addition to the existing package.json and npm packages?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28585572",
        "html_url": "https://github.com/square/crossfilter/issues/96#issuecomment-28585572",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/96",
        "id": 28585572,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg1NTcy",
        "user": {
            "login": "jmarca",
            "id": 70304,
            "node_id": "MDQ6VXNlcjcwMzA0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/70304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmarca",
            "html_url": "https://github.com/jmarca",
            "followers_url": "https://api.github.com/users/jmarca/followers",
            "following_url": "https://api.github.com/users/jmarca/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmarca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmarca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmarca/subscriptions",
            "organizations_url": "https://api.github.com/users/jmarca/orgs",
            "repos_url": "https://api.github.com/users/jmarca/repos",
            "events_url": "https://api.github.com/users/jmarca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmarca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-15T17:07:00Z",
        "updated_at": "2013-11-15T17:07:00Z",
        "author_association": "NONE",
        "body": "On Thu, Nov 14, 2013 at 10:09:55PM -0800, Tom Carden wrote:\n\n> Speaking as a maintainer: \n> \n> I'd happily take a pull request, even a broken one, and help you try to fix it. Showing us what doesn't work can be helpful too :)\n\nOkay I'll settle on my \"best try yet\" and push it, then send a pull\nrequest.  (I tend to assume that not working right === not worth a\npull request!)\n\nI was trying to model my efforts at component.json for crossfilter\nlooking at what was done with d3, but that failed.  Last night I made\nsome progress with directly including it as a file in my project's\ncomponent.json, so I'll try building on that.\n\n> Can you point me at a good tutorial or documentation for the component format so I can understand how it's used and if it would benefit crossfilter in addition to the existing package.json and npm packages?\n\ncomponent is documented at https://github.com/component/component\nwith the spec documented at\nhttps://github.com/component/component/wiki/Spec\n\nAs to the benefit, crossfilter is a great utility library that does\none thing really well, without pulling in lots of other dependencies,\netc.  This fits well with my understanding of component.js---keep\nthings modular and build only what you need.\n\nThe package.json is great for including via npm, but npm doesn't\nreally help with deploying to a website.  With component.js, I just\ntype `component install & component build` and everything I need for\nthe webpage is wrapped up in a `build` subdirectory (build.js and\nbuild.css).  The trick is convincing component to actually pull in\nwhat you need (using component.json, in a way that allows one to write\n`var cf = require('crossfilter')` and have that work properly in the\nbrowser..\n\nRegards, \nJames\n\n## \n\nThis message has been scanned for viruses and\ndangerous content by MailScanner, and is\nbelieved to be clean.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28604717",
        "html_url": "https://github.com/square/crossfilter/issues/96#issuecomment-28604717",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/96",
        "id": 28604717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA0NzE3",
        "user": {
            "login": "jmarca",
            "id": 70304,
            "node_id": "MDQ6VXNlcjcwMzA0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/70304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmarca",
            "html_url": "https://github.com/jmarca",
            "followers_url": "https://api.github.com/users/jmarca/followers",
            "following_url": "https://api.github.com/users/jmarca/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmarca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmarca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmarca/subscriptions",
            "organizations_url": "https://api.github.com/users/jmarca/orgs",
            "repos_url": "https://api.github.com/users/jmarca/repos",
            "events_url": "https://api.github.com/users/jmarca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmarca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-15T21:26:42Z",
        "updated_at": "2013-11-15T21:26:42Z",
        "author_association": "NONE",
        "body": "Okay, I can't do it.  I don't know enough about how/why crossfilter is set up the way it is.  \n\nIn the crossfilter Makefile, there is this:\n\n```\n%.js:\n    @rm -f $@\n    @echo '(function(exports){' > $@\n    @echo 'crossfilter.version = \"'$(shell node -p 'require(\"./package.json\").version')'\";' >> $@\n    cat $(filter %.js,$^) >> $@\n    @echo '})(this);' >> $@\n    @chmod a-w $@\n```\n\nIf I copy the resulting crossfilter.js into my project, and then hack on the first and last lines above written by the Makefile, then it works.  Instead of \n\n```\n(function(exports){\n```\n\nI have in my project crossfilter.js:\n\n```\nvar crossfilter =  (function(exports){\n```\n\nand then at the bottom the corresponding \n\n```\n})(this);\n```\n\nis changed to \n\n```\n})(module.exports)\n```\n\nThen in the code I can use crossfilter by writing `var crossfilter = require('./crossfilter').crossfilter`.  \n\nThis is _almost_ what is in index.js, but not quite.  The problem seems to be that when index.js is evaluated in the browser, sending `this` appears to be the wrong thing to do.  But I don't understand why this is being done and I can't find any documentation on it, so I can't intelligently change it.  Doing what I'm doing seems really wrong.  I'd rather someone who knows what is going on take a crack at doing this, or you can close the feature request.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28606855",
        "html_url": "https://github.com/square/crossfilter/issues/96#issuecomment-28606855",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/96",
        "id": 28606855,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjA2ODU1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-15T21:57:45Z",
        "updated_at": "2013-11-15T21:57:45Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for sharing - this is really helpful. We'll take a look!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28768309",
        "html_url": "https://github.com/square/crossfilter/issues/96#issuecomment-28768309",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/96",
        "id": 28768309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY4MzA5",
        "user": {
            "login": "christopherobin",
            "id": 308493,
            "node_id": "MDQ6VXNlcjMwODQ5Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/308493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christopherobin",
            "html_url": "https://github.com/christopherobin",
            "followers_url": "https://api.github.com/users/christopherobin/followers",
            "following_url": "https://api.github.com/users/christopherobin/following{/other_user}",
            "gists_url": "https://api.github.com/users/christopherobin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christopherobin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christopherobin/subscriptions",
            "organizations_url": "https://api.github.com/users/christopherobin/orgs",
            "repos_url": "https://api.github.com/users/christopherobin/repos",
            "events_url": "https://api.github.com/users/christopherobin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christopherobin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-19T06:08:01Z",
        "updated_at": "2013-11-19T06:08:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "Agreed, that would be very nice to have as a component\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/28991685",
        "html_url": "https://github.com/square/crossfilter/issues/98#issuecomment-28991685",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/98",
        "id": 28991685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTkxNjg1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-21T15:09:00Z",
        "updated_at": "2013-11-21T15:09:00Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks, I\u2019ve reproduced this and will submit a patch soon.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29245440",
        "html_url": "https://github.com/square/crossfilter/pull/82#issuecomment-29245440",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/82",
        "id": 29245440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ1NDQw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T21:45:08Z",
        "updated_at": "2013-11-25T21:45:08Z",
        "author_association": "NONE",
        "body": "Sorry, don't mean to pester, but I'm not sure what the correct approach is here. We're making some additions to Crossfilter and I'm creating pull requests when it seems to make sense to push those changes upstream, but so far have not seen any response on either pull request. Is there a different way to get changes evaluated for addition to this repository?\n\nThanks, and again, sorry to bother.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29246685",
        "html_url": "https://github.com/square/crossfilter/pull/82#issuecomment-29246685",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/82",
        "id": 29246685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ2Njg1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T21:59:16Z",
        "updated_at": "2013-11-25T21:59:16Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies that nobody is responding to your commit. Sometimes things slip through, it's not personal. It's also reasonable to follow up and ask what's up :)\n\nLooking at [the commit](https://github.com/humanitiesplusdesign/crossfilter/commit/312bbc79f2e82ea5f5fbaf3bbf8695469f044bba) it's hard to tell what it does. Can you give an example of what it does and why it's needed?\n\nDigging in a bit (I'm not overly familiar with this code) it seems like you could just add `accessor: value` to the returned object, and you don't need a separate function. But since you pass `value` into the dimension yourself, I'm not sure why you need the dimension to give it back to you?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29247185",
        "html_url": "https://github.com/square/crossfilter/pull/92#issuecomment-29247185",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/92",
        "id": 29247185,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3MTg1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:05:15Z",
        "updated_at": "2013-11-25T22:05:15Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for missing this one too. I'm not the most familiar with the cross-filter internals, so I defer to @jasondavies @mbostock and others on the specific approach here.\n\nFrom a process perspective - thanks for adding a test, and yes please, an update to 1.3.x would make it much more likely the PR will be merged. We don't actively maintain old branches.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29247217",
        "html_url": "https://github.com/square/crossfilter/pull/82#issuecomment-29247217",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/82",
        "id": 29247217,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3MjE3",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:05:34Z",
        "updated_at": "2013-11-25T22:05:34Z",
        "author_association": "NONE",
        "body": "Cool, glad this is the right approach :-) I know it's not personal, but also wasn't sure what the standard procedure was. Thanks! I will ping on my other pull request as well.\n\nRegarding your question: I didn't want to return `value` on it's own because if someone assigned something else to it (`dimension.accessor = 1`), then the entire dimension would go haywire. I figured it was safer to provide a function that takes a record `d` as input and returns the result of the `value(d)` function.\n\nThis change isn't strictly necessary, as we can keep track of our own accessor functions, but IIRC there was another issue asking for the same thing, it simplifies our code significantly, and it seems like it could be useful if dimensions are able to provide access to their accessor function after they were initially created.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29247453",
        "html_url": "https://github.com/square/crossfilter/pull/92#issuecomment-29247453",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/92",
        "id": 29247453,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3NDUz",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:08:02Z",
        "updated_at": "2013-11-25T22:08:02Z",
        "author_association": "NONE",
        "body": "@RandomEtc Thanks very much for taking a look. I will update to 1.3.x.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29247921",
        "html_url": "https://github.com/square/crossfilter/pull/82#issuecomment-29247921",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/82",
        "id": 29247921,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3OTIx",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:13:29Z",
        "updated_at": "2013-11-25T22:14:23Z",
        "author_association": "COLLABORATOR",
        "body": "I'm confused...\n\nIn the [API reference](https://github.com/square/crossfilter/wiki/API-Reference) we create a crossfilter for `payments`:\n\n``` javascript\nvar payments = crossfilter([\n  {date: \"2011-11-14T16:17:54Z\", quantity: 2, total: 190, tip: 100, type: \"tab\"},\n  // ...\n  {date: \"2011-11-14T17:29:52Z\", quantity: 1, total: 200, tip: 100, type: \"visa\"}\n]);\n```\n\nAnd then a dimension for `total`:\n\n``` javascript\nvar paymentsByTotal = payments.dimension(function(d) { return d.total; });\n```\n\nBreaking things down...\n\nYou're saying you'd like to call `paymentsByTotal.accessor(d)` to return `d.total` - correct?\n\nThis would achieve the same as doing:\n\n``` javascript\nvar paymentTotal = function(d) { return d.total; };\nvar paymentsByTotal = payments.dimension(paymentTotal);\n```\n\nAnd calling `paymentTotal(d)` - correct?\n\nSorry to de-rail, but I don't understand how `paymentsByTotal.accessor = 1` would do anything other than replace the reference to the `accessor` function with `1`. It wouldn't break `paymentTotal`. \n\nThis is where example code would be really helpful. Perhaps you have an interesting `value` function for your dimension?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29248768",
        "html_url": "https://github.com/square/crossfilter/pull/82#issuecomment-29248768",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/82",
        "id": 29248768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ4NzY4",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:23:32Z",
        "updated_at": "2013-11-25T22:23:32Z",
        "author_association": "NONE",
        "body": "You're right of course. I had a brain malfunction. It wouldn't break the dimension if you override the `paymentsByTotal.accessor` attribute. So I think you're right that this doesn't provide an advantage over just adding `accessor: value` to the returned object.\n\nYour example with an externally named accessor function is exactly what we were doing until we added the dimension accessor function in this pull request. It just becomes a pain to always pass around the dimension object and the accessor function together, when you know that function is in the object :-)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29250924",
        "html_url": "https://github.com/square/crossfilter/pull/92#issuecomment-29250924",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/92",
        "id": 29250924,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUwOTI0",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-11-25T22:51:31Z",
        "updated_at": "2013-11-25T22:51:31Z",
        "author_association": "NONE",
        "body": "Update to current master branch complete.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29694833",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29694833",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29694833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njk0ODMz",
        "user": {
            "login": "bjornstar",
            "id": 20630,
            "node_id": "MDQ6VXNlcjIwNjMw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjornstar",
            "html_url": "https://github.com/bjornstar",
            "followers_url": "https://api.github.com/users/bjornstar/followers",
            "following_url": "https://api.github.com/users/bjornstar/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjornstar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjornstar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjornstar/subscriptions",
            "organizations_url": "https://api.github.com/users/bjornstar/orgs",
            "repos_url": "https://api.github.com/users/bjornstar/repos",
            "events_url": "https://api.github.com/users/bjornstar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjornstar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-03T09:30:56Z",
        "updated_at": "2013-12-03T09:30:56Z",
        "author_association": "NONE",
        "body": "_A gentle nudge_.\n\nWe'd really like to use crossfilter as a component.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29724138",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29724138",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29724138,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzI0MTM4",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-03T16:21:08Z",
        "updated_at": "2013-12-03T16:21:08Z",
        "author_association": "COLLABORATOR",
        "body": "I am no longer the maintainer of this repo, but I noticed that your pull request causes a ReferenceError: exports is not defined when trying to load crossfilter.js using in a browser via script tag.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29749834",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29749834",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29749834,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ5ODM0",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-03T20:50:00Z",
        "updated_at": "2013-12-03T20:50:00Z",
        "author_association": "COLLABORATOR",
        "body": "@christopherobin  please can you rebase this PR against the current crossfilter master, sign our [individual contributor license agreement](https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1), and fix the error @mbostock identified when loading the script in a browser? \n\nAlso, can you confirm that `component.json` needs to include `index.js`? I think that's just a convenience for node imports, but I'm not familiar with how components work.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29758610",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-29758610",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 29758610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU4NjEw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-03T22:31:12Z",
        "updated_at": "2013-12-03T22:31:12Z",
        "author_association": "COLLABORATOR",
        "body": "You could [remove](https://github.com/square/crossfilter/wiki/API-Reference#wiki-crossfilter_remove) all records and then add new ones, though this would require resetting all filters (to select all records for removal).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29770700",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29770700",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29770700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzcwNzAw",
        "user": {
            "login": "christopherobin",
            "id": 308493,
            "node_id": "MDQ6VXNlcjMwODQ5Mw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/308493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christopherobin",
            "html_url": "https://github.com/christopherobin",
            "followers_url": "https://api.github.com/users/christopherobin/followers",
            "following_url": "https://api.github.com/users/christopherobin/following{/other_user}",
            "gists_url": "https://api.github.com/users/christopherobin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christopherobin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christopherobin/subscriptions",
            "organizations_url": "https://api.github.com/users/christopherobin/orgs",
            "repos_url": "https://api.github.com/users/christopherobin/repos",
            "events_url": "https://api.github.com/users/christopherobin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christopherobin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-04T01:48:31Z",
        "updated_at": "2013-12-04T01:48:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@RandomEtc Here is an updated version of the commit, the error reported by @mbostock should be gone and indeed `index.js` was not needed and was removed from the `component.json` file. I also signed the CLA as required.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29771513",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29771513",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29771513,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzcxNTEz",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-04T02:06:11Z",
        "updated_at": "2013-12-04T02:06:11Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks! I think this is fine now, if it's not we'll fix it. I merged and published to npm as `1.3.7`.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/29772826",
        "html_url": "https://github.com/square/crossfilter/pull/97#issuecomment-29772826",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/97",
        "id": 29772826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzcyODI2",
        "user": {
            "login": "bjornstar",
            "id": 20630,
            "node_id": "MDQ6VXNlcjIwNjMw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjornstar",
            "html_url": "https://github.com/bjornstar",
            "followers_url": "https://api.github.com/users/bjornstar/followers",
            "following_url": "https://api.github.com/users/bjornstar/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjornstar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjornstar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjornstar/subscriptions",
            "organizations_url": "https://api.github.com/users/bjornstar/orgs",
            "repos_url": "https://api.github.com/users/bjornstar/repos",
            "events_url": "https://api.github.com/users/bjornstar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjornstar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-04T02:35:03Z",
        "updated_at": "2013-12-04T02:35:03Z",
        "author_association": "NONE",
        "body": "Thanks guys!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31097707",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-31097707",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 31097707,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDk3NzA3",
        "user": {
            "login": "tvinci",
            "id": 2448159,
            "node_id": "MDQ6VXNlcjI0NDgxNTk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2448159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tvinci",
            "html_url": "https://github.com/tvinci",
            "followers_url": "https://api.github.com/users/tvinci/followers",
            "following_url": "https://api.github.com/users/tvinci/following{/other_user}",
            "gists_url": "https://api.github.com/users/tvinci/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tvinci/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tvinci/subscriptions",
            "organizations_url": "https://api.github.com/users/tvinci/orgs",
            "repos_url": "https://api.github.com/users/tvinci/repos",
            "events_url": "https://api.github.com/users/tvinci/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tvinci/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2013-12-22T22:29:27Z",
        "updated_at": "2013-12-22T22:29:27Z",
        "author_association": "NONE",
        "body": "Are you looking for a tutorial for using it or for a walk through on the actual source code? I've written a tutorial on crossfilter as a basis for using dc.js here:\nhttp://www.codeproject.com/Articles/693841/Making-Dashboards-with-Dc-js-Part-1-Using-Crossfil\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31570749",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-31570749",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 31570749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTcwNzQ5",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T03:56:37Z",
        "updated_at": "2014-01-04T03:56:47Z",
        "author_association": "COLLABORATOR",
        "body": "What about:\n\n``` javascript\nfunction reduceAddAvg(attr) {\n  return function(p,v) {\n    ++p.count\n    p.sum += v[attr];\n    p.avg = p.sum/p.count;\n    return p;\n  };\n}\nfunction reduceRemoveAvg(attr) {\n  return function(p,v) {\n    --p.count\n    p.sum -= v[attr];\n    p.avg = p.sum/p.count;\n    return p;\n  };\n}\nfunction reduceInitAvg() {\n  return {count:0, sum:0, avg:0};\n}\nvar statesAvgGroup = statesAvgDimension.group().reduce(reduceAddAvg('savings'), reduceRemoveAvg('savings'), reduceInitAvg);\nvar statesAvgGroup = statesAvgDimension.group().reduce(reduceAddAvg('cost'), reduceRemoveAvg('cost'), reduceInitAvg);\n// ... and so on\n```\n\nWould that work?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31575174",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-31575174",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 31575174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTc1MTc0",
        "user": {
            "login": "deanmalmgren",
            "id": 255672,
            "node_id": "MDQ6VXNlcjI1NTY3Mg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/255672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deanmalmgren",
            "html_url": "https://github.com/deanmalmgren",
            "followers_url": "https://api.github.com/users/deanmalmgren/followers",
            "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}",
            "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions",
            "organizations_url": "https://api.github.com/users/deanmalmgren/orgs",
            "repos_url": "https://api.github.com/users/deanmalmgren/repos",
            "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deanmalmgren/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T09:57:42Z",
        "updated_at": "2014-01-04T09:58:27Z",
        "author_association": "NONE",
        "body": "+1 on this as well. [catcorr.js](http://ideo.github.io/catcorrjs/) would definitely benefit from >32 dimensions, too. Anything I can do to help? Is @sciyoshi's 5% slowdown ok or should we try to optimize?\n\nFor what its worth, 5% for me is fine but perhaps others have more stringent requirements.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31584905",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-31584905",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 31584905,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg0OTA1",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T18:25:03Z",
        "updated_at": "2014-01-04T18:25:03Z",
        "author_association": "NONE",
        "body": "Yep, this works great.  Maybe a good one for the docs? It's obvious when I see it but wasn't obvious before!\nThanks\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31584939",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-31584939",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 31584939,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg0OTM5",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T18:26:57Z",
        "updated_at": "2014-01-04T18:26:57Z",
        "author_association": "NONE",
        "body": "Any way to make this opt-in? So if we're willing to take a performance hit, we can opt-in to enable > 32 dimensions?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31585685",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-31585685",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 31585685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg1Njg1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T18:58:53Z",
        "updated_at": "2014-01-04T18:58:53Z",
        "author_association": "COLLABORATOR",
        "body": "It sounded like it wasn't just a performance problem - perhaps @optimuspaul can provide a failing test case for @sciyoshi to take a look at?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31585803",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-31585803",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 31585803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg1ODAz",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T19:03:59Z",
        "updated_at": "2014-01-04T19:03:59Z",
        "author_association": "COLLABORATOR",
        "body": "Great! I added a note linking here from https://github.com/square/crossfilter/wiki/API-Reference#wiki-group_reduce\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/31586386",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-31586386",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 31586386,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg2Mzg2",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-04T19:28:00Z",
        "updated_at": "2014-01-04T19:28:00Z",
        "author_association": "NONE",
        "body": "nice\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/32411295",
        "html_url": "https://github.com/square/crossfilter/issues/104#issuecomment-32411295",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/104",
        "id": 32411295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDExMjk1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-15T20:26:33Z",
        "updated_at": "2014-01-15T20:26:33Z",
        "author_association": "COLLABORATOR",
        "body": "The maximum number of dimensions is 32 at the moment.  There is a proposed fix in #75.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/33317302",
        "html_url": "https://github.com/square/crossfilter/issues/105#issuecomment-33317302",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/105",
        "id": 33317302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzE3MzAy",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-01-26T13:56:21Z",
        "updated_at": "2014-01-26T13:56:21Z",
        "author_association": "COLLABORATOR",
        "body": "These issues are intended for bug reports and feature requests; please post questions like this on a forum like StackOverflow.\n\n(In answer to your question, see the custom function `parseDate` in the example, which constructs Date objects using the right portions of the input strings.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/33949025",
        "html_url": "https://github.com/square/crossfilter/issues/53#issuecomment-33949025",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/53",
        "id": 33949025,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ5MDI1",
        "user": {
            "login": "navr84",
            "id": 6574530,
            "node_id": "MDQ6VXNlcjY1NzQ1MzA=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6574530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navr84",
            "html_url": "https://github.com/navr84",
            "followers_url": "https://api.github.com/users/navr84/followers",
            "following_url": "https://api.github.com/users/navr84/following{/other_user}",
            "gists_url": "https://api.github.com/users/navr84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navr84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navr84/subscriptions",
            "organizations_url": "https://api.github.com/users/navr84/orgs",
            "repos_url": "https://api.github.com/users/navr84/repos",
            "events_url": "https://api.github.com/users/navr84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navr84/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-03T12:28:41Z",
        "updated_at": "2014-02-03T12:28:41Z",
        "author_association": "NONE",
        "body": "Is it possible to return crossfilter objects from the worker to the main script. I tried serializing the objects and then deserialising them , but it doesnt work since it looks like crossfilter uses quite a lot of closures within the code. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/33955069",
        "html_url": "https://github.com/square/crossfilter/issues/53#issuecomment-33955069",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/53",
        "id": 33955069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTU1MDY5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-03T13:45:30Z",
        "updated_at": "2014-02-03T13:45:30Z",
        "author_association": "COLLABORATOR",
        "body": "Not easily, no.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/34520455",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-34520455",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 34520455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTIwNDU1",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-08T00:00:27Z",
        "updated_at": "2014-02-08T00:00:37Z",
        "author_association": "NONE",
        "body": "@jasondavies Could you explain how I can do the equivalent of `top()` on a dimension in order to get the largest _non NA_ value?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/34522210",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-34522210",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 34522210,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTIyMjEw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-08T00:35:21Z",
        "updated_at": "2014-02-08T00:35:21Z",
        "author_association": "COLLABORATOR",
        "body": "The attempts to support unorderable values such as `NaN` or `undefined` were dropped in [version 1.2.0](https://github.com/square/crossfilter/releases/tag/v1.2.0).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/34522428",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-34522428",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 34522428,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTIyNDI4",
        "user": {
            "login": "jeroen",
            "id": 216319,
            "node_id": "MDQ6VXNlcjIxNjMxOQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeroen",
            "html_url": "https://github.com/jeroen",
            "followers_url": "https://api.github.com/users/jeroen/followers",
            "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
            "organizations_url": "https://api.github.com/users/jeroen/orgs",
            "repos_url": "https://api.github.com/users/jeroen/repos",
            "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeroen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-08T00:39:53Z",
        "updated_at": "2014-02-08T00:39:53Z",
        "author_association": "NONE",
        "body": "Is there an alternative way or workaround to get the top `n` records for a given dimension, where unorderable values are treated as `-Infinity`?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/34622454",
        "html_url": "https://github.com/square/crossfilter/issues/65#issuecomment-34622454",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/65",
        "id": 34622454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjIyNDU0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-02-10T11:39:22Z",
        "updated_at": "2014-02-10T11:39:22Z",
        "author_association": "COLLABORATOR",
        "body": "If you convert incomparable values to `-Infinity`, they should appear last when calling dimension.top, so I don\u2019t see the problem there.  However, `-Infinity` should appear first when calling dimension.bottom, which might not be what you want.  Note that dimension.{bottom,top} respect the current filter on that dimension, so you could filter out values of `-Infinity` to avoid those records being returned.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/35974997",
        "html_url": "https://github.com/square/crossfilter/issues/107#issuecomment-35974997",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/107",
        "id": 35974997,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc0OTk3",
        "user": {
            "login": "protobi",
            "id": 1337045,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzMzcwNDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1337045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/protobi",
            "html_url": "https://github.com/protobi",
            "followers_url": "https://api.github.com/users/protobi/followers",
            "following_url": "https://api.github.com/users/protobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/protobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/protobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/protobi/subscriptions",
            "organizations_url": "https://api.github.com/users/protobi/orgs",
            "repos_url": "https://api.github.com/users/protobi/repos",
            "events_url": "https://api.github.com/users/protobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/protobi/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "created_at": "2014-02-25T04:55:37Z",
        "updated_at": "2014-02-25T04:55:37Z",
        "author_association": "NONE",
        "body": "Concur that text search, like a RegEx filter, would be great.  As a newbie looking at the code from the outside, it appears that dimensions are represented as sorted arrays of column values, and filters track the min and max index of values that satisfy it.  Thus it seems range filters like dictionary order (case sensitive) with upper and lower bounds would be easy (e.g. \"Bee_\" <= x < \"Bar_\") would match.  But text match could yield arbitrary subsets which would require rethinking how filters are applied.   \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/36438423",
        "html_url": "https://github.com/square/crossfilter/issues/107#issuecomment-36438423",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/107",
        "id": 36438423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDM4NDIz",
        "user": {
            "login": "mtraynham",
            "id": 5741321,
            "node_id": "MDQ6VXNlcjU3NDEzMjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5741321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mtraynham",
            "html_url": "https://github.com/mtraynham",
            "followers_url": "https://api.github.com/users/mtraynham/followers",
            "following_url": "https://api.github.com/users/mtraynham/following{/other_user}",
            "gists_url": "https://api.github.com/users/mtraynham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mtraynham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mtraynham/subscriptions",
            "organizations_url": "https://api.github.com/users/mtraynham/orgs",
            "repos_url": "https://api.github.com/users/mtraynham/repos",
            "events_url": "https://api.github.com/users/mtraynham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mtraynham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-01T22:11:08Z",
        "updated_at": "2014-03-01T22:11:08Z",
        "author_association": "NONE",
        "body": "You can use dimension.filterFunction(function(d) {...}).\nSee https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension_filterFunction\n\nAs an example:\n\n```\n// Match strings of length 5 or greater that only include letters and numbers.\nvar regex = /^([a-z0-9]{5,})$/; \nvar data = [{foo: \"abc1\"}, {foo: \"abc12\"}, {foo: \"abc123\"}]\n\nvar index = crossfilter(data);\nvar fooAccessor = function(d) { return d.foo; };\nvar dimension = index.dimension(fooAccessor);\n\n// d is the dimension value;  return false for exclude\ndimension.filterFunction(function(d) {\n    return regex.test(d);\n});\n```\n\nBased on the above example, this matches records 2 & 3.  This allows you to filter specific records based on something other than exact match or range match.  \n\nAlbeit this does not take advantage of Crossfilter's bisect functionality which can binary search the sorted data (as used in range filtering or exact match).  Thus, this can be much slower for larger data sets and/or execution complexity of the filter function.\n\nAs @gradualstudent aluded to, if you are prefix matching, then filterRange would be the way to go.  You would create a range that encompasses all values past the letters presented by the user.  For instance, if user typed 'Bee', you would set the start of the range to the entered text.  The range end would be the entered text, plus the lowest naturally sorted unicode character.  That would allow you to encompass all values that start with 'Bee'.\n\n['Bee', 'Bee\\uFFFF']\n\nI have not tried any of this before, so correct me if I'm wrong.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37464463",
        "html_url": "https://github.com/square/crossfilter/pull/108#issuecomment-37464463",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/108",
        "id": 37464463,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDY0NDYz",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-12T21:01:14Z",
        "updated_at": "2014-03-12T21:52:51Z",
        "author_association": "COLLABORATOR",
        "body": "Neat! Thanks for trying this out. I think we can make it work. Do you have time for a small iteration?\n\nOn my screen, at around 800px wide, the Crossfilter heading is under the Time of Day chart. Can you adjust the font size when the screen is narrow?\n\nIf you're editing it, can you break the lines in the HTML file so it's easier to review? And please use spaces not tabs (sorry!).\n\nIf possible, at wider screen sizes it would be nice to have some margins on the sides so that the content can breathe a bit. Something a cross between what you have at https://drahmel.github.io/crossfilter/ and what we have today at https://square.github.io/crossfilter/ would be great - my monitor is 2560px wide, and I regularly browse at ~1800px :)\n\nLastly, can you sign our electronic contributor agreement so I can safely merge your changes without talking to a lawyer? https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37471088",
        "html_url": "https://github.com/square/crossfilter/pull/108#issuecomment-37471088",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/108",
        "id": 37471088,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDcxMDg4",
        "user": {
            "login": "drahmel",
            "id": 722938,
            "node_id": "MDQ6VXNlcjcyMjkzOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/722938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drahmel",
            "html_url": "https://github.com/drahmel",
            "followers_url": "https://api.github.com/users/drahmel/followers",
            "following_url": "https://api.github.com/users/drahmel/following{/other_user}",
            "gists_url": "https://api.github.com/users/drahmel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drahmel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drahmel/subscriptions",
            "organizations_url": "https://api.github.com/users/drahmel/orgs",
            "repos_url": "https://api.github.com/users/drahmel/repos",
            "events_url": "https://api.github.com/users/drahmel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drahmel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-12T21:39:27Z",
        "updated_at": "2014-03-12T21:39:27Z",
        "author_association": "NONE",
        "body": "Sounds good. I'll try and make the changes tomorrow. Thanks for the\nresponse!\n\nDan\n\nOn Wed, Mar 12, 2014 at 2:01 PM, Tom Carden notifications@github.comwrote:\n\n> Neat! Thanks for trying this out. I think we can make it work. Do you have\n> time for a small iteration?\n> \n> On my screen, at around 800px wide, the Crossfilter heading is under the\n> Time of Day chart. Can you adjust the font size when the screen is narrow?\n> \n> If you're editing it, can you break the lines in the HTML file so it's\n> easier to review? And please use spaces not tabs (sorry!).\n> \n> If possible, at wider screen sizes it would be nice to have some margins\n> on the sides so that the content can breathe a bit. Something a cross\n> between what you have at https://square.github.io/crossfilter/ and what\n> we have today at https://square.github.io/crossfilter/ would be great -\n> my monitor is 2560px wide, and I regularly browse at ~1800px :)\n> \n> Lastly, can you sign our electronic contributor agreement so I can safely\n> merge your changes without talking to a lawyer?\n> https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/square/crossfilter/pull/108#issuecomment-37464463\n> .\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37473605",
        "html_url": "https://github.com/square/crossfilter/pull/108#issuecomment-37473605",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/108",
        "id": 37473605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDczNjA1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-12T21:53:19Z",
        "updated_at": "2014-03-12T21:53:19Z",
        "author_association": "COLLABORATOR",
        "body": "Great. I'm sometimes not able to respond this quickly, but I will try to keep it moving.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37843807",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-37843807",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 37843807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQzODA3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-17T17:22:23Z",
        "updated_at": "2014-03-17T17:22:23Z",
        "author_association": "COLLABORATOR",
        "body": "I think this is related to Crossfilter\u2019s general limitation of only allowing one set of filters to be active at any time.  I would rather improve the API so that it supports independent sets of filters.  You could then have charts based on one filterset, and perform other operations using a different filterset.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37844403",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-37844403",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 37844403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ0NDAz",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-17T17:26:47Z",
        "updated_at": "2014-03-17T17:26:47Z",
        "author_association": "NONE",
        "body": "Interesting idea. Any thoughts on how this API would look - or is work already being done here? I'd be interested in working on it, but conceptually not sure how it would fit in to the existing API (could you define which filterset applies to a given dimension?).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37844864",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-37844864",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 37844864,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ0ODY0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-17T17:30:16Z",
        "updated_at": "2014-03-17T17:30:16Z",
        "author_association": "COLLABORATOR",
        "body": "I\u2019ve thought about it, but haven\u2019t had time to implement it yet.  Most likely it would be backwards-incompatible, but it would support more powerful queries e.g. union/intersection/exclusion.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/37845436",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-37845436",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 37845436,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ1NDM2",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-17T17:34:36Z",
        "updated_at": "2014-03-17T17:34:36Z",
        "author_association": "NONE",
        "body": "You'd need to maintain multiple independent pre-calculations of each group based on each filterset and each union/intersection/exclusion, no? Sounds very interesting. Is there a good place to start to hash this out? Wiki page?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38806084",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38806084",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38806084,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA2MDg0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-27T14:05:45Z",
        "updated_at": "2014-03-27T14:05:45Z",
        "author_association": "COLLABORATOR",
        "body": "The [dimension value accessor](https://github.com/square/crossfilter/wiki/API-Reference#dimension) must return naturally-orderable values.  If an accessor returns an array, then JavaScript\u2019s relational operations (`<`, `<=`, `>`, `>=`) will attempt to coerce the array to a number or a string.  I think this coercion will incur a performance penalty, particularly during the sort operation.\n\nI\u2019d recommend against using an array and returning an appropriate string instead if you really need a composite key.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38806480",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38806480",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38806480,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA2NDgw",
        "user": {
            "login": "pronix",
            "id": 86234,
            "node_id": "MDQ6VXNlcjg2MjM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/86234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pronix",
            "html_url": "https://github.com/pronix",
            "followers_url": "https://api.github.com/users/pronix/followers",
            "following_url": "https://api.github.com/users/pronix/following{/other_user}",
            "gists_url": "https://api.github.com/users/pronix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pronix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pronix/subscriptions",
            "organizations_url": "https://api.github.com/users/pronix/orgs",
            "repos_url": "https://api.github.com/users/pronix/repos",
            "events_url": "https://api.github.com/users/pronix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pronix/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-27T14:09:05Z",
        "updated_at": "2014-03-27T14:09:05Z",
        "author_association": "NONE",
        "body": "array in js is naturally-orderable\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38807568",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38807568",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38807568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA3NTY4",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-27T14:17:28Z",
        "updated_at": "2014-03-27T14:17:28Z",
        "author_association": "COLLABORATOR",
        "body": "I suggest reading up about how JavaScript performs [relational comparisons](http://www.ecma-international.org/ecma-262/5.1/#sec-11.8).  If you want to create a composite key for example, then you need to ensure any numbers are zero-padded since the array would be coerced to a string with comma separators.  It\u2019s better to be explicit and return a string if you want to do this.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38807726",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38807726",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38807726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA3NzI2",
        "user": {
            "login": "pronix",
            "id": 86234,
            "node_id": "MDQ6VXNlcjg2MjM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/86234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pronix",
            "html_url": "https://github.com/pronix",
            "followers_url": "https://api.github.com/users/pronix/followers",
            "following_url": "https://api.github.com/users/pronix/following{/other_user}",
            "gists_url": "https://api.github.com/users/pronix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pronix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pronix/subscriptions",
            "organizations_url": "https://api.github.com/users/pronix/orgs",
            "repos_url": "https://api.github.com/users/pronix/repos",
            "events_url": "https://api.github.com/users/pronix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pronix/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-27T14:18:34Z",
        "updated_at": "2014-03-27T14:18:34Z",
        "author_association": "NONE",
        "body": "ok.thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38809460",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38809460",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38809460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODA5NDYw",
        "user": {
            "login": "pronix",
            "id": 86234,
            "node_id": "MDQ6VXNlcjg2MjM0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/86234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pronix",
            "html_url": "https://github.com/pronix",
            "followers_url": "https://api.github.com/users/pronix/followers",
            "following_url": "https://api.github.com/users/pronix/following{/other_user}",
            "gists_url": "https://api.github.com/users/pronix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pronix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pronix/subscriptions",
            "organizations_url": "https://api.github.com/users/pronix/orgs",
            "repos_url": "https://api.github.com/users/pronix/repos",
            "events_url": "https://api.github.com/users/pronix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pronix/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-27T14:31:55Z",
        "updated_at": "2014-03-27T14:31:55Z",
        "author_association": "NONE",
        "body": "super. your advise save a lot time.\nstring as key faster that array.\nand parse this string to array realy faster then use array.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/38938852",
        "html_url": "https://github.com/square/crossfilter/issues/111#issuecomment-38938852",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/111",
        "id": 38938852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM4ODUy",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-03-28T16:27:18Z",
        "updated_at": "2014-03-28T16:27:18Z",
        "author_association": "NONE",
        "body": "Thanks for the link, @jasondavies.  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/40228749",
        "html_url": "https://github.com/square/crossfilter/pull/86#issuecomment-40228749",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/86",
        "id": 40228749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI4NzQ5",
        "user": {
            "login": "jkleint",
            "id": 931505,
            "node_id": "MDQ6VXNlcjkzMTUwNQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/931505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkleint",
            "html_url": "https://github.com/jkleint",
            "followers_url": "https://api.github.com/users/jkleint/followers",
            "following_url": "https://api.github.com/users/jkleint/following{/other_user}",
            "gists_url": "https://api.github.com/users/jkleint/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jkleint/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jkleint/subscriptions",
            "organizations_url": "https://api.github.com/users/jkleint/orgs",
            "repos_url": "https://api.github.com/users/jkleint/repos",
            "events_url": "https://api.github.com/users/jkleint/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jkleint/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-11T17:30:38Z",
        "updated_at": "2014-04-11T17:30:38Z",
        "author_association": "NONE",
        "body": "+1; just got bitten by the same problem.  Thanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/40613014",
        "html_url": "https://github.com/square/crossfilter/issues/112#issuecomment-40613014",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/112",
        "id": 40613014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjEzMDE0",
        "user": {
            "login": "mtraynham",
            "id": 5741321,
            "node_id": "MDQ6VXNlcjU3NDEzMjE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5741321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mtraynham",
            "html_url": "https://github.com/mtraynham",
            "followers_url": "https://api.github.com/users/mtraynham/followers",
            "following_url": "https://api.github.com/users/mtraynham/following{/other_user}",
            "gists_url": "https://api.github.com/users/mtraynham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mtraynham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mtraynham/subscriptions",
            "organizations_url": "https://api.github.com/users/mtraynham/orgs",
            "repos_url": "https://api.github.com/users/mtraynham/repos",
            "events_url": "https://api.github.com/users/mtraynham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mtraynham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-16T15:28:57Z",
        "updated_at": "2014-04-16T15:28:57Z",
        "author_association": "NONE",
        "body": "@jefffriesen Hey Jeff, I don't know how much code support you're going to get here in terms of a way to do this without a patch... but you'll want to check the listener arrays for references to the dimension or check the length.  In the dispose function:\n\n```\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      for (i = 0; i < n; ++i) filters[i] &= zero;\n      m &= zero;\n      return dimension;\n    }\n```\n\nLooks like `dataListeners` is 2x the size of the number of dimensions and `removeDataListeners` is 1:1 with the dimensions.\n\nSo you could add a method to dimensions and groups to check all of those for indexOf, or just have a method that returns the corresponding expected length (removeDataListeners.length)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/40629322",
        "html_url": "https://github.com/square/crossfilter/issues/112#issuecomment-40629322",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/112",
        "id": 40629322,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI5MzIy",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-16T17:44:17Z",
        "updated_at": "2014-04-16T17:44:17Z",
        "author_association": "NONE",
        "body": "Interesting. Thanks... I'll look into it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/41520769",
        "html_url": "https://github.com/square/crossfilter/issues/113#issuecomment-41520769",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/113",
        "id": 41520769,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTIwNzY5",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-28T03:40:47Z",
        "updated_at": "2014-04-28T03:40:47Z",
        "author_association": "NONE",
        "body": "I think second-order functions can help you out here.  Check out [the solution posted to the dc.js issue tracker for this issue](https://github.com/dc-js/dc.js/issues/563#issuecomment-39503927).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/41524340",
        "html_url": "https://github.com/square/crossfilter/issues/113#issuecomment-41524340",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/113",
        "id": 41524340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTI0MzQw",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-28T05:36:06Z",
        "updated_at": "2014-04-28T05:36:31Z",
        "author_association": "COLLABORATOR",
        "body": "@RandomInsano you don't need `new` there in your `ReduceSum` object, but you do need to return something from the factory, or attach those add/remove/init methods to the function's prototype. I would do:\n\n``` javascript\nfunction reduceSum(attr){\n  return {\n    add: function(p, v) {\n      return p += v[attr];\n    },\n    remove: function(p, v) {\n      return p -= v[attr];\n    },\n    init: function() {\n      return 0;\n    }\n  };\n}\nvar rs = reduceSum('value')\nvar statesAvgGroup = statesAvgDimension.group().reduce(rs.add, rs.remove, rs.init);\n```\n\nThat should work - no modifications to crossfilter needed!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/41604480",
        "html_url": "https://github.com/square/crossfilter/issues/113#issuecomment-41604480",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/113",
        "id": 41604480,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA0NDgw",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-28T19:48:28Z",
        "updated_at": "2014-04-28T19:48:28Z",
        "author_association": "COLLABORATOR",
        "body": "Closing as I think we\u2019d prefer to keep the API simple.  You can write your own helpers to generate particular map/reduce functions as necessary.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/41609828",
        "html_url": "https://github.com/square/crossfilter/issues/113#issuecomment-41609828",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/113",
        "id": 41609828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA5ODI4",
        "user": {
            "login": "RandomInsano",
            "id": 71530,
            "node_id": "MDQ6VXNlcjcxNTMw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/71530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomInsano",
            "html_url": "https://github.com/RandomInsano",
            "followers_url": "https://api.github.com/users/RandomInsano/followers",
            "following_url": "https://api.github.com/users/RandomInsano/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomInsano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomInsano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomInsano/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomInsano/orgs",
            "repos_url": "https://api.github.com/users/RandomInsano/repos",
            "events_url": "https://api.github.com/users/RandomInsano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomInsano/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-04-28T20:34:56Z",
        "updated_at": "2014-04-28T20:34:56Z",
        "author_association": "NONE",
        "body": "Thanks for the help guys. I like the solution @RandomEtc.\n\nI should avoid asking for help at 3:00am. Always dangerous. I'll look for a mailing list next time. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/42899677",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-42899677",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 42899677,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5Njc3",
        "user": {
            "login": "paulboone",
            "id": 10792,
            "node_id": "MDQ6VXNlcjEwNzky",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulboone",
            "html_url": "https://github.com/paulboone",
            "followers_url": "https://api.github.com/users/paulboone/followers",
            "following_url": "https://api.github.com/users/paulboone/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulboone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulboone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulboone/subscriptions",
            "organizations_url": "https://api.github.com/users/paulboone/orgs",
            "repos_url": "https://api.github.com/users/paulboone/repos",
            "events_url": "https://api.github.com/users/paulboone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulboone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-05-12T23:05:53Z",
        "updated_at": "2014-05-12T23:05:53Z",
        "author_association": "NONE",
        "body": "+1. I'm trying to get this working myself on a CrossFilter / DC / D3 stack using Twitter Flight and RequireJS. I don't know enough yet about AMD or I'd attempt to submit a patch myself.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/42967529",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-42967529",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 42967529,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NTI5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-05-13T15:08:10Z",
        "updated_at": "2014-05-13T15:08:10Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for the contribution, but this is a duplicate of #113, and I think we\u2019d prefer to keep the API simple.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/42970214",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-42970214",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 42970214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTcwMjE0",
        "user": {
            "login": "dottedmag",
            "id": 16120,
            "node_id": "MDQ6VXNlcjE2MTIw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/16120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dottedmag",
            "html_url": "https://github.com/dottedmag",
            "followers_url": "https://api.github.com/users/dottedmag/followers",
            "following_url": "https://api.github.com/users/dottedmag/following{/other_user}",
            "gists_url": "https://api.github.com/users/dottedmag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dottedmag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dottedmag/subscriptions",
            "organizations_url": "https://api.github.com/users/dottedmag/orgs",
            "repos_url": "https://api.github.com/users/dottedmag/repos",
            "events_url": "https://api.github.com/users/dottedmag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dottedmag/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-05-13T15:27:18Z",
        "updated_at": "2014-05-13T15:27:18Z",
        "author_association": "NONE",
        "body": "The whole idea was to simplify var rs = reducer(...); group.reduce(rs.add, rs.remove, rs.init) to group.reduce(reducer(...)), which is not easy outside of crossfilter itself, but oh well.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/44114027",
        "html_url": "https://github.com/square/crossfilter/issues/53#issuecomment-44114027",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/53",
        "id": 44114027,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE0MDI3",
        "user": {
            "login": "arunsoman",
            "id": 1702420,
            "node_id": "MDQ6VXNlcjE3MDI0MjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1702420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arunsoman",
            "html_url": "https://github.com/arunsoman",
            "followers_url": "https://api.github.com/users/arunsoman/followers",
            "following_url": "https://api.github.com/users/arunsoman/following{/other_user}",
            "gists_url": "https://api.github.com/users/arunsoman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arunsoman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arunsoman/subscriptions",
            "organizations_url": "https://api.github.com/users/arunsoman/orgs",
            "repos_url": "https://api.github.com/users/arunsoman/repos",
            "events_url": "https://api.github.com/users/arunsoman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arunsoman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-05-25T05:46:51Z",
        "updated_at": "2014-05-25T05:46:51Z",
        "author_association": "NONE",
        "body": "any fixes planned in near future ?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/44446218",
        "html_url": "https://github.com/square/crossfilter/pull/117#issuecomment-44446218",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/117",
        "id": 44446218,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDQ2MjE4",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-05-28T18:28:05Z",
        "updated_at": "2014-05-28T18:28:05Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for these!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45092717",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-45092717",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 45092717,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkyNzE3",
        "user": {
            "login": "reedspool",
            "id": 602877,
            "node_id": "MDQ6VXNlcjYwMjg3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/602877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reedspool",
            "html_url": "https://github.com/reedspool",
            "followers_url": "https://api.github.com/users/reedspool/followers",
            "following_url": "https://api.github.com/users/reedspool/following{/other_user}",
            "gists_url": "https://api.github.com/users/reedspool/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reedspool/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reedspool/subscriptions",
            "organizations_url": "https://api.github.com/users/reedspool/orgs",
            "repos_url": "https://api.github.com/users/reedspool/repos",
            "events_url": "https://api.github.com/users/reedspool/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reedspool/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-04T13:52:26Z",
        "updated_at": "2014-06-04T13:52:26Z",
        "author_association": "NONE",
        "body": "I successfully used RequireJS's shim config:\n\n```\nrequire.config({\n  paths: {\n    \"crossfilter\": \"/bower_components/crossfilter/crossfilter\"\n  },\n  shim: {\n    'crossfilter': {\n      deps: [],\n      exports: 'crossfilter'\n    }\n  }\n});\n```\n\nHope this helps while we wait for this!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45238880",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-45238880",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 45238880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM4ODgw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-05T16:03:33Z",
        "updated_at": "2014-06-05T16:03:33Z",
        "author_association": "NONE",
        "body": "I hope this comment doesn't re-open the issue. If it does, my apologies.\n\nIn any case, as part of a project I've been working on we have developed a bunch of different 'helper' functions. I'm looking at releasing these, but I'm trying to determine the best way to do this. I'm thinking of releasing it as a set of functions that take a group as an argument and modify the group by calling \"reduce(...)\" with various, often very complex, arguments. Does that sound reasonable?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45261463",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-45261463",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 45261463,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjYxNDYz",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-05T19:11:51Z",
        "updated_at": "2014-06-05T19:11:51Z",
        "author_association": "NONE",
        "body": "Two thoughts:\n1. Have thought a bit about a 'filterSet' API. Seems it should be possible to maintain multiple named filter set and allow all methods such as .filter and .top to take an optional filter set argument. This could keep the API backwards compatible. However, after noodling on the internals a bit, it seems to me that groupings would have to be maintained and calculated for each new filter set. In other words, it would be fairly computationally expensive, wouldn't it? Anyway, I like the idea.\n2. The more I think about it, the more I think the concept of crossfilter.remove() should be fairly independent of the filter set concept. Wouldn't it be more intuitive and efficient if we could figure out a way for crossfilter.remove() to drop records independent of filters that are currently applied? In any case, I will experiment with whether this is possible in the current structure of Crossfilter. I think it should be, but not sure.\n\nRelated thought: Would a separate function dimension.remove() taking arguments identical to dimension.filter() make more sense and be more intuitive? Seems to me like anything changing the underlying data should be on the crossfilter object, but it's a thought.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45277537",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-45277537",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 45277537,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc3NTM3",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-05T21:29:05Z",
        "updated_at": "2014-06-05T21:29:05Z",
        "author_association": "NONE",
        "body": "@esjewett, this sounds really cool.  I don't know but it might be worth it to add another level of indirection, so that the helpers return functions which can then be applied to groups.. so that the helpers can themselves be reused.\n\nAny chance you'd like to contribute this to a new library on github.com/dc-js/?  I have been collecting examples of \"fake groups\" - a different kind of wrapper - and in the future I plan to create wrappers for pivots/series/etc.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45359642",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-45359642",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 45359642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzU5NjQy",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-06T16:57:13Z",
        "updated_at": "2014-06-06T16:57:13Z",
        "author_association": "NONE",
        "body": "I've made a commit on a fork that I think gets this working. I need to write more tests and better ensure that it works in conjunction with filters, but wanted to check in (if someone has the time to look at it) and see if I'm completely misunderstanding how something is working on the internals. Commit is here: https://github.com/esjewett/crossfilter/commit/09d5ac158f0fc1bb6498fb26d73b0ca0cccbd36b\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45367193",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-45367193",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 45367193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzY3MTkz",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-06T18:07:22Z",
        "updated_at": "2014-06-06T18:07:22Z",
        "author_association": "NONE",
        "body": "@gordonwoodhull I've got to figure that out. I was thinking something like\n\n```\nvar group = crossfilter.dimension(...).group();\nvar helper = cfhelpers.avg(function (d) { return d.total; })\n    .order(...)\n    .group(group);\nhelper.top(10);\n```\n\n'helper' would expose the Crossfilter group API.\n\nRegarding making it part of dc-js, I think it probably makes the most sense to keep it separate as this kind of library of Crossfilter reducers would be really helpful in a lot of contexts. Of course, the first step is just to do it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45371074",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-45371074",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 45371074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcxMDc0",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-06T18:44:42Z",
        "updated_at": "2014-06-06T18:44:42Z",
        "author_association": "NONE",
        "body": "Oh, that's neat to use the reusable chart pattern for configuring the helpers.  \n\nI meant, as part of a separate project hosted in the dc-js organization, not as part of the dc.js project itself.  But it doesn't really matter, the important thing is to actually release them!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/45446591",
        "html_url": "https://github.com/square/crossfilter/pull/115#issuecomment-45446591",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/115",
        "id": 45446591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQ2NTkx",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-08T19:53:04Z",
        "updated_at": "2014-06-08T19:53:04Z",
        "author_association": "NONE",
        "body": "Here's a very basic start: https://github.com/esjewett/reductio\n\nIt only supports count, sum, and average at the moment, but it's easily extensible, and reducers are additive and can depend on each other (for example, 'average' requires that 'count' and 'sum' are both applied to the group as well - it doesn't track it's own running count and sum). I need to do some more thinking on how to incorporate exception aggregation, but I plan to do that as well, at least in some form.\n\nFair warning: there is currently very little error checking and there has been precious little testing. It's a work in progress :-)\n\nI think it should be possible to more or less directly address the request in this issue by adding a getReduceArguments method to the reducer to return an array of three functions, then one could say something like:\n\n```\nvar reduceCountSumAverage = reductio().count(true).sum(function(d) { return d.bar; }).avg(true);\n\n// The following two lines are equivalent.\ngroup.reduce.apply(reduceCountSumAverage.getReduceArguments());\nreduceCountSumAverage(group);\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/46753897",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-46753897",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 46753897,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUzODk3",
        "user": {
            "login": "kannes",
            "id": 7661092,
            "node_id": "MDQ6VXNlcjc2NjEwOTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7661092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kannes",
            "html_url": "https://github.com/kannes",
            "followers_url": "https://api.github.com/users/kannes/followers",
            "following_url": "https://api.github.com/users/kannes/following{/other_user}",
            "gists_url": "https://api.github.com/users/kannes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kannes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kannes/subscriptions",
            "organizations_url": "https://api.github.com/users/kannes/orgs",
            "repos_url": "https://api.github.com/users/kannes/repos",
            "events_url": "https://api.github.com/users/kannes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kannes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-06-21T13:37:34Z",
        "updated_at": "2014-06-21T13:44:09Z",
        "author_association": "NONE",
        "body": "I ended up here via Google and want to share the solution to my several hour brain-melt problem, I hope that's alright and not abusing the issue tracker.\n\nIf you are getting this error and you are certain that your data file does not have any \"bad\" lines with missing values or the like, make sure you are actually loading that specific data file...\n\nI tried using a column that did not exist in the tsv data file I had loaded but in the one I _thought_ I was using.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/48558910",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-48558910",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 48558910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTU4OTEw",
        "user": {
            "login": "infacq",
            "id": 1596891,
            "node_id": "MDQ6VXNlcjE1OTY4OTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1596891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/infacq",
            "html_url": "https://github.com/infacq",
            "followers_url": "https://api.github.com/users/infacq/followers",
            "following_url": "https://api.github.com/users/infacq/following{/other_user}",
            "gists_url": "https://api.github.com/users/infacq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/infacq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/infacq/subscriptions",
            "organizations_url": "https://api.github.com/users/infacq/orgs",
            "repos_url": "https://api.github.com/users/infacq/repos",
            "events_url": "https://api.github.com/users/infacq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/infacq/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-10T02:31:16Z",
        "updated_at": "2014-07-10T02:31:16Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/50539546",
        "html_url": "https://github.com/square/crossfilter/issues/120#issuecomment-50539546",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/120",
        "id": 50539546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTM5NTQ2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-29T21:13:40Z",
        "updated_at": "2014-07-29T21:13:40Z",
        "author_association": "COLLABORATOR",
        "body": "Not as far as I know.  Are you saying the issue can be reproduced with the [flight times](http://square.github.io/crossfilter/) example?  Can you give exact steps to reproduce?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/50655095",
        "html_url": "https://github.com/square/crossfilter/issues/120#issuecomment-50655095",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/120",
        "id": 50655095,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjU1MDk1",
        "user": {
            "login": "mlenda",
            "id": 7719810,
            "node_id": "MDQ6VXNlcjc3MTk4MTA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7719810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlenda",
            "html_url": "https://github.com/mlenda",
            "followers_url": "https://api.github.com/users/mlenda/followers",
            "following_url": "https://api.github.com/users/mlenda/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlenda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlenda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlenda/subscriptions",
            "organizations_url": "https://api.github.com/users/mlenda/orgs",
            "repos_url": "https://api.github.com/users/mlenda/repos",
            "events_url": "https://api.github.com/users/mlenda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlenda/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-30T18:02:20Z",
        "updated_at": "2014-07-30T18:02:20Z",
        "author_association": "NONE",
        "body": "Actually, I take this one back. I was unable to reproduce with the flight times example, and after digging into tutorials figured out I was not accessing the filtered data set correctly. crossfilter is returning all the data properly for applied filters; it's the rendering component that is broken. Time to head over to the dc.js forums... and blame Nick!\n\nThanks for the quick response.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/50665707",
        "html_url": "https://github.com/square/crossfilter/issues/120#issuecomment-50665707",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/120",
        "id": 50665707,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjY1NzA3",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-07-30T19:18:33Z",
        "updated_at": "2014-07-30T19:18:33Z",
        "author_association": "NONE",
        "body": "Yep please file a dc.js issue. If you can repro in a jsFiddle that will be appreciated. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/51109216",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-51109216",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 51109216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTA5MjE2",
        "user": {
            "login": "KobaKhit",
            "id": 4805827,
            "node_id": "MDQ6VXNlcjQ4MDU4Mjc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4805827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KobaKhit",
            "html_url": "https://github.com/KobaKhit",
            "followers_url": "https://api.github.com/users/KobaKhit/followers",
            "following_url": "https://api.github.com/users/KobaKhit/following{/other_user}",
            "gists_url": "https://api.github.com/users/KobaKhit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KobaKhit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KobaKhit/subscriptions",
            "organizations_url": "https://api.github.com/users/KobaKhit/orgs",
            "repos_url": "https://api.github.com/users/KobaKhit/repos",
            "events_url": "https://api.github.com/users/KobaKhit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KobaKhit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-04T19:57:32Z",
        "updated_at": "2014-08-04T19:57:32Z",
        "author_association": "NONE",
        "body": "Is there any update on this? Seems like a must have feature, but no successful way of implementing it or a workaround online.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/51116366",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-51116366",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 51116366,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTE2MzY2",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-04T20:56:11Z",
        "updated_at": "2014-08-04T20:56:11Z",
        "author_association": "COLLABORATOR",
        "body": "At the moment the only real workaround is to use [dimension.filterFunction](https://github.com/square/crossfilter/wiki/API-Reference#dimension_filterFunction).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/51117871",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-51117871",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 51117871,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTE3ODcx",
        "user": {
            "login": "KobaKhit",
            "id": 4805827,
            "node_id": "MDQ6VXNlcjQ4MDU4Mjc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4805827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KobaKhit",
            "html_url": "https://github.com/KobaKhit",
            "followers_url": "https://api.github.com/users/KobaKhit/followers",
            "following_url": "https://api.github.com/users/KobaKhit/following{/other_user}",
            "gists_url": "https://api.github.com/users/KobaKhit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KobaKhit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KobaKhit/subscriptions",
            "organizations_url": "https://api.github.com/users/KobaKhit/orgs",
            "repos_url": "https://api.github.com/users/KobaKhit/repos",
            "events_url": "https://api.github.com/users/KobaKhit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KobaKhit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-04T21:08:11Z",
        "updated_at": "2014-08-04T21:08:11Z",
        "author_association": "NONE",
        "body": "Hello jason,\nwould this filter be still active if I apply group().reduceCount() on the filtered dimension? Ex.g.\n\n```\nvar XDimension = ndx.dimension(function (d) {return d.Name})\n   .filterFunction(function (d) {return d===\"Allyssa\" || d===\"Bob\";})\nYDimension = XDimesnion.group().reduceCount(function(d) {return d.Name;});\n...\ndc.renderAll();\n```\n\nHere is my [stackoverflow](http://stackoverflow.com/questions/25124277/how-to-filter-group-and-plot-data-using-crossfilter-and-dc-js) question for reference.\n\nThanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/51173371",
        "html_url": "https://github.com/square/crossfilter/issues/121#issuecomment-51173371",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/121",
        "id": 51173371,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTczMzcx",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-05T09:27:11Z",
        "updated_at": "2014-08-05T09:27:11Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks!  Fixed in version 1.3.8.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/52296854",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-52296854",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 52296854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjk2ODU0",
        "user": {
            "login": "jezekjan",
            "id": 988361,
            "node_id": "MDQ6VXNlcjk4ODM2MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/988361?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jezekjan",
            "html_url": "https://github.com/jezekjan",
            "followers_url": "https://api.github.com/users/jezekjan/followers",
            "following_url": "https://api.github.com/users/jezekjan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jezekjan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jezekjan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jezekjan/subscriptions",
            "organizations_url": "https://api.github.com/users/jezekjan/orgs",
            "repos_url": "https://api.github.com/users/jezekjan/repos",
            "events_url": "https://api.github.com/users/jezekjan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jezekjan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-15T11:29:21Z",
        "updated_at": "2014-08-15T11:29:21Z",
        "author_association": "NONE",
        "body": "Hello,\nI'm strugling with multifiltering issue as well as I'm trying to build a more general spatial filter on my data. I'm trying to use the filterFunction but it is strange to me that it is triggered as many times as the total number of records even if there are just few unique dimension values. Is this a bug, or is there any workaround for that? What I'm trying to do is to implement a 'point in polygon' filter based on dimension derived from Z-curve ordering.\nThanks for any ideas.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/53285382",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-53285382",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 53285382,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjg1Mzgy",
        "user": {
            "login": "TomNeyland",
            "id": 4574112,
            "node_id": "MDQ6VXNlcjQ1NzQxMTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4574112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomNeyland",
            "html_url": "https://github.com/TomNeyland",
            "followers_url": "https://api.github.com/users/TomNeyland/followers",
            "following_url": "https://api.github.com/users/TomNeyland/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomNeyland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomNeyland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomNeyland/subscriptions",
            "organizations_url": "https://api.github.com/users/TomNeyland/orgs",
            "repos_url": "https://api.github.com/users/TomNeyland/repos",
            "events_url": "https://api.github.com/users/TomNeyland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomNeyland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-25T16:09:31Z",
        "updated_at": "2014-08-25T16:09:31Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/53359272",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-53359272",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 53359272,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzU5Mjcy",
        "user": {
            "login": "KobaKhit",
            "id": 4805827,
            "node_id": "MDQ6VXNlcjQ4MDU4Mjc=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/4805827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KobaKhit",
            "html_url": "https://github.com/KobaKhit",
            "followers_url": "https://api.github.com/users/KobaKhit/followers",
            "following_url": "https://api.github.com/users/KobaKhit/following{/other_user}",
            "gists_url": "https://api.github.com/users/KobaKhit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KobaKhit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KobaKhit/subscriptions",
            "organizations_url": "https://api.github.com/users/KobaKhit/orgs",
            "repos_url": "https://api.github.com/users/KobaKhit/repos",
            "events_url": "https://api.github.com/users/KobaKhit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KobaKhit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-26T00:45:40Z",
        "updated_at": "2014-08-26T00:45:48Z",
        "author_association": "NONE",
        "body": "How come this is not yet implemented?! Here is a nice [solution](http://stackoverflow.com/questions/11060604/filter-for-multiple-discrete-values-in-crossfilter/20352385#20352385) in the meantime.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/53735514",
        "html_url": "https://github.com/square/crossfilter/issues/123#issuecomment-53735514",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/123",
        "id": 53735514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzM1NTE0",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-28T15:19:26Z",
        "updated_at": "2014-08-28T15:19:26Z",
        "author_association": "COLLABORATOR",
        "body": "Duplicate of #75.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/53736039",
        "html_url": "https://github.com/square/crossfilter/issues/123#issuecomment-53736039",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/123",
        "id": 53736039,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzM2MDM5",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-08-28T15:22:43Z",
        "updated_at": "2014-08-28T15:22:43Z",
        "author_association": "COLLABORATOR",
        "body": "(deleted my comment since @jasondavies already pointed at an equivalent ticket)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54882366",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54882366",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54882366,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODgyMzY2",
        "user": {
            "login": "amergin",
            "id": 1969229,
            "node_id": "MDQ6VXNlcjE5NjkyMjk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1969229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amergin",
            "html_url": "https://github.com/amergin",
            "followers_url": "https://api.github.com/users/amergin/followers",
            "following_url": "https://api.github.com/users/amergin/following{/other_user}",
            "gists_url": "https://api.github.com/users/amergin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amergin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amergin/subscriptions",
            "organizations_url": "https://api.github.com/users/amergin/orgs",
            "repos_url": "https://api.github.com/users/amergin/repos",
            "events_url": "https://api.github.com/users/amergin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amergin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-08T20:31:31Z",
        "updated_at": "2014-09-08T20:31:31Z",
        "author_association": "NONE",
        "body": "@esjewett - excellent commit! I'm trying out your fork in a dc.js / crossfilter application and haven't seen any issues with this. When can we expect similar feature to be incorporated to crossfilter.js?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54883013",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54883013",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54883013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODgzMDEz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-08T20:36:26Z",
        "updated_at": "2014-09-08T20:36:26Z",
        "author_association": "COLLABORATOR",
        "body": "As I mentioned above, I\u2019d prefer a more general solution; at the moment Crossfilter only allows one set of filters to be active at a time, so adding a separate filter argument for removal alone feels inconsistent.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54968955",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54968955",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54968955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY4OTU1",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-09T13:33:15Z",
        "updated_at": "2014-09-09T13:33:15Z",
        "author_association": "NONE",
        "body": "@jasondavies I definitely hear you, and I think that the more general solution you describe could be really good - I just didn't have time to work on defining it at the moment. I'd still like to get to that. I just wanted to clarify that the change I made in the fork doesn't add another filter argument, unless I'm misunderstanding what that is, but rather removes records regardless of the filter currently in place.\n\nIt seems to me that this fits a lot of use cases (see below) better than the creation of a new filter, and perhaps even a new dimension to drive the removal of a small number of records. Personally, I'd see it as complementary to a more general solution around filtering. However, I may very well be miscalculating some of the performance impacts of what I'm doing :-) As mentioned above, I'm not super-familiar with the Crossfilter internals.\n\nSome scenarios:\n- removing a small number of records\n- removing data that is pushed \"off the end\" in a streaming data scenario\n- in-place updates to drive multi-dimensional exploration of data sets too large for the browser (the use case driving my exploration here)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54969258",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54969258",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54969258,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY5MjU4",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-09T13:35:36Z",
        "updated_at": "2014-09-09T13:35:36Z",
        "author_association": "NONE",
        "body": "@amergin I'd recommend sticking with the standard Crossfilter rather than my exploratory fork where possible. Currently in [Palladio](http://hdlab.stanford.edu/projects/palladio/) we are using a private fork of Crossfilter with a couple of tweaks but will be switching back to the standard Crossfilter soon. It's a really solid library, and it's just so much easier not to have to worry about maintaining a change to it.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54970599",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54970599",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54970599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTcwNTk5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-09T13:44:56Z",
        "updated_at": "2014-09-09T13:44:56Z",
        "author_association": "COLLABORATOR",
        "body": "I think we\u2019re talking about the same thing. :)  I wrote:\n\n> adding a separate filter argument for removal alone feels inconsistent.\n\nBy \u201cfilter argument\u201d, I\u2019m referring to your \u201ctest function\u201d, i.e. `.remove(filterFunction)`.  I\u2019m not disputing the usefulness of this, but I would prefer a more general solution as it would be more powerful and elegant.  The indexed filter types (filterExact and filterRange) are also much faster than filterFunction, though admittedly this isn\u2019t really important for removal of records.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/54972937",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-54972937",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 54972937,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTcyOTM3",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-09T14:00:58Z",
        "updated_at": "2014-09-09T14:00:58Z",
        "author_association": "NONE",
        "body": "Fair enough.\n\nWRT to the more general solution, I was thinking of creating an optional 'filterSet' concept. Filters would, by default, belong to a default filterSet, but all functions based on filters could take an optional (n+1)th argument. So, dimension.filterExact(value, [filterSet]), dimension.filterAll([filterSet]), dimension.top(number, [filterSet]), group.all([filterSet]), crossfilter.remove([filterSet]). There would also need to be utility functions to create new named filterSets based on the union & intersection of existing filterSets. This would leave the existing API completely unchanged, but would require keeping track of a map of named filterSets, maintaining a separate filter array for each filterSet, and maintaining (and calculating) additional group values for each filterSet. Thoughts? Am I missing something? I was planning to get into implementing this later this year, but might as well start bouncing the idea around now, I guess.\n\nI think this would leave an open question as to whether to allow crossfilter.remove([filterFunction]). The question being if it allows a significant efficiency gain over scenarios where a new dimension and/or filterSet would need to be created to drive removal of records, and then subsequently destroyed.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55110806",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-55110806",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 55110806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTEwODA2",
        "user": {
            "login": "lord-xeon",
            "id": 1500115,
            "node_id": "MDQ6VXNlcjE1MDAxMTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1500115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lord-xeon",
            "html_url": "https://github.com/lord-xeon",
            "followers_url": "https://api.github.com/users/lord-xeon/followers",
            "following_url": "https://api.github.com/users/lord-xeon/following{/other_user}",
            "gists_url": "https://api.github.com/users/lord-xeon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lord-xeon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lord-xeon/subscriptions",
            "organizations_url": "https://api.github.com/users/lord-xeon/orgs",
            "repos_url": "https://api.github.com/users/lord-xeon/repos",
            "events_url": "https://api.github.com/users/lord-xeon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lord-xeon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-10T12:58:30Z",
        "updated_at": "2014-09-10T12:58:30Z",
        "author_association": "NONE",
        "body": "@reedspool \nI tried the shim config, and I keep getting \"not-a-module\" using the hacked together dojo version of require.js\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55162443",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-55162443",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 55162443,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTYyNDQz",
        "user": {
            "login": "reedspool",
            "id": 602877,
            "node_id": "MDQ6VXNlcjYwMjg3Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/602877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reedspool",
            "html_url": "https://github.com/reedspool",
            "followers_url": "https://api.github.com/users/reedspool/followers",
            "following_url": "https://api.github.com/users/reedspool/following{/other_user}",
            "gists_url": "https://api.github.com/users/reedspool/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reedspool/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reedspool/subscriptions",
            "organizations_url": "https://api.github.com/users/reedspool/orgs",
            "repos_url": "https://api.github.com/users/reedspool/repos",
            "events_url": "https://api.github.com/users/reedspool/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reedspool/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-10T18:40:52Z",
        "updated_at": "2014-09-10T18:40:52Z",
        "author_association": "NONE",
        "body": "@lord-xeon I'm sorry that's happening. I am not familiar with dojo, but perhaps their version of require.js is older than the shim? I don't know what version shims came around, but I am sure they were not always part of the spec.\n\nAre you able to use other, sure-fire shims? Underscore.js is commonly shim'd like this, for example.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55286961",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-55286961",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 55286961,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mjg2OTYx",
        "user": {
            "login": "lord-xeon",
            "id": 1500115,
            "node_id": "MDQ6VXNlcjE1MDAxMTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1500115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lord-xeon",
            "html_url": "https://github.com/lord-xeon",
            "followers_url": "https://api.github.com/users/lord-xeon/followers",
            "following_url": "https://api.github.com/users/lord-xeon/following{/other_user}",
            "gists_url": "https://api.github.com/users/lord-xeon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lord-xeon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lord-xeon/subscriptions",
            "organizations_url": "https://api.github.com/users/lord-xeon/orgs",
            "repos_url": "https://api.github.com/users/lord-xeon/repos",
            "events_url": "https://api.github.com/users/lord-xeon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lord-xeon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-11T16:06:50Z",
        "updated_at": "2014-09-11T16:06:50Z",
        "author_association": "NONE",
        "body": "Yes, other shims work, such as d3.\n\ndojo uses their own custom version of require.js which makes it just about impossible to use any \"AMD ready\" plugin I would like (moment.js, Pnotify, etc.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55383869",
        "html_url": "https://github.com/square/crossfilter/pull/124#issuecomment-55383869",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/124",
        "id": 55383869,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzgzODY5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-12T10:09:26Z",
        "updated_at": "2014-09-12T10:09:26Z",
        "author_association": "COLLABORATOR",
        "body": "Hello!  Thanks for the contribution.  However, I\u2019m afraid this is a duplicate of existing requests for the same feature: #113, #115, and related #102.  We\u2019ve taken the decision not to extend the API to support this, as we\u2019d prefer to keep it simple.  As noted in these tickets, it\u2019s possible to have a tiny helper function that unpacks an object and makes the appropriate reduce call, if that\u2019s something that you really need.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55427361",
        "html_url": "https://github.com/square/crossfilter/pull/124#issuecomment-55427361",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/124",
        "id": 55427361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDI3MzYx",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-12T16:29:06Z",
        "updated_at": "2014-09-12T16:29:06Z",
        "author_association": "NONE",
        "body": "@wssbck, you might look at the way Ethan Jewett's reductio library does this: by generating the helper function @jasondavies mentions.  https://github.com/esjewett/reductio\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55522643",
        "html_url": "https://github.com/square/crossfilter/pull/124#issuecomment-55522643",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/124",
        "id": 55522643,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTIyNjQz",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-14T11:22:15Z",
        "updated_at": "2014-09-14T11:22:15Z",
        "author_association": "NONE",
        "body": "OK, thanks for the tips, at first I will just focus on implementing as many reduction functions as possible.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55580709",
        "html_url": "https://github.com/square/crossfilter/issues/126#issuecomment-55580709",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/126",
        "id": 55580709,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTgwNzA5",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-15T11:58:16Z",
        "updated_at": "2014-09-15T11:58:16Z",
        "author_association": "COLLABORATOR",
        "body": "I think the main limitation of crossfilter at the moment is the types of queries it supports.  Essentially, you can only do `A & B & C & \u2026` where A, B, C etc. are range queries on distinct ordered dimensions.  It was developed primarily for fast interactive filtering of this specific type of query.  The possibility of generalisation _has_ been discussed elsewhere, and I will work on it when I have time (!), but I\u2019m not sure if there\u2019s really any advantage to adding a high-level query engine at the moment when the low-level primitives are somewhat limited.\n\nI\u2019m closing as this issue isn\u2019t specifically a bug or feature request for Crossfilter itself (though it is another use case for making the low-level primitives more powerful).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55670658",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-55670658",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 55670658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjcwNjU4",
        "user": {
            "login": "TomNeyland",
            "id": 4574112,
            "node_id": "MDQ6VXNlcjQ1NzQxMTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4574112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomNeyland",
            "html_url": "https://github.com/TomNeyland",
            "followers_url": "https://api.github.com/users/TomNeyland/followers",
            "following_url": "https://api.github.com/users/TomNeyland/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomNeyland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomNeyland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomNeyland/subscriptions",
            "organizations_url": "https://api.github.com/users/TomNeyland/orgs",
            "repos_url": "https://api.github.com/users/TomNeyland/repos",
            "events_url": "https://api.github.com/users/TomNeyland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomNeyland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-15T22:47:03Z",
        "updated_at": "2014-09-15T22:47:03Z",
        "author_association": "NONE",
        "body": "@jasondavies @mbostock Can you chime in on how you feel about this? I'd be willing to put together a pull request if this feature sounds good to you.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55679641",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-55679641",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 55679641,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1Njc5NjQx",
        "user": {
            "login": "Rodeoclash",
            "id": 63807,
            "node_id": "MDQ6VXNlcjYzODA3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/63807?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rodeoclash",
            "html_url": "https://github.com/Rodeoclash",
            "followers_url": "https://api.github.com/users/Rodeoclash/followers",
            "following_url": "https://api.github.com/users/Rodeoclash/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rodeoclash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rodeoclash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rodeoclash/subscriptions",
            "organizations_url": "https://api.github.com/users/Rodeoclash/orgs",
            "repos_url": "https://api.github.com/users/Rodeoclash/repos",
            "events_url": "https://api.github.com/users/Rodeoclash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rodeoclash/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-16T00:29:03Z",
        "updated_at": "2014-09-16T00:29:03Z",
        "author_association": "NONE",
        "body": "I don't have a requirement for this anymore so perhaps it was an anti-pattern in my implementation of Crossfilter.\n\nShould I vote a -1? ;)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55744022",
        "html_url": "https://github.com/square/crossfilter/issues/126#issuecomment-55744022",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/126",
        "id": 55744022,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzQ0MDIy",
        "user": {
            "login": "mehdi-cit",
            "id": 2162107,
            "node_id": "MDQ6VXNlcjIxNjIxMDc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2162107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mehdi-cit",
            "html_url": "https://github.com/mehdi-cit",
            "followers_url": "https://api.github.com/users/mehdi-cit/followers",
            "following_url": "https://api.github.com/users/mehdi-cit/following{/other_user}",
            "gists_url": "https://api.github.com/users/mehdi-cit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mehdi-cit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mehdi-cit/subscriptions",
            "organizations_url": "https://api.github.com/users/mehdi-cit/orgs",
            "repos_url": "https://api.github.com/users/mehdi-cit/repos",
            "events_url": "https://api.github.com/users/mehdi-cit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mehdi-cit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-16T13:44:42Z",
        "updated_at": "2014-09-16T13:44:42Z",
        "author_association": "NONE",
        "body": "Thanks Jason!\nI think I get it now, you can have an OR between values of a dimension but the query operator between dimensions themselves is implicitly an AND.\nIndeed, there's no point in building on top of crossfilter as of yet.\nCheers~\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55744780",
        "html_url": "https://github.com/square/crossfilter/issues/126#issuecomment-55744780",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/126",
        "id": 55744780,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzQ0Nzgw",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-16T13:49:15Z",
        "updated_at": "2014-09-16T13:49:15Z",
        "author_association": "NONE",
        "body": "You might look at PourOver for more general boolean operations - my understanding is that the performance is nothing like crossfilter but it's more general.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/55780067",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-55780067",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 55780067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzgwMDY3",
        "user": {
            "login": "TomNeyland",
            "id": 4574112,
            "node_id": "MDQ6VXNlcjQ1NzQxMTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4574112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomNeyland",
            "html_url": "https://github.com/TomNeyland",
            "followers_url": "https://api.github.com/users/TomNeyland/followers",
            "following_url": "https://api.github.com/users/TomNeyland/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomNeyland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomNeyland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomNeyland/subscriptions",
            "organizations_url": "https://api.github.com/users/TomNeyland/orgs",
            "repos_url": "https://api.github.com/users/TomNeyland/repos",
            "events_url": "https://api.github.com/users/TomNeyland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomNeyland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-16T17:28:38Z",
        "updated_at": "2014-09-16T17:28:38Z",
        "author_association": "NONE",
        "body": "@Rodeoclash It's certainly not an anti-pattern? I mean I don't know what you were doing personally but there is nothing fishy with reporting back the current state of the filter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56639375",
        "html_url": "https://github.com/square/crossfilter/pull/127#issuecomment-56639375",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/127",
        "id": 56639375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjM5Mzc1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-24T08:25:36Z",
        "updated_at": "2014-09-24T08:25:36Z",
        "author_association": "COLLABORATOR",
        "body": "Good catch, thanks.  Have you signed the [CLA](https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1)?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56681811",
        "html_url": "https://github.com/square/crossfilter/pull/127#issuecomment-56681811",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/127",
        "id": 56681811,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgxODEx",
        "user": {
            "login": "sAlexander",
            "id": 20961,
            "node_id": "MDQ6VXNlcjIwOTYx",
            "avatar_url": "https://avatars2.githubusercontent.com/u/20961?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sAlexander",
            "html_url": "https://github.com/sAlexander",
            "followers_url": "https://api.github.com/users/sAlexander/followers",
            "following_url": "https://api.github.com/users/sAlexander/following{/other_user}",
            "gists_url": "https://api.github.com/users/sAlexander/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sAlexander/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sAlexander/subscriptions",
            "organizations_url": "https://api.github.com/users/sAlexander/orgs",
            "repos_url": "https://api.github.com/users/sAlexander/repos",
            "events_url": "https://api.github.com/users/sAlexander/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sAlexander/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-24T14:52:22Z",
        "updated_at": "2014-09-24T14:52:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hey Jason, I signed it yesterday.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56888812",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-56888812",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 56888812,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODg4ODEy",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-25T21:43:44Z",
        "updated_at": "2014-09-25T21:43:44Z",
        "author_association": "NONE",
        "body": "Has there been any more traction on this?  We are in love with crossfilter, but would like the ability for 32 + dimensions.  I realize this would come with performance hits, but all in all, if someone really wants to have that many dimension open, and filtering on those dimensions, I'm sure they would understand that performance will be affected.\n\nIs @sciyoshi 's PR functional? Has anyone tested it as of late?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56919060",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-56919060",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 56919060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTE5MDYw",
        "user": {
            "login": "sciyoshi",
            "id": 39950,
            "node_id": "MDQ6VXNlcjM5OTUw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciyoshi",
            "html_url": "https://github.com/sciyoshi",
            "followers_url": "https://api.github.com/users/sciyoshi/followers",
            "following_url": "https://api.github.com/users/sciyoshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciyoshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciyoshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciyoshi/subscriptions",
            "organizations_url": "https://api.github.com/users/sciyoshi/orgs",
            "repos_url": "https://api.github.com/users/sciyoshi/repos",
            "events_url": "https://api.github.com/users/sciyoshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciyoshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T04:49:52Z",
        "updated_at": "2014-09-26T04:49:52Z",
        "author_association": "NONE",
        "body": "@tannerlinsley I've updated the patch to work against the latest master. All the tests are passing, but if @optimuspaul can give a reproducible test case for that issue I can look into it again. It probably needs a bit more testing before it can be merged though.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56971725",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-56971725",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 56971725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTcxNzI1",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T14:50:30Z",
        "updated_at": "2014-09-26T14:50:30Z",
        "author_association": "NONE",
        "body": "This specific issue I had, was I was able to build more than 32 dimensions at one time, and that's great but as soon as I started filtering on those dimensions the add and remove functions for grouping were in accurate\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56974676",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-56974676",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 56974676,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTc0Njc2",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T15:10:32Z",
        "updated_at": "2014-09-26T15:10:32Z",
        "author_association": "NONE",
        "body": "I will try and get a test case up soon. The issue I was seeing is some dimensions would get very wrong counts on them, sometimes counts larger than the total number of records.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/56990936",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-56990936",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 56990936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTkwOTM2",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T17:12:28Z",
        "updated_at": "2014-09-26T17:12:28Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks all for reviving this issue. I'm following along but don't have much bandwidth to contribute personally.\n\nI'm happy to review/merge/publish (ideally with +1 from Jason or Mike) once failing tests are provided and addressed. It's probably our most common feature request, and 5% slowdown for 1M items seems worth it if we can verify that on today's common browsers.\n\nThanks again!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57006561",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-57006561",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 57006561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDA2NTYx",
        "user": {
            "login": "optimuspaul",
            "id": 1088506,
            "node_id": "MDQ6VXNlcjEwODg1MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1088506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/optimuspaul",
            "html_url": "https://github.com/optimuspaul",
            "followers_url": "https://api.github.com/users/optimuspaul/followers",
            "following_url": "https://api.github.com/users/optimuspaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/optimuspaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/optimuspaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/optimuspaul/subscriptions",
            "organizations_url": "https://api.github.com/users/optimuspaul/orgs",
            "repos_url": "https://api.github.com/users/optimuspaul/repos",
            "events_url": "https://api.github.com/users/optimuspaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/optimuspaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T19:06:11Z",
        "updated_at": "2014-09-26T19:06:11Z",
        "author_association": "NONE",
        "body": "I am unable to reproduce with a more limited dataset. I don't have access to the data I was using when I saw the problem before. It's possible it was not related to this.  If others are not having issues I don't see any reason to block this from going out.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57010067",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-57010067",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 57010067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDEwMDY3",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T19:36:50Z",
        "updated_at": "2014-09-26T19:36:50Z",
        "author_association": "NONE",
        "body": "Could i get a href to the latest patch? I think I was using an older version on my test \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57010761",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-57010761",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 57010761,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDEwNzYx",
        "user": {
            "login": "sciyoshi",
            "id": 39950,
            "node_id": "MDQ6VXNlcjM5OTUw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciyoshi",
            "html_url": "https://github.com/sciyoshi",
            "followers_url": "https://api.github.com/users/sciyoshi/followers",
            "following_url": "https://api.github.com/users/sciyoshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciyoshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciyoshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciyoshi/subscriptions",
            "organizations_url": "https://api.github.com/users/sciyoshi/orgs",
            "repos_url": "https://api.github.com/users/sciyoshi/repos",
            "events_url": "https://api.github.com/users/sciyoshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciyoshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-26T19:43:19Z",
        "updated_at": "2014-09-26T19:43:19Z",
        "author_association": "NONE",
        "body": "There are still some outstanding issues that I'm aware of - I'll be pushing\na fix with some tests shortly.\nOn Sep 26, 2014 3:36 PM, \"Tanner Linsley\" notifications@github.com wrote:\n\n> Could i get a href to the latest patch? I think I was using an older\n> version on my test\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/pull/75#issuecomment-57010067.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57299292",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-57299292",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 57299292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjk5Mjky",
        "user": {
            "login": "dgerber",
            "id": 393344,
            "node_id": "MDQ6VXNlcjM5MzM0NA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/393344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dgerber",
            "html_url": "https://github.com/dgerber",
            "followers_url": "https://api.github.com/users/dgerber/followers",
            "following_url": "https://api.github.com/users/dgerber/following{/other_user}",
            "gists_url": "https://api.github.com/users/dgerber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dgerber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dgerber/subscriptions",
            "organizations_url": "https://api.github.com/users/dgerber/orgs",
            "repos_url": "https://api.github.com/users/dgerber/repos",
            "events_url": "https://api.github.com/users/dgerber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dgerber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-09-30T11:24:38Z",
        "updated_at": "2014-10-04T09:13:38Z",
        "author_association": "NONE",
        "body": "@jezekjan this makes `filterFunction(f)` evaluate `f` once per unique dimension value. (It still loops over all records, though.)\n\n``` diff\n@@ -821,11 +821,13 @@ function crossfilter() {\n       var i,\n           k,\n           x,\n+          v = values.length && values[0];\n           added = [],\n           removed = [];\n\n       for (i = 0; i < n; ++i) {\n-        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n+        if (values[i] !== v) x = f((v = values[i]), i);\n+        if (!(filters[k = index[i]] & one) ^ !!x) {\n           if (x) filters[k] &= zero, added.push(k);\n           else filters[k] |= one, removed.push(k);\n         }\n```\n\nupdated after #129\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57751900",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-57751900",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 57751900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzUxOTAw",
        "user": {
            "login": "sciyoshi",
            "id": 39950,
            "node_id": "MDQ6VXNlcjM5OTUw",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciyoshi",
            "html_url": "https://github.com/sciyoshi",
            "followers_url": "https://api.github.com/users/sciyoshi/followers",
            "following_url": "https://api.github.com/users/sciyoshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciyoshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciyoshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciyoshi/subscriptions",
            "organizations_url": "https://api.github.com/users/sciyoshi/orgs",
            "repos_url": "https://api.github.com/users/sciyoshi/repos",
            "events_url": "https://api.github.com/users/sciyoshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciyoshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-03T05:03:16Z",
        "updated_at": "2014-10-03T05:03:16Z",
        "author_association": "NONE",
        "body": "The latest commit includes fixes for a couple of glaring issues, along with previously-failing tests for filtering with more dimensions. At this point, it should be ready for more rigorous testing if anyone is interested in getting this merged.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/57800942",
        "html_url": "https://github.com/square/crossfilter/issues/129#issuecomment-57800942",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/129",
        "id": 57800942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODAwOTQy",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-03T14:10:03Z",
        "updated_at": "2014-10-03T14:10:03Z",
        "author_association": "COLLABORATOR",
        "body": "Good catch.  I have a fix and I\u2019m just working on a test case now.  Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/58987687",
        "html_url": "https://github.com/square/crossfilter/issues/131#issuecomment-58987687",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/131",
        "id": 58987687,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTg3Njg3",
        "user": {
            "login": "justinwp",
            "id": 3392975,
            "node_id": "MDQ6VXNlcjMzOTI5NzU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3392975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinwp",
            "html_url": "https://github.com/justinwp",
            "followers_url": "https://api.github.com/users/justinwp/followers",
            "following_url": "https://api.github.com/users/justinwp/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinwp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinwp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinwp/subscriptions",
            "organizations_url": "https://api.github.com/users/justinwp/orgs",
            "repos_url": "https://api.github.com/users/justinwp/repos",
            "events_url": "https://api.github.com/users/justinwp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinwp/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-14T04:04:12Z",
        "updated_at": "2014-10-14T04:07:02Z",
        "author_association": "NONE",
        "body": "You need to clear your filter after remove(). It is still active.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/58988002",
        "html_url": "https://github.com/square/crossfilter/issues/131#issuecomment-58988002",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/131",
        "id": 58988002,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTg4MDAy",
        "user": {
            "login": "madebydna",
            "id": 30317,
            "node_id": "MDQ6VXNlcjMwMzE3",
            "avatar_url": "https://avatars3.githubusercontent.com/u/30317?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madebydna",
            "html_url": "https://github.com/madebydna",
            "followers_url": "https://api.github.com/users/madebydna/followers",
            "following_url": "https://api.github.com/users/madebydna/following{/other_user}",
            "gists_url": "https://api.github.com/users/madebydna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madebydna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madebydna/subscriptions",
            "organizations_url": "https://api.github.com/users/madebydna/orgs",
            "repos_url": "https://api.github.com/users/madebydna/repos",
            "events_url": "https://api.github.com/users/madebydna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madebydna/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-14T04:10:32Z",
        "updated_at": "2014-10-14T04:11:38Z",
        "author_association": "NONE",
        "body": "Oh, ok. I added `foo.filter(null)` after the remove and now everything works as expected. Sorry!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59497369",
        "html_url": "https://github.com/square/crossfilter/issues/132#issuecomment-59497369",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/132",
        "id": 59497369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDk3MzY5",
        "user": {
            "login": "unwiredbrain",
            "id": 66809,
            "node_id": "MDQ6VXNlcjY2ODA5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/66809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unwiredbrain",
            "html_url": "https://github.com/unwiredbrain",
            "followers_url": "https://api.github.com/users/unwiredbrain/followers",
            "following_url": "https://api.github.com/users/unwiredbrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/unwiredbrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unwiredbrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unwiredbrain/subscriptions",
            "organizations_url": "https://api.github.com/users/unwiredbrain/orgs",
            "repos_url": "https://api.github.com/users/unwiredbrain/repos",
            "events_url": "https://api.github.com/users/unwiredbrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unwiredbrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T10:57:19Z",
        "updated_at": "2014-10-17T10:57:19Z",
        "author_association": "NONE",
        "body": "I'm not sure whether this is strictly Crossfilter-related, but you can get away with it with a couple of higher-order functions:\n\n``` js\nvar data = [\n  ['ABC', 'ABCD', 'ABCDEF', 'abcd', 'a', 'Abcdef', 'Abcderfg', 'A', 'ABC'],\n  ['ABCD', 'ABC', 'ABCDEF', 'abc', 'AB', 'Abcdef', 'abcd', 'ABC', 'ABC'],\n  ['Abcderfg', 'ABC', 'ABCDEFGH', 'abc', 'A', 'ABCDEF', 'abcd', 'AB', 'ABC'],\n  [],\n  [''],\n  ['', 'A'],\n  ['AA', ''],\n  ['ABC', 'AB'],\n  ['ABCDE', '', 'ABCD']\n];\n\nvar max = data.map(function (record) {\n  return record.reduce(function (previous, current) {\n    return Math.max(previous, current.length);\n  }, 0);\n});\n\nconsole.log(max); // Outputs [8, 6, 8, 0, 0, 1, 2, 3, 5]\n```\n\nBeware that this approach is not 100% foolproof as by \"just\" looking at the `length` property you may get [unexpected results](https://mathiasbynens.be/notes/javascript-unicode).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59501636",
        "html_url": "https://github.com/square/crossfilter/issues/132#issuecomment-59501636",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/132",
        "id": 59501636,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTAxNjM2",
        "user": {
            "login": "puppeteer701",
            "id": 616192,
            "node_id": "MDQ6VXNlcjYxNjE5Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/616192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/puppeteer701",
            "html_url": "https://github.com/puppeteer701",
            "followers_url": "https://api.github.com/users/puppeteer701/followers",
            "following_url": "https://api.github.com/users/puppeteer701/following{/other_user}",
            "gists_url": "https://api.github.com/users/puppeteer701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/puppeteer701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/puppeteer701/subscriptions",
            "organizations_url": "https://api.github.com/users/puppeteer701/orgs",
            "repos_url": "https://api.github.com/users/puppeteer701/repos",
            "events_url": "https://api.github.com/users/puppeteer701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/puppeteer701/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T11:47:58Z",
        "updated_at": "2014-10-17T12:01:15Z",
        "author_association": "NONE",
        "body": "Yes but the list is really huge, and I thought you could do this with this library more efficient, or am I mistaken?\n\nAnd this is actually not what I wanted. Max represents the length of the word in the columns. \n\n```\n  var data = [\n    [\"1111\", \"44\"],\n    [\"222\", \"55555\"  ],\n    [\"33\", \"666\"  ],\n    ...\n ];\n\n\"1111\".length > \"222\".length > \"33\".length,\n\"55555\".length > \"666\".length > \"44\".length\n var max -> [4,5];\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59506340",
        "html_url": "https://github.com/square/crossfilter/issues/132#issuecomment-59506340",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/132",
        "id": 59506340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTA2MzQw",
        "user": {
            "login": "unwiredbrain",
            "id": 66809,
            "node_id": "MDQ6VXNlcjY2ODA5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/66809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unwiredbrain",
            "html_url": "https://github.com/unwiredbrain",
            "followers_url": "https://api.github.com/users/unwiredbrain/followers",
            "following_url": "https://api.github.com/users/unwiredbrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/unwiredbrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unwiredbrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unwiredbrain/subscriptions",
            "organizations_url": "https://api.github.com/users/unwiredbrain/orgs",
            "repos_url": "https://api.github.com/users/unwiredbrain/repos",
            "events_url": "https://api.github.com/users/unwiredbrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unwiredbrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T12:38:32Z",
        "updated_at": "2014-10-17T12:38:32Z",
        "author_association": "NONE",
        "body": "Oh, okay, I think I see what you mean: you're scanning \"vertically\" rather than \"horizontally,\" right?\nAnd you're assuming that all the rows in such a rectangular matrix have the exact same number of columns, correct?\n\nGotta say that I'm not fluent with Crossfilter so I'm not sure if I can be of any help.\n\nI would call `.dimension()` on each column you want to inspect\n\n``` js\nvar column0 = data.dimension(function (d) {\n  return d[0];\n});\n\nvar column1 = data.dimension(function (d) {\n  return d[1];\n});\n```\n\nthen apply some reduce function on each of them.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59506987",
        "html_url": "https://github.com/square/crossfilter/issues/132#issuecomment-59506987",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/132",
        "id": 59506987,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTA2OTg3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T12:44:25Z",
        "updated_at": "2014-10-17T12:44:25Z",
        "author_association": "COLLABORATOR",
        "body": "It sounds like @unwiredbrain has the right idea; you can create one dimension per column, and then use [dimension.top(1)](https://github.com/square/crossfilter/wiki/API-Reference#dimension_top) to retrieve each dimension\u2019s maximum value (while respecting filters applied to all dimensions).\n\nHowever, you\u2019ll want to grab the lengths:\n\n``` js\nvar column0 = data.dimension(function(d) { return d[0].length; });\n```\n\nCrossfilter is not magical (OK, well just a little!) -- this won\u2019t be faster than looping over all your values and finding the maxima once-only.  However, it will be much faster when filtering is involved, hence the name!\n\nGitHub is not really the best place to ask for support; the issues are meant for reporting bugs and feature requests. You can ask support questions using the [crossfilter tag on StackOverflow](http://stackoverflow.com/questions/tagged/crossfilter) instead.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59507187",
        "html_url": "https://github.com/square/crossfilter/issues/132#issuecomment-59507187",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/132",
        "id": 59507187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTA3MTg3",
        "user": {
            "login": "puppeteer701",
            "id": 616192,
            "node_id": "MDQ6VXNlcjYxNjE5Mg==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/616192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/puppeteer701",
            "html_url": "https://github.com/puppeteer701",
            "followers_url": "https://api.github.com/users/puppeteer701/followers",
            "following_url": "https://api.github.com/users/puppeteer701/following{/other_user}",
            "gists_url": "https://api.github.com/users/puppeteer701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/puppeteer701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/puppeteer701/subscriptions",
            "organizations_url": "https://api.github.com/users/puppeteer701/orgs",
            "repos_url": "https://api.github.com/users/puppeteer701/repos",
            "events_url": "https://api.github.com/users/puppeteer701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/puppeteer701/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-17T12:46:34Z",
        "updated_at": "2014-10-17T12:46:34Z",
        "author_association": "NONE",
        "body": "THX, will give it a try.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/59768368",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-59768368",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 59768368,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY4MzY4",
        "user": {
            "login": "desingraj",
            "id": 4374605,
            "node_id": "MDQ6VXNlcjQzNzQ2MDU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4374605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/desingraj",
            "html_url": "https://github.com/desingraj",
            "followers_url": "https://api.github.com/users/desingraj/followers",
            "following_url": "https://api.github.com/users/desingraj/following{/other_user}",
            "gists_url": "https://api.github.com/users/desingraj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/desingraj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/desingraj/subscriptions",
            "organizations_url": "https://api.github.com/users/desingraj/orgs",
            "repos_url": "https://api.github.com/users/desingraj/repos",
            "events_url": "https://api.github.com/users/desingraj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/desingraj/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-10-20T14:42:56Z",
        "updated_at": "2014-10-20T14:43:38Z",
        "author_association": "NONE",
        "body": "I used the very new version in my project, which is having more than 32 dimensions. I cant play with cross-filter if the dimension count exceeds 32. \n\nAny solutions on this. I need to  have more dimensions.\n\nThanks in advance.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/63788483",
        "html_url": "https://github.com/square/crossfilter/issues/133#issuecomment-63788483",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/133",
        "id": 63788483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzg4NDgz",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-20T10:27:36Z",
        "updated_at": "2014-11-20T10:27:36Z",
        "author_association": "COLLABORATOR",
        "body": "This is [documented](https://github.com/square/crossfilter/wiki/API-Reference#dimension) behaviour: incomparable values such as `undefined` and `NaN` are not supported and will cause problems.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/64116005",
        "html_url": "https://github.com/square/crossfilter/issues/134#issuecomment-64116005",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/134",
        "id": 64116005,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTE2MDA1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-23T12:20:03Z",
        "updated_at": "2014-11-23T12:20:03Z",
        "author_association": "COLLABORATOR",
        "body": "Further information is required to reproduce and diagnose the issue:\n- What kind of data are you sorting?  Does it contain incomparable (`NaN` or `undefined`) or mixed types (these are not supported)?\n- Some example code would be helpful.\n\nFeel free to reopen with this information.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/64124751",
        "html_url": "https://github.com/square/crossfilter/issues/116#issuecomment-64124751",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/116",
        "id": 64124751,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTI0NzUx",
        "user": {
            "login": "arunsoman",
            "id": 1702420,
            "node_id": "MDQ6VXNlcjE3MDI0MjA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1702420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arunsoman",
            "html_url": "https://github.com/arunsoman",
            "followers_url": "https://api.github.com/users/arunsoman/followers",
            "following_url": "https://api.github.com/users/arunsoman/following{/other_user}",
            "gists_url": "https://api.github.com/users/arunsoman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arunsoman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arunsoman/subscriptions",
            "organizations_url": "https://api.github.com/users/arunsoman/orgs",
            "repos_url": "https://api.github.com/users/arunsoman/repos",
            "events_url": "https://api.github.com/users/arunsoman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arunsoman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-11-23T16:53:45Z",
        "updated_at": "2014-11-23T16:53:45Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/65627219",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-65627219",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 65627219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjI3MjE5",
        "user": {
            "login": "pedroteixeira",
            "id": 14740,
            "node_id": "MDQ6VXNlcjE0NzQw",
            "avatar_url": "https://avatars3.githubusercontent.com/u/14740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pedroteixeira",
            "html_url": "https://github.com/pedroteixeira",
            "followers_url": "https://api.github.com/users/pedroteixeira/followers",
            "following_url": "https://api.github.com/users/pedroteixeira/following{/other_user}",
            "gists_url": "https://api.github.com/users/pedroteixeira/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pedroteixeira/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pedroteixeira/subscriptions",
            "organizations_url": "https://api.github.com/users/pedroteixeira/orgs",
            "repos_url": "https://api.github.com/users/pedroteixeira/repos",
            "events_url": "https://api.github.com/users/pedroteixeira/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pedroteixeira/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-04T12:50:52Z",
        "updated_at": "2014-12-04T12:51:02Z",
        "author_association": "NONE",
        "body": "Is there any way to all filtered values, but mantaining original data order?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/65733771",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-65733771",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 65733771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzMzNzcx",
        "user": {
            "login": "brandones",
            "id": 1031876,
            "node_id": "MDQ6VXNlcjEwMzE4NzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1031876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandones",
            "html_url": "https://github.com/brandones",
            "followers_url": "https://api.github.com/users/brandones/followers",
            "following_url": "https://api.github.com/users/brandones/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandones/subscriptions",
            "organizations_url": "https://api.github.com/users/brandones/orgs",
            "repos_url": "https://api.github.com/users/brandones/repos",
            "events_url": "https://api.github.com/users/brandones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-05T01:21:39Z",
        "updated_at": "2014-12-05T01:21:39Z",
        "author_association": "NONE",
        "body": "Why isn't statesAvgGroup overwritten by the subsequent declarations?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/65782292",
        "html_url": "https://github.com/square/crossfilter/issues/135#issuecomment-65782292",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/135",
        "id": 65782292,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzgyMjky",
        "user": {
            "login": "awjreynolds",
            "id": 1948692,
            "node_id": "MDQ6VXNlcjE5NDg2OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1948692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/awjreynolds",
            "html_url": "https://github.com/awjreynolds",
            "followers_url": "https://api.github.com/users/awjreynolds/followers",
            "following_url": "https://api.github.com/users/awjreynolds/following{/other_user}",
            "gists_url": "https://api.github.com/users/awjreynolds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/awjreynolds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/awjreynolds/subscriptions",
            "organizations_url": "https://api.github.com/users/awjreynolds/orgs",
            "repos_url": "https://api.github.com/users/awjreynolds/repos",
            "events_url": "https://api.github.com/users/awjreynolds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/awjreynolds/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-05T12:13:29Z",
        "updated_at": "2014-12-05T12:13:29Z",
        "author_association": "NONE",
        "body": "My gut feel is that this is more of a stackoverflow question and feels more like a statement than a question. Crossfilter gives you good map/reduce functionality within javascript. However it has limitations ( suggest working with less than 300k data points). Yes it does lend itself to D3 and one library built on top of it (dc.js) specifically brings crossfrilter and d3 together in a very very good way. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/65788415",
        "html_url": "https://github.com/square/crossfilter/issues/135#issuecomment-65788415",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/135",
        "id": 65788415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1Nzg4NDE1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-05T13:18:59Z",
        "updated_at": "2014-12-05T13:18:59Z",
        "author_association": "COLLABORATOR",
        "body": "These GitHub issues are meant for reporting bugs and feature requests only. You can ask support questions using the [crossfilter tag on StackOverflow](http://stackoverflow.com/questions/tagged/crossfilter) instead.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/66366707",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-66366707",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 66366707,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzY2NzA3",
        "user": {
            "login": "amergin",
            "id": 1969229,
            "node_id": "MDQ6VXNlcjE5NjkyMjk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1969229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amergin",
            "html_url": "https://github.com/amergin",
            "followers_url": "https://api.github.com/users/amergin/followers",
            "following_url": "https://api.github.com/users/amergin/following{/other_user}",
            "gists_url": "https://api.github.com/users/amergin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amergin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amergin/subscriptions",
            "organizations_url": "https://api.github.com/users/amergin/orgs",
            "repos_url": "https://api.github.com/users/amergin/repos",
            "events_url": "https://api.github.com/users/amergin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amergin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-09T22:03:33Z",
        "updated_at": "2014-12-09T22:03:33Z",
        "author_association": "NONE",
        "body": "Any news/progress on this?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/68119898",
        "html_url": "https://github.com/square/crossfilter/pull/139#issuecomment-68119898",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/139",
        "id": 68119898,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTE5ODk4",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-26T02:57:45Z",
        "updated_at": "2014-12-26T02:57:45Z",
        "author_association": "NONE",
        "body": "Ref : #114\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/68474840",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-68474840",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 68474840,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDc0ODQw",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2014-12-31T23:27:59Z",
        "updated_at": "2014-12-31T23:27:59Z",
        "author_association": "NONE",
        "body": "Yes, we are incredibly interested in this functionality, specifically the `removeFilter` as implemented by @esjewett \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/68584039",
        "html_url": "https://github.com/square/crossfilter/issues/116#issuecomment-68584039",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/116",
        "id": 68584039,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTg0MDM5",
        "user": {
            "login": "amergin",
            "id": 1969229,
            "node_id": "MDQ6VXNlcjE5NjkyMjk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1969229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amergin",
            "html_url": "https://github.com/amergin",
            "followers_url": "https://api.github.com/users/amergin/followers",
            "following_url": "https://api.github.com/users/amergin/following{/other_user}",
            "gists_url": "https://api.github.com/users/amergin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amergin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amergin/subscriptions",
            "organizations_url": "https://api.github.com/users/amergin/orgs",
            "repos_url": "https://api.github.com/users/amergin/repos",
            "events_url": "https://api.github.com/users/amergin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amergin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-03T05:24:30Z",
        "updated_at": "2015-01-03T05:24:30Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/68620408",
        "html_url": "https://github.com/square/crossfilter/issues/116#issuecomment-68620408",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/116",
        "id": 68620408,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjIwNDA4",
        "user": {
            "login": "gazal-k",
            "id": 8210299,
            "node_id": "MDQ6VXNlcjgyMTAyOTk=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/8210299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gazal-k",
            "html_url": "https://github.com/gazal-k",
            "followers_url": "https://api.github.com/users/gazal-k/followers",
            "following_url": "https://api.github.com/users/gazal-k/following{/other_user}",
            "gists_url": "https://api.github.com/users/gazal-k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gazal-k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gazal-k/subscriptions",
            "organizations_url": "https://api.github.com/users/gazal-k/orgs",
            "repos_url": "https://api.github.com/users/gazal-k/repos",
            "events_url": "https://api.github.com/users/gazal-k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gazal-k/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-04T04:14:32Z",
        "updated_at": "2015-01-04T04:14:32Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/68816540",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-68816540",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 68816540,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODE2NTQw",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-06T02:16:34Z",
        "updated_at": "2015-01-06T02:16:34Z",
        "author_association": "NONE",
        "body": "I think the use case for `removeFilter` is much needed.  We need to be able to fluidly add and flush rows of data from a crossfilter with ease.  The add functionality is there, but a better option than removing what is currently filtered on is much needed.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69116513",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69116513",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69116513,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTE2NTEz",
        "user": {
            "login": "awjreynolds",
            "id": 1948692,
            "node_id": "MDQ6VXNlcjE5NDg2OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1948692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/awjreynolds",
            "html_url": "https://github.com/awjreynolds",
            "followers_url": "https://api.github.com/users/awjreynolds/followers",
            "following_url": "https://api.github.com/users/awjreynolds/following{/other_user}",
            "gists_url": "https://api.github.com/users/awjreynolds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/awjreynolds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/awjreynolds/subscriptions",
            "organizations_url": "https://api.github.com/users/awjreynolds/orgs",
            "repos_url": "https://api.github.com/users/awjreynolds/repos",
            "events_url": "https://api.github.com/users/awjreynolds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/awjreynolds/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T00:16:34Z",
        "updated_at": "2015-01-08T00:16:34Z",
        "author_association": "NONE",
        "body": "You're dimensions create selections. So those 3 match both filters you\ncreated on each dimension. The result is the cross section of each dimension\nOn 7 Jan 2015 23:46, \"jdarling\" notifications@github.com wrote:\n\n> Trying to use crossfilter where we need to filter data to create different\n> views of the same data set. As a simple example if I try and get a\n> dimension that represents data with durations and data with a direction of\n> inbound it doesn't work. Instead what I get is the same records in both\n> dimensions:\n> \n> Example source:\n> \n> var ndx = new crossfilter([\n>       {\n>         duration: 1,\n>         direction: 'inbound'\n>       },\n>       {\n>         duration: 1,\n>         direction: 'outbound'\n>       },\n>       {\n>         foo: 'bar'\n>       },\n>       {\n>         duration: 2,\n>         direction: 'inbound'\n>       },\n>       {\n>         duration: 3,\n>         direction: 'inbound'\n>       },\n>     ]);\n> \n> var durationFilter = ndx.dimension(function(d){\n>   return !!d.duration;\n> }).filter(true);\n> \n> var inboundFilter = ndx.dimension(function(d){\n>   return d.direction === 'inbound';\n> }).filter(true);\n> \n> console.log('all', ndx.size());\n> console.log('duration', durationFilter.top(Infinity).length);\n> console.log('inbound', inboundFilter.top(Infinity).length);\n> \n> Expected output:\n> \n> all: 5\n> duration: 4\n> inbound: 3\n> \n> Actual output:\n> \n> all: 5\n> duration: 3\n> inbound: 3\n> \n> What am I doing wrong?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/140.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69118134",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69118134",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69118134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTE4MTM0",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T00:34:24Z",
        "updated_at": "2015-01-08T00:34:24Z",
        "author_association": "NONE",
        "body": "Yeah I worded that way wrong.\n\nWhat I am trying to do is build a simple dashboard using dc.js that shows a view of logging data.  My data isn't completely consistent as it is coming from logs.\n\nThe goal is to have a chart of each inbound call by duration, then another chart of all of the outbound calls by duration.\n\nI'm guessing that some how I need to create a group that rejects the inbounds for the outbound view and one that rejects the outbounds for the inbound view.  But I can't seem to figure out how exactly to achieve that.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69141522",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69141522",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69141522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTQxNTIy",
        "user": {
            "login": "awjreynolds",
            "id": 1948692,
            "node_id": "MDQ6VXNlcjE5NDg2OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1948692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/awjreynolds",
            "html_url": "https://github.com/awjreynolds",
            "followers_url": "https://api.github.com/users/awjreynolds/followers",
            "following_url": "https://api.github.com/users/awjreynolds/following{/other_user}",
            "gists_url": "https://api.github.com/users/awjreynolds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/awjreynolds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/awjreynolds/subscriptions",
            "organizations_url": "https://api.github.com/users/awjreynolds/orgs",
            "repos_url": "https://api.github.com/users/awjreynolds/repos",
            "events_url": "https://api.github.com/users/awjreynolds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/awjreynolds/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T06:31:40Z",
        "updated_at": "2015-01-08T06:31:40Z",
        "author_association": "NONE",
        "body": "Create a fake group that only pushes values you want into it. Use this in\nthe chart.\n\nNot near my code so can't give you an example.\nOn 8 Jan 2015 00:34, \"jdarling\" notifications@github.com wrote:\n\n> Yeah I worded that way wrong.\n> \n> What I am trying to do is build a simple dashboard using dc.js that shows\n> a view of logging data. My data isn't completely consistent as it is coming\n> from logs.\n> \n> The goal is to have a chart of each inbound call by duration, then another\n> chart of all of the outbound calls by duration.\n> \n> I'm guessing that some how I need to create a group that rejects the\n> inbounds for the outbound view and one that rejects the outbounds for the\n> inbound view. But I can't seem to figure out how exactly to achieve that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/140#issuecomment-69118134.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69143608",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69143608",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69143608,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTQzNjA4",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T07:04:53Z",
        "updated_at": "2015-01-08T07:04:53Z",
        "author_association": "NONE",
        "body": "Been kinda banging my head on how to create that fake group and push values to it.  Will keep digging, but thanks for the hint :).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69145133",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69145133",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69145133,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTQ1MTMz",
        "user": {
            "login": "awjreynolds",
            "id": 1948692,
            "node_id": "MDQ6VXNlcjE5NDg2OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1948692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/awjreynolds",
            "html_url": "https://github.com/awjreynolds",
            "followers_url": "https://api.github.com/users/awjreynolds/followers",
            "following_url": "https://api.github.com/users/awjreynolds/following{/other_user}",
            "gists_url": "https://api.github.com/users/awjreynolds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/awjreynolds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/awjreynolds/subscriptions",
            "organizations_url": "https://api.github.com/users/awjreynolds/orgs",
            "repos_url": "https://api.github.com/users/awjreynolds/repos",
            "events_url": "https://api.github.com/users/awjreynolds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/awjreynolds/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T07:29:34Z",
        "updated_at": "2015-01-08T07:29:34Z",
        "author_association": "NONE",
        "body": "https://github.com/dc-js/dc.js/wiki/FAQ\n\nOn the page. Note I had to also create the top function. Creating just all\ncaused it to error.\nOn 8 Jan 2015 07:05, \"jdarling\" notifications@github.com wrote:\n\n> Been kinda banging my head on how to create that fake group and push\n> values to it. Will keep digging, but thanks for the hint :).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/140#issuecomment-69143608.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69223586",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69223586",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69223586,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIzNTg2",
        "user": {
            "login": "jdarling",
            "id": 1310311,
            "node_id": "MDQ6VXNlcjEzMTAzMTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1310311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdarling",
            "html_url": "https://github.com/jdarling",
            "followers_url": "https://api.github.com/users/jdarling/followers",
            "following_url": "https://api.github.com/users/jdarling/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdarling/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdarling/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdarling/subscriptions",
            "organizations_url": "https://api.github.com/users/jdarling/orgs",
            "repos_url": "https://api.github.com/users/jdarling/repos",
            "events_url": "https://api.github.com/users/jdarling/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdarling/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T18:20:23Z",
        "updated_at": "2015-01-08T18:20:23Z",
        "author_association": "NONE",
        "body": "Thanks Adam, that was exactly the pointer I needed.  Just in case someone\nelse runs into this, here is a GIST that shows how to do a basic example:\n\nhttps://gist.github.com/jdarling/fb701fcaead21168cb7a\n\nOn Thu, Jan 8, 2015 at 1:29 AM, Adam Reynolds notifications@github.com\nwrote:\n\n> https://github.com/dc-js/dc.js/wiki/FAQ\n> \n> On the page. Note I had to also create the top function. Creating just all\n> caused it to error.\n> On 8 Jan 2015 07:05, \"jdarling\" notifications@github.com wrote:\n> \n> > Been kinda banging my head on how to create that fake group and push\n> > values to it. Will keep digging, but thanks for the hint :).\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub\n> > https://github.com/square/crossfilter/issues/140#issuecomment-69143608.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/140#issuecomment-69145133.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69226004",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-69226004",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 69226004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjI2MDA0",
        "user": {
            "login": "agrass",
            "id": 1148266,
            "node_id": "MDQ6VXNlcjExNDgyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agrass",
            "html_url": "https://github.com/agrass",
            "followers_url": "https://api.github.com/users/agrass/followers",
            "following_url": "https://api.github.com/users/agrass/following{/other_user}",
            "gists_url": "https://api.github.com/users/agrass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agrass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agrass/subscriptions",
            "organizations_url": "https://api.github.com/users/agrass/orgs",
            "repos_url": "https://api.github.com/users/agrass/repos",
            "events_url": "https://api.github.com/users/agrass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agrass/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-08T18:35:46Z",
        "updated_at": "2015-01-08T18:36:21Z",
        "author_association": "NONE",
        "body": "@jdarling , check this #138.  I created a method \"pivotReduceCount(['key1' 'key2'])\" in this fork: https://github.com/agrass/crossfilter.  The method consist in the same reduceCount but with a hash to check if the object was already reduced. \n\nFor example: \n\ndata.id = data.dimension(function(d) { return d.duration; });\nvar group = data.id.group();\nvar test = group.pivotReduceCount([\"duration\"]).all();\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/69977561",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-69977561",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 69977561,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTc3NTYx",
        "user": {
            "login": "stevemandl",
            "id": 5465626,
            "node_id": "MDQ6VXNlcjU0NjU2MjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5465626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevemandl",
            "html_url": "https://github.com/stevemandl",
            "followers_url": "https://api.github.com/users/stevemandl/followers",
            "following_url": "https://api.github.com/users/stevemandl/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevemandl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevemandl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevemandl/subscriptions",
            "organizations_url": "https://api.github.com/users/stevemandl/orgs",
            "repos_url": "https://api.github.com/users/stevemandl/repos",
            "events_url": "https://api.github.com/users/stevemandl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevemandl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-14T19:40:07Z",
        "updated_at": "2015-01-14T19:40:07Z",
        "author_association": "NONE",
        "body": "I have written an extension of crossfilter called updatingCrossfilter that integrates with dc's chart filtering. It overrides add() and remove() in order to keep track of which records are present in the crossfilter, and implements update functionality too. As Jason suggested, I typically lift all filters before doing any of these updates, then restore all of the filters afterwards before re-rendering the dc charts. \n    My extension also has functionality for getting updates using ajax from a web service delivering time series data, and merging the new data with the old. Because of this it might be much more complicated than you need, but nonetheless I'd be happy to share the code if you are willing to take a peek.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71078431",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-71078431",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 71078431,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDc4NDMx",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-22T19:07:06Z",
        "updated_at": "2015-01-22T19:07:06Z",
        "author_association": "NONE",
        "body": "+1 It would be great if this was a start to other statistical methods as well.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71271735",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-71271735",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 71271735,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjcxNzM1",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-23T21:46:41Z",
        "updated_at": "2015-01-23T21:46:41Z",
        "author_association": "NONE",
        "body": "You can certainly calculate averages using the custom reducer. Not sure how that would differ from moving averages? Not to speak for them, but in the past I believe the Crossfilter maintainers have said that specialized custom reducers should be maintained as separate projects and not baked into Crossfilter itself.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71295724",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-71295724",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 71295724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjk1NzI0",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-24T02:08:52Z",
        "updated_at": "2015-01-24T02:08:52Z",
        "author_association": "NONE",
        "body": "I see. You need to use the groupAll functionality to do this. It takes\narguments similar to reduce, but the functions are passed and must return\nall the groups. This allows you to do groupings where a single record is\nrelevant to multiple groups, like a moving average.\nhttps://github.com/square/crossfilter/wiki/API-Reference#dimension_groupAll\n\nOn Fri, Jan 23, 2015 at 7:51 PM, Jack Stouffer notifications@github.com\nwrote:\n\n> According to http://stackoverflow.com/a/21707254/923933 moving averages\n> are not currently possible with the base api and would require new\n> functionality.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/100#issuecomment-71294904.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71337407",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-71337407",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 71337407,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzM3NDA3",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-24T21:09:36Z",
        "updated_at": "2015-01-24T21:09:36Z",
        "author_association": "NONE",
        "body": "I've just updated reductio to support arbitrary aggregations across arbitrarily defined windows as well as multi-value classification scenarios. The example is just a count aggregation, but it should work with average and the move complex aggregations as well. If you'd like to try it out: https://github.com/esjewett/reductio#aggregations-groupall-aggregations\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71345755",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-71345755",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 71345755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzQ1NzU1",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-25T01:16:14Z",
        "updated_at": "2015-01-25T01:16:14Z",
        "author_association": "NONE",
        "body": "This library looks very useful, thanks. I will comment again when I have a working example of a moving average. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71355323",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71355323",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71355323,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzU1MzIz",
        "user": {
            "login": "sdnetwork",
            "id": 4857051,
            "node_id": "MDQ6VXNlcjQ4NTcwNTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4857051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdnetwork",
            "html_url": "https://github.com/sdnetwork",
            "followers_url": "https://api.github.com/users/sdnetwork/followers",
            "following_url": "https://api.github.com/users/sdnetwork/following{/other_user}",
            "gists_url": "https://api.github.com/users/sdnetwork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sdnetwork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sdnetwork/subscriptions",
            "organizations_url": "https://api.github.com/users/sdnetwork/orgs",
            "repos_url": "https://api.github.com/users/sdnetwork/repos",
            "events_url": "https://api.github.com/users/sdnetwork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sdnetwork/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-25T06:17:08Z",
        "updated_at": "2015-01-25T06:17:08Z",
        "author_association": "NONE",
        "body": "really good, do you think it is possbile to have pivotReduceSum or pivotReduce with custom function for the reduce ?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71374605",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71374605",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71374605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzc0NjA1",
        "user": {
            "login": "agrass",
            "id": 1148266,
            "node_id": "MDQ6VXNlcjExNDgyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agrass",
            "html_url": "https://github.com/agrass",
            "followers_url": "https://api.github.com/users/agrass/followers",
            "following_url": "https://api.github.com/users/agrass/following{/other_user}",
            "gists_url": "https://api.github.com/users/agrass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agrass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agrass/subscriptions",
            "organizations_url": "https://api.github.com/users/agrass/orgs",
            "repos_url": "https://api.github.com/users/agrass/repos",
            "events_url": "https://api.github.com/users/agrass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agrass/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-25T14:12:18Z",
        "updated_at": "2015-01-25T14:12:18Z",
        "author_association": "NONE",
        "body": "Yes, I'm working on that. I already pushed a pivotReduce(keys, add, remove, init) method. It's not 100% tested yet, but this week I'm going to push that methods more officially.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71380720",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71380720",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71380720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzgwNzIw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-25T16:50:57Z",
        "updated_at": "2015-01-25T16:50:57Z",
        "author_association": "NONE",
        "body": "It's not quite clear to me what you want the output of this function to be, but I do wonder if this is possible as a set of custom reduce functions rather than as a modification to Crossfilter itself. From your pull request, it looks like it should definitely be possible.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71449065",
        "html_url": "https://github.com/square/crossfilter/issues/142#issuecomment-71449065",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/142",
        "id": 71449065,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDQ5MDY1",
        "user": {
            "login": "attenzione",
            "id": 284987,
            "node_id": "MDQ6VXNlcjI4NDk4Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/284987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/attenzione",
            "html_url": "https://github.com/attenzione",
            "followers_url": "https://api.github.com/users/attenzione/followers",
            "following_url": "https://api.github.com/users/attenzione/following{/other_user}",
            "gists_url": "https://api.github.com/users/attenzione/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/attenzione/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/attenzione/subscriptions",
            "organizations_url": "https://api.github.com/users/attenzione/orgs",
            "repos_url": "https://api.github.com/users/attenzione/repos",
            "events_url": "https://api.github.com/users/attenzione/events{/privacy}",
            "received_events_url": "https://api.github.com/users/attenzione/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-26T11:43:13Z",
        "updated_at": "2015-01-26T11:43:13Z",
        "author_association": "NONE",
        "body": "nevermind, i searched for `bower.json`, but `component.json` is here\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71652206",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71652206",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71652206,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjUyMjA2",
        "user": {
            "login": "agrass",
            "id": 1148266,
            "node_id": "MDQ6VXNlcjExNDgyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agrass",
            "html_url": "https://github.com/agrass",
            "followers_url": "https://api.github.com/users/agrass/followers",
            "following_url": "https://api.github.com/users/agrass/following{/other_user}",
            "gists_url": "https://api.github.com/users/agrass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agrass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agrass/subscriptions",
            "organizations_url": "https://api.github.com/users/agrass/orgs",
            "repos_url": "https://api.github.com/users/agrass/repos",
            "events_url": "https://api.github.com/users/agrass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agrass/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T14:05:31Z",
        "updated_at": "2015-01-27T14:05:31Z",
        "author_association": "NONE",
        "body": "I added the method pivotReduce, and in the description an example of output compared with a normal reduceCount\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71654110",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71654110",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71654110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjU0MTEw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T14:17:55Z",
        "updated_at": "2015-01-27T14:17:55Z",
        "author_association": "NONE",
        "body": "I don't see the description. I wonder - does it produce similar results to this? https://github.com/esjewett/reductio#aggregations-standard-aggregations-exception-aggregation\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71659437",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71659437",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71659437,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjU5NDM3",
        "user": {
            "login": "agrass",
            "id": 1148266,
            "node_id": "MDQ6VXNlcjExNDgyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agrass",
            "html_url": "https://github.com/agrass",
            "followers_url": "https://api.github.com/users/agrass/followers",
            "following_url": "https://api.github.com/users/agrass/following{/other_user}",
            "gists_url": "https://api.github.com/users/agrass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agrass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agrass/subscriptions",
            "organizations_url": "https://api.github.com/users/agrass/orgs",
            "repos_url": "https://api.github.com/users/agrass/repos",
            "events_url": "https://api.github.com/users/agrass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agrass/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T14:50:05Z",
        "updated_at": "2015-01-27T14:50:05Z",
        "author_association": "NONE",
        "body": "The example is in the first comment. The method you show me it's very similar, but with this one you can select the keys that make the object uniq.  In some cases I needed to use two or more keys.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71660146",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71660146",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71660146,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjYwMTQ2",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T14:54:13Z",
        "updated_at": "2015-01-27T14:54:13Z",
        "author_association": "NONE",
        "body": "Scrolling through the changes in the pull request, I don't see any comment. Did you push it?\n\nThat said, if you just need support for multiple keys, you could have the Reductio exception accessor return a string concatenating the keys using a separator you know doesn't appear in either of them. I'll look into directly supporting the multiple key scenario though, as it is a useful one.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71664524",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71664524",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71664524,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjY0NTI0",
        "user": {
            "login": "agrass",
            "id": 1148266,
            "node_id": "MDQ6VXNlcjExNDgyNjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1148266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agrass",
            "html_url": "https://github.com/agrass",
            "followers_url": "https://api.github.com/users/agrass/followers",
            "following_url": "https://api.github.com/users/agrass/following{/other_user}",
            "gists_url": "https://api.github.com/users/agrass/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agrass/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agrass/subscriptions",
            "organizations_url": "https://api.github.com/users/agrass/orgs",
            "repos_url": "https://api.github.com/users/agrass/repos",
            "events_url": "https://api.github.com/users/agrass/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agrass/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T15:18:25Z",
        "updated_at": "2015-01-27T15:19:12Z",
        "author_association": "NONE",
        "body": " Yes, it looks that concatenating the keys with the exception accessor you get the same value of pivotReduceCount (I didn't knew the existence of your method when I created it). The other method, pivotReduce(keys, add, init, remove) is the same but you can use a custom method that 'll be call only if the keys you selected were not already reduced.  My bad, the example is in the first comment of the pull request. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71676870",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-71676870",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 71676870,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjc2ODcw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-27T16:23:25Z",
        "updated_at": "2015-01-27T16:23:25Z",
        "author_association": "NONE",
        "body": "I see, interesting and useful. I'll think about adding that capability of arbitrary reduce methods to Reductio's exception aggregation capability.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71856480",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-71856480",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 71856480,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxODU2NDgw",
        "user": {
            "login": "tehsenaus",
            "id": 20188,
            "node_id": "MDQ6VXNlcjIwMTg4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/20188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tehsenaus",
            "html_url": "https://github.com/tehsenaus",
            "followers_url": "https://api.github.com/users/tehsenaus/followers",
            "following_url": "https://api.github.com/users/tehsenaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/tehsenaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tehsenaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tehsenaus/subscriptions",
            "organizations_url": "https://api.github.com/users/tehsenaus/orgs",
            "repos_url": "https://api.github.com/users/tehsenaus/repos",
            "events_url": "https://api.github.com/users/tehsenaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tehsenaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-28T15:45:47Z",
        "updated_at": "2015-01-28T15:45:47Z",
        "author_association": "NONE",
        "body": "+1\n\nI need this to support the simple case of updating the last tick in a time series. Right now I have to recreate the whole crossfilter just to update a single value.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71857509",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-71857509",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 71857509,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxODU3NTA5",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-28T15:50:53Z",
        "updated_at": "2015-01-28T15:50:53Z",
        "author_association": "NONE",
        "body": "@jasondavies Any thoughts on adding this functionality or on accepting @esjewett 's PR? \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/71883172",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-71883172",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 71883172,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxODgzMTcy",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-28T18:01:23Z",
        "updated_at": "2015-01-28T18:01:23Z",
        "author_association": "NONE",
        "body": "I always push the wrong button :-/ Just wanted to clarify that there is no open PR currently. If we get the go-ahead, I'll put one together as soon as possible. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72063230",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-72063230",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 72063230,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDYzMjMw",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-29T17:08:40Z",
        "updated_at": "2015-01-29T17:11:26Z",
        "author_association": "NONE",
        "body": "Here is the solution with the above library. Unfortunately, it proved far too slow with a large amount of records. I guess that's the limitations of working in js\n\nAlso, bonus support for dc.js\n\n```\n//this assumes your data is in the form of\n\ndata = [\n{value:1000, date: Date('2015-01-01')}\n...\n]\n\nvar date_array = [];\nvar mapped_date_array = [];\n\nvar dateDim = cs_data.dimension(function(d) {return d.date;});\nvar shipped = dateDim.group().reduceSum(dc.pluck('value'));\n\n// get a list of all of the dates used\nvar shipments_infinity = shipments.top(Infinity);\nvar i = 0;\nfor (i=0; i < shipments_infinity.length; i++) {\n    date_array.push(shipments_infinity[i].key);\n}\ndate_array.sort(function (date1, date2) {\n    if (date1 > date2) return 1;\n    if (date1 < date2) return -1;\n    return 0;\n})\n// this is needed for indexOf, as js returns false on all object comparisons \nmapped_date_array = date_array.map(function(e) { return e.toDateString(); });\n\nreducer = reductio().groupAll(function(record) {\n    var idx = mapped_date_array.indexOf(record.date.toDateString());\n\n    if (record.date < date_array[30]) {\n          return [date_array[idx]];\n    } else {\n          var i = 0;\n          var return_array = [];\n         // we are finding the 30 day moving avg \n         for (i = 30; i >= 0; i--) {\n               return_array.push(date_array[idx - i]);\n         }\n\n          return return_array;\n   }\n}).count(true).sum(function(d) { return d.value; }).avg(true);\n\nvar shipments_moving_avg = dateDim.groupAll();\nreducer(shipments_moving_avg);\n\n// dc.js requires the all() function to exist, supplement this with underscore.js\n_.extend(shipments_moving_avg, {all: function () {return this.value()} })\n\nsomeChart.width(1000).height(300)\n                        .dimension(dateDim)\n                        .group(shipments)\n                        .stack(shipments_moving_avg, function (d) {return d.value.avg;})\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72072372",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-72072372",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 72072372,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDcyMzcy",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-29T17:59:48Z",
        "updated_at": "2015-01-29T17:59:48Z",
        "author_association": "NONE",
        "body": "Glad it sort of worked. How many records of this form are we talking about? If in the 1000s or low 10000s, we can probably optimize. I'm not sure Reductio does this as efficiently as possible, so if you have a test dataset I can look at it. Probably best to discuss that over in the Reductio issues. Over the low 10000s or records, it might just not be manageable.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72074869",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-72074869",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 72074869,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDc0ODY5",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-29T18:14:21Z",
        "updated_at": "2015-01-29T18:14:21Z",
        "author_association": "NONE",
        "body": "Yeah, unfortunately my data contains 110,353 records and grows by about 50-100 every day. I simplified the data for this example, but the real data has eight columns, which brings the total size to about 16 MB. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72075558",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-72075558",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 72075558,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDc1NTU4",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-29T18:18:22Z",
        "updated_at": "2015-01-29T18:18:22Z",
        "author_association": "NONE",
        "body": "Are you within an order of magnitude on performance? If you switch your data to use strings for the date dimension instead of Date objects and optimize the Reductio groupAll function, that might buy you a 10x improvement.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72081599",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-72081599",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 72081599,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDgxNTk5",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-01-29T18:53:10Z",
        "updated_at": "2015-01-29T18:53:10Z",
        "author_association": "NONE",
        "body": "I created a new issue for this discussion https://github.com/esjewett/reductio/issues/12\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/72459505",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-72459505",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 72459505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDU5NTA1",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-02T13:43:55Z",
        "updated_at": "2015-02-02T13:43:55Z",
        "author_association": "NONE",
        "body": "@jasondavies Are we doing anything to this one?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/73130827",
        "html_url": "https://github.com/square/crossfilter/issues/144#issuecomment-73130827",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/144",
        "id": 73130827,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMTMwODI3",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T21:18:43Z",
        "updated_at": "2015-02-05T21:18:43Z",
        "author_association": "COLLABORATOR",
        "body": "`cnt.length` is 4, because there are 4 groups when grouped by type.  However, two of the groups have value 0, indicating that two of the types have zero counts for the current filters.  Groups with zero counts are not excluded, which seems to be your expectation.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/73136493",
        "html_url": "https://github.com/square/crossfilter/issues/144#issuecomment-73136493",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/144",
        "id": 73136493,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMTM2NDkz",
        "user": {
            "login": "abuscom-leonhard",
            "id": 2386710,
            "node_id": "MDQ6VXNlcjIzODY3MTA=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2386710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abuscom-leonhard",
            "html_url": "https://github.com/abuscom-leonhard",
            "followers_url": "https://api.github.com/users/abuscom-leonhard/followers",
            "following_url": "https://api.github.com/users/abuscom-leonhard/following{/other_user}",
            "gists_url": "https://api.github.com/users/abuscom-leonhard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abuscom-leonhard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abuscom-leonhard/subscriptions",
            "organizations_url": "https://api.github.com/users/abuscom-leonhard/orgs",
            "repos_url": "https://api.github.com/users/abuscom-leonhard/repos",
            "events_url": "https://api.github.com/users/abuscom-leonhard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abuscom-leonhard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T21:49:59Z",
        "updated_at": "2015-02-05T21:49:59Z",
        "author_association": "NONE",
        "body": "Yes thats my expectation. In my real world example I calculate the sum of sales by country and I want to include only a certain sales representative. I try to exclude all groupings that do not match the filter. Can I do this?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/73142505",
        "html_url": "https://github.com/square/crossfilter/issues/144#issuecomment-73142505",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/144",
        "id": 73142505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczMTQyNTA1",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-05T22:20:59Z",
        "updated_at": "2015-02-05T22:20:59Z",
        "author_association": "COLLABORATOR",
        "body": "If you only want non-zero groups, you can simply filter the array of groups:\n\n``` js\ncountGroup.top(Infinity).filter(function(d) { return d.value > 0; });\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/73567351",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-73567351",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 73567351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNTY3MzUx",
        "user": {
            "login": "r4j4h",
            "id": 703007,
            "node_id": "MDQ6VXNlcjcwMzAwNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/703007?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r4j4h",
            "html_url": "https://github.com/r4j4h",
            "followers_url": "https://api.github.com/users/r4j4h/followers",
            "following_url": "https://api.github.com/users/r4j4h/following{/other_user}",
            "gists_url": "https://api.github.com/users/r4j4h/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r4j4h/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r4j4h/subscriptions",
            "organizations_url": "https://api.github.com/users/r4j4h/orgs",
            "repos_url": "https://api.github.com/users/r4j4h/repos",
            "events_url": "https://api.github.com/users/r4j4h/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r4j4h/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-09T18:58:13Z",
        "updated_at": "2015-02-09T18:58:13Z",
        "author_association": "NONE",
        "body": "@stevemandl I would love to see your code, I am exploring some avenues where I would be doing almost that exact same thing!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/74515050",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-74515050",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 74515050,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTE1MDUw",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-16T14:23:45Z",
        "updated_at": "2015-02-16T14:23:45Z",
        "author_association": "NONE",
        "body": "I think the only way to do this would be to check every time the dimension accessor is evaluated, which happens a lot. Would result in some % slowdown, which could be evaluated using the performance tests. IMO, this is a rough edge, but performance is really paramount in a lot of use-cases.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/75352875",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-75352875",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 75352875,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzUyODc1",
        "user": {
            "login": "wilzbach",
            "id": 4370550,
            "node_id": "MDQ6VXNlcjQzNzA1NTA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4370550?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wilzbach",
            "html_url": "https://github.com/wilzbach",
            "followers_url": "https://api.github.com/users/wilzbach/followers",
            "following_url": "https://api.github.com/users/wilzbach/following{/other_user}",
            "gists_url": "https://api.github.com/users/wilzbach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wilzbach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wilzbach/subscriptions",
            "organizations_url": "https://api.github.com/users/wilzbach/orgs",
            "repos_url": "https://api.github.com/users/wilzbach/repos",
            "events_url": "https://api.github.com/users/wilzbach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wilzbach/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-02-21T03:08:45Z",
        "updated_at": "2015-02-21T03:08:45Z",
        "author_association": "NONE",
        "body": "Would it be possible to have `all` as just an alias to `Infinity`?\nIt is very common and just costs line.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76629360",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76629360",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76629360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjI5MzYw",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-01T20:41:38Z",
        "updated_at": "2015-03-01T20:42:09Z",
        "author_association": "NONE",
        "body": "@gsklee @esjewett I would like to expand on this point. The issue is present when a dimension contains values of different types, not only when nulls are returned from the dimension's accessor. However, not always. In the above example:\n1. Change null to 1. The result is the same.\n2. Change it to '1' - all dimension values are strings and reduction values are correct.\n3. Change all values to nulls - surprisingly, there is now a group with null key, correctly reduced to 6.\n\nI could not trace the cause in the code, hopefully I will be able to report more later.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76650437",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76650437",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76650437,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjUwNDM3",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-02T02:35:47Z",
        "updated_at": "2015-03-02T02:35:47Z",
        "author_association": "NONE",
        "body": "@wssbck :+1: thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76767912",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76767912",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76767912,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzY3OTEy",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-02T18:17:29Z",
        "updated_at": "2015-03-02T18:17:43Z",
        "author_association": "NONE",
        "body": "Just for clarity, I'll point out that this is exactly the behavior to expect based on the documentation at https://github.com/square/crossfilter/wiki/API-Reference#dimension\n\nSpecifically, if we go into a console and do some experimentation, we'll see that the values \"A\" and 1 don't behave properly with respect to the Javascript inequality operators. \"A\" < 1 is false, \"A\" > 1 is false, and \"A\" == 1 is false. That's not a consistent result. However, in the case of strings \"A\" < \"1\"  is false, \"A\" > \"1\" is true, and \"A\" == \"1\" is false. That's consistent, which is why it works. Meanwhile, null < null is false, null > null is false, and null === null is true. That's consistent, meaning we should properly see a null group.\n\nIn general, the rule of thumb is that if you are not confident that all of your data will have a predictable dimension value (and really, are we ever confident of this?), then you need to coerce your dimension accessor return value like so:\n\n```\nvar stringDim = xfilter.dimension(function(d) { return \"\" + d.value; });\nvar numDim = xfilter.dimension(function(d) { return +d.value; });\nvar boolDim = xfilter.dimension(function(d) { return d ? true : false; });\n```\n\nIf we do this, we should never run into this problem. I've gotten tripped up by this plenty of times, but have managed to teach myself that I've always always got to coerce types like this. But Crossfilter can't really do it for us because there is no way for Crossfilter to know what data type the dimension should have. I'm thinking about how I might be able to add something like this to the Reductio API.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76777009",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76777009",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76777009,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2Nzc3MDA5",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-02T18:46:10Z",
        "updated_at": "2015-03-02T18:46:27Z",
        "author_association": "NONE",
        "body": "@esjewett explains it all. I would still argue null should have a special place in Crossfilter but this is a subject for another issue I guess.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76783429",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76783429",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76783429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzgzNDI5",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-02T19:05:10Z",
        "updated_at": "2015-03-02T19:05:28Z",
        "author_association": "NONE",
        "body": "@wssbck Actually, I was a little too optimistic with my number coercion example. You need to account for null, undefined, and NaN if you want to cover all the JS non-value values (at least that I'm aware of), none of which are naturally ordered in the context of String or Number type data sets. Get this:\n\n``` console\n> +null\n< 0\n> +undefined\n< NaN\n> null == undefined\n< true\n> +null == +undefined\n< false\n```\n\nJavascript is amazing :-/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/76791536",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-76791536",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 76791536,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzkxNTM2",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-02T19:29:17Z",
        "updated_at": "2015-03-02T19:29:17Z",
        "author_association": "NONE",
        "body": "@esjewett Yes, it is easy to get lost in how JS handles implicit type conversion and extraordinary values and types :-) I will try to find time to open a pull request or at least an issue discussing the treatment of null, specifically, as it is a very useful construct.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77284614",
        "html_url": "https://github.com/square/crossfilter/issues/146#issuecomment-77284614",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/146",
        "id": 77284614,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjg0NjE0",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T00:54:46Z",
        "updated_at": "2015-03-05T00:55:17Z",
        "author_association": "NONE",
        "body": "This is a feature, and documented.\n\n> Note: a grouping intersects the crossfilter's current filters, except for the associated dimension's filter. Thus, group methods consider only records that satisfy every filter except this dimension's filter. So, if the crossfilter of payments is filtered by type and total, then group by total only observes the filter by type.\n\nhttps://github.com/square/crossfilter/wiki/API-Reference#dimension_group\n\nIdea being that usually you don't want a chart's data to disappear when you are brushing that chart.\n\nThe standard workaround is to create an identical dimension and filter that one instead.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77323018",
        "html_url": "https://github.com/square/crossfilter/issues/146#issuecomment-77323018",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/146",
        "id": 77323018,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzIzMDE4",
        "user": {
            "login": "ANteiKA",
            "id": 1886831,
            "node_id": "MDQ6VXNlcjE4ODY4MzE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1886831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ANteiKA",
            "html_url": "https://github.com/ANteiKA",
            "followers_url": "https://api.github.com/users/ANteiKA/followers",
            "following_url": "https://api.github.com/users/ANteiKA/following{/other_user}",
            "gists_url": "https://api.github.com/users/ANteiKA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ANteiKA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ANteiKA/subscriptions",
            "organizations_url": "https://api.github.com/users/ANteiKA/orgs",
            "repos_url": "https://api.github.com/users/ANteiKA/repos",
            "events_url": "https://api.github.com/users/ANteiKA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ANteiKA/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-05T08:12:21Z",
        "updated_at": "2015-03-05T08:12:21Z",
        "author_association": "NONE",
        "body": "Thanks ! \nI had understood it was a feature, but was wondering how to modify this behavior. According forums posts, I think I am not the only one looking for a solution where the associated dimension of the filtered group should be also updated. May be a dimension.reset flag or function could be useful ?\n\nYour workaround works perfectly also, and it saved my day ! Many thanks.\n\nThe working solution can be seen here : http://jsfiddle.net/ewm76uru/30/\nIf it may helps.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77545665",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-77545665",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 77545665,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTQ1NjY1",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-06T11:31:56Z",
        "updated_at": "2015-03-06T11:31:56Z",
        "author_association": "NONE",
        "body": "I think it's possible to add some checks and throw a warning on development mode, and strip the warning logics away on production mode if this feature impedes performance too much.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77545848",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-77545848",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 77545848,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTQ1ODQ4",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-06T11:33:41Z",
        "updated_at": "2015-03-06T11:33:41Z",
        "author_association": "NONE",
        "body": "Just for the record, Facebook React leaves the warning logics (basically invariants per DbC terminology) intact even in production mode.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77710275",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-77710275",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 77710275,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzEwMjc1",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-07T21:10:32Z",
        "updated_at": "2015-03-07T21:11:45Z",
        "author_association": "NONE",
        "body": "I have spent a bit of time looking into how to deal with the issue. Solving it on the Crossfilter level would be too intrusive as core sorting functions of the library would have to be modified.\n\nAt the same time it would be great to have null recognized as a special, separate value. Null is neither 0 nor an empty string. While 0 or empty string are completely legitimate data values that can come from measurements, null is useful for designating entries which are problematic for some reason. For example, the data may be incomplete or impossible to obtain.\n\nAggregation functions can be made null-aware, skipping (or processing differently) rows containing nulls. The only thing we need is a correct accessor function for a given dimension:\n\n``` javascript\nvar data = [\n    {score: 100, name: 'A'},\n    {score: 200, name: 'B'},\n    {score: 110, name: 'A'},\n    {score: 43,  name: null},\n    {score: 100, name: 'B'},\n    {score: 100, name: 'A'}\n];\n\nvar all = crossfilter(data).dimension(\n    function(v){\n        var ret = v.name === null ? '__null__' : v.name;\n        return ret;\n    }\n).group().all();\n\nconsole.log(all);\n```\n\nThe result:\n\n``` javascript\n[ { key: 'A', value: 3 },\n  { key: 'B', value: 2 },\n  { key: '__null__', value: 2 } ]\n```\n\nWhat is nice about this approach is that aggregation functions are still going to have the whole original data row passed as parameters, so they can react to nulls the way we want.\n\nFor dimensions with numerical values we could use Infinity or -Inifity to keep the values returned in the accessor well behaving when it comes to > and <:\n\n``` javascript\n    function(v){\n        var ret = v.name === null ? Infinity : v.name;\n        return ret;\n    }\n```\n\nOf course, this approach does not deal with every possible \"dirty\" value in JS but we should not throw low quality data at Crossfilter. Turning all questionable entries into nulls and then dealing with them on the accessor/reduction level is IMHO a good step in the process.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77737908",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-77737908",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 77737908,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzM3OTA4",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-08T07:57:55Z",
        "updated_at": "2015-03-08T07:58:14Z",
        "author_association": "NONE",
        "body": "@wssbck This surely is a feasible workaround. Since the issue primarily revolves around data types, something like [Flow](http://flowtype.org/) integration may also prove to be helpful.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/77895404",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-77895404",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 77895404,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODk1NDA0",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-09T17:00:14Z",
        "updated_at": "2015-03-09T17:00:14Z",
        "author_association": "NONE",
        "body": "For Reductio, I am considering adding some dimension-building capability. In that functionality, I will probably implement checks on dimension accessor functions to address this sort of issue. I'm thinking that at the time the accessor function is provided, I will check that it always returns naturally ordered values for a variety of data types including null, and throw a warning if it does not. This would notify people of possible issues while not forcing those who are sure that their data will be naturally ordered to carry a performance penalty.\n\nTheoretically this kind of test could be added to `crossfilter.dimension(value)` without a performance penalty because the provided function would be behaviorally tested when crossfilter.dimension is evaluated, not when `value` is evaluated. Basically, put this in the crossfilter.dimension function:\n\n```\nfunction dimension(value) {\n  // ...\n  var testResults = [ null, 1, 'test' ].map(function(d) {\n    return typeof value(d);\n  });\n  if( !(testResults[0] === testResults[1] && testResults[1] === testResults[2]) ) {\n    console.warn(\"Dimension accessor returns values that may not be naturally ordered.\");\n  }\n  // ...\n}\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/80768918",
        "html_url": "https://github.com/square/crossfilter/pull/147#issuecomment-80768918",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/147",
        "id": 80768918,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzY4OTE4",
        "user": {
            "login": "javiercejudo",
            "id": 1095851,
            "node_id": "MDQ6VXNlcjEwOTU4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1095851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javiercejudo",
            "html_url": "https://github.com/javiercejudo",
            "followers_url": "https://api.github.com/users/javiercejudo/followers",
            "following_url": "https://api.github.com/users/javiercejudo/following{/other_user}",
            "gists_url": "https://api.github.com/users/javiercejudo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javiercejudo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javiercejudo/subscriptions",
            "organizations_url": "https://api.github.com/users/javiercejudo/orgs",
            "repos_url": "https://api.github.com/users/javiercejudo/repos",
            "events_url": "https://api.github.com/users/javiercejudo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javiercejudo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T00:12:00Z",
        "updated_at": "2015-03-15T00:12:00Z",
        "author_association": "NONE",
        "body": "#143 fixes this in a more general way\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/80783042",
        "html_url": "https://github.com/square/crossfilter/pull/128#issuecomment-80783042",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/128",
        "id": 80783042,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzgzMDQy",
        "user": {
            "login": "javiercejudo",
            "id": 1095851,
            "node_id": "MDQ6VXNlcjEwOTU4NTE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1095851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javiercejudo",
            "html_url": "https://github.com/javiercejudo",
            "followers_url": "https://api.github.com/users/javiercejudo/followers",
            "following_url": "https://api.github.com/users/javiercejudo/following{/other_user}",
            "gists_url": "https://api.github.com/users/javiercejudo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javiercejudo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javiercejudo/subscriptions",
            "organizations_url": "https://api.github.com/users/javiercejudo/orgs",
            "repos_url": "https://api.github.com/users/javiercejudo/repos",
            "events_url": "https://api.github.com/users/javiercejudo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javiercejudo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-15T00:54:25Z",
        "updated_at": "2015-03-15T00:54:25Z",
        "author_association": "NONE",
        "body": "#143 fixes this in a more general way\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/83827383",
        "html_url": "https://github.com/square/crossfilter/pull/139#issuecomment-83827383",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/139",
        "id": 83827383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzODI3Mzgz",
        "user": {
            "login": "curran",
            "id": 68416,
            "node_id": "MDQ6VXNlcjY4NDE2",
            "avatar_url": "https://avatars3.githubusercontent.com/u/68416?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/curran",
            "html_url": "https://github.com/curran",
            "followers_url": "https://api.github.com/users/curran/followers",
            "following_url": "https://api.github.com/users/curran/following{/other_user}",
            "gists_url": "https://api.github.com/users/curran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/curran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/curran/subscriptions",
            "organizations_url": "https://api.github.com/users/curran/orgs",
            "repos_url": "https://api.github.com/users/curran/repos",
            "events_url": "https://api.github.com/users/curran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/curran/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-20T00:37:16Z",
        "updated_at": "2015-03-20T00:37:16Z",
        "author_association": "NONE",
        "body": "Are there any plans to merge this? I would also like to use crossfilter as an AMD module. Thank you.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/91345482",
        "html_url": "https://github.com/square/crossfilter/issues/148#issuecomment-91345482",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/148",
        "id": 91345482,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkxMzQ1NDgy",
        "user": {
            "login": "simon-stealthbits",
            "id": 11876812,
            "node_id": "MDQ6VXNlcjExODc2ODEy",
            "avatar_url": "https://avatars3.githubusercontent.com/u/11876812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simon-stealthbits",
            "html_url": "https://github.com/simon-stealthbits",
            "followers_url": "https://api.github.com/users/simon-stealthbits/followers",
            "following_url": "https://api.github.com/users/simon-stealthbits/following{/other_user}",
            "gists_url": "https://api.github.com/users/simon-stealthbits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simon-stealthbits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simon-stealthbits/subscriptions",
            "organizations_url": "https://api.github.com/users/simon-stealthbits/orgs",
            "repos_url": "https://api.github.com/users/simon-stealthbits/repos",
            "events_url": "https://api.github.com/users/simon-stealthbits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simon-stealthbits/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-09T20:15:46Z",
        "updated_at": "2015-04-09T20:15:46Z",
        "author_association": "NONE",
        "body": "oops - sorry - wrong tab - meant to log this aginst dc.js\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/93590214",
        "html_url": "https://github.com/square/crossfilter/issues/116#issuecomment-93590214",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/116",
        "id": 93590214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDkzNTkwMjE0",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-15T22:48:21Z",
        "updated_at": "2015-04-15T22:48:21Z",
        "author_association": "NONE",
        "body": ":+1:\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/94900383",
        "html_url": "https://github.com/square/crossfilter/pull/149#issuecomment-94900383",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/149",
        "id": 94900383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTAwMzgz",
        "user": {
            "login": "mortonfox",
            "id": 495892,
            "node_id": "MDQ6VXNlcjQ5NTg5Mg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/495892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mortonfox",
            "html_url": "https://github.com/mortonfox",
            "followers_url": "https://api.github.com/users/mortonfox/followers",
            "following_url": "https://api.github.com/users/mortonfox/following{/other_user}",
            "gists_url": "https://api.github.com/users/mortonfox/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mortonfox/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mortonfox/subscriptions",
            "organizations_url": "https://api.github.com/users/mortonfox/orgs",
            "repos_url": "https://api.github.com/users/mortonfox/repos",
            "events_url": "https://api.github.com/users/mortonfox/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mortonfox/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T18:43:23Z",
        "updated_at": "2015-04-21T18:43:23Z",
        "author_association": "NONE",
        "body": "Someone else already opened the same PR.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/94965532",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-94965532",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 94965532,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTY1NTMy",
        "user": {
            "login": "Mortimerp9",
            "id": 628467,
            "node_id": "MDQ6VXNlcjYyODQ2Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/628467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mortimerp9",
            "html_url": "https://github.com/Mortimerp9",
            "followers_url": "https://api.github.com/users/Mortimerp9/followers",
            "following_url": "https://api.github.com/users/Mortimerp9/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mortimerp9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mortimerp9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mortimerp9/subscriptions",
            "organizations_url": "https://api.github.com/users/Mortimerp9/orgs",
            "repos_url": "https://api.github.com/users/Mortimerp9/repos",
            "events_url": "https://api.github.com/users/Mortimerp9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mortimerp9/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T22:49:39Z",
        "updated_at": "2015-04-21T22:49:39Z",
        "author_association": "NONE",
        "body": "this still seems to happen when using \n\n```\ncrossfilter.dimension(function callback(pt) {\n    //return undefined\n});\n```\n\nIt was a bug in my code that made this callback return undefined, but the stack overflow error is definitely not very helpful in finding out what's going on.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/94968958",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-94968958",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 94968958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTY4OTU4",
        "user": {
            "login": "TomNeyland",
            "id": 4574112,
            "node_id": "MDQ6VXNlcjQ1NzQxMTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4574112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomNeyland",
            "html_url": "https://github.com/TomNeyland",
            "followers_url": "https://api.github.com/users/TomNeyland/followers",
            "following_url": "https://api.github.com/users/TomNeyland/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomNeyland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomNeyland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomNeyland/subscriptions",
            "organizations_url": "https://api.github.com/users/TomNeyland/orgs",
            "repos_url": "https://api.github.com/users/TomNeyland/repos",
            "events_url": "https://api.github.com/users/TomNeyland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomNeyland/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-21T23:13:49Z",
        "updated_at": "2015-04-21T23:14:02Z",
        "author_association": "NONE",
        "body": "@Mortimerp9 \n\n```\ncrossfilter.dimension(function callback(pt) {\n});\n```\n\nReturning nothing causes the function to implicitly return `undefined`\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/94987571",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-94987571",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 94987571,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk0OTg3NTcx",
        "user": {
            "login": "Mortimerp9",
            "id": 628467,
            "node_id": "MDQ6VXNlcjYyODQ2Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/628467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mortimerp9",
            "html_url": "https://github.com/Mortimerp9",
            "followers_url": "https://api.github.com/users/Mortimerp9/followers",
            "following_url": "https://api.github.com/users/Mortimerp9/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mortimerp9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mortimerp9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mortimerp9/subscriptions",
            "organizations_url": "https://api.github.com/users/Mortimerp9/orgs",
            "repos_url": "https://api.github.com/users/Mortimerp9/repos",
            "events_url": "https://api.github.com/users/Mortimerp9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mortimerp9/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-22T01:00:15Z",
        "updated_at": "2015-04-22T01:00:15Z",
        "author_association": "NONE",
        "body": "Sorry if I wasn't clear, I have code in that callback that sometimes\nreturns undefined, this makes the quicksort call go in a infinite recursion\nthat blows the stack.\n\nWhile the callback should avoid returning undefined, it would be good if\ncrossfilter guarded against it and threw a better error /warning as\ndebugging the stack overflow deep in quicksort is not the  most\nstraightforward thing.\nOn Apr 21, 2015 4:14 PM, \"Tom Neyland\" notifications@github.com wrote:\n\n> @Mortimerp9 https://github.com/Mortimerp9\n> \n> crossfilter.dimension(function callback(pt) {\n> });\n> \n> Returning nothing causes the function to implicitly return 'undefined'\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/pull/3#issuecomment-94968958.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/96017411",
        "html_url": "https://github.com/square/crossfilter/issues/150#issuecomment-96017411",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/150",
        "id": 96017411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk2MDE3NDEx",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-24T18:07:16Z",
        "updated_at": "2015-04-24T18:07:16Z",
        "author_association": "NONE",
        "body": "dc.js data tables do support groups as dimensions, pretty much by accident. (The coupling between dc.js and crossfilter is very light.)\n\nThere is a little bit of info here, and a link to a (complex) example, in this PR: https://github.com/dc-js/dc.js/pull/697. Please try it out and bring any issues to the appropriate dc forums.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97594147",
        "html_url": "https://github.com/square/crossfilter/issues/150#issuecomment-97594147",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/150",
        "id": 97594147,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTk0MTQ3",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T21:38:57Z",
        "updated_at": "2015-04-29T21:38:57Z",
        "author_association": "NONE",
        "body": "@vmantese, if this works for you, you should close the ticket. It seems like more a dc.js (documentation) issue than crossfilter. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97606247",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97606247",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97606247,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjA2MjQ3",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T22:31:38Z",
        "updated_at": "2015-04-29T22:31:38Z",
        "author_association": "COLLABORATOR",
        "body": "Fair question, thanks for asking!\n\nTrue: nobody at Square is actively maintaining this library right now, and we don't use it in the Square Dashboard where it was originally deployed (we moved all computation server side again). \n\nThat doesn't mean nobody is using it. I'll ask around and see if someone is willing to help triage issues and merge down good PRs. If not, we'll look for a different solution (perhaps a couple more external maintainers to help Jason out!) \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97608341",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97608341",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97608341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjA4MzQx",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T22:46:46Z",
        "updated_at": "2015-04-29T22:46:46Z",
        "author_association": "NONE",
        "body": "Does crossfilter have any bugs, besides people shooting themselves in the foot and getting stack overflows with NaNs? I think in a sense it is complete.\n\nI can't contribute due to the [copyright assignment agreement](https://github.com/square/crossfilter/blob/master/CONTRIBUTING.md). That's something that creates a sea of red tape in corporations.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97611756",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97611756",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97611756,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjExNzU2",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T23:13:27Z",
        "updated_at": "2015-04-29T23:13:27Z",
        "author_association": "NONE",
        "body": "Not that it has bugs, or that it is incomplete. But there are some features\nthat have yet to be created for it. Simply we just want to make sure it's\ngetting the attention it deserves. Also I volunteer myself and @esjewett as\ncontributors.\nOn Wed, Apr 29, 2015 at 4:47 PM Gordon Woodhull notifications@github.com\nwrote:\n\n> Does crossfilter have any bugs, besides people shooting themselves in the\n> foot and getting stack overflows with NaNs? I think in a sense it is\n> complete.\n> \n> I can't contribute due to the copyright assignment agreement\n> https://github.com/square/crossfilter/blob/master/CONTRIBUTING.md.\n> That's something that creates a sea of red tape in corporations.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/151#issuecomment-97608341.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97612045",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97612045",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97612045,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjEyMDQ1",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T23:15:57Z",
        "updated_at": "2015-04-29T23:15:57Z",
        "author_association": "NONE",
        "body": "At least to triage issues and give the repo a sense of activity.\nOn Wed, Apr 29, 2015 at 5:13 PM Tanner Linsley tannerlinsley@gmail.com\nwrote:\n\n> Not that it has bugs, or that it is incomplete. But there are some\n> features that have yet to be created for it. Simply we just want to make\n> sure it's getting the attention it deserves. Also I volunteer myself and\n> @esjewett as contributors.\n> On Wed, Apr 29, 2015 at 4:47 PM Gordon Woodhull notifications@github.com\n> wrote:\n> \n> > Does crossfilter have any bugs, besides people shooting themselves in the\n> > foot and getting stack overflows with NaNs? I think in a sense it is\n> > complete.\n> > \n> > I can't contribute due to the copyright assignment agreement\n> > https://github.com/square/crossfilter/blob/master/CONTRIBUTING.md.\n> > That's something that creates a sea of red tape in corporations.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/square/crossfilter/issues/151#issuecomment-97608341.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97613401",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97613401",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97613401,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjEzNDAx",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T23:27:20Z",
        "updated_at": "2015-04-29T23:27:20Z",
        "author_association": "NONE",
        "body": "I'd love to see some more activity. There are a few PRs that have been submitted that I'm very interested in, like adding support for more dimensions #75 and one that I can't find by @esjewett that allowed you to remove rows that don't match the current filter.\n\n@esjewett also has https://github.com/esjewett/reductio that is a good place for a number of things that might be useful but deemed out of the purview of core crossfilter. Maybe moving crossfilter to an official organization so that there could be additional plugins brought into the official crossfilter ecosystem.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97613957",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97613957",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97613957,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjEzOTU3",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T23:32:09Z",
        "updated_at": "2015-04-29T23:32:09Z",
        "author_association": "NONE",
        "body": "I second that\nOn Wed, Apr 29, 2015 at 5:28 PM Derek Perkins notifications@github.com\nwrote:\n\n> I'd love to see some more activity. There are a few PRs that have been\n> submitted that I'm very interested in, like adding support for more\n> dimensions #75 https://github.com/square/crossfilter/pull/75 and one\n> that I can't find by @esjewett https://github.com/esjewett that allowed\n> you to remove rows that don't match the current filter.\n> \n> @esjewett https://github.com/esjewett also has\n> https://github.com/esjewett/reductio that is a good place for a number of\n> things that might be useful but deemed out of the purview of core\n> crossfilter. Maybe moving crossfilter to an official organization so that\n> there could be additional plugins brought into the official crossfilter\n> ecosystem.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/151#issuecomment-97613401.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97617229",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97617229",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97617229,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjE3MjI5",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-29T23:59:45Z",
        "updated_at": "2015-04-29T23:59:45Z",
        "author_association": "NONE",
        "body": "I wonder if some people have moved onto other solutions for some reason. Lodash keeps getting faster and more functions. There are now lazy evaluated libraries (lazy.js and immutable.js) which are really performant for large data sets (I don't know if lazy evaluation would make a difference here). transducer.js is another approach that could be fast. \n\nIs there less activity in this library because it's pretty solid and mostly feature complete? Or is it because people are starting to use other options? Does anyone have a sense of that?\n\n(btw, It would be awesome to see some benchmarks between crossfilter and the equivalent operations in lazy-eval libs and lodash for small, medium and large datasets)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97617343",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97617343",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97617343,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjE3MzQz",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T00:00:47Z",
        "updated_at": "2015-04-30T00:00:47Z",
        "author_association": "NONE",
        "body": "> Maybe moving crossfilter to an official organization so that there could be additional plugins brought into the official crossfilter ecosystem.\n\nAn organization would be sweet, with copyright staying with the contributors, as we have done with dc.js. The only reason for copyright assignment is to make it easier to change the copyright later, and that is unlikely to be needed with crossfilter. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97618015",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97618015",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97618015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjE4MDE1",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T00:07:10Z",
        "updated_at": "2015-04-30T00:07:10Z",
        "author_association": "NONE",
        "body": "@jefffriesen, has anyone built up the same cross filtering functionality on top of lodash? That would not be trivial but would indeed be interesting. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97622299",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97622299",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97622299,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjIyMjk5",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T00:46:34Z",
        "updated_at": "2015-04-30T00:46:34Z",
        "author_association": "NONE",
        "body": "@jefffriesen - I feel like dc.js and other libraries are making crossfilter more accessible and hence more popular. \n\nThe core functionality is awesome, so there aren't major core changes that need to be implemented. Mostly just some tweaks and a few feature additions. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97646711",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97646711",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97646711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjQ2NzEx",
        "user": {
            "login": "jefffriesen",
            "id": 445733,
            "node_id": "MDQ6VXNlcjQ0NTczMw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/445733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jefffriesen",
            "html_url": "https://github.com/jefffriesen",
            "followers_url": "https://api.github.com/users/jefffriesen/followers",
            "following_url": "https://api.github.com/users/jefffriesen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jefffriesen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jefffriesen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jefffriesen/subscriptions",
            "organizations_url": "https://api.github.com/users/jefffriesen/orgs",
            "repos_url": "https://api.github.com/users/jefffriesen/repos",
            "events_url": "https://api.github.com/users/jefffriesen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jefffriesen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T03:06:48Z",
        "updated_at": "2015-04-30T03:06:48Z",
        "author_association": "NONE",
        "body": "@gordonwoodhull I don't know if anyone has built up something like a _.crossfilter() or some combinations of _.reduce() and other things. I would be interested to know too.\n\n@derekperkins I agree with you that dc.js has made crossfilter more popular - that was when I first used it. \n\nI could imagine someone taking a step further in functionality like reductio. Or I could imagine performance gains for very large datasets or many dimensions, by offloading the computations in a web worker or doing lazy evaluation. But I don't know what's possible or what's out there.\n\nI am very fond of this library though...\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97654113",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97654113",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97654113,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjU0MTEz",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T04:01:17Z",
        "updated_at": "2015-04-30T04:01:17Z",
        "author_association": "NONE",
        "body": "I love crossfilter and reductio and even the idea of having a crossfilter\necosystem for plugins or helpers like it. I'm already in development of a\ndimension and group management micro library that will integrate with both.\nIt would be great to have a home for it.\n\nWho is technically at the reigns right now?\nOn Wed, Apr 29, 2015 at 9:07 PM Jeff Friesen notifications@github.com\nwrote:\n\n> @gordonwoodhull https://github.com/gordonwoodhull I don't know if\n> anyone has built up something like a _.crossfilter() or some combinations\n> of _.reduce() and other things. I would be interested to know too.\n> \n> @derekperkins https://github.com/derekperkins I agree with you that\n> dc.js has made crossfilter more popular - that was when I first used it.\n> \n> I could imagine someone taking a step further in functionality like\n> reductio. Or I could imagine performance gains for very large datasets or\n> many dimensions, by offloading the computations in a web worker or doing\n> lazy evaluation. But I don't know what's possible or what's out there.\n> \n> I am very fond of this library though...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/151#issuecomment-97646711.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97663865",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97663865",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97663865,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjYzODY1",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T05:03:49Z",
        "updated_at": "2015-04-30T05:03:49Z",
        "author_association": "COLLABORATOR",
        "body": "I'm the Square maintainer for crossfilter, and @jasondavies is also a maintainer who independently merges PRs and new releases. In 99% of cases over the last 2+ years I have just deferred to Jason.\n\nStill asking around internally at Square for volunteers (not opposed to more outside maintainers but it's more work to manage, so starting locally). Give us a day or two to figure it out.\n\n@gordonwoodhull I will also ask about the agreement in case there's room for an update there. Is any agreement an impediment, or something about our specific one? Understand either way, just curious if it can be fixed.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97665976",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97665976",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97665976,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjY1OTc2",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T05:31:38Z",
        "updated_at": "2015-04-30T05:31:38Z",
        "author_association": "NONE",
        "body": "@RandomEtc Thanks for being so responsive. \n\nFYI, crossfilter was available as an organization name, which I just registered on a whim the other day, when @tannerlinsley and @esjewett and I were talking about some extensions we'd like to make. It's available if there is interest in moving it outside of square.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97669361",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97669361",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97669361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjY5MzYx",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T05:49:44Z",
        "updated_at": "2015-04-30T05:49:44Z",
        "author_association": "NONE",
        "body": "@RandomEtc I would say in many organizations it is only moderately difficult to get internal approval for contributing to a project under some well known open source license. \n\nBut it is near impossible to get approval to sign some other agreement that lawyers would have to read.\n\n(Spoken from my limited understanding of IP and organizations.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97841749",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97841749",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97841749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODQxNzQ5",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T15:34:56Z",
        "updated_at": "2015-04-30T15:34:56Z",
        "author_association": "NONE",
        "body": "Hi @RandomEtc and all. Thanks for discussing this. I'd be happy to help maintain if that would be helpful. \n\nI'm definitely on-board with the general philosophy of keeping Crossfilter as lean as possible and keeping complexity in helper libraries, but there are some things that it would be extremely helpful to address internally that have not been getting attention. I'm thinking here of issues like #109, #92, and #75. It would be great to have a small team of maintainers and major users of Crossfilter in place who could work together to review, improve, and merge these sorts of changes.\n\nAs far as I've seen, there's nothing else out there like Crossfilter. I'd like to see it thrive as I think it's a very important piece of any type of interactive visualization of more than a small amount of data.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97878429",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97878429",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97878429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODc4NDI5",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T16:53:46Z",
        "updated_at": "2015-04-30T16:53:46Z",
        "author_association": "COLLABORATOR",
        "body": "On #109 it seems like there was some support from Jason already, but no code. I would create a branch and try it, and get buy-in from other contributors. Forgiveness not permission. It would mean cutting a major release number if it breaks the API, but that shouldn't be an issue if the pay-off is worth it.\n\n#92 certainly looks like cause for concern since I've ignored it for 18 months. Apologies for that. Folks who are following along, it would be helpful to review and test this PR if it's a strong candidate for merging. I have no opinion on it except what I already shared :)\n\n#75 needs reviewing, verifying and benchmarking again following @sciyoshi's fixes. Please help.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97882031",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97882031",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97882031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODgyMDMx",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T17:01:40Z",
        "updated_at": "2015-04-30T17:01:40Z",
        "author_association": "NONE",
        "body": "#109 has code (see the linked branch), but since Jason wanted to take another approach I was trying to get buy-in before creating a pull request. I don't want to waste effort on this. It doesn't break the API, just extends it. If you (@RandomEtc) think you'd be OK with merging that code, I'll submit a pull request ASAP.\n\nOn the other two, it's a bit of a horse/cart problem. If there is not active maintenance of the project, it is difficult to justify putting significant effort into review that may never be looked at. I look forward to hearing what Square decides on that front. Sorry to be difficult on that, but I think that's the key issue to be resolved.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97903203",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97903203",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97903203,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTAzMjAz",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T18:15:01Z",
        "updated_at": "2015-04-30T18:15:01Z",
        "author_association": "COLLABORATOR",
        "body": "I freely admit there is no active maintenance from Square on the project at this time. I'm able to drop-in to discussions like this quickly, and can provide stylistic and process guidance, but I can't commit to properly reviewing PRs if that's what it takes to unblock them.\n\nStill asking around internally, that will give us the info we need to decide what happens next. I'm open to \"blessing\" a fork as well, which is what we did with Cube when it became clear we weren't going to actively maintain that.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/97934559",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-97934559",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 97934559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk3OTM0NTU5",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-04-30T19:19:01Z",
        "updated_at": "2015-04-30T19:19:01Z",
        "author_association": "NONE",
        "body": "@RandomEtc No worries, we all know how it is with finding the time for these things! And I didn't mean to cast blame as far as ongoing maintenance, just to make clear that the issues of getting proper review and involvement from the maintainers is related in my mind.\n\nI'm wasn't familiar with what happened with Cube. Good to see there is some precedence for dealing with these types of projects.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/98217402",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-98217402",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 98217402,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjE3NDAy",
        "user": {
            "login": "wssbck",
            "id": 1608505,
            "node_id": "MDQ6VXNlcjE2MDg1MDU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1608505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wssbck",
            "html_url": "https://github.com/wssbck",
            "followers_url": "https://api.github.com/users/wssbck/followers",
            "following_url": "https://api.github.com/users/wssbck/following{/other_user}",
            "gists_url": "https://api.github.com/users/wssbck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wssbck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wssbck/subscriptions",
            "organizations_url": "https://api.github.com/users/wssbck/orgs",
            "repos_url": "https://api.github.com/users/wssbck/repos",
            "events_url": "https://api.github.com/users/wssbck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wssbck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-01T19:44:36Z",
        "updated_at": "2015-05-01T19:44:36Z",
        "author_association": "NONE",
        "body": "@RandomEtc Out of curiosity - can you share some details as to why you moved dashboard aggregations to the backend? The added interactivity of frontend calculations was not worth it after all?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/98232488",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-98232488",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 98232488,
        "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjMyNDg4",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-01T20:47:54Z",
        "updated_at": "2015-05-01T20:47:54Z",
        "author_association": "COLLABORATOR",
        "body": "Many reasons. Some including: data volume, mobile performance, parity between results on different reporting platforms (web, app, email, etc).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101309441",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101309441",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101309441,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTMwOTQ0MQ==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T14:58:27Z",
        "updated_at": "2015-05-12T14:58:27Z",
        "author_association": "NONE",
        "body": "Hi @RandomEtc, just checking in to see if there is any update from the internal discussion @ Square? Cheers, Ethan\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101362015",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101362015",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101362015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2MjAxNQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:41:51Z",
        "updated_at": "2015-05-12T17:41:51Z",
        "author_association": "COLLABORATOR",
        "body": "No volunteers inside of Square. I'm not sure of the best steps forward, I'll find a time to swap notes with @jasondavies and see if we can identify one or two people to assist.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101362743",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101362743",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101362743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2Mjc0Mw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:44:36Z",
        "updated_at": "2015-05-12T17:44:36Z",
        "author_association": "COLLABORATOR",
        "body": "Aside: it sounds like a lot of contributors are finding crossfilter via dc.js? We've also had several issues filed here that turned out to be dc.js issues. Would the dc.js maintainers consider forking crossfilter for their purposes and accepting patches directly there?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101363869",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101363869",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101363869,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2Mzg2OQ==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:48:08Z",
        "updated_at": "2015-05-12T17:48:08Z",
        "author_association": "NONE",
        "body": "Thanks for the update. I think @gordonwoodhull would be the key person to ask regarding the dc.js angle. I'd be up for helping maintain a dc.js organization fork or another fork - whatever is agreed.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101366300",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101366300",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101366300,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2NjMwMA==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:59:12Z",
        "updated_at": "2015-05-12T17:59:12Z",
        "author_association": "NONE",
        "body": "@RandomEtc - I don't love the idea of forking crossfilter into dc.js or into that organization. Not that dc.js isn't great, but there are still plenty of people using crossfilter outside of that context, myself included. I'd love to have @gordonwoodhull and the dc.js team heavily involved, but I think crossfilter is big enough to warrant separate maintenance.\n\nMy vote would be to officially transfer this repo to a crossfilter organization. If square doesn't want to do that or there are other issues preventing that, then next best would be a blessed fork to that same organization.\n\nWhatever happens, I think a key thing would be to change the licensing to something more open so that we don't have any other contribution issues.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101366338",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101366338",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101366338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2NjMzOA==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:59:23Z",
        "updated_at": "2015-05-12T17:59:23Z",
        "author_association": "NONE",
        "body": "Thanks for the update, @RandomEtc. Yes, dc-js could host crossfilter, but it might be more appropriate to put it in its own organization as @derekperkins suggested.\n\nSince the dependency is really the other way and lots of people use crossfilter without dc.js. \n\nEither way I'll be glad to help maintain it, as long as there are few other maintainers and no contributor agreement.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101366448",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101366448",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101366448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2NjQ0OA==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T17:59:54Z",
        "updated_at": "2015-05-12T17:59:54Z",
        "author_association": "NONE",
        "body": "@gordonwoodhull - Great minds think alike :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101367309",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101367309",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101367309,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2NzMwOQ==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T18:02:15Z",
        "updated_at": "2015-05-12T18:02:15Z",
        "author_association": "NONE",
        "body": "My vote for new collaborators would be @esjewett, @gordonwoodhull & @tannerlinsley.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/101367580",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-101367580",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 101367580,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM2NzU4MA==",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-12T18:02:43Z",
        "updated_at": "2015-05-12T18:02:43Z",
        "author_association": "NONE",
        "body": "I'm on board.\n\nOn Tue, May 12, 2015 at 12:00 PM Derek Perkins notifications@github.com\nwrote:\n\n> @gordonwoodhull https://github.com/gordonwoodhull - Great minds think\n> alike :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/151#issuecomment-101366448.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/102115346",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-102115346",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 102115346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjExNTM0Ng==",
        "user": {
            "login": "sylvinus",
            "id": 410452,
            "node_id": "MDQ6VXNlcjQxMDQ1Mg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/410452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sylvinus",
            "html_url": "https://github.com/sylvinus",
            "followers_url": "https://api.github.com/users/sylvinus/followers",
            "following_url": "https://api.github.com/users/sylvinus/following{/other_user}",
            "gists_url": "https://api.github.com/users/sylvinus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sylvinus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sylvinus/subscriptions",
            "organizations_url": "https://api.github.com/users/sylvinus/orgs",
            "repos_url": "https://api.github.com/users/sylvinus/repos",
            "events_url": "https://api.github.com/users/sylvinus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sylvinus/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-14T17:47:13Z",
        "updated_at": "2015-05-14T17:47:13Z",
        "author_association": "NONE",
        "body": "I'm just a user at this point, but very glad to see this happening!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/102132719",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-102132719",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 102132719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjEzMjcxOQ==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-14T18:46:01Z",
        "updated_at": "2015-05-14T18:46:01Z",
        "author_association": "NONE",
        "body": "@jasondavies : I'm very curious to hear your opinion on the matter, since you're the authority at this point. Are you interested in continuing to be the lead maintainer of the project? Do you have plans for future crossfilter development? \n\nWhile we are all interested in helping crossfilter grow, I think all of us would defer to your judgment at this point. I don't believe that any of us are looking to \"pollute\" the repo with a ton of feature requests. I think the vision is more about building the ecosystem around the core:\n- https://github.com/esjewett/reductio\n- https://github.com/dc-js/dc.js\n- @tannerlinsley has a library similar to dc.js that interacts with https://github.com/nnnick/Chart.js\n\nIn terms of core crossfilter changes, I think there are only a few outstanding issues that we'd like to see resolved.\n\nAll that being said, I really believe that the best solution is to transfer the existing repo to a crossfilter organization to legitimize some of these plugins and to aid in the discoverability. This should also allow for us to continue to support existing npm and other systems pointing at the existing url.\n\n@RandomEtc : Is there any resistance internally to pushing the repo out to an org?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/104299917",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-104299917",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 104299917,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDI5OTkxNw==",
        "user": {
            "login": "kimalbrecht",
            "id": 2091057,
            "node_id": "MDQ6VXNlcjIwOTEwNTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2091057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kimalbrecht",
            "html_url": "https://github.com/kimalbrecht",
            "followers_url": "https://api.github.com/users/kimalbrecht/followers",
            "following_url": "https://api.github.com/users/kimalbrecht/following{/other_user}",
            "gists_url": "https://api.github.com/users/kimalbrecht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kimalbrecht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kimalbrecht/subscriptions",
            "organizations_url": "https://api.github.com/users/kimalbrecht/orgs",
            "repos_url": "https://api.github.com/users/kimalbrecht/repos",
            "events_url": "https://api.github.com/users/kimalbrecht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kimalbrecht/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-21T14:36:14Z",
        "updated_at": "2015-05-21T14:36:14Z",
        "author_association": "NONE",
        "body": "> Is there any way to all filtered values, but mantaining original data order?\n\nI'm also interested in that. \n\nWhat I'm actually looking for is a way to return the filtered data and keeping the initial index of the dataset. So instead of removing the filtered rows setting them to blank (in csv: ,,,,).\n\nAny help, workaround would be appreciated.\n\nThanks\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/105053466",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-105053466",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 105053466,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA1MzQ2Ng==",
        "user": {
            "login": "robertlevy",
            "id": 1929538,
            "node_id": "MDQ6VXNlcjE5Mjk1Mzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1929538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robertlevy",
            "html_url": "https://github.com/robertlevy",
            "followers_url": "https://api.github.com/users/robertlevy/followers",
            "following_url": "https://api.github.com/users/robertlevy/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertlevy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robertlevy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertlevy/subscriptions",
            "organizations_url": "https://api.github.com/users/robertlevy/orgs",
            "repos_url": "https://api.github.com/users/robertlevy/repos",
            "events_url": "https://api.github.com/users/robertlevy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robertlevy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-24T19:17:54Z",
        "updated_at": "2015-05-24T19:17:54Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/105060253",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-105060253",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 105060253,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTA2MDI1Mw==",
        "user": {
            "login": "kimalbrecht",
            "id": 2091057,
            "node_id": "MDQ6VXNlcjIwOTEwNTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2091057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kimalbrecht",
            "html_url": "https://github.com/kimalbrecht",
            "followers_url": "https://api.github.com/users/kimalbrecht/followers",
            "following_url": "https://api.github.com/users/kimalbrecht/following{/other_user}",
            "gists_url": "https://api.github.com/users/kimalbrecht/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kimalbrecht/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kimalbrecht/subscriptions",
            "organizations_url": "https://api.github.com/users/kimalbrecht/orgs",
            "repos_url": "https://api.github.com/users/kimalbrecht/repos",
            "events_url": "https://api.github.com/users/kimalbrecht/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kimalbrecht/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-24T20:31:39Z",
        "updated_at": "2015-05-24T20:31:39Z",
        "author_association": "NONE",
        "body": "So I found a solution. But I could imagine that there are much better, simple, faster ways of doing this. Any improvements are welcome.\n\nFirst I created an Index for the loaded data before inputting the data into crossfilter (I'm working with CSV data):\n\n```\n  data.forEach(function(d,i) {\n    d.index = i;\n    d.x = +d.x;\n    d.y = +d.y;\n    .....\n  });\n```\n\nNow I'm calling this function each time crossfilter is used:\n\n```\n  function passValues() {\n\n    var infos = index.top(Infinity);\n\n    var len = data.length;\n\n    var nodes = [];\n\n    while(len--){\n\n      if(typeof infos[len] != 'undefined') {\n\n        nodes.splice(infos[len].index, 0, infos[len]);\n\n      }\n      else {\n\n        nodes.push('');\n\n      }\n    }\n\n    raw_data_function(nodes);\n  } \n```\n\nThis creates either an empty object (if it is filtered) or puts the data in the right spot through the .splice method. \n\nIt works well for me (I'm dealing with 25.000 objects)  but I'm sure there are better methods. \n\nBest, Kim\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/105638630",
        "html_url": "https://github.com/square/crossfilter/issues/150#issuecomment-105638630",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/150",
        "id": 105638630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTYzODYzMA==",
        "user": {
            "login": "vmantese",
            "id": 10504414,
            "node_id": "MDQ6VXNlcjEwNTA0NDE0",
            "avatar_url": "https://avatars3.githubusercontent.com/u/10504414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vmantese",
            "html_url": "https://github.com/vmantese",
            "followers_url": "https://api.github.com/users/vmantese/followers",
            "following_url": "https://api.github.com/users/vmantese/following{/other_user}",
            "gists_url": "https://api.github.com/users/vmantese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vmantese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vmantese/subscriptions",
            "organizations_url": "https://api.github.com/users/vmantese/orgs",
            "repos_url": "https://api.github.com/users/vmantese/repos",
            "events_url": "https://api.github.com/users/vmantese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vmantese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-26T19:15:37Z",
        "updated_at": "2015-05-26T19:18:05Z",
        "author_association": "NONE",
        "body": "Here is the solution I used. Works like a charm.\n\n```\n//Prefilter\nfunction preFilter(dim,okey,oval){\n\n                return{\n\n                    top:function(x1){\n                        var a1 = dim.top(x1).filter(function(v){\n                            return v[okey] === oval;\n                        });\n                        return a1;\n                    },\n                    filter:function(x2){\n                        dim.filter(x2);\n                    },\n                    filterAll:function(){\n                        dim.filterAll();\n                    },\n                    filterExact:function(x4){\n                        dim.filterExact(x4);\n                    },\n                    filterFunction:function(x5){\n                        dim.filterFunction(x5);\n                    },\n                    filterRange:function(x6){\n                        dim.filterRange(x6);\n                    },\n                    bottom:function(x7){\n                        dim.bottom(x7);\n                    },\n                    dispose:function(){\n                        dim.dispose();\n                    },\n                    group:function(x9){\n                        dim.group(x9);\n                    },\n                    groupAll:function(x10){\n                        dim.groupAll(x10);\n                    },\n                    remove:function(){\n                        dim.remove();\n                    }\n                };\n            }\n```\n\nHope this helps someone.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/105843278",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-105843278",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 105843278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTg0MzI3OA==",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-05-27T09:49:58Z",
        "updated_at": "2015-05-27T09:49:58Z",
        "author_association": "NONE",
        "body": "+1, hope to see this great project moving forward again.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/108038166",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-108038166",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 108038166,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwODAzODE2Ng==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T18:12:45Z",
        "updated_at": "2015-06-02T18:12:45Z",
        "author_association": "COLLABORATOR",
        "body": "Sorry for the delayed update here.\n\nI spoke with Jason and we're in agreement at a high level: as @gordonwoodhull speculated above, we consider crossfilter essentially \"finished\" at this point (being targeted at the use-case on the demo page: linked charts of dimensions from a simple flat dataset). I share this as plainly as possible so you know why Jason and I are not picking up the pace on PRs on this repo.\n\nWe completely agree that there are possible extensions and API improvements that would be worth putting into a \"crossfilter\" v2. But we also agree that if we were doing that we would probably write something from scratch using the lessons learned from v1. Neither of us is planning to start such a project.\n\nI am investigating if any of Square's other projects have ever spun out into a github org. I doubt that it will happen - it's difficult because of our requirement for contributor agreements. It's more likely we would encourage contributors to organize among themselves (something like \"crossfilter-contrib\" would make it clear it's not Square's thing, and could always be renamed in future). If the participants on this thread want to go ahead and do that, it's probably the best way to focus the energies and enthusiasms of the group.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/108050260",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-108050260",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 108050260,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwODA1MDI2MA==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-02T18:43:48Z",
        "updated_at": "2015-06-02T18:44:13Z",
        "author_association": "NONE",
        "body": "Thanks for the consideration and the update @RandomEtc - we really appreciate everything that you've done. I don't think that anyone has plans at the moment to do a full v2 rewrite. The updates are more related to building out the ecosystem of plugins / extensions, and leaving the core API mostly unchanged.\n\nI definitely understand the legal difficulties associated with actually spinning it out. We went ahead and forked into the crossfilter organization https://github.com/crossfilter/crossfilter. We will make it very clear that the original code was written at Square, but that this is not an official project supported or maintained by Square. Once we get things set up on that end, do you have any concerns \"blessing\" that fork, similar to what you did with Cube?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/109346017",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-109346017",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 109346017,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTM0NjAxNw==",
        "user": {
            "login": "motin",
            "id": 793037,
            "node_id": "MDQ6VXNlcjc5MzAzNw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/793037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/motin",
            "html_url": "https://github.com/motin",
            "followers_url": "https://api.github.com/users/motin/followers",
            "following_url": "https://api.github.com/users/motin/following{/other_user}",
            "gists_url": "https://api.github.com/users/motin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/motin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/motin/subscriptions",
            "organizations_url": "https://api.github.com/users/motin/orgs",
            "repos_url": "https://api.github.com/users/motin/repos",
            "events_url": "https://api.github.com/users/motin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/motin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-05T16:12:30Z",
        "updated_at": "2015-06-05T16:12:30Z",
        "author_association": "NONE",
        "body": "@stevemandl +1 your extension sounds great! Do you have any idea when it will be available? Care to share the code even though it may not be documented yet?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/110364325",
        "html_url": "https://github.com/square/crossfilter/pull/153#issuecomment-110364325",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/153",
        "id": 110364325,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMDM2NDMyNQ==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-09T13:59:33Z",
        "updated_at": "2015-06-09T13:59:33Z",
        "author_association": "NONE",
        "body": "Sorry, got bitten by the Github fork/original pull request defaults :-/\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/111728190",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-111728190",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 111728190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTcyODE5MA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-13T16:42:22Z",
        "updated_at": "2015-06-13T16:42:22Z",
        "author_association": "COLLABORATOR",
        "body": "Just closing the loop here... \n\nSelf-organizing an org makes sense. That's what I would have done. I would personally prefer it be called something else (add \"-contrib\" or something) but I'm not speaking for Square here. Speaking for Square - please unpublish http://crossfilter.github.io/crossfilter/ and/or remove the Square logo from it and make it clearer that it's a fork. It's probably best to remove the gh-pages branch from the fork until you're ready to cut a new release. Likewise please update the README to not be written as Square. Thanks!\n\nBefore linking from Square's crossfilter repo I'd like to ensure that meaningful additions/features are happening - the forks of Cube were significantly modified/enhanced before we linked to them. Keep me posted once the initial merges settle, I'll make it happen!\n\nThanks for understanding and keeping the energy going!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/111739456",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-111739456",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 111739456,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExMTczOTQ1Ng==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-13T18:46:47Z",
        "updated_at": "2015-06-13T18:46:47Z",
        "author_association": "NONE",
        "body": "@RandomEtc Thanks for closing the loop and the feedback. We're still getting things together and moving a bit slowly, but I've gone through and tried to update all the documents in the main repo and gh-pages to remove Square branding and \"point-of-view\" except for the copyright notices. I've also added a sentence in the first paragraph of the gh-pages site to indicate that it is a community fork and link back to the original project. Sorry for the slip there.\n\nRegarding the renaming, that is a bit difficult. In some ways, a new name would be ideal (for many reasons including reduced confusion, Bower/NPM registration, etc), but this is also meant to be a continuation of the same project. crossfilter-contrib, at least in my mind means additional components that work with the original Crossfilter library, and that's not what this is, or at least not only. So, I think it may be a slow process to rename. We'll talk about it and figure something out!\n\nThanks again for your understanding and guidance with this.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/114836079",
        "html_url": "https://github.com/square/crossfilter/issues/154#issuecomment-114836079",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/154",
        "id": 114836079,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExNDgzNjA3OQ==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-06-24T11:25:52Z",
        "updated_at": "2015-06-24T11:25:52Z",
        "author_association": "COLLABORATOR",
        "body": "As described in the documentation, [group.top](https://github.com/square/crossfilter/wiki/API-Reference#group_top) uses an ordering based on the group\u2019s value (in your example, the counts).  If you want all groups ordered by key, you can use [group.all](https://github.com/square/crossfilter/wiki/API-Reference#group_all) instead.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118332967",
        "html_url": "https://github.com/square/crossfilter/issues/155#issuecomment-118332967",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/155",
        "id": 118332967,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODMzMjk2Nw==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-03T12:18:28Z",
        "updated_at": "2015-07-03T12:18:28Z",
        "author_association": "COLLABORATOR",
        "body": "The objects representing groups are part of the API, but you can simply convert them to your own format after grouping, e.g.:\n\n``` js\nvalues.map(function(d) {\n  return {key: d.key, size: d.value.size, weight: d.value.weight};\n});\n```\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118334378",
        "html_url": "https://github.com/square/crossfilter/issues/156#issuecomment-118334378",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/156",
        "id": 118334378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODMzNDM3OA==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-03T12:28:16Z",
        "updated_at": "2015-07-03T12:28:16Z",
        "author_association": "COLLABORATOR",
        "body": "Seems to work fine for me, perhaps you should post a reproducible example somewhere?  Personally I think it would be simpler to use `firstGrouping.top(Infinity)` and regroup small groups into \"(other)\" yourself.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118335359",
        "html_url": "https://github.com/square/crossfilter/issues/155#issuecomment-118335359",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/155",
        "id": 118335359,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODMzNTM1OQ==",
        "user": {
            "login": "ronakrrb",
            "id": 5681924,
            "node_id": "MDQ6VXNlcjU2ODE5MjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5681924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronakrrb",
            "html_url": "https://github.com/ronakrrb",
            "followers_url": "https://api.github.com/users/ronakrrb/followers",
            "following_url": "https://api.github.com/users/ronakrrb/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronakrrb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronakrrb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronakrrb/subscriptions",
            "organizations_url": "https://api.github.com/users/ronakrrb/orgs",
            "repos_url": "https://api.github.com/users/ronakrrb/repos",
            "events_url": "https://api.github.com/users/ronakrrb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronakrrb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-03T12:33:29Z",
        "updated_at": "2015-07-03T12:33:29Z",
        "author_association": "NONE",
        "body": "Actually, the project i am working on is very data heavy. So, we are trying to reduce as many iterations as possible. With the .map() approach comes additional iteration. \nAlso, the number of aggregation function may be sometimes just 1 and sometimes more than one. Hence, we will have to add a check whether the value attribute is a primitive value or an object. To avoid such processing, how can we modify the API to return single level object instead of nested?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118339581",
        "html_url": "https://github.com/square/crossfilter/issues/155#issuecomment-118339581",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/155",
        "id": 118339581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODMzOTU4MQ==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-03T12:52:48Z",
        "updated_at": "2015-07-03T12:52:48Z",
        "author_association": "COLLABORATOR",
        "body": "Internally, groups are represented as {key, value} objects, so if you want to represent groups differently, you\u2019d either have to modify the internals or simply create your own representation as I\u2019ve suggested above.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118345372",
        "html_url": "https://github.com/square/crossfilter/issues/155#issuecomment-118345372",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/155",
        "id": 118345372,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODM0NTM3Mg==",
        "user": {
            "login": "ronakrrb",
            "id": 5681924,
            "node_id": "MDQ6VXNlcjU2ODE5MjQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5681924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronakrrb",
            "html_url": "https://github.com/ronakrrb",
            "followers_url": "https://api.github.com/users/ronakrrb/followers",
            "following_url": "https://api.github.com/users/ronakrrb/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronakrrb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronakrrb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronakrrb/subscriptions",
            "organizations_url": "https://api.github.com/users/ronakrrb/orgs",
            "repos_url": "https://api.github.com/users/ronakrrb/repos",
            "events_url": "https://api.github.com/users/ronakrrb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronakrrb/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-03T13:07:42Z",
        "updated_at": "2015-07-03T13:07:42Z",
        "author_association": "NONE",
        "body": "Interesting. I will probably have to check if i can modify the internals as this is gonna be a dynamic feature to the user whether to specify 1 or multiple aggregations. Thanks\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118498343",
        "html_url": "https://github.com/square/crossfilter/issues/156#issuecomment-118498343",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/156",
        "id": 118498343,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODQ5ODM0Mw==",
        "user": {
            "login": "elmart",
            "id": 135757,
            "node_id": "MDQ6VXNlcjEzNTc1Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elmart",
            "html_url": "https://github.com/elmart",
            "followers_url": "https://api.github.com/users/elmart/followers",
            "following_url": "https://api.github.com/users/elmart/following{/other_user}",
            "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
            "organizations_url": "https://api.github.com/users/elmart/orgs",
            "repos_url": "https://api.github.com/users/elmart/repos",
            "events_url": "https://api.github.com/users/elmart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elmart/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-04T10:11:01Z",
        "updated_at": "2015-07-04T10:15:57Z",
        "author_association": "NONE",
        "body": "> Seems to work fine for me\n\nMmm, strange. It definitely doesn't for me.\n\n> Personally I think it would be simpler to use firstGrouping.top(Infinity) and regroup small groups into \"(other)\" yourself.\n\nI considered that, but this is part of a generic widget which depict groups generated by the passed grouping function. I wouldn't like to special-case that for my particular case.\n\n> perhaps you should post a reproducible example somewhere? \n\nI'll try to post something executable, but I need some time to do it.\nIn the meantime, I have another question. From group() function doc:\n\n```\nThe groupValue function is optional; if not specified, it defaults to the identity \nfunction. Like the value function, groupValue must return a naturally-ordered\nvalue; furthermore, this order must be consistent with the dimension's value function!\n```\n\nI suspect my problem could be related with that last requirement (consistency between groupValue function and dimension value function). Could you expand on what would that mean?\nI'm interpreting it as \n`a <= b --> g(a) <= g(b), where a = v(recordA) and b = v(recordB)`\nwhere v is dimension value function and g is group value function.\nThat doesn't hold in my case, precisely because of group \"(other)\". Is that really needed? Why?\n\nThanks.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118532676",
        "html_url": "https://github.com/square/crossfilter/issues/156#issuecomment-118532676",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/156",
        "id": 118532676,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODUzMjY3Ng==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-04T16:40:42Z",
        "updated_at": "2015-07-04T16:40:42Z",
        "author_association": "COLLABORATOR",
        "body": "Ah, sorry about that, perhaps I didn\u2019t test on a large enough sample to reproduce.  You\u2019re right: the group order must be consistent with the dimension\u2019s value order.  This is primarily to allow fast updating of groups internally.  It\u2019s a bit restrictive, but I think it\u2019s best to treat Crossfilter as quite a low-level API rather than a flexible high-level API.  In your case, this is why it would be better to regroup into \u201c(other)\u201d outside of Crossfilter.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118570368",
        "html_url": "https://github.com/square/crossfilter/issues/156#issuecomment-118570368",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/156",
        "id": 118570368,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODU3MDM2OA==",
        "user": {
            "login": "elmart",
            "id": 135757,
            "node_id": "MDQ6VXNlcjEzNTc1Nw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/135757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elmart",
            "html_url": "https://github.com/elmart",
            "followers_url": "https://api.github.com/users/elmart/followers",
            "following_url": "https://api.github.com/users/elmart/following{/other_user}",
            "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
            "organizations_url": "https://api.github.com/users/elmart/orgs",
            "repos_url": "https://api.github.com/users/elmart/repos",
            "events_url": "https://api.github.com/users/elmart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elmart/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-05T02:08:44Z",
        "updated_at": "2015-07-05T02:08:44Z",
        "author_association": "NONE",
        "body": "Ok. I ended up doing as you adviced (making second grouping out of crossfilter). \nThanks. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/118709297",
        "html_url": "https://github.com/square/crossfilter/issues/154#issuecomment-118709297",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/154",
        "id": 118709297,
        "node_id": "MDEyOklzc3VlQ29tbWVudDExODcwOTI5Nw==",
        "user": {
            "login": "kathalye",
            "id": 7765574,
            "node_id": "MDQ6VXNlcjc3NjU1NzQ=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/7765574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kathalye",
            "html_url": "https://github.com/kathalye",
            "followers_url": "https://api.github.com/users/kathalye/followers",
            "following_url": "https://api.github.com/users/kathalye/following{/other_user}",
            "gists_url": "https://api.github.com/users/kathalye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kathalye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kathalye/subscriptions",
            "organizations_url": "https://api.github.com/users/kathalye/orgs",
            "repos_url": "https://api.github.com/users/kathalye/repos",
            "events_url": "https://api.github.com/users/kathalye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kathalye/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-06T04:23:49Z",
        "updated_at": "2015-07-06T04:23:49Z",
        "author_association": "NONE",
        "body": "Sorry for late response. Thank you for your reply. I will use group.all instead of top.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/120109864",
        "html_url": "https://github.com/square/crossfilter/issues/140#issuecomment-120109864",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/140",
        "id": 120109864,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDEwOTg2NA==",
        "user": {
            "login": "b-long",
            "id": 66993,
            "node_id": "MDQ6VXNlcjY2OTkz",
            "avatar_url": "https://avatars0.githubusercontent.com/u/66993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/b-long",
            "html_url": "https://github.com/b-long",
            "followers_url": "https://api.github.com/users/b-long/followers",
            "following_url": "https://api.github.com/users/b-long/following{/other_user}",
            "gists_url": "https://api.github.com/users/b-long/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/b-long/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/b-long/subscriptions",
            "organizations_url": "https://api.github.com/users/b-long/orgs",
            "repos_url": "https://api.github.com/users/b-long/repos",
            "events_url": "https://api.github.com/users/b-long/events{/privacy}",
            "received_events_url": "https://api.github.com/users/b-long/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-07-09T19:05:31Z",
        "updated_at": "2015-07-09T19:05:31Z",
        "author_association": "NONE",
        "body": "@jasondavies I feel this ticket should probably be closed, since @agrass solved @jdarling 's problem.  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/128538536",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-128538536",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 128538536,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyODUzODUzNg==",
        "user": {
            "login": "dderiso",
            "id": 908420,
            "node_id": "MDQ6VXNlcjkwODQyMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/908420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dderiso",
            "html_url": "https://github.com/dderiso",
            "followers_url": "https://api.github.com/users/dderiso/followers",
            "following_url": "https://api.github.com/users/dderiso/following{/other_user}",
            "gists_url": "https://api.github.com/users/dderiso/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dderiso/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dderiso/subscriptions",
            "organizations_url": "https://api.github.com/users/dderiso/orgs",
            "repos_url": "https://api.github.com/users/dderiso/repos",
            "events_url": "https://api.github.com/users/dderiso/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dderiso/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-06T23:30:29Z",
        "updated_at": "2015-08-06T23:30:29Z",
        "author_association": "NONE",
        "body": "@esjewett @RandomEtc Thanks for all the hard work! Is it correct to summarize this as Crossfilter's home for active community development is now: https://github.com/crossfilter/crossfilter ? If so, it might be good to put a note on the readme of this repo so devs know where to submit pull requests. Thanks again for everything, love this library.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/128548864",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-128548864",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 128548864,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyODU0ODg2NA==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-07T00:37:36Z",
        "updated_at": "2015-08-07T00:37:36Z",
        "author_association": "NONE",
        "body": "@dderiso I'd say that https://github.com/crossfilter/crossfilter is open to pull requests and issues. Probably best to first open an issue to discuss as we only want to make changes that are really required in the core library. We are working very slowly though. It's probably quite premature to say that it is _the_ home for community development as that's the kind of thing I'd prefer to show rather than say, and I don't think we've shown that yet.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/128565786",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-128565786",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 128565786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEyODU2NTc4Ng==",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-07T02:31:11Z",
        "updated_at": "2015-08-07T02:31:11Z",
        "author_association": "NONE",
        "body": "Also the great thing here is the crossfilter organization. Sure we don't\nknow if this is the home for anything yet, but at least there is room here\nfor not only new features but also plugins, and enhancements that fall\nunder the crossfilter umbrella.\nOn Thu, Aug 6, 2015 at 6:37 PM Ethan Jewett notifications@github.com\nwrote:\n\n> @dderiso https://github.com/dderiso I'd say that\n> https://github.com/crossfilter/crossfilter is open to pull requests and\n> issues. Probably best to first open an issue to discuss as we only want to\n> make changes that are really required in the core library. We are working\n> very slowly though. It's probably quite premature to say that it is _the_\n> home for community development as that's the kind of thing I'd prefer to\n> show rather than say, and I don't think we've shown that yet.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/square/crossfilter/issues/151#issuecomment-128548864.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130217778",
        "html_url": "https://github.com/square/crossfilter/pull/159#issuecomment-130217778",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/159",
        "id": 130217778,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDIxNzc3OA==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T08:38:39Z",
        "updated_at": "2015-08-12T08:38:39Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for the suggested fix.  I opted for a more bitwise approach rather than a comparison operator.  Your fix works fine in this situation, since this branch isn\u2019t taken for more than 16 dimensions (32-bit values), but the comparison operator wouldn\u2019t have worked if the bitwise representation had produced a negative value, which it can do in the 32-bit cases.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130218237",
        "html_url": "https://github.com/square/crossfilter/issues/158#issuecomment-130218237",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/158",
        "id": 130218237,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDIxODIzNw==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T08:40:00Z",
        "updated_at": "2015-08-12T08:40:00Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks!  This went unnoticed for two years and five months.  I think you deserve a prize!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130258991",
        "html_url": "https://github.com/square/crossfilter/issues/158#issuecomment-130258991",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/158",
        "id": 130258991,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDI1ODk5MQ==",
        "user": {
            "login": "HKochniss",
            "id": 1243055,
            "node_id": "MDQ6VXNlcjEyNDMwNTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1243055?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HKochniss",
            "html_url": "https://github.com/HKochniss",
            "followers_url": "https://api.github.com/users/HKochniss/followers",
            "following_url": "https://api.github.com/users/HKochniss/following{/other_user}",
            "gists_url": "https://api.github.com/users/HKochniss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HKochniss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HKochniss/subscriptions",
            "organizations_url": "https://api.github.com/users/HKochniss/orgs",
            "repos_url": "https://api.github.com/users/HKochniss/repos",
            "events_url": "https://api.github.com/users/HKochniss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HKochniss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T10:51:03Z",
        "updated_at": "2015-08-12T10:54:46Z",
        "author_association": "NONE",
        "body": "It's my first contribution to an OS project on Github, I'm feeling kind of good right now. :-)\n\nThe price would be easier ways to contribute..\nIt's pretty hard to contribute as a windows dev, would you accept pull requests for a gulpfile (a makefile is super windows-dev unfriendly, almost kept me from sending the PR)? An maybe use the new contributor license feature of Github instead of the google docs one (not nearly as big of an issue as the makefile)?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130261268",
        "html_url": "https://github.com/square/crossfilter/pull/159#issuecomment-130261268",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/159",
        "id": 130261268,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDI2MTI2OA==",
        "user": {
            "login": "HKochniss",
            "id": 1243055,
            "node_id": "MDQ6VXNlcjEyNDMwNTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1243055?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HKochniss",
            "html_url": "https://github.com/HKochniss",
            "followers_url": "https://api.github.com/users/HKochniss/followers",
            "following_url": "https://api.github.com/users/HKochniss/following{/other_user}",
            "gists_url": "https://api.github.com/users/HKochniss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HKochniss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HKochniss/subscriptions",
            "organizations_url": "https://api.github.com/users/HKochniss/orgs",
            "repos_url": "https://api.github.com/users/HKochniss/repos",
            "events_url": "https://api.github.com/users/HKochniss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HKochniss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T10:56:50Z",
        "updated_at": "2015-08-12T10:56:50Z",
        "author_association": "NONE",
        "body": "Ok, makes sense.. I like the fact that there's always another critical eye in the PR process, wouldn't have thought about that.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130274803",
        "html_url": "https://github.com/square/crossfilter/issues/158#issuecomment-130274803",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/158",
        "id": 130274803,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDI3NDgwMw==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T12:08:39Z",
        "updated_at": "2015-08-12T12:08:39Z",
        "author_association": "COLLABORATOR",
        "body": "Rather than using gulp, since the build process is quite simple I suppose it might be preferable to have a pure Node-based build without relying on heavyweight dependencies.\n\nWhich new contributor license feature are you referring to?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130349760",
        "html_url": "https://github.com/square/crossfilter/issues/158#issuecomment-130349760",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/158",
        "id": 130349760,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDM0OTc2MA==",
        "user": {
            "login": "HKochniss",
            "id": 1243055,
            "node_id": "MDQ6VXNlcjEyNDMwNTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1243055?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HKochniss",
            "html_url": "https://github.com/HKochniss",
            "followers_url": "https://api.github.com/users/HKochniss/followers",
            "following_url": "https://api.github.com/users/HKochniss/following{/other_user}",
            "gists_url": "https://api.github.com/users/HKochniss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HKochniss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HKochniss/subscriptions",
            "organizations_url": "https://api.github.com/users/HKochniss/orgs",
            "repos_url": "https://api.github.com/users/HKochniss/repos",
            "events_url": "https://api.github.com/users/HKochniss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HKochniss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T15:46:41Z",
        "updated_at": "2015-08-12T15:55:07Z",
        "author_association": "NONE",
        "body": "The feature I meant is somewhat different to what I found after some search (CONTRIBUTING.md, you already use it but I didn't notice the popup on the PR):  https://github.com/blog/1184-contributing-guidelines\nI thought there was support for actively agreeing to a contributors license on a PR, but that might have been on another platform.\n\nHrm, don't know about the pure node-based build, Grunt/gulp became widely used in many JS projects like a year ago (that's at least my perception), personally I never saw gulp as a \"fat\" dependency, but that's maybe a matter of taste. There are already dependencies on e.g. uglify, and I never had problems with gulp (and I use it a lot for my little spikes, which essentially use gulp for a simple livereload watch and minification/scss etc..)\n\nAnyways, if non-gulp is a must, I would look into the pure node.js script, even if it probably gets bigger without the grunt/gulp plugin ecosystem at hand, as long as it means windows-devs have a nice onramp experience with the project.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/130351626",
        "html_url": "https://github.com/square/crossfilter/issues/158#issuecomment-130351626",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/158",
        "id": 130351626,
        "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDM1MTYyNg==",
        "user": {
            "login": "HKochniss",
            "id": 1243055,
            "node_id": "MDQ6VXNlcjEyNDMwNTU=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1243055?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HKochniss",
            "html_url": "https://github.com/HKochniss",
            "followers_url": "https://api.github.com/users/HKochniss/followers",
            "following_url": "https://api.github.com/users/HKochniss/following{/other_user}",
            "gists_url": "https://api.github.com/users/HKochniss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HKochniss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HKochniss/subscriptions",
            "organizations_url": "https://api.github.com/users/HKochniss/orgs",
            "repos_url": "https://api.github.com/users/HKochniss/repos",
            "events_url": "https://api.github.com/users/HKochniss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HKochniss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-08-12T15:50:57Z",
        "updated_at": "2015-08-12T15:50:57Z",
        "author_association": "NONE",
        "body": "Ok, probably it was https://www.clahub.com/\nThis seems like a nicer way of doing it, even though it means a dependency on clahub.com instaed of on google docs. The integration in Github is really nice..\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/142199771",
        "html_url": "https://github.com/square/crossfilter/issues/137#issuecomment-142199771",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/137",
        "id": 142199771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjE5OTc3MQ==",
        "user": {
            "login": "ziyadsaeed",
            "id": 12503225,
            "node_id": "MDQ6VXNlcjEyNTAzMjI1",
            "avatar_url": "https://avatars3.githubusercontent.com/u/12503225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ziyadsaeed",
            "html_url": "https://github.com/ziyadsaeed",
            "followers_url": "https://api.github.com/users/ziyadsaeed/followers",
            "following_url": "https://api.github.com/users/ziyadsaeed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ziyadsaeed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ziyadsaeed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ziyadsaeed/subscriptions",
            "organizations_url": "https://api.github.com/users/ziyadsaeed/orgs",
            "repos_url": "https://api.github.com/users/ziyadsaeed/repos",
            "events_url": "https://api.github.com/users/ziyadsaeed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ziyadsaeed/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-09-22T07:12:52Z",
        "updated_at": "2015-09-22T07:12:52Z",
        "author_association": "NONE",
        "body": "Crossfilter needs a good tutorial. An Api reference isn't for beginners.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/147704575",
        "html_url": "https://github.com/square/crossfilter/issues/161#issuecomment-147704575",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/161",
        "id": 147704575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzcwNDU3NQ==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T12:45:39Z",
        "updated_at": "2015-10-13T12:45:39Z",
        "author_association": "NONE",
        "body": "Groups don't observe the filters on their own dimension. This is by design: usually you only want the _other_ charts to change when you filter on one.\n\nFrom the documentation:\n\n> Note: a grouping intersects the crossfilter's current filters, except for the associated dimension's filter. Thus, group methods consider only records that satisfy every filter except this dimension's filter. So, if the crossfilter of payments is filtered by type and total, then group by total only observes the filter by type.\n\nhttps://github.com/square/crossfilter/wiki/API-Reference#dimension_group\n\nThe workaround if you want a group that observes its own dimension, is to create two identical dimensions, and apply the filter to the other copy of the dimension.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/147749110",
        "html_url": "https://github.com/square/crossfilter/issues/114#issuecomment-147749110",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/114",
        "id": 147749110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzc0OTExMA==",
        "user": {
            "login": "rathko",
            "id": 432203,
            "node_id": "MDQ6VXNlcjQzMjIwMw==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/432203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rathko",
            "html_url": "https://github.com/rathko",
            "followers_url": "https://api.github.com/users/rathko/followers",
            "following_url": "https://api.github.com/users/rathko/following{/other_user}",
            "gists_url": "https://api.github.com/users/rathko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rathko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rathko/subscriptions",
            "organizations_url": "https://api.github.com/users/rathko/orgs",
            "repos_url": "https://api.github.com/users/rathko/repos",
            "events_url": "https://api.github.com/users/rathko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rathko/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-13T15:23:39Z",
        "updated_at": "2015-10-13T15:23:39Z",
        "author_association": "NONE",
        "body": "@reedspool Thanks very much, your solution works for me.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/148438536",
        "html_url": "https://github.com/square/crossfilter/issues/162#issuecomment-148438536",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/162",
        "id": 148438536,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODQzODUzNg==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-15T16:08:05Z",
        "updated_at": "2015-10-15T16:08:05Z",
        "author_association": "COLLABORATOR",
        "body": "It\u2019s hard to say without more information.  Any error messages?  What changed ~1 week ago to cause this to happen?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/152047085",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-152047085",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 152047085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjA0NzA4NQ==",
        "user": {
            "login": "auser",
            "id": 529,
            "node_id": "MDQ6VXNlcjUyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auser",
            "html_url": "https://github.com/auser",
            "followers_url": "https://api.github.com/users/auser/followers",
            "following_url": "https://api.github.com/users/auser/following{/other_user}",
            "gists_url": "https://api.github.com/users/auser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auser/subscriptions",
            "organizations_url": "https://api.github.com/users/auser/orgs",
            "repos_url": "https://api.github.com/users/auser/repos",
            "events_url": "https://api.github.com/users/auser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-10-29T01:25:41Z",
        "updated_at": "2015-10-29T01:25:41Z",
        "author_association": "NONE",
        "body": "This is an old comment, but still relevant. @stevemandl Think you'll be able to share it?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/153383107",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-153383107",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 153383107,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM4MzEwNw==",
        "user": {
            "login": "stevemandl",
            "id": 5465626,
            "node_id": "MDQ6VXNlcjU0NjU2MjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5465626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevemandl",
            "html_url": "https://github.com/stevemandl",
            "followers_url": "https://api.github.com/users/stevemandl/followers",
            "following_url": "https://api.github.com/users/stevemandl/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevemandl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevemandl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevemandl/subscriptions",
            "organizations_url": "https://api.github.com/users/stevemandl/orgs",
            "repos_url": "https://api.github.com/users/stevemandl/repos",
            "events_url": "https://api.github.com/users/stevemandl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevemandl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-03T15:08:09Z",
        "updated_at": "2015-11-03T15:08:09Z",
        "author_association": "NONE",
        "body": "Here is a demo of the updatingCrrossfilter at work. I stripped out the ajax stuff which was specific to my application. Have fun with it, I would be happy to hear comments:\nhttp://bl.ocks.org/stevemandl/02febfc129131db79adf\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/153828062",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-153828062",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 153828062,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzgyODA2Mg==",
        "user": {
            "login": "stevemandl",
            "id": 5465626,
            "node_id": "MDQ6VXNlcjU0NjU2MjY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5465626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevemandl",
            "html_url": "https://github.com/stevemandl",
            "followers_url": "https://api.github.com/users/stevemandl/followers",
            "following_url": "https://api.github.com/users/stevemandl/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevemandl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevemandl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevemandl/subscriptions",
            "organizations_url": "https://api.github.com/users/stevemandl/orgs",
            "repos_url": "https://api.github.com/users/stevemandl/repos",
            "events_url": "https://api.github.com/users/stevemandl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevemandl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-04T18:50:17Z",
        "updated_at": "2015-11-04T18:50:17Z",
        "author_association": "NONE",
        "body": "Ari-\n\n```\n I updated the issue with a link to my gist. Please let me know if it is useful.\n```\n\n-Steve\n\n---\n\nFrom: Ari notifications@github.com\nSent: Wednesday, October 28, 2015 9:25 PM\nTo: square/crossfilter\nCc: Steve J. Mandl\nSubject: Re: [crossfilter] How to replace the data in crossfilter (#99)\n\nThis is an old comment, but still relevant. @stevemandlhttps://github.com/stevemandl Think you'll be able to share it?\n\n[https://avatars2.githubusercontent.com/u/5465626?v=3&s=400]https://github.com/stevemandl\n\nstevemandl (Steve Mandl)\nstevemandl has 2 repositories written in CSS, Shell, and JavaScript. Follow their code on GitHub.\nRead more...https://github.com/stevemandl\n\n## \n\nReply to this email directly or view it on GitHubhttps://github.com/square/crossfilter/issues/99#issuecomment-152047085.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/154173782",
        "html_url": "https://github.com/square/crossfilter/issues/165#issuecomment-154173782",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/165",
        "id": 154173782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDE3Mzc4Mg==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-05T20:00:41Z",
        "updated_at": "2015-11-05T20:00:41Z",
        "author_association": "NONE",
        "body": "You can create a dimension which uses multiple fields in its key, as described in #48, but I think you'd have trouble getting the sorting right, unless you're willing to zero-pad your numbers.\n\nSince the strength of crossfilter is really in speedy filtering, you might be better off just defining your dimensions based on the filtering needs, and then post-process the group output to get the right sorting order.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/154185986",
        "html_url": "https://github.com/square/crossfilter/issues/165#issuecomment-154185986",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/165",
        "id": 154185986,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDE4NTk4Ng==",
        "user": {
            "login": "Leooo",
            "id": 2422936,
            "node_id": "MDQ6VXNlcjI0MjI5MzY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2422936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Leooo",
            "html_url": "https://github.com/Leooo",
            "followers_url": "https://api.github.com/users/Leooo/followers",
            "following_url": "https://api.github.com/users/Leooo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Leooo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Leooo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Leooo/subscriptions",
            "organizations_url": "https://api.github.com/users/Leooo/orgs",
            "repos_url": "https://api.github.com/users/Leooo/repos",
            "events_url": "https://api.github.com/users/Leooo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Leooo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-05T20:49:30Z",
        "updated_at": "2015-11-05T20:50:35Z",
        "author_association": "NONE",
        "body": "Many thanks, yes that's what I did finally, a sorting function using multiple keys, 0 padding on numbers, converting everything to strings, maintaining string lengths constant, reverting alphabetically a string when I want to sort descending and joining every string at the end with a \"|\" separator.. But I'm not sure about the performance so I may actually finish by sorting everything outside of xfilter.\n\nL \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/156789347",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-156789347",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 156789347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1Njc4OTM0Nw==",
        "user": {
            "login": "auser",
            "id": 529,
            "node_id": "MDQ6VXNlcjUyOQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/auser",
            "html_url": "https://github.com/auser",
            "followers_url": "https://api.github.com/users/auser/followers",
            "following_url": "https://api.github.com/users/auser/following{/other_user}",
            "gists_url": "https://api.github.com/users/auser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/auser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/auser/subscriptions",
            "organizations_url": "https://api.github.com/users/auser/orgs",
            "repos_url": "https://api.github.com/users/auser/repos",
            "events_url": "https://api.github.com/users/auser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/auser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-15T08:02:11Z",
        "updated_at": "2015-11-15T08:02:11Z",
        "author_association": "NONE",
        "body": "@stevemandl it does. Quite a lot of work went into that gist\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/157252264",
        "html_url": "https://github.com/square/crossfilter/issues/137#issuecomment-157252264",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/137",
        "id": 157252264,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzI1MjI2NA==",
        "user": {
            "login": "tannerlinsley",
            "id": 5580297,
            "node_id": "MDQ6VXNlcjU1ODAyOTc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/5580297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tannerlinsley",
            "html_url": "https://github.com/tannerlinsley",
            "followers_url": "https://api.github.com/users/tannerlinsley/followers",
            "following_url": "https://api.github.com/users/tannerlinsley/following{/other_user}",
            "gists_url": "https://api.github.com/users/tannerlinsley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tannerlinsley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tannerlinsley/subscriptions",
            "organizations_url": "https://api.github.com/users/tannerlinsley/orgs",
            "repos_url": "https://api.github.com/users/tannerlinsley/repos",
            "events_url": "https://api.github.com/users/tannerlinsley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tannerlinsley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-11-17T02:55:27Z",
        "updated_at": "2015-11-17T02:55:27Z",
        "author_association": "NONE",
        "body": "I agree.  Over at http://github.com/crossfilter/crossfilter (the successor to this repo), we already have some amazing new features, and are discussing some great new docs, a learning playground, and even more revolutionary features you'll want to look at over the next few weeks.  Stay tuned!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/164542942",
        "html_url": "https://github.com/square/crossfilter/pull/139#issuecomment-164542942",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/139",
        "id": 164542942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDU0Mjk0Mg==",
        "user": {
            "login": "micahstubbs",
            "id": 2119400,
            "node_id": "MDQ6VXNlcjIxMTk0MDA=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2119400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micahstubbs",
            "html_url": "https://github.com/micahstubbs",
            "followers_url": "https://api.github.com/users/micahstubbs/followers",
            "following_url": "https://api.github.com/users/micahstubbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/micahstubbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micahstubbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micahstubbs/subscriptions",
            "organizations_url": "https://api.github.com/users/micahstubbs/orgs",
            "repos_url": "https://api.github.com/users/micahstubbs/repos",
            "events_url": "https://api.github.com/users/micahstubbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micahstubbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-14T20:01:01Z",
        "updated_at": "2015-12-14T20:01:01Z",
        "author_association": "NONE",
        "body": "+1 for this\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/167475452",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-167475452",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 167475452,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQ3NTQ1Mg==",
        "user": {
            "login": "hariDasu",
            "id": 2300054,
            "node_id": "MDQ6VXNlcjIzMDAwNTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2300054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariDasu",
            "html_url": "https://github.com/hariDasu",
            "followers_url": "https://api.github.com/users/hariDasu/followers",
            "following_url": "https://api.github.com/users/hariDasu/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariDasu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariDasu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariDasu/subscriptions",
            "organizations_url": "https://api.github.com/users/hariDasu/orgs",
            "repos_url": "https://api.github.com/users/hariDasu/repos",
            "events_url": "https://api.github.com/users/hariDasu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariDasu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-28T03:55:32Z",
        "updated_at": "2015-12-28T03:55:32Z",
        "author_association": "NONE",
        "body": "i have no NaN or undefined values as i queried my databse to exclude all rows where any field contains them, and i still get this error. tried with 200k rows and reduced to 20k, 15k etc it only ever worked with 2k rows. the dataset only had 5 columns. its a great library but im not sure what else to use for visualizing large datasets.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/167494351",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-167494351",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 167494351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQ5NDM1MQ==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-28T06:33:10Z",
        "updated_at": "2015-12-28T06:33:10Z",
        "author_association": "NONE",
        "body": "@hariDasu, note that `NaN` here might not be the constant but any comparison between a number and, say, a string. \n\nI believe the problem arises because it is hard to sort values with the following semantics:\n\n```\n   1<'a'\n=> false\n   'a'<1\n=> false\n```\n\nTherefore your keys must be all numbers or all strings, and your reductions may produce only numbers. (If I understand correctly.)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/167620691",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-167620691",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 167620691,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzYyMDY5MQ==",
        "user": {
            "login": "hariDasu",
            "id": 2300054,
            "node_id": "MDQ6VXNlcjIzMDAwNTQ=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/2300054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariDasu",
            "html_url": "https://github.com/hariDasu",
            "followers_url": "https://api.github.com/users/hariDasu/followers",
            "following_url": "https://api.github.com/users/hariDasu/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariDasu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariDasu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariDasu/subscriptions",
            "organizations_url": "https://api.github.com/users/hariDasu/orgs",
            "repos_url": "https://api.github.com/users/hariDasu/repos",
            "events_url": "https://api.github.com/users/hariDasu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariDasu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-12-28T18:24:23Z",
        "updated_at": "2015-12-28T18:24:23Z",
        "author_association": "NONE",
        "body": "ahh looks like that was my problem using string values for days rather than encoding them out to digits 0-6 or 1-7. thanks @gordonwoodhull \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/169215772",
        "html_url": "https://github.com/square/crossfilter/issues/136#issuecomment-169215772",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/136",
        "id": 169215772,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTIxNTc3Mg==",
        "user": {
            "login": "markehost",
            "id": 278700,
            "node_id": "MDQ6VXNlcjI3ODcwMA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/278700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markehost",
            "html_url": "https://github.com/markehost",
            "followers_url": "https://api.github.com/users/markehost/followers",
            "following_url": "https://api.github.com/users/markehost/following{/other_user}",
            "gists_url": "https://api.github.com/users/markehost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markehost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markehost/subscriptions",
            "organizations_url": "https://api.github.com/users/markehost/orgs",
            "repos_url": "https://api.github.com/users/markehost/repos",
            "events_url": "https://api.github.com/users/markehost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markehost/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-06T04:13:34Z",
        "updated_at": "2016-01-06T04:13:34Z",
        "author_association": "NONE",
        "body": "+1\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/171633563",
        "html_url": "https://github.com/square/crossfilter/issues/169#issuecomment-171633563",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/169",
        "id": 171633563,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTYzMzU2Mw==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T12:41:04Z",
        "updated_at": "2016-01-14T12:41:04Z",
        "author_association": "NONE",
        "body": "There is a `dimension.bottom()` function, but there is no `dimension.order()` function - could it be that `.order()` is the problem? \n\nOr, more likely, could it be that you have a group object, which supports `group.order()` group but not `group.bottom()?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/171651384",
        "html_url": "https://github.com/square/crossfilter/issues/169#issuecomment-171651384",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/169",
        "id": 171651384,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MTY1MTM4NA==",
        "user": {
            "login": "ppeer",
            "id": 4849743,
            "node_id": "MDQ6VXNlcjQ4NDk3NDM=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4849743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppeer",
            "html_url": "https://github.com/ppeer",
            "followers_url": "https://api.github.com/users/ppeer/followers",
            "following_url": "https://api.github.com/users/ppeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppeer/subscriptions",
            "organizations_url": "https://api.github.com/users/ppeer/orgs",
            "repos_url": "https://api.github.com/users/ppeer/repos",
            "events_url": "https://api.github.com/users/ppeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppeer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-14T14:00:55Z",
        "updated_at": "2016-01-14T14:22:48Z",
        "author_association": "NONE",
        "body": "@gordonwoodhull the last suggestion, that's the case. \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/173712272",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-173712272",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 173712272,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzcxMjI3Mg==",
        "user": {
            "login": "Mr0grog",
            "id": 74178,
            "node_id": "MDQ6VXNlcjc0MTc4",
            "avatar_url": "https://avatars0.githubusercontent.com/u/74178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mr0grog",
            "html_url": "https://github.com/Mr0grog",
            "followers_url": "https://api.github.com/users/Mr0grog/followers",
            "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
            "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
            "repos_url": "https://api.github.com/users/Mr0grog/repos",
            "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-21T21:25:22Z",
        "updated_at": "2016-01-21T21:25:22Z",
        "author_association": "NONE",
        "body": "I realize this is a pretty old issue, but I'd definitely love to have this ability. I'm working on a UI that has a separate filter control and list display for the same dimension of data, which means I have to manually keep track of the applied filters in order to manage the list display (otherwise users get a bit confused when the list shows counts for things they've filtered out).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/182952816",
        "html_url": "https://github.com/square/crossfilter/issues/136#issuecomment-182952816",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/136",
        "id": 182952816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mjk1MjgxNg==",
        "user": {
            "login": "drarmstr",
            "id": 4674792,
            "node_id": "MDQ6VXNlcjQ2NzQ3OTI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4674792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/drarmstr",
            "html_url": "https://github.com/drarmstr",
            "followers_url": "https://api.github.com/users/drarmstr/followers",
            "following_url": "https://api.github.com/users/drarmstr/following{/other_user}",
            "gists_url": "https://api.github.com/users/drarmstr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/drarmstr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/drarmstr/subscriptions",
            "organizations_url": "https://api.github.com/users/drarmstr/orgs",
            "repos_url": "https://api.github.com/users/drarmstr/repos",
            "events_url": "https://api.github.com/users/drarmstr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/drarmstr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-11T16:47:21Z",
        "updated_at": "2016-02-11T16:47:21Z",
        "author_association": "NONE",
        "body": "I've noticed that as well with some Crossfilter functions in Chrome on Windows.  Browsers are always a moving target but it's a good question.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/183302000",
        "html_url": "https://github.com/square/crossfilter/issues/136#issuecomment-183302000",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/136",
        "id": 183302000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzMwMjAwMA==",
        "user": {
            "login": "averas",
            "id": 1205805,
            "node_id": "MDQ6VXNlcjEyMDU4MDU=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1205805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/averas",
            "html_url": "https://github.com/averas",
            "followers_url": "https://api.github.com/users/averas/followers",
            "following_url": "https://api.github.com/users/averas/following{/other_user}",
            "gists_url": "https://api.github.com/users/averas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/averas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/averas/subscriptions",
            "organizations_url": "https://api.github.com/users/averas/orgs",
            "repos_url": "https://api.github.com/users/averas/repos",
            "events_url": "https://api.github.com/users/averas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/averas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-12T12:22:23Z",
        "updated_at": "2016-02-12T12:22:23Z",
        "author_association": "NONE",
        "body": "I have a use case where I need to create a new crossfilter now and then. I have also noticed that even when adding a quite small dataset (~2000 elements) a fair amount of CPU/time is spent on quicksort/add (it takes 1-2 seconds to add 2000 elements). Is this an overhead one should expect or is it related to the non V8-optimisations as described above? Once the data is there performance is good.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/189488731",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-189488731",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 189488731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTQ4ODczMQ==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-02-26T21:26:48Z",
        "updated_at": "2016-02-26T21:26:48Z",
        "author_association": "NONE",
        "body": "I provided an example here, which keeps a list of rows for each bin and then can compute min/max/median:\nhttp://dc-js.github.io/dc.js/examples/complex-reduce.html\n\nSource here:\nhttps://github.com/dc-js/dc.js/blob/develop/web/examples/complex-reduce.html\n\nIt would be more efficient if crossfilter provided access to the underlying rows for each bin, instead of having to track those externally. But other than that, I think it's an okay solution to this problem.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/190503910",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-190503910",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 190503910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDUwMzkxMA==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-01T02:37:39Z",
        "updated_at": "2016-03-01T07:32:19Z",
        "author_association": "NONE",
        "body": "@RandomEtc - We're reporting back after a lot of work has gone into the https://github.com/crossfilter organization.\n- crossfilter: @tannerlinsley & @esjewett added support for nested arrays https://github.com/square/crossfilter/issues/5\n- reductio: @esjewett & @nordfjord added grouped aggregations\n- universe: @tannerlinsley created a mongo-like query language + automatic dimension management\n- async: @esjewett has crossfilter working in a web worker #116\n\n@gordonwoodhull & @r4j4h have also been very helpful along the way.\n\nWe're all very committed to continuing to push the crossfilter ecosystem forwards. With @gordonwoodhull & dc.js onboard, a significant portion of active users will likely be seamlessly and silently migrated, and we'd love to be able to make the transition for them and all other crossfilter users as simple as possible. Here's what I think would be the best course of action moving forwards, and I'm more than open to other suggestions.\n1. If possible, transfer this repo to the crossfilter org (lawyers permitting)\n2. If not, post a deprecation notice similar to cube and point people at crossfilter/crossfilter\n3. Redirect npm & bower to the org version of crossfilter - We guarantee BC for 1.x.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/190568546",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-190568546",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 190568546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDU2ODU0Ng==",
        "user": {
            "login": "gsklee",
            "id": 1006291,
            "node_id": "MDQ6VXNlcjEwMDYyOTE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1006291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsklee",
            "html_url": "https://github.com/gsklee",
            "followers_url": "https://api.github.com/users/gsklee/followers",
            "following_url": "https://api.github.com/users/gsklee/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsklee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsklee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsklee/subscriptions",
            "organizations_url": "https://api.github.com/users/gsklee/orgs",
            "repos_url": "https://api.github.com/users/gsklee/repos",
            "events_url": "https://api.github.com/users/gsklee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsklee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-01T06:25:29Z",
        "updated_at": "2016-03-01T06:25:38Z",
        "author_association": "NONE",
        "body": "Glad to hear this, kudos to everyone involved for moving this project forward!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/193627551",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-193627551",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 193627551,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzYyNzU1MQ==",
        "user": {
            "login": "manojgn",
            "id": 6204722,
            "node_id": "MDQ6VXNlcjYyMDQ3MjI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/6204722?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manojgn",
            "html_url": "https://github.com/manojgn",
            "followers_url": "https://api.github.com/users/manojgn/followers",
            "following_url": "https://api.github.com/users/manojgn/following{/other_user}",
            "gists_url": "https://api.github.com/users/manojgn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manojgn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manojgn/subscriptions",
            "organizations_url": "https://api.github.com/users/manojgn/orgs",
            "repos_url": "https://api.github.com/users/manojgn/repos",
            "events_url": "https://api.github.com/users/manojgn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manojgn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-08T06:38:34Z",
        "updated_at": "2016-03-08T06:38:34Z",
        "author_association": "NONE",
        "body": "Hi guys, I am a great fan of crossfilter and have been using this in my app. I hit this exact same issue but I dont see the above fix in 1.3.12. Is it not merged or am I missing something ?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/193657104",
        "html_url": "https://github.com/square/crossfilter/pull/3#issuecomment-193657104",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/3",
        "id": 193657104,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzY1NzEwNA==",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-08T08:17:25Z",
        "updated_at": "2016-03-08T08:17:25Z",
        "author_association": "COLLABORATOR",
        "body": "Some workarounds for incomparable values were attempted in versions v1.1.1-v1.1.3 but they were reverted as they caused too many issues: see the [v1.2.0 release notes](https://github.com/square/crossfilter/releases/tag/v1.2.0).  Better to simply avoid using mixed types or incomparable values (undefined or NaN).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196106357",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-196106357",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 196106357,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwNjM1Nw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:06:05Z",
        "updated_at": "2016-03-14T02:06:05Z",
        "author_association": "COLLABORATOR",
        "body": "@derekperkins @tannerlinsley @gordonwoodhull et al - thank you for keeping the dream alive. I've chosen option 2 as the easiest for now, and added a note to the README on the square version at https://github.com/square/crossfilter/blob/master/README.md\n\nI have asked internally about unlocking/transferring the crossfilter npm and bower packages so that newer versions can be published there, and about transferring the repo itself to allow github to redirect everyone. But I make no promises about following through with this - please act as if it won't happen, I'll ping you if the situation changes :)\n\nHopefully it is clear that [crossfilter/crossfilter](https://github.com/crossfilter/crossfilter/) is the home of active improvement. Thanks to all who weighed in on this thread. Please take further discussion to an issue there! :chart_with_upwards_trend: :raised_hands: \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196107755",
        "html_url": "https://github.com/square/crossfilter/issues/168#issuecomment-196107755",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/168",
        "id": 196107755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwNzc1NQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:10:46Z",
        "updated_at": "2016-03-14T02:10:46Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. Please ask questions on http://stackoverflow.com/questions/tagged/crossfilter and note that as discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196107954",
        "html_url": "https://github.com/square/crossfilter/issues/167#issuecomment-196107954",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/167",
        "id": 196107954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwNzk1NA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:11:17Z",
        "updated_at": "2016-03-14T02:11:17Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196108193",
        "html_url": "https://github.com/square/crossfilter/issues/166#issuecomment-196108193",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/166",
        "id": 196108193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwODE5Mw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:12:22Z",
        "updated_at": "2016-03-14T02:12:22Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter) - you might get better answers on their fork or on [Stack Overflow](http://stackoverflow.com/questions/tagged/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196108462",
        "html_url": "https://github.com/square/crossfilter/issues/164#issuecomment-196108462",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/164",
        "id": 196108462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwODQ2Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:12:52Z",
        "updated_at": "2016-03-14T02:12:52Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196108540",
        "html_url": "https://github.com/square/crossfilter/issues/163#issuecomment-196108540",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/163",
        "id": 196108540,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwODU0MA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:13:05Z",
        "updated_at": "2016-03-14T02:13:05Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter) - you might get better answers on their fork or on [Stack Overflow](http://stackoverflow.com/questions/tagged/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196108669",
        "html_url": "https://github.com/square/crossfilter/issues/160#issuecomment-196108669",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/160",
        "id": 196108669,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwODY2OQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:13:23Z",
        "updated_at": "2016-03-14T02:13:23Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196109058",
        "html_url": "https://github.com/square/crossfilter/issues/145#issuecomment-196109058",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/145",
        "id": 196109058,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwOTA1OA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:14:21Z",
        "updated_at": "2016-03-14T02:14:21Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196109266",
        "html_url": "https://github.com/square/crossfilter/issues/136#issuecomment-196109266",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/136",
        "id": 196109266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwOTI2Ng==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:14:57Z",
        "updated_at": "2016-03-14T02:14:57Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196109315",
        "html_url": "https://github.com/square/crossfilter/issues/119#issuecomment-196109315",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/119",
        "id": 196109315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwOTMxNQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:15:07Z",
        "updated_at": "2016-03-14T02:15:07Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196109553",
        "html_url": "https://github.com/square/crossfilter/issues/116#issuecomment-196109553",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/116",
        "id": 196109553,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwOTU1Mw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:15:46Z",
        "updated_at": "2016-03-14T02:15:46Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Support for WebWorkers is discussed in https://github.com/crossfilter/crossfilter/issues/22  \n\nPlease take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110096",
        "html_url": "https://github.com/square/crossfilter/pull/139#issuecomment-196110096",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/139",
        "id": 196110096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDA5Ng==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:17:14Z",
        "updated_at": "2016-03-14T02:17:14Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110328",
        "html_url": "https://github.com/square/crossfilter/pull/143#issuecomment-196110328",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/143",
        "id": 196110328,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDMyOA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:18:01Z",
        "updated_at": "2016-03-14T02:18:01Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110400",
        "html_url": "https://github.com/square/crossfilter/pull/141#issuecomment-196110400",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/141",
        "id": 196110400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDQwMA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:18:49Z",
        "updated_at": "2016-03-14T02:18:49Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110414",
        "html_url": "https://github.com/square/crossfilter/pull/130#issuecomment-196110414",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/130",
        "id": 196110414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDQxNA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:19:02Z",
        "updated_at": "2016-03-14T02:19:02Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110462",
        "html_url": "https://github.com/square/crossfilter/pull/118#issuecomment-196110462",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/118",
        "id": 196110462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDQ2Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:19:45Z",
        "updated_at": "2016-03-14T02:19:45Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110486",
        "html_url": "https://github.com/square/crossfilter/pull/110#issuecomment-196110486",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/110",
        "id": 196110486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDQ4Ng==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:19:56Z",
        "updated_at": "2016-03-14T02:19:56Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110500",
        "html_url": "https://github.com/square/crossfilter/pull/108#issuecomment-196110500",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/108",
        "id": 196110500,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDUwMA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:20:08Z",
        "updated_at": "2016-03-14T02:20:08Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110524",
        "html_url": "https://github.com/square/crossfilter/pull/95#issuecomment-196110524",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/95",
        "id": 196110524,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDUyNA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:20:20Z",
        "updated_at": "2016-03-14T02:20:20Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110568",
        "html_url": "https://github.com/square/crossfilter/pull/86#issuecomment-196110568",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/86",
        "id": 196110568,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDU2OA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:20:47Z",
        "updated_at": "2016-03-14T02:20:47Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110639",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-196110639",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 196110639,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDYzOQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:21:38Z",
        "updated_at": "2016-03-14T02:21:38Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110649",
        "html_url": "https://github.com/square/crossfilter/pull/56#issuecomment-196110649",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/56",
        "id": 196110649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDY0OQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:21:47Z",
        "updated_at": "2016-03-14T02:21:47Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110651",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-196110651",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 196110651,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDY1MQ==",
        "user": {
            "login": "derekperkins",
            "id": 3588778,
            "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekperkins",
            "html_url": "https://github.com/derekperkins",
            "followers_url": "https://api.github.com/users/derekperkins/followers",
            "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/derekperkins/orgs",
            "repos_url": "https://api.github.com/users/derekperkins/repos",
            "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:21:48Z",
        "updated_at": "2016-03-14T02:21:48Z",
        "author_association": "NONE",
        "body": "@RandomEtc Thanks for following up! We'll keep our ears up in case something changes on the legal front, but we definitely understand the power of inertia at a big company. :)\n\nOur thanks go out to you, @mbostock, @jasondavies and everyone else involved with getting crossfilter to this point! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110721",
        "html_url": "https://github.com/square/crossfilter/pull/33#issuecomment-196110721",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/33",
        "id": 196110721,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDcyMQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:22:32Z",
        "updated_at": "2016-03-14T02:22:32Z",
        "author_association": "COLLABORATOR",
        "body": "Sorry @jasondavies!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196110772",
        "html_url": "https://github.com/square/crossfilter/pull/22#issuecomment-196110772",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/22",
        "id": 196110772,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMDc3Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:23:05Z",
        "updated_at": "2016-03-14T02:23:05Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please consider rebasing and opening your PR there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111179",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-196111179",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 196111179,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTE3OQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:26:11Z",
        "updated_at": "2016-03-14T02:26:11Z",
        "author_association": "COLLABORATOR",
        "body": "@esjewett for folks still following along, I'm assuming discussion is continuing at crossfilter/crossfilter#6? Closing this out along with all others.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111211",
        "html_url": "https://github.com/square/crossfilter/issues/107#issuecomment-196111211",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/107",
        "id": 196111211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTIxMQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:26:31Z",
        "updated_at": "2016-03-14T02:26:31Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111235",
        "html_url": "https://github.com/square/crossfilter/issues/106#issuecomment-196111235",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/106",
        "id": 196111235,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTIzNQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:26:48Z",
        "updated_at": "2016-03-14T02:26:48Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter) - you might get better answers on their fork or on [Stack Overflow](http://stackoverflow.com/questions/tagged/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111277",
        "html_url": "https://github.com/square/crossfilter/issues/103#issuecomment-196111277",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/103",
        "id": 196111277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTI3Nw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:27:13Z",
        "updated_at": "2016-03-14T02:27:13Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111302",
        "html_url": "https://github.com/square/crossfilter/issues/101#issuecomment-196111302",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/101",
        "id": 196111302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTMwMg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:27:29Z",
        "updated_at": "2016-03-14T02:27:29Z",
        "author_association": "COLLABORATOR",
        "body": "Apologies for silence here. Please ask questions on http://stackoverflow.com/questions/tagged/crossfilter and note that as discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter).\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111379",
        "html_url": "https://github.com/square/crossfilter/issues/99#issuecomment-196111379",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/99",
        "id": 196111379,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTM3OQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:28:09Z",
        "updated_at": "2016-03-14T02:28:09Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111414",
        "html_url": "https://github.com/square/crossfilter/issues/70#issuecomment-196111414",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/70",
        "id": 196111414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTQxNA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:28:32Z",
        "updated_at": "2016-03-14T02:28:32Z",
        "author_association": "COLLABORATOR",
        "body": "Thanks for your contributions and sorry for silence on this side. As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111572",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-196111572",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 196111572,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTU3Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:30:06Z",
        "updated_at": "2016-03-14T02:30:06Z",
        "author_association": "COLLABORATOR",
        "body": "Don't thank me for sitting on it for 3 years followed by a flurry of copy-paste issue closing :grimacing: \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111636",
        "html_url": "https://github.com/square/crossfilter/issues/5#issuecomment-196111636",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/5",
        "id": 196111636,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTYzNg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:30:45Z",
        "updated_at": "2016-03-14T02:30:45Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111670",
        "html_url": "https://github.com/square/crossfilter/issues/13#issuecomment-196111670",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/13",
        "id": 196111670,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTY3MA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:31:04Z",
        "updated_at": "2016-03-14T02:31:04Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111692",
        "html_url": "https://github.com/square/crossfilter/issues/18#issuecomment-196111692",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/18",
        "id": 196111692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTY5Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:31:16Z",
        "updated_at": "2016-03-14T02:31:16Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111765",
        "html_url": "https://github.com/square/crossfilter/issues/25#issuecomment-196111765",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/25",
        "id": 196111765,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTc2NQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:32:04Z",
        "updated_at": "2016-03-14T02:32:04Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111796",
        "html_url": "https://github.com/square/crossfilter/issues/28#issuecomment-196111796",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/28",
        "id": 196111796,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTc5Ng==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:32:24Z",
        "updated_at": "2016-03-14T02:32:24Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111819",
        "html_url": "https://github.com/square/crossfilter/issues/38#issuecomment-196111819",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/38",
        "id": 196111819,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTgxOQ==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:32:42Z",
        "updated_at": "2016-03-14T02:32:42Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111872",
        "html_url": "https://github.com/square/crossfilter/issues/54#issuecomment-196111872",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/54",
        "id": 196111872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTg3Mg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:33:14Z",
        "updated_at": "2016-03-14T02:33:14Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196111880",
        "html_url": "https://github.com/square/crossfilter/issues/69#issuecomment-196111880",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/69",
        "id": 196111880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExMTg4MA==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T02:33:22Z",
        "updated_at": "2016-03-14T02:33:22Z",
        "author_association": "COLLABORATOR",
        "body": "As discussed in #151 an active fork is being developed in a new [Crossfilter Organization](https://github.com/crossfilter). Please take further discussion there (if you haven't already) where it should be warmly welcomed by the new maintainers. Cheers! \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196118490",
        "html_url": "https://github.com/square/crossfilter/issues/109#issuecomment-196118490",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/109",
        "id": 196118490,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjExODQ5MA==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T03:09:35Z",
        "updated_at": "2016-03-14T03:09:35Z",
        "author_association": "NONE",
        "body": "@RandomEtc Correct indeed. The pull request is a work-in-progress unfortunately, but I'll be taking another stab at it soon, with a little more knowledge of the CF internals. Thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196132799",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-196132799",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 196132799,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEzMjc5OQ==",
        "user": {
            "login": "JackStouffer",
            "id": 680068,
            "node_id": "MDQ6VXNlcjY4MDA2OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/680068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JackStouffer",
            "html_url": "https://github.com/JackStouffer",
            "followers_url": "https://api.github.com/users/JackStouffer/followers",
            "following_url": "https://api.github.com/users/JackStouffer/following{/other_user}",
            "gists_url": "https://api.github.com/users/JackStouffer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JackStouffer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JackStouffer/subscriptions",
            "organizations_url": "https://api.github.com/users/JackStouffer/orgs",
            "repos_url": "https://api.github.com/users/JackStouffer/repos",
            "events_url": "https://api.github.com/users/JackStouffer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JackStouffer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T04:26:11Z",
        "updated_at": "2016-03-14T04:26:11Z",
        "author_association": "NONE",
        "body": "Close with no comment?\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196138287",
        "html_url": "https://github.com/square/crossfilter/issues/100#issuecomment-196138287",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/100",
        "id": 196138287,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEzODI4Nw==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-14T04:50:39Z",
        "updated_at": "2016-03-14T04:50:39Z",
        "author_association": "COLLABORATOR",
        "body": "Sorry - your last comment seemed to be directing people to a new discussion so I didn't have anything else to add.\n\nSee #151 for discussion of future of Crossfilter. I've updated square/crossfilter's README to indicate that the crossfilter org will be actively maintaining a fork. I figured you were already aware since you linked to reductio. Apologies for misunderstanding.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/196905492",
        "html_url": "https://github.com/square/crossfilter/issues/151#issuecomment-196905492",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/151",
        "id": 196905492,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjkwNTQ5Mg==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-15T16:22:11Z",
        "updated_at": "2016-03-15T16:22:11Z",
        "author_association": "NONE",
        "body": "Thanks @RandomEtc! \n\nThere is a wealth of information in the issues on this repo, so let's link back here when we continue these conversations. Looking forward to continuing the amazing work done here!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/197568541",
        "html_url": "https://github.com/square/crossfilter/issues/163#issuecomment-197568541",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/163",
        "id": 197568541,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzU2ODU0MQ==",
        "user": {
            "login": "nreese",
            "id": 373691,
            "node_id": "MDQ6VXNlcjM3MzY5MQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/373691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nreese",
            "html_url": "https://github.com/nreese",
            "followers_url": "https://api.github.com/users/nreese/followers",
            "following_url": "https://api.github.com/users/nreese/following{/other_user}",
            "gists_url": "https://api.github.com/users/nreese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nreese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nreese/subscriptions",
            "organizations_url": "https://api.github.com/users/nreese/orgs",
            "repos_url": "https://api.github.com/users/nreese/repos",
            "events_url": "https://api.github.com/users/nreese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nreese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-16T21:57:21Z",
        "updated_at": "2016-03-16T21:57:21Z",
        "author_association": "NONE",
        "body": "Will do. Thanks for the links\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/205503998",
        "html_url": "https://github.com/square/crossfilter/issues/27#issuecomment-205503998",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/27",
        "id": 205503998,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTUwMzk5OA==",
        "user": {
            "login": "csymill26",
            "id": 6392338,
            "node_id": "MDQ6VXNlcjYzOTIzMzg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/6392338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csymill26",
            "html_url": "https://github.com/csymill26",
            "followers_url": "https://api.github.com/users/csymill26/followers",
            "following_url": "https://api.github.com/users/csymill26/following{/other_user}",
            "gists_url": "https://api.github.com/users/csymill26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csymill26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csymill26/subscriptions",
            "organizations_url": "https://api.github.com/users/csymill26/orgs",
            "repos_url": "https://api.github.com/users/csymill26/repos",
            "events_url": "https://api.github.com/users/csymill26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csymill26/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-04-04T21:28:34Z",
        "updated_at": "2016-04-04T21:28:34Z",
        "author_association": "NONE",
        "body": "I am getting the error \"Uncaught RangeError: Maximum call stack size exceeded\" when I am using a subset of my data.  I have created a dashboard with multiple graphs with a very big data set.  I then created a smaller one with a subset of the data, but I am not getting this error message.  Any ideas?  I know there's not a Nan or infinite loop going on.  \n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/221621936",
        "html_url": "https://github.com/square/crossfilter/issues/170#issuecomment-221621936",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/170",
        "id": 221621936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTYyMTkzNg==",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-25T15:57:32Z",
        "updated_at": "2016-05-25T15:57:32Z",
        "author_association": "COLLABORATOR",
        "body": "This repository is no longer maintained. Please ask in https://github.com/crossfilter/crossfilter or try http://stackoverflow.com/questions/tagged/crossfilter \u2014 thanks!\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/221633459",
        "html_url": "https://github.com/square/crossfilter/issues/170#issuecomment-221633459",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/170",
        "id": 221633459,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTYzMzQ1OQ==",
        "user": {
            "login": "mbostock",
            "id": 230541,
            "node_id": "MDQ6VXNlcjIzMDU0MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/230541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbostock",
            "html_url": "https://github.com/mbostock",
            "followers_url": "https://api.github.com/users/mbostock/followers",
            "following_url": "https://api.github.com/users/mbostock/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbostock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbostock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbostock/subscriptions",
            "organizations_url": "https://api.github.com/users/mbostock/orgs",
            "repos_url": "https://api.github.com/users/mbostock/repos",
            "events_url": "https://api.github.com/users/mbostock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbostock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-25T16:37:43Z",
        "updated_at": "2016-05-25T16:37:43Z",
        "author_association": "COLLABORATOR",
        "body": "Since I\u2019m here anyway: see [_array_.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce). The first argument _p_ is the previous value, the second argument _v_ is the current value.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/221653549",
        "html_url": "https://github.com/square/crossfilter/issues/170#issuecomment-221653549",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/170",
        "id": 221653549,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTY1MzU0OQ==",
        "user": {
            "login": "yellow-sock",
            "id": 9471687,
            "node_id": "MDQ6VXNlcjk0NzE2ODc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/9471687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yellow-sock",
            "html_url": "https://github.com/yellow-sock",
            "followers_url": "https://api.github.com/users/yellow-sock/followers",
            "following_url": "https://api.github.com/users/yellow-sock/following{/other_user}",
            "gists_url": "https://api.github.com/users/yellow-sock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yellow-sock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yellow-sock/subscriptions",
            "organizations_url": "https://api.github.com/users/yellow-sock/orgs",
            "repos_url": "https://api.github.com/users/yellow-sock/repos",
            "events_url": "https://api.github.com/users/yellow-sock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yellow-sock/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-05-25T17:50:19Z",
        "updated_at": "2016-05-25T17:50:19Z",
        "author_association": "NONE",
        "body": "Ahh .. excellent .. thanks a lot!\nOnce I have a question like this one in my mind  it sticks in there  and starts bothering me :) That's now answered :)\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/258065733",
        "html_url": "https://github.com/square/crossfilter/issues/171#issuecomment-258065733",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/171",
        "id": 258065733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODA2NTczMw==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-03T05:12:20Z",
        "updated_at": "2016-11-03T05:12:49Z",
        "author_association": "NONE",
        "body": "Stack Overflow is a better place for asking support questions. \n\nBut yes, you can use data like this. Just supply an array of indices as your data to crossfilter. Then write your dimension and group accessors to use the index to fetch data from the original arrays.\n\nSomething like:\n\n``` js\nvar N = data.timestamp.length;\nvar r = _.range(N); // [0,1,2,...,N-1]\nvar ndx = crossfilter(r);\nvar V1dim = ndx.dimension(function(d) { return data.V1[d]; });\nvar sumV2perV1 = V1dim.group().reduceSum(function(d) { return data.V2[d];});\n```\n\nDownside is that you won't find a lot of examples of people using crossfilter this way, so you'll have to translate everything. It might be easier to send your data over the wire as object of arrays, and then rotate it into an array of objects in JavaScript, and probably not too expensive unless your data is huge.\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/264901715",
        "html_url": "https://github.com/square/crossfilter/issues/173#issuecomment-264901715",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/173",
        "id": 264901715,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDkwMTcxNQ==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-12-05T16:30:05Z",
        "updated_at": "2016-12-05T16:30:05Z",
        "author_association": "NONE",
        "body": "Hi @ebookoos, this sounds like more of a support question, and maybe more to do with dc.js than crossfilter. So you should probably ask [on Stack Overflow](stackoverflow.com) with the dc.js tag, or [on the dc.js user group](https://groups.google.com/forum/?fromgroups=#!forum/dc-js-user-group).\r\n\r\nAlso, I'm not sure what \"foreach function\" you're referring to or what explanation of filtering and grouping for data tables, so when you post in one of those places, could you please expand your question and provide links?"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/272524587",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-272524587",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 272524587,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjUyNDU4Nw==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-01-13T19:24:09Z",
        "updated_at": "2017-01-13T19:24:09Z",
        "author_association": "NONE",
        "body": "Note that you need to guard against a divide by zero in `reduceRemove`:\r\n\r\n```js\r\n    p.avg = p.count ? p.sum/p.count : 0;\r\n```\r\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/304732630",
        "html_url": "https://github.com/square/crossfilter/issues/102#issuecomment-304732630",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/102",
        "id": 304732630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDczMjYzMA==",
        "user": {
            "login": "monfera",
            "id": 1548516,
            "node_id": "MDQ6VXNlcjE1NDg1MTY=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1548516?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monfera",
            "html_url": "https://github.com/monfera",
            "followers_url": "https://api.github.com/users/monfera/followers",
            "following_url": "https://api.github.com/users/monfera/following{/other_user}",
            "gists_url": "https://api.github.com/users/monfera/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monfera/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monfera/subscriptions",
            "organizations_url": "https://api.github.com/users/monfera/orgs",
            "repos_url": "https://api.github.com/users/monfera/repos",
            "events_url": "https://api.github.com/users/monfera/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monfera/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-05-29T21:20:41Z",
        "updated_at": "2017-05-29T21:20:41Z",
        "author_association": "NONE",
        "body": "Derived calculations, such as `avg` here, can be moved out of the the reducers, as they use extra CPU cycles. Non-numeric aggregations may even stress the GC, worst case, yielding janky crossfiltering.\r\n\r\nThe final reduction can be done at the end of an interaction, i.e. after applying a filter or adding an array of new elements. The aggregate is just a tuple of `count` and `sum`. On a project we even made a shallow abstraction for the final reduction of the aggregates.\r\n\r\nIt conveniently makes the user responsible for handling the degenerate case of the empty set (e.g. they can check `count` or use `isNaN`). A NaN is usually preferred over a zero `avg` because the value 0 implies a legit average [where there isn't](https://math.stackexchange.com/questions/909395/what-is-the-average-of-no-numbers) and typical crossfiltering aggregates on the empty set don't make sense (e.g. values that characterize distributions).\r\n\r\nWith some aggregates, non-empty sets of reasonable values can still lead to edge cases. E.g. computing the extent where all N numbers are of the same value. The user of the values can determine what to do with the edge case, e.g. just not rendering axis ticks, or adding 1 to `max` and using zero, or subtracting 1 from `min` for rendering some ticks, whatever makes sense.\r\n\r\nAs a more complicated, yet still incrementally computable aggregate, consider the standard deviation or its cousin, [variance](https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Online_algorithm). The final reduction is division and taking the square root.\r\n\r\nA more challenging group aggregate, surprisingly, is the calculation of the extent (or just a minimum or maximum). The difficulty is updating the aggregate with items removed. A basic option is to maintain a sorted value vector but it gets expensive.\r\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/389819630",
        "html_url": "https://github.com/square/crossfilter/issues/176#issuecomment-389819630",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/176",
        "id": 389819630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTgxOTYzMA==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-17T10:22:33Z",
        "updated_at": "2018-05-17T10:22:33Z",
        "author_association": "NONE",
        "body": "As long as the data consists of an array of records, and you want to filter and aggregate at the record level, crossfilter should be able to handle it.\r\n\r\nStack Overflow is a better place to post support questions. Could you please post your question to SO with the [crossfilter] tag? A few of us from the community follow the tag closely. \r\n\r\nThere's no need to add other tags. (Adding vague tags like JavaScript tend to attract negative attention.)\r\n\r\nOr if you prefer a Google Group, there is also the [crossfilter users group](https://groups.google.com/forum/#!forum/crossfilter)\r\n"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/389821961",
        "html_url": "https://github.com/square/crossfilter/issues/176#issuecomment-389821961",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/176",
        "id": 389821961,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTgyMTk2MQ==",
        "user": {
            "login": "giatrakister",
            "id": 13415733,
            "node_id": "MDQ6VXNlcjEzNDE1NzMz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/13415733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giatrakister",
            "html_url": "https://github.com/giatrakister",
            "followers_url": "https://api.github.com/users/giatrakister/followers",
            "following_url": "https://api.github.com/users/giatrakister/following{/other_user}",
            "gists_url": "https://api.github.com/users/giatrakister/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giatrakister/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giatrakister/subscriptions",
            "organizations_url": "https://api.github.com/users/giatrakister/orgs",
            "repos_url": "https://api.github.com/users/giatrakister/repos",
            "events_url": "https://api.github.com/users/giatrakister/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giatrakister/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-17T10:32:59Z",
        "updated_at": "2018-05-17T10:32:59Z",
        "author_association": "NONE",
        "body": "i just posted it in stack overflow.thanx."
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/390614315",
        "html_url": "https://github.com/square/crossfilter/issues/177#issuecomment-390614315",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/177",
        "id": 390614315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDYxNDMxNQ==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T10:19:11Z",
        "updated_at": "2018-05-21T10:19:11Z",
        "author_association": "NONE",
        "body": "Hi @Shirazhussain. Could you please report this at the actively-maintained [community fork of this repo](https://github.com/crossfilter/crossfilter)? If you can provide a reproducible example (block, fiddle, etc.) that will help a lot."
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/398768099",
        "html_url": "https://github.com/square/crossfilter/issues/178#issuecomment-398768099",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/178",
        "id": 398768099,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc2ODA5OQ==",
        "user": {
            "login": "esjewett",
            "id": 4822,
            "node_id": "MDQ6VXNlcjQ4MjI=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/4822?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esjewett",
            "html_url": "https://github.com/esjewett",
            "followers_url": "https://api.github.com/users/esjewett/followers",
            "following_url": "https://api.github.com/users/esjewett/following{/other_user}",
            "gists_url": "https://api.github.com/users/esjewett/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esjewett/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esjewett/subscriptions",
            "organizations_url": "https://api.github.com/users/esjewett/orgs",
            "repos_url": "https://api.github.com/users/esjewett/repos",
            "events_url": "https://api.github.com/users/esjewett/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esjewett/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-20T14:23:35Z",
        "updated_at": "2018-06-20T14:24:04Z",
        "author_association": "NONE",
        "body": "Hi,\r\n\r\nYou have a bug in your code - the dimension accessor should be written like this\r\n\r\n```\r\ntipDim = payments.dimension (function(d){ return d.type })\r\n```\r\n\r\nNote the `return`.\r\n\r\nOnce you do this it will start sorting properly. But keep in mind that Crossfilter just sorts based on Javascript natural ordering, so capital letters have a lower value than lowercase letters. If you want it to treat upper- and lower-case letters the same during sorting of the dimension, then you need to make your dimension accessor convert them to all upper- or all lower-case like this:\r\n\r\n```\r\ntipDim = payments.dimension (function(d){ return d.type.toLowerCase() })\r\n```\r\n\r\nHope that helps. Please note that this repository is no longer maintained. The community fork that is maintained is over here: https://github.com/crossfilter/crossfilter\r\n\r\nRegards,\r\nEthan"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/398783943",
        "html_url": "https://github.com/square/crossfilter/issues/178#issuecomment-398783943",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/178",
        "id": 398783943,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc4Mzk0Mw==",
        "user": {
            "login": "adithyavinjamoori",
            "id": 17375737,
            "node_id": "MDQ6VXNlcjE3Mzc1NzM3",
            "avatar_url": "https://avatars2.githubusercontent.com/u/17375737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adithyavinjamoori",
            "html_url": "https://github.com/adithyavinjamoori",
            "followers_url": "https://api.github.com/users/adithyavinjamoori/followers",
            "following_url": "https://api.github.com/users/adithyavinjamoori/following{/other_user}",
            "gists_url": "https://api.github.com/users/adithyavinjamoori/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adithyavinjamoori/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adithyavinjamoori/subscriptions",
            "organizations_url": "https://api.github.com/users/adithyavinjamoori/orgs",
            "repos_url": "https://api.github.com/users/adithyavinjamoori/repos",
            "events_url": "https://api.github.com/users/adithyavinjamoori/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adithyavinjamoori/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-20T15:02:45Z",
        "updated_at": "2018-06-20T15:02:45Z",
        "author_association": "NONE",
        "body": "Thanks @esjewett it worked. And thanks for the update regarding new repository."
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/402269726",
        "html_url": "https://github.com/square/crossfilter/issues/179#issuecomment-402269726",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/179",
        "id": 402269726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI2OTcyNg==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-03T19:36:17Z",
        "updated_at": "2018-07-03T19:36:17Z",
        "author_association": "NONE",
        "body": "Speaking as one of the maintainers of the community fork, I would like to point out that, in all fairness, our fork has a different focus than the original. \r\n\r\nIt is more feature-heavy, and while the performance is still very good, we have made some trade-offs to support new features.\r\n\r\nThe original has a spare and minimal interface by design, while in the fork we have added most of the contributions we have received: simplicity is not as much of a goal for us.\r\n\r\nI would argue that, whether this repo is maintained or archived, there is definitely still a place for the original crossfilter on npm, for those who prefer the minimal version."
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/403900031",
        "html_url": "https://github.com/square/crossfilter/issues/179#issuecomment-403900031",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/179",
        "id": 403900031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzkwMDAzMQ==",
        "user": {
            "login": "tristansokol",
            "id": 867661,
            "node_id": "MDQ6VXNlcjg2NzY2MQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/867661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tristansokol",
            "html_url": "https://github.com/tristansokol",
            "followers_url": "https://api.github.com/users/tristansokol/followers",
            "following_url": "https://api.github.com/users/tristansokol/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristansokol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tristansokol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristansokol/subscriptions",
            "organizations_url": "https://api.github.com/users/tristansokol/orgs",
            "repos_url": "https://api.github.com/users/tristansokol/repos",
            "events_url": "https://api.github.com/users/tristansokol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tristansokol/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-10T17:17:32Z",
        "updated_at": "2018-07-10T17:17:32Z",
        "author_association": "NONE",
        "body": "Thanks for your input @gordonwoodhull! I will keep this in mind when writing the Archival readme. Luckily, an archived repo shouldn't interfere with people using the code much if they want to, in my mind it primarily makes it more clear what the expectation around updates is. "
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/428915594",
        "html_url": "https://github.com/square/crossfilter/pull/75#issuecomment-428915594",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/75",
        "id": 428915594,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODkxNTU5NA==",
        "user": {
            "login": "Islam888",
            "id": 16297114,
            "node_id": "MDQ6VXNlcjE2Mjk3MTE0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/16297114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Islam888",
            "html_url": "https://github.com/Islam888",
            "followers_url": "https://api.github.com/users/Islam888/followers",
            "following_url": "https://api.github.com/users/Islam888/following{/other_user}",
            "gists_url": "https://api.github.com/users/Islam888/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Islam888/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Islam888/subscriptions",
            "organizations_url": "https://api.github.com/users/Islam888/orgs",
            "repos_url": "https://api.github.com/users/Islam888/repos",
            "events_url": "https://api.github.com/users/Islam888/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Islam888/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-11T11:11:03Z",
        "updated_at": "2018-10-11T11:11:03Z",
        "author_association": "NONE",
        "body": "To guide those who still in the same problem => There is an extension called **crossfilter2** which solve this problem. Here its npm package https://www.npmjs.com/package/crossfilter2"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/428915633",
        "html_url": "https://github.com/square/crossfilter/issues/104#issuecomment-428915633",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/104",
        "id": 428915633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyODkxNTYzMw==",
        "user": {
            "login": "Islam888",
            "id": 16297114,
            "node_id": "MDQ6VXNlcjE2Mjk3MTE0",
            "avatar_url": "https://avatars2.githubusercontent.com/u/16297114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Islam888",
            "html_url": "https://github.com/Islam888",
            "followers_url": "https://api.github.com/users/Islam888/followers",
            "following_url": "https://api.github.com/users/Islam888/following{/other_user}",
            "gists_url": "https://api.github.com/users/Islam888/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Islam888/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Islam888/subscriptions",
            "organizations_url": "https://api.github.com/users/Islam888/orgs",
            "repos_url": "https://api.github.com/users/Islam888/repos",
            "events_url": "https://api.github.com/users/Islam888/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Islam888/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-11T11:11:09Z",
        "updated_at": "2018-10-11T11:11:09Z",
        "author_association": "NONE",
        "body": "To guide those who still in the same problem => There is an extension called **crossfilter2** which solve this problem. Here its npm package https://www.npmjs.com/package/crossfilter2"
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/472344303",
        "html_url": "https://github.com/square/crossfilter/issues/180#issuecomment-472344303",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/180",
        "id": 472344303,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjM0NDMwMw==",
        "user": {
            "login": "gordonwoodhull",
            "id": 1366709,
            "node_id": "MDQ6VXNlcjEzNjY3MDk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/1366709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gordonwoodhull",
            "html_url": "https://github.com/gordonwoodhull",
            "followers_url": "https://api.github.com/users/gordonwoodhull/followers",
            "following_url": "https://api.github.com/users/gordonwoodhull/following{/other_user}",
            "gists_url": "https://api.github.com/users/gordonwoodhull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gordonwoodhull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gordonwoodhull/subscriptions",
            "organizations_url": "https://api.github.com/users/gordonwoodhull/orgs",
            "repos_url": "https://api.github.com/users/gordonwoodhull/repos",
            "events_url": "https://api.github.com/users/gordonwoodhull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gordonwoodhull/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-13T09:27:23Z",
        "updated_at": "2019-03-13T09:53:56Z",
        "author_association": "NONE",
        "body": "I think you've got the wrong repo. Crossfilter is just the database and does not itself have axes or ticks to format.\r\n\r\nAre you using [dc.js](https://github.com/dc-js/dc.js/issues)?\r\n\r\nAlso, if this is a support question, it may be better suited for Stack Overflow. Github is usually for bugs and feature requests (although different repos handle this differently)."
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/issues/comments/472501833",
        "html_url": "https://github.com/square/crossfilter/issues/180#issuecomment-472501833",
        "issue_url": "https://api.github.com/repos/square/crossfilter/issues/180",
        "id": 472501833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjUwMTgzMw==",
        "user": {
            "login": "mas-dse-acatovic",
            "id": 32073741,
            "node_id": "MDQ6VXNlcjMyMDczNzQx",
            "avatar_url": "https://avatars3.githubusercontent.com/u/32073741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mas-dse-acatovic",
            "html_url": "https://github.com/mas-dse-acatovic",
            "followers_url": "https://api.github.com/users/mas-dse-acatovic/followers",
            "following_url": "https://api.github.com/users/mas-dse-acatovic/following{/other_user}",
            "gists_url": "https://api.github.com/users/mas-dse-acatovic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mas-dse-acatovic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mas-dse-acatovic/subscriptions",
            "organizations_url": "https://api.github.com/users/mas-dse-acatovic/orgs",
            "repos_url": "https://api.github.com/users/mas-dse-acatovic/repos",
            "events_url": "https://api.github.com/users/mas-dse-acatovic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mas-dse-acatovic/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-13T16:33:58Z",
        "updated_at": "2019-03-13T16:33:58Z",
        "author_association": "NONE",
        "body": "OK, thanks. "
    }
]