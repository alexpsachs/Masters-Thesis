[
    {
        "url": "https://api.github.com/repos/square/crossfilter/pulls/comments/3208541",
        "pull_request_review_id": null,
        "id": 3208541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMDg1NDE=",
        "diff_hunk": "@@ -23,15 +23,18 @@ function bisect_by(f) {\n   // present in a, the insertion point will be before (to the left of) any\n   // existing entries. The return value is suitable for use as the first\n   // argument to `array.splice` assuming that a is already sorted.\n+  // Incomparable values such as NaN and undefined are assumed to be at the end\n+  // of the array.\n   //\n   // The returned insertion point i partitions the array a into two halves so\n   // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n   // a[i:hi] for the right side.\n   function bisectLeft(a, x, lo, hi) {\n     while (lo < hi) {\n-      var mid = lo + hi >> 1;\n-      if (f(a[mid]) < x) lo = mid + 1;\n-      else hi = mid;\n+      var mid = lo + hi >>> 1,\n+          y = f(a[mid]);\n+      if (x <= y || !(y <= y)) hi = mid;",
        "path": "crossfilter.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "c258f39d5d60be31885dd7cab048b24ba1cf5706",
        "original_commit_id": "57d304a0685c09d654d526a7f90da5ee1fce5f1f",
        "user": {
            "login": "RandomEtc",
            "id": 39635,
            "node_id": "MDQ6VXNlcjM5NjM1",
            "avatar_url": "https://avatars0.githubusercontent.com/u/39635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandomEtc",
            "html_url": "https://github.com/RandomEtc",
            "followers_url": "https://api.github.com/users/RandomEtc/followers",
            "following_url": "https://api.github.com/users/RandomEtc/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandomEtc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandomEtc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandomEtc/subscriptions",
            "organizations_url": "https://api.github.com/users/RandomEtc/orgs",
            "repos_url": "https://api.github.com/users/RandomEtc/repos",
            "events_url": "https://api.github.com/users/RandomEtc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandomEtc/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "is `!(y <= y)` just a faster `isNaN(y)`?\n",
        "created_at": "2013-03-01T18:31:02Z",
        "updated_at": "2013-03-01T22:08:22Z",
        "html_url": "https://github.com/square/crossfilter/pull/58#discussion_r3208541",
        "pull_request_url": "https://api.github.com/repos/square/crossfilter/pulls/58",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/square/crossfilter/pulls/comments/3208541"
            },
            "html": {
                "href": "https://github.com/square/crossfilter/pull/58#discussion_r3208541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/square/crossfilter/pulls/58"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/square/crossfilter/pulls/comments/3208582",
        "pull_request_review_id": null,
        "id": 3208582,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMDg1ODI=",
        "diff_hunk": "@@ -23,15 +23,18 @@ function bisect_by(f) {\n   // present in a, the insertion point will be before (to the left of) any\n   // existing entries. The return value is suitable for use as the first\n   // argument to `array.splice` assuming that a is already sorted.\n+  // Incomparable values such as NaN and undefined are assumed to be at the end\n+  // of the array.\n   //\n   // The returned insertion point i partitions the array a into two halves so\n   // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n   // a[i:hi] for the right side.\n   function bisectLeft(a, x, lo, hi) {\n     while (lo < hi) {\n-      var mid = lo + hi >> 1;\n-      if (f(a[mid]) < x) lo = mid + 1;\n-      else hi = mid;\n+      var mid = lo + hi >>> 1,\n+          y = f(a[mid]);\n+      if (x <= y || !(y <= y)) hi = mid;",
        "path": "crossfilter.js",
        "position": 17,
        "original_position": 17,
        "commit_id": "c258f39d5d60be31885dd7cab048b24ba1cf5706",
        "original_commit_id": "57d304a0685c09d654d526a7f90da5ee1fce5f1f",
        "user": {
            "login": "jasondavies",
            "id": 31223,
            "node_id": "MDQ6VXNlcjMxMjIz",
            "avatar_url": "https://avatars3.githubusercontent.com/u/31223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jasondavies",
            "html_url": "https://github.com/jasondavies",
            "followers_url": "https://api.github.com/users/jasondavies/followers",
            "following_url": "https://api.github.com/users/jasondavies/following{/other_user}",
            "gists_url": "https://api.github.com/users/jasondavies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jasondavies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jasondavies/subscriptions",
            "organizations_url": "https://api.github.com/users/jasondavies/orgs",
            "repos_url": "https://api.github.com/users/jasondavies/repos",
            "events_url": "https://api.github.com/users/jasondavies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jasondavies/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, it checks for an \u201cincomparable value\u201d, which is any value that isn\u2019t equal to itself.  `isNaN(y)` would return true for non-numeric strings, which are comparable.\n",
        "created_at": "2013-03-01T18:32:57Z",
        "updated_at": "2013-03-01T22:08:22Z",
        "html_url": "https://github.com/square/crossfilter/pull/58#discussion_r3208582",
        "pull_request_url": "https://api.github.com/repos/square/crossfilter/pulls/58",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/square/crossfilter/pulls/comments/3208582"
            },
            "html": {
                "href": "https://github.com/square/crossfilter/pull/58#discussion_r3208582"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/square/crossfilter/pulls/58"
            }
        }
    }
]