[
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/20026394",
        "pull_request_review_id": null,
        "id": 20026394,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDI2Mzk0",
        "diff_hunk": "@@ -21,6 +21,25 @@ $modules: () !default;\n }\n \n /**\n+ *\n+ *   Map Serialize\n+ *   Convert a map to JSON. Don't you even try to get fancy with this just yet.\n+ *\n+ *   @param {map} $map - Map to convert.\n+ *\n+ *   @return A string with a map converted to JSON.\n+ */\n+@function map-serialize($map) {\n+  $str: '{';\n+  @each $key, $value in $map {",
        "path": "scss/helpers/_functions.scss",
        "position": null,
        "original_position": 14,
        "commit_id": "4ec089ccddc41b3fc626497c4406850a32c1fc26",
        "original_commit_id": "f0ff67332b0a24506455f939e3dbd61c641c463d",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@gakimball this seems to throw an error: \"expected 'in' keyword in \\@each directive\"\n",
        "created_at": "2014-11-07T18:11:27Z",
        "updated_at": "2014-11-10T14:23:29Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/88#discussion_r20026394",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/88",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/20026394"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/88#discussion_r20026394"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/88"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678172",
        "pull_request_review_id": null,
        "id": 19678172,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc4MTcy",
        "diff_hunk": "@@ -0,0 +1,443 @@\n+##AngularJS\n+Gulp will watch for file changes in the `client` directory. Upon change, all files will be copied over to the `build` directory and the webserver will be reloaded. Note that the build directory will be deleted and recompiled upon each change. This means that any updates to files in the `build` directory will be deleted.\n+\n+### Dynamic Routing\n+\n+To simplify the routing process, this project includes dynamic routing. Here's how it works:\n+\n+1. Add front matter to an application template (in `client/templates`)\n+2. Make sure to include a `name` which you'd want to use with `ui-sref` (the ui-router way of linking pages) and a `url` which that template can be accessible through\n+3. Run `gulp` to compile the project into the `build` folder\n+\n+### Usage\n+\n+This app depends on the use of `front matter` which is text prepended to templates like so:\n+\n+````\n+---\n+name: mail\n+url: /mail\n+---\n+````\n+\n+Front matter follows YAML conventions. For dynamic routing, a `name` and `url` have to be used (as discussed above). There are some other options.\n+\n+###Parent\n+`parent` to specify a parent template. This can also be done using standard dot-delimited convention in the name. So you can either do this:\n+\n+````\n+----\n+name: inbox\n+parent: mail\n+----\n+````\n+\n+or this:\n+\n+````\n+----\n+name: mail.inbox\n+----\n+````\n+\n+Note that this specifies `child` templates. This means that when `mail` loads up, it'll have to have a `<div ui-view></div>` element into which a child is loaded. A child will need a `url` as well but note that the URL will be appended to the parent's URL like so:\n+\n+````\n+name: mail\n+url: /mail\n+````\n+\n+will be accessible via `/mail` while the child:\n+\n+````\n+name: mail.inbox\n+url: /inbox\n+````\n+\n+will be accessible via `/mail/inbox`. This specific URL has to be typed in in order for the child to show up. This allows us to specify several children (`inbox`, `sent`, `trash`, etc.).\n+\n+### Composed views\n+\n+Child views are great and all but what if you want to COMPOSE a view. Let's say you want a template that includes a dynamic sidebar and a footer. You can't create that with a child template structure.\n+\n+For the main view (the parent) that will house the rest of the templates in a composition add this:\n+\n+````\n+name: mail\n+composed: true\n+````\n+\n+This willl tell the system to look out for any composable views. Now let's look at what the footer would look like:\n+\n+````\n+name: footer\n+hasComposed: true\n+parent: mail\n+````\n+\n+Note that for composable views, you can't use dot-delimited parents, you have to explicitly set them! To use the footer in the original `mail` template, you have to use its name:\n+\n+`<div ui-view=\"footer\"></div>`\n+\n+### Controllers\n+Angular supports this neat thing called controllers. They can get confusing and so each template gets its own `DefaultController` which can be overriden like so:\n+\n+````\n+controller: MyController\n+````\n+\n+Among other things, the default controller passes a bunch of data through. For instance, all of your front-matter settings will be accessible via `vars` in your template. `{{ vars.name }}` will return the name of your route while `{{ vars.path }}` will return the relative path to the template.\n+\n+If you use dynamic parameters in your URL, those parameters will be accessible via `params` so if your URL is:\n+\n+````\n+url: /mail/inbox/:id\n+````\n+\n+It will match any URL that follows that pattern (so `/mail/inbox/383828` would match as well as `/mail/inbox/my-email` but not `/mail/inbox/3838/something`).\n+\n+###Animations\n+Angular and the UI router support animations. That means that when you transition from a page to another page, you can CSS animate it. It's easy to do with CSS; however, you can use front matter to register CSS animations:\n+\n+````\n+animationIn: fadeIn\n+animationOut: fadeOut\n+````\n+\n+The animation data gets registered for the template (only if it's a child or parent, not a partial) and will fire in the appropriate times.\n+\n+Please note that the default AngularJS behavior for animations is to trigger both the \"in\" animation of a new element and the \"out\" animation of an element (`ng-enter` and `ng-leave` respectively) at the same time which will cause both views to appear together.\n+\n+The ability to `sync` transitions together has been delayed from v1.2 to 1.3 and finally as a possibility for 2.0 ([ref](https://github.com/angular/angular.js/issues/2310))\n+\n+**Note** Please don't forget to add the `ui-animation` attribute wherever you have `ui-view` in order to hook your animations up to that event!\n+\n+### Additional mock data\n+\n+Now that we have views and controllers out of the way, let's talk about mock data. As I've said, the controller will pass on ALL front matter to the template/view which means that we can add miscellaneous data to the front-matter and access it in the view! The front matter plugin supports standard YAML conventions which means that even arrays are supported! Let's see how we can put this to good use.\n+\n+Let's say that we want to create a list of emails. Instead of copy/pasting a ton of code to simulate a full inbox, we can create a front-matter array:\n+\n+````\n+emails:\n+    - Email 1\n+    - Email 2\n+    - Email 3\n+    - Email 4\n+    - Email 5\n+    - Email 6\n+````\n+\n+We can then iterate over this array using standard angular conventions:\n+\n+````\n+<div ng-repeat=\"email in vars.emails\">{{ email }}</div>\n+````\n+\n+This will translate to:\n+\n+````\n+<div>Email 1</div>\n+<div>Email 2</div>\n+<div>Email 3</div>\n+<div>Email 4</div>\n+<div>Email 5</div>\n+<div>Email 6</div>\n+````\n+\n+**Note** Named views are special and unfortunately, their properties can only be accessed through the `composed['name']` where name is the name you specify in a template. The entire mock data object for the parent and all of its composed children is accessible via `vars`.\n+\n+###Directives\n+All of the directives are supported as attribute directive so you can add them to an element like so:\n+\n+`<div fa-open></div>`\n+\n+However, some directives allow element-level declaration like so:\n+\n+`<fa-accordion-set></fa-accordion-set`\n+\n+From now on, I will use the attribute declaration for directives that don't allow element declaration and use element declaration for elements that allow both.\n+\n+Note that some directives will REPLACE your original element, in others the directive will become a child of the original element.\n+\n+Wherever necessary, IDs will also be included to show that IDs are required in order for the directives to work correctly.\n+\n+\n+####Angular and UI Router Helpers\n+\n+There are some nuances of Angular itself and some of the libraries Foundation for Apps includes and uses that can make prototyping easier and quicker. Here's a rundown of some of these tools:\n+\n+**ui-sref**\n+\n+Instead of using `<a href=\"/my/sub/page\"></a>` in a page to access another page, it's common practice to use the router. Foundation for Apps uses UI Router for its routing which allows for named route references. For instance, let's say there is a page with this front matter:\n+\n+````\n+name: mypage\n+url: my/sub/page\n+````\n+\n+You can easily link to it like so:\n+\n+````\n+<a ui-sref=\"mypage\">my page</a>\n+````\n+\n+`ui-sref` can also take in parameters for pages that accept parameters. Here's another example page that uses parameters:\n+\n+````\n+name: inbox.message\n+url: inbox/:id\n+````\n+\n+The page can be accessed via `<a ui-sref=\"inbox.message({ id: 5 })\">5th messages</a>`.\n+\n+**ui-sref-active**\n+Now let's say we want to create a menu of links and want to make sure that the active link gets an extra special class to indicate that it is, indeed, active. There are two very similar ways to do this. The first one is using `ui-sref-active`, you can place this directive on either the `ui-sref` element or on its parent. When active, it will add a class of your choosing:\n+\n+````html\n+<ul>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"mypage\">My page</a>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"myotherpage\">My page</a>\n+</ul>\n+````\n+\n+The other way is using `ui-sref-active-eq` which works almost the same with one difference. Whenever accessing a child page, the parent page will show up as active whenever using `ui-sref-active`. The `ui-sref-active-eq` is triggered ONLY when a specific page is triggered, no matter what their parent is.\n+\n+In the previous example with inbox and inbox.message, the inbox page would show up as active with `ui-sref-active` when on the inbox.message page. With `ui-sref-active-eq`, inbox would show up as active only when specifically on the inbox page.\n+\n+If none of this makes sense, stick with `ui-sref-active-eq`\n+\n+####Custom Helpers\n+\n+Foundation has some great helpers that foster better interaction between elements.\n+\n+**fa-close**",
        "path": "js/angular/README.md",
        "position": 187,
        "original_position": 214,
        "commit_id": "91d7ca61e964727731c60e978b1fa49ca3b5061c",
        "original_commit_id": "f1d61b657699fc9822f8e82fe9bc49eb332916f4",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@gakimball here's where the docs for the helpers start. It explains how the directives work, how to use them, and some examples. Is that sufficient?\n",
        "created_at": "2014-10-31T16:45:16Z",
        "updated_at": "2014-11-10T17:07:07Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678172",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/52",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678172"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678172"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/52"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678499",
        "pull_request_review_id": null,
        "id": 19678499,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc4NDk5",
        "diff_hunk": "@@ -0,0 +1,443 @@\n+##AngularJS\n+Gulp will watch for file changes in the `client` directory. Upon change, all files will be copied over to the `build` directory and the webserver will be reloaded. Note that the build directory will be deleted and recompiled upon each change. This means that any updates to files in the `build` directory will be deleted.\n+\n+### Dynamic Routing\n+\n+To simplify the routing process, this project includes dynamic routing. Here's how it works:\n+\n+1. Add front matter to an application template (in `client/templates`)\n+2. Make sure to include a `name` which you'd want to use with `ui-sref` (the ui-router way of linking pages) and a `url` which that template can be accessible through\n+3. Run `gulp` to compile the project into the `build` folder\n+\n+### Usage\n+\n+This app depends on the use of `front matter` which is text prepended to templates like so:\n+\n+````\n+---\n+name: mail\n+url: /mail\n+---\n+````\n+\n+Front matter follows YAML conventions. For dynamic routing, a `name` and `url` have to be used (as discussed above). There are some other options.\n+\n+###Parent\n+`parent` to specify a parent template. This can also be done using standard dot-delimited convention in the name. So you can either do this:\n+\n+````\n+----\n+name: inbox\n+parent: mail\n+----\n+````\n+\n+or this:\n+\n+````\n+----\n+name: mail.inbox\n+----\n+````\n+\n+Note that this specifies `child` templates. This means that when `mail` loads up, it'll have to have a `<div ui-view></div>` element into which a child is loaded. A child will need a `url` as well but note that the URL will be appended to the parent's URL like so:\n+\n+````\n+name: mail\n+url: /mail\n+````\n+\n+will be accessible via `/mail` while the child:\n+\n+````\n+name: mail.inbox\n+url: /inbox\n+````\n+\n+will be accessible via `/mail/inbox`. This specific URL has to be typed in in order for the child to show up. This allows us to specify several children (`inbox`, `sent`, `trash`, etc.).\n+\n+### Composed views\n+\n+Child views are great and all but what if you want to COMPOSE a view. Let's say you want a template that includes a dynamic sidebar and a footer. You can't create that with a child template structure.\n+\n+For the main view (the parent) that will house the rest of the templates in a composition add this:\n+\n+````\n+name: mail\n+composed: true\n+````\n+\n+This willl tell the system to look out for any composable views. Now let's look at what the footer would look like:\n+\n+````\n+name: footer\n+hasComposed: true\n+parent: mail\n+````\n+\n+Note that for composable views, you can't use dot-delimited parents, you have to explicitly set them! To use the footer in the original `mail` template, you have to use its name:\n+\n+`<div ui-view=\"footer\"></div>`\n+\n+### Controllers\n+Angular supports this neat thing called controllers. They can get confusing and so each template gets its own `DefaultController` which can be overriden like so:\n+\n+````\n+controller: MyController\n+````\n+\n+Among other things, the default controller passes a bunch of data through. For instance, all of your front-matter settings will be accessible via `vars` in your template. `{{ vars.name }}` will return the name of your route while `{{ vars.path }}` will return the relative path to the template.\n+\n+If you use dynamic parameters in your URL, those parameters will be accessible via `params` so if your URL is:\n+\n+````\n+url: /mail/inbox/:id\n+````\n+\n+It will match any URL that follows that pattern (so `/mail/inbox/383828` would match as well as `/mail/inbox/my-email` but not `/mail/inbox/3838/something`).\n+\n+###Animations\n+Angular and the UI router support animations. That means that when you transition from a page to another page, you can CSS animate it. It's easy to do with CSS; however, you can use front matter to register CSS animations:\n+\n+````\n+animationIn: fadeIn\n+animationOut: fadeOut\n+````\n+\n+The animation data gets registered for the template (only if it's a child or parent, not a partial) and will fire in the appropriate times.\n+\n+Please note that the default AngularJS behavior for animations is to trigger both the \"in\" animation of a new element and the \"out\" animation of an element (`ng-enter` and `ng-leave` respectively) at the same time which will cause both views to appear together.\n+\n+The ability to `sync` transitions together has been delayed from v1.2 to 1.3 and finally as a possibility for 2.0 ([ref](https://github.com/angular/angular.js/issues/2310))\n+\n+**Note** Please don't forget to add the `ui-animation` attribute wherever you have `ui-view` in order to hook your animations up to that event!\n+\n+### Additional mock data\n+\n+Now that we have views and controllers out of the way, let's talk about mock data. As I've said, the controller will pass on ALL front matter to the template/view which means that we can add miscellaneous data to the front-matter and access it in the view! The front matter plugin supports standard YAML conventions which means that even arrays are supported! Let's see how we can put this to good use.\n+\n+Let's say that we want to create a list of emails. Instead of copy/pasting a ton of code to simulate a full inbox, we can create a front-matter array:\n+\n+````\n+emails:\n+    - Email 1\n+    - Email 2\n+    - Email 3\n+    - Email 4\n+    - Email 5\n+    - Email 6\n+````\n+\n+We can then iterate over this array using standard angular conventions:\n+\n+````\n+<div ng-repeat=\"email in vars.emails\">{{ email }}</div>\n+````\n+\n+This will translate to:\n+\n+````\n+<div>Email 1</div>\n+<div>Email 2</div>\n+<div>Email 3</div>\n+<div>Email 4</div>\n+<div>Email 5</div>\n+<div>Email 6</div>\n+````\n+\n+**Note** Named views are special and unfortunately, their properties can only be accessed through the `composed['name']` where name is the name you specify in a template. The entire mock data object for the parent and all of its composed children is accessible via `vars`.\n+\n+###Directives\n+All of the directives are supported as attribute directive so you can add them to an element like so:\n+\n+`<div fa-open></div>`\n+\n+However, some directives allow element-level declaration like so:\n+\n+`<fa-accordion-set></fa-accordion-set`\n+\n+From now on, I will use the attribute declaration for directives that don't allow element declaration and use element declaration for elements that allow both.\n+\n+Note that some directives will REPLACE your original element, in others the directive will become a child of the original element.\n+\n+Wherever necessary, IDs will also be included to show that IDs are required in order for the directives to work correctly.\n+\n+\n+####Angular and UI Router Helpers\n+\n+There are some nuances of Angular itself and some of the libraries Foundation for Apps includes and uses that can make prototyping easier and quicker. Here's a rundown of some of these tools:\n+\n+**ui-sref**\n+\n+Instead of using `<a href=\"/my/sub/page\"></a>` in a page to access another page, it's common practice to use the router. Foundation for Apps uses UI Router for its routing which allows for named route references. For instance, let's say there is a page with this front matter:\n+\n+````\n+name: mypage\n+url: my/sub/page\n+````\n+\n+You can easily link to it like so:\n+\n+````\n+<a ui-sref=\"mypage\">my page</a>\n+````\n+\n+`ui-sref` can also take in parameters for pages that accept parameters. Here's another example page that uses parameters:\n+\n+````\n+name: inbox.message\n+url: inbox/:id\n+````\n+\n+The page can be accessed via `<a ui-sref=\"inbox.message({ id: 5 })\">5th messages</a>`.\n+\n+**ui-sref-active**\n+Now let's say we want to create a menu of links and want to make sure that the active link gets an extra special class to indicate that it is, indeed, active. There are two very similar ways to do this. The first one is using `ui-sref-active`, you can place this directive on either the `ui-sref` element or on its parent. When active, it will add a class of your choosing:\n+\n+````html\n+<ul>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"mypage\">My page</a>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"myotherpage\">My page</a>\n+</ul>\n+````\n+\n+The other way is using `ui-sref-active-eq` which works almost the same with one difference. Whenever accessing a child page, the parent page will show up as active whenever using `ui-sref-active`. The `ui-sref-active-eq` is triggered ONLY when a specific page is triggered, no matter what their parent is.\n+\n+In the previous example with inbox and inbox.message, the inbox page would show up as active with `ui-sref-active` when on the inbox.message page. With `ui-sref-active-eq`, inbox would show up as active only when specifically on the inbox page.\n+\n+If none of this makes sense, stick with `ui-sref-active-eq`\n+\n+####Custom Helpers\n+\n+Foundation has some great helpers that foster better interaction between elements.\n+\n+**fa-close**",
        "path": "js/angular/README.md",
        "position": 187,
        "original_position": 214,
        "commit_id": "91d7ca61e964727731c60e978b1fa49ca3b5061c",
        "original_commit_id": "f1d61b657699fc9822f8e82fe9bc49eb332916f4",
        "user": {
            "login": "gakimball",
            "id": 1142001,
            "node_id": "MDQ6VXNlcjExNDIwMDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1142001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gakimball",
            "html_url": "https://github.com/gakimball",
            "followers_url": "https://api.github.com/users/gakimball/followers",
            "following_url": "https://api.github.com/users/gakimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/gakimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gakimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gakimball/subscriptions",
            "organizations_url": "https://api.github.com/users/gakimball/orgs",
            "repos_url": "https://api.github.com/users/gakimball/repos",
            "events_url": "https://api.github.com/users/gakimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gakimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How does it work if you want to fire something from within the JS? It might just be something that's more obvious if you know Angular ;) Something like:\n\n``` js\n$('#modal').open();\n```\n\nOr whatever the Angular way is.\n",
        "created_at": "2014-10-31T16:50:32Z",
        "updated_at": "2014-11-10T17:07:07Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678499",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/52",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678499"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678499"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/52"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678604",
        "pull_request_review_id": null,
        "id": 19678604,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc4NjA0",
        "diff_hunk": "@@ -0,0 +1,443 @@\n+##AngularJS\n+Gulp will watch for file changes in the `client` directory. Upon change, all files will be copied over to the `build` directory and the webserver will be reloaded. Note that the build directory will be deleted and recompiled upon each change. This means that any updates to files in the `build` directory will be deleted.\n+\n+### Dynamic Routing\n+\n+To simplify the routing process, this project includes dynamic routing. Here's how it works:\n+\n+1. Add front matter to an application template (in `client/templates`)\n+2. Make sure to include a `name` which you'd want to use with `ui-sref` (the ui-router way of linking pages) and a `url` which that template can be accessible through\n+3. Run `gulp` to compile the project into the `build` folder\n+\n+### Usage\n+\n+This app depends on the use of `front matter` which is text prepended to templates like so:\n+\n+````\n+---\n+name: mail\n+url: /mail\n+---\n+````\n+\n+Front matter follows YAML conventions. For dynamic routing, a `name` and `url` have to be used (as discussed above). There are some other options.\n+\n+###Parent\n+`parent` to specify a parent template. This can also be done using standard dot-delimited convention in the name. So you can either do this:\n+\n+````\n+----\n+name: inbox\n+parent: mail\n+----\n+````\n+\n+or this:\n+\n+````\n+----\n+name: mail.inbox\n+----\n+````\n+\n+Note that this specifies `child` templates. This means that when `mail` loads up, it'll have to have a `<div ui-view></div>` element into which a child is loaded. A child will need a `url` as well but note that the URL will be appended to the parent's URL like so:\n+\n+````\n+name: mail\n+url: /mail\n+````\n+\n+will be accessible via `/mail` while the child:\n+\n+````\n+name: mail.inbox\n+url: /inbox\n+````\n+\n+will be accessible via `/mail/inbox`. This specific URL has to be typed in in order for the child to show up. This allows us to specify several children (`inbox`, `sent`, `trash`, etc.).\n+\n+### Composed views\n+\n+Child views are great and all but what if you want to COMPOSE a view. Let's say you want a template that includes a dynamic sidebar and a footer. You can't create that with a child template structure.\n+\n+For the main view (the parent) that will house the rest of the templates in a composition add this:\n+\n+````\n+name: mail\n+composed: true\n+````\n+\n+This willl tell the system to look out for any composable views. Now let's look at what the footer would look like:\n+\n+````\n+name: footer\n+hasComposed: true\n+parent: mail\n+````\n+\n+Note that for composable views, you can't use dot-delimited parents, you have to explicitly set them! To use the footer in the original `mail` template, you have to use its name:\n+\n+`<div ui-view=\"footer\"></div>`\n+\n+### Controllers\n+Angular supports this neat thing called controllers. They can get confusing and so each template gets its own `DefaultController` which can be overriden like so:\n+\n+````\n+controller: MyController\n+````\n+\n+Among other things, the default controller passes a bunch of data through. For instance, all of your front-matter settings will be accessible via `vars` in your template. `{{ vars.name }}` will return the name of your route while `{{ vars.path }}` will return the relative path to the template.\n+\n+If you use dynamic parameters in your URL, those parameters will be accessible via `params` so if your URL is:\n+\n+````\n+url: /mail/inbox/:id\n+````\n+\n+It will match any URL that follows that pattern (so `/mail/inbox/383828` would match as well as `/mail/inbox/my-email` but not `/mail/inbox/3838/something`).\n+\n+###Animations\n+Angular and the UI router support animations. That means that when you transition from a page to another page, you can CSS animate it. It's easy to do with CSS; however, you can use front matter to register CSS animations:\n+\n+````\n+animationIn: fadeIn\n+animationOut: fadeOut\n+````\n+\n+The animation data gets registered for the template (only if it's a child or parent, not a partial) and will fire in the appropriate times.\n+\n+Please note that the default AngularJS behavior for animations is to trigger both the \"in\" animation of a new element and the \"out\" animation of an element (`ng-enter` and `ng-leave` respectively) at the same time which will cause both views to appear together.\n+\n+The ability to `sync` transitions together has been delayed from v1.2 to 1.3 and finally as a possibility for 2.0 ([ref](https://github.com/angular/angular.js/issues/2310))\n+\n+**Note** Please don't forget to add the `ui-animation` attribute wherever you have `ui-view` in order to hook your animations up to that event!\n+\n+### Additional mock data\n+\n+Now that we have views and controllers out of the way, let's talk about mock data. As I've said, the controller will pass on ALL front matter to the template/view which means that we can add miscellaneous data to the front-matter and access it in the view! The front matter plugin supports standard YAML conventions which means that even arrays are supported! Let's see how we can put this to good use.\n+\n+Let's say that we want to create a list of emails. Instead of copy/pasting a ton of code to simulate a full inbox, we can create a front-matter array:\n+\n+````\n+emails:\n+    - Email 1\n+    - Email 2\n+    - Email 3\n+    - Email 4\n+    - Email 5\n+    - Email 6\n+````\n+\n+We can then iterate over this array using standard angular conventions:\n+\n+````\n+<div ng-repeat=\"email in vars.emails\">{{ email }}</div>\n+````\n+\n+This will translate to:\n+\n+````\n+<div>Email 1</div>\n+<div>Email 2</div>\n+<div>Email 3</div>\n+<div>Email 4</div>\n+<div>Email 5</div>\n+<div>Email 6</div>\n+````\n+\n+**Note** Named views are special and unfortunately, their properties can only be accessed through the `composed['name']` where name is the name you specify in a template. The entire mock data object for the parent and all of its composed children is accessible via `vars`.\n+\n+###Directives\n+All of the directives are supported as attribute directive so you can add them to an element like so:\n+\n+`<div fa-open></div>`\n+\n+However, some directives allow element-level declaration like so:\n+\n+`<fa-accordion-set></fa-accordion-set`\n+\n+From now on, I will use the attribute declaration for directives that don't allow element declaration and use element declaration for elements that allow both.\n+\n+Note that some directives will REPLACE your original element, in others the directive will become a child of the original element.\n+\n+Wherever necessary, IDs will also be included to show that IDs are required in order for the directives to work correctly.\n+\n+\n+####Angular and UI Router Helpers\n+\n+There are some nuances of Angular itself and some of the libraries Foundation for Apps includes and uses that can make prototyping easier and quicker. Here's a rundown of some of these tools:\n+\n+**ui-sref**\n+\n+Instead of using `<a href=\"/my/sub/page\"></a>` in a page to access another page, it's common practice to use the router. Foundation for Apps uses UI Router for its routing which allows for named route references. For instance, let's say there is a page with this front matter:\n+\n+````\n+name: mypage\n+url: my/sub/page\n+````\n+\n+You can easily link to it like so:\n+\n+````\n+<a ui-sref=\"mypage\">my page</a>\n+````\n+\n+`ui-sref` can also take in parameters for pages that accept parameters. Here's another example page that uses parameters:\n+\n+````\n+name: inbox.message\n+url: inbox/:id\n+````\n+\n+The page can be accessed via `<a ui-sref=\"inbox.message({ id: 5 })\">5th messages</a>`.\n+\n+**ui-sref-active**\n+Now let's say we want to create a menu of links and want to make sure that the active link gets an extra special class to indicate that it is, indeed, active. There are two very similar ways to do this. The first one is using `ui-sref-active`, you can place this directive on either the `ui-sref` element or on its parent. When active, it will add a class of your choosing:\n+\n+````html\n+<ul>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"mypage\">My page</a>\n+  <li ui-sref-active=\"my-active-class\"><a ui-sref=\"myotherpage\">My page</a>\n+</ul>\n+````\n+\n+The other way is using `ui-sref-active-eq` which works almost the same with one difference. Whenever accessing a child page, the parent page will show up as active whenever using `ui-sref-active`. The `ui-sref-active-eq` is triggered ONLY when a specific page is triggered, no matter what their parent is.\n+\n+In the previous example with inbox and inbox.message, the inbox page would show up as active with `ui-sref-active` when on the inbox.message page. With `ui-sref-active-eq`, inbox would show up as active only when specifically on the inbox page.\n+\n+If none of this makes sense, stick with `ui-sref-active-eq`\n+\n+####Custom Helpers\n+\n+Foundation has some great helpers that foster better interaction between elements.\n+\n+**fa-close**",
        "path": "js/angular/README.md",
        "position": 187,
        "original_position": 214,
        "commit_id": "91d7ca61e964727731c60e978b1fa49ca3b5061c",
        "original_commit_id": "f1d61b657699fc9822f8e82fe9bc49eb332916f4",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oooh! Yeah, you're right, I gotta add the programmatical docs for that. On it!\n",
        "created_at": "2014-10-31T16:52:21Z",
        "updated_at": "2014-11-10T17:07:07Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678604",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/52",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/19678604"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/52#discussion_r19678604"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/52"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453810",
        "pull_request_review_id": null,
        "id": 21453810,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzODEw",
        "diff_hunk": "@@ -1,40 +1,37 @@\n angular.module('application')\n   .controller('DefaultController', ['$scope', '$stateParams', '$state', function($scope, $stateParams, $state) {\n-    var params = [];\n-    angular.forEach($stateParams, function(value, key) {\n-      params[key] = value;\n-    });\n-\n-    $scope.params = params;\n+    $scope.params  = angular.copy($stateParams);\n     $scope.current = $state.current.name;\n+    $scope.vars    = $state.current.data.vars;\n \n-    if($state.current.views) {\n-      $scope.vars = $state.current.data.vars;\n+    if ($state.current.views) {\n       $scope.composed = $state.current.data.vars.children;\n-    } else {\n-      $scope.vars = $state.current.data.vars;\n     }\n   }\n ]);\n \n angular.module('application')\n   .controller('NavController', ['$scope', '$state', function($scope, $state) {\n-    $scope.current = $state.current.name;\n+    // jshint validthis:true\n+    // jshint latedef:false\n \n     var routes = angular.copy(foundationRoutes);\n \n+    this.selectRoute = selectRoute;\n+\n+    // scope\n+\n+    $scope.current = $state.current.name;\n+\n     //setup autocomplete\n-    $scope.routing = [];\n     $scope.typedText = '';\n+    $scope.routing = routes.map(function (r) {",
        "path": "js/angular/controllers.js",
        "position": null,
        "original_position": 40,
        "commit_id": "84e8f9c54573ac0e6761d6e14b55e844f7c7b7a9",
        "original_commit_id": "726c4a50cb1159e0070e88ff277fb49a34f6cfa5",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "this is awesome. I'm not sure why I didn't think of just mapping it! \n",
        "created_at": "2014-12-08T14:08:01Z",
        "updated_at": "2014-12-08T15:20:47Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453810",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/219",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453810"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453810"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/219"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453892",
        "pull_request_review_id": null,
        "id": 21453892,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzODky",
        "diff_hunk": "@@ -1,40 +1,37 @@\n angular.module('application')\n   .controller('DefaultController', ['$scope', '$stateParams', '$state', function($scope, $stateParams, $state) {\n-    var params = [];\n-    angular.forEach($stateParams, function(value, key) {\n-      params[key] = value;\n-    });\n-\n-    $scope.params = params;\n+    $scope.params  = angular.copy($stateParams);",
        "path": "js/angular/controllers.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "84e8f9c54573ac0e6761d6e14b55e844f7c7b7a9",
        "original_commit_id": "726c4a50cb1159e0070e88ff277fb49a34f6cfa5",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "awesome! Thanks for adding this. i'll have to check the rest of the code base for other instances of foreach loops that could be simplified in this manner.\n",
        "created_at": "2014-12-08T14:09:49Z",
        "updated_at": "2014-12-08T15:20:47Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453892",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/219",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453892"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453892"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/219"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453954",
        "pull_request_review_id": null,
        "id": 21453954,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzOTU0",
        "diff_hunk": "@@ -1,40 +1,37 @@\n angular.module('application')\n   .controller('DefaultController', ['$scope', '$stateParams', '$state', function($scope, $stateParams, $state) {\n-    var params = [];\n-    angular.forEach($stateParams, function(value, key) {\n-      params[key] = value;",
        "path": "js/angular/controllers.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "84e8f9c54573ac0e6761d6e14b55e844f7c7b7a9",
        "original_commit_id": "726c4a50cb1159e0070e88ff277fb49a34f6cfa5",
        "user": {
            "login": "stryju",
            "id": 25367,
            "node_id": "MDQ6VXNlcjI1MzY3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stryju",
            "html_url": "https://github.com/stryju",
            "followers_url": "https://api.github.com/users/stryju/followers",
            "following_url": "https://api.github.com/users/stryju/following{/other_user}",
            "gists_url": "https://api.github.com/users/stryju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stryju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stryju/subscriptions",
            "organizations_url": "https://api.github.com/users/stryju/orgs",
            "repos_url": "https://api.github.com/users/stryju/repos",
            "events_url": "https://api.github.com/users/stryju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stryju/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why modify the props of an array?\n",
        "created_at": "2014-12-08T14:11:17Z",
        "updated_at": "2014-12-08T15:20:47Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453954",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/219",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453954"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453954"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/219"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453961",
        "pull_request_review_id": null,
        "id": 21453961,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzOTYx",
        "diff_hunk": "@@ -1,40 +1,37 @@\n angular.module('application')\n   .controller('DefaultController', ['$scope', '$stateParams', '$state', function($scope, $stateParams, $state) {\n-    var params = [];\n-    angular.forEach($stateParams, function(value, key) {\n-      params[key] = value;\n-    });\n-\n-    $scope.params = params;\n+    $scope.params  = angular.copy($stateParams);\n     $scope.current = $state.current.name;\n+    $scope.vars    = $state.current.data.vars;\n \n-    if($state.current.views) {\n-      $scope.vars = $state.current.data.vars;\n+    if ($state.current.views) {\n       $scope.composed = $state.current.data.vars.children;\n-    } else {\n-      $scope.vars = $state.current.data.vars;\n     }\n   }\n ]);\n \n angular.module('application')\n   .controller('NavController', ['$scope', '$state', function($scope, $state) {\n-    $scope.current = $state.current.name;\n+    // jshint validthis:true\n+    // jshint latedef:false\n \n     var routes = angular.copy(foundationRoutes);\n \n+    this.selectRoute = selectRoute;\n+\n+    // scope\n+\n+    $scope.current = $state.current.name;\n+\n     //setup autocomplete\n-    $scope.routing = [];\n     $scope.typedText = '';\n+    $scope.routing = routes.map(function (r) {",
        "path": "js/angular/controllers.js",
        "position": null,
        "original_position": 40,
        "commit_id": "84e8f9c54573ac0e6761d6e14b55e844f7c7b7a9",
        "original_commit_id": "726c4a50cb1159e0070e88ff277fb49a34f6cfa5",
        "user": {
            "login": "stryju",
            "id": 25367,
            "node_id": "MDQ6VXNlcjI1MzY3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stryju",
            "html_url": "https://github.com/stryju",
            "followers_url": "https://api.github.com/users/stryju/followers",
            "following_url": "https://api.github.com/users/stryju/following{/other_user}",
            "gists_url": "https://api.github.com/users/stryju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stryju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stryju/subscriptions",
            "organizations_url": "https://api.github.com/users/stryju/orgs",
            "repos_url": "https://api.github.com/users/stryju/repos",
            "events_url": "https://api.github.com/users/stryju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stryju/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ";-)\n",
        "created_at": "2014-12-08T14:11:22Z",
        "updated_at": "2014-12-08T15:20:47Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453961",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/219",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21453961"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21453961"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/219"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21454764",
        "pull_request_review_id": null,
        "id": 21454764,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU0NzY0",
        "diff_hunk": "@@ -1,40 +1,37 @@\n angular.module('application')\n   .controller('DefaultController', ['$scope', '$stateParams', '$state', function($scope, $stateParams, $state) {\n-    var params = [];\n-    angular.forEach($stateParams, function(value, key) {\n-      params[key] = value;\n-    });\n-\n-    $scope.params = params;\n+    $scope.params  = angular.copy($stateParams);",
        "path": "js/angular/controllers.js",
        "position": 9,
        "original_position": 9,
        "commit_id": "84e8f9c54573ac0e6761d6e14b55e844f7c7b7a9",
        "original_commit_id": "726c4a50cb1159e0070e88ff277fb49a34f6cfa5",
        "user": {
            "login": "stryju",
            "id": 25367,
            "node_id": "MDQ6VXNlcjI1MzY3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stryju",
            "html_url": "https://github.com/stryju",
            "followers_url": "https://api.github.com/users/stryju/followers",
            "following_url": "https://api.github.com/users/stryju/following{/other_user}",
            "gists_url": "https://api.github.com/users/stryju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stryju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stryju/subscriptions",
            "organizations_url": "https://api.github.com/users/stryju/orgs",
            "repos_url": "https://api.github.com/users/stryju/repos",
            "events_url": "https://api.github.com/users/stryju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stryju/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "sure thing!\n",
        "created_at": "2014-12-08T14:25:22Z",
        "updated_at": "2014-12-08T15:20:47Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21454764",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/219",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21454764"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/219#discussion_r21454764"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/219"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21566544",
        "pull_request_review_id": null,
        "id": 21566544,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTY2NTQ0",
        "diff_hunk": "@@ -49,10 +49,31 @@ angular.module('foundation.init')\n \n         return style.getPropertyValue('font-family');\n       },\n-      processStyleToJSON: function(str) {\n-        var clean = str.slice(1, -1).replace(/\\\\\"/g, '\"'); //ready for FF and Chrome\n-\n-        return JSON.parse(clean);\n+      // https://github.com/sindresorhus/query-string\n+      parseQueryString: function(str) {\n+        if (typeof str !== 'string') return {};\n+        str = str.trim();",
        "path": "js/angular/common/foundation.init.js",
        "position": null,
        "original_position": 20,
        "commit_id": "5ba995e91a3c05b75230d4acaf47e76e323f210f",
        "original_commit_id": "85d92e471870c3ac3f0b20a19a44f56118ea1620",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@wtfribley if you can add a `.slice(1, -1)` after the `trim()`, I can merge this in. Chrome, FF, and IE (at least 11) prepend and append string-based style values with an actual quote. Single for Chrome and IE, and double for FF. You can see that the original code used the same fixed (and SOME). \n",
        "created_at": "2014-12-09T22:02:44Z",
        "updated_at": "2014-12-10T01:29:03Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21566544",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/268",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21566544"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21566544"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21571509",
        "pull_request_review_id": null,
        "id": 21571509,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTcxNTA5",
        "diff_hunk": "@@ -49,10 +49,31 @@ angular.module('foundation.init')\n \n         return style.getPropertyValue('font-family');\n       },\n-      processStyleToJSON: function(str) {\n-        var clean = str.slice(1, -1).replace(/\\\\\"/g, '\"'); //ready for FF and Chrome\n-\n-        return JSON.parse(clean);\n+      // https://github.com/sindresorhus/query-string\n+      parseQueryString: function(str) {\n+        if (typeof str !== 'string') return {};\n+        str = str.trim();",
        "path": "js/angular/common/foundation.init.js",
        "position": null,
        "original_position": 20,
        "commit_id": "5ba995e91a3c05b75230d4acaf47e76e323f210f",
        "original_commit_id": "85d92e471870c3ac3f0b20a19a44f56118ea1620",
        "user": {
            "login": "wtfribley",
            "id": 1640380,
            "node_id": "MDQ6VXNlcjE2NDAzODA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1640380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wtfribley",
            "html_url": "https://github.com/wtfribley",
            "followers_url": "https://api.github.com/users/wtfribley/followers",
            "following_url": "https://api.github.com/users/wtfribley/following{/other_user}",
            "gists_url": "https://api.github.com/users/wtfribley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wtfribley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wtfribley/subscriptions",
            "organizations_url": "https://api.github.com/users/wtfribley/orgs",
            "repos_url": "https://api.github.com/users/wtfribley/repos",
            "events_url": "https://api.github.com/users/wtfribley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wtfribley/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is there a chance this method could ever be used to actually parse a query string from the URL? If so I'd rather solve it with\n\n``` js\nstr = str.trim().replace(/^[\"']|[\"']$/g, '')\n```\n\nIf not, I should rename the method to indicate its use only in parsing information from styles.\n",
        "created_at": "2014-12-09T23:13:53Z",
        "updated_at": "2014-12-10T01:29:03Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21571509",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/268",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21571509"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21571509"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21578377",
        "pull_request_review_id": null,
        "id": 21578377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc4Mzc3",
        "diff_hunk": "@@ -49,10 +49,31 @@ angular.module('foundation.init')\n \n         return style.getPropertyValue('font-family');\n       },\n-      processStyleToJSON: function(str) {\n-        var clean = str.slice(1, -1).replace(/\\\\\"/g, '\"'); //ready for FF and Chrome\n-\n-        return JSON.parse(clean);\n+      // https://github.com/sindresorhus/query-string\n+      parseQueryString: function(str) {\n+        if (typeof str !== 'string') return {};\n+        str = str.trim();",
        "path": "js/angular/common/foundation.init.js",
        "position": null,
        "original_position": 20,
        "commit_id": "5ba995e91a3c05b75230d4acaf47e76e323f210f",
        "original_commit_id": "85d92e471870c3ac3f0b20a19a44f56118ea1620",
        "user": {
            "login": "gakimball",
            "id": 1142001,
            "node_id": "MDQ6VXNlcjExNDIwMDE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1142001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gakimball",
            "html_url": "https://github.com/gakimball",
            "followers_url": "https://api.github.com/users/gakimball/followers",
            "following_url": "https://api.github.com/users/gakimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/gakimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gakimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gakimball/subscriptions",
            "organizations_url": "https://api.github.com/users/gakimball/orgs",
            "repos_url": "https://api.github.com/users/gakimball/repos",
            "events_url": "https://api.github.com/users/gakimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gakimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I doubt it; even that Sass map to JSON function I wrote wasn't meant to be used for anything complex.\n",
        "created_at": "2014-12-10T01:24:35Z",
        "updated_at": "2014-12-10T01:29:03Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21578377",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/268",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/21578377"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/268#discussion_r21578377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/268"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22052972",
        "pull_request_review_id": null,
        "id": 22052972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDUyOTcy",
        "diff_hunk": "@@ -2,121 +2,71 @@\n   'use strict';\n \n   angular.module('foundation.dynamicRouting.animations', ['ngAnimate', 'foundation.dynamicRouting'])",
        "path": "js/angular/services/foundation.dynamicRouting.animations.js",
        "position": null,
        "original_position": 3,
        "commit_id": "96956dca1498620b5150228cfccaecc83f833056",
        "original_commit_id": "68406c024d5e64f5088f6d229a9e5ac5fc5aec34",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@stryju I don't see `ngAnimate` being used anywhere, should it still be here?.\n\nNvr mind, yes, it should. My bad :)\n",
        "created_at": "2014-12-18T16:35:33Z",
        "updated_at": "2014-12-18T16:47:10Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22052972",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/330",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22052972"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22052972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/330"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22053592",
        "pull_request_review_id": null,
        "id": 22053592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDUzNTky",
        "diff_hunk": "@@ -2,121 +2,71 @@\n   'use strict';\n \n   angular.module('foundation.dynamicRouting.animations', ['ngAnimate', 'foundation.dynamicRouting'])",
        "path": "js/angular/services/foundation.dynamicRouting.animations.js",
        "position": null,
        "original_position": 3,
        "commit_id": "96956dca1498620b5150228cfccaecc83f833056",
        "original_commit_id": "68406c024d5e64f5088f6d229a9e5ac5fc5aec34",
        "user": {
            "login": "stryju",
            "id": 25367,
            "node_id": "MDQ6VXNlcjI1MzY3",
            "avatar_url": "https://avatars0.githubusercontent.com/u/25367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stryju",
            "html_url": "https://github.com/stryju",
            "followers_url": "https://api.github.com/users/stryju/followers",
            "following_url": "https://api.github.com/users/stryju/following{/other_user}",
            "gists_url": "https://api.github.com/users/stryju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stryju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stryju/subscriptions",
            "organizations_url": "https://api.github.com/users/stryju/orgs",
            "repos_url": "https://api.github.com/users/stryju/repos",
            "events_url": "https://api.github.com/users/stryju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stryju/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "well, tbh - it doesn't have to be\n\nangular handles that, so it's up to the user if they want to have the animation or not.\n\nif you want to force the animations, then we should keep the dependency there, but other than that - it could be removed\n\ngood call\n\n---\n\npushed the change\n",
        "created_at": "2014-12-18T16:43:43Z",
        "updated_at": "2014-12-18T16:48:01Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22053592",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/330",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22053592"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22053592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/330"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22054212",
        "pull_request_review_id": null,
        "id": 22054212,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDU0MjEy",
        "diff_hunk": "@@ -2,121 +2,71 @@\n   'use strict';\n \n   angular.module('foundation.dynamicRouting.animations', ['ngAnimate', 'foundation.dynamicRouting'])",
        "path": "js/angular/services/foundation.dynamicRouting.animations.js",
        "position": null,
        "original_position": 3,
        "commit_id": "96956dca1498620b5150228cfccaecc83f833056",
        "original_commit_id": "68406c024d5e64f5088f6d229a9e5ac5fc5aec34",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd like to force it since this is a module called `foundation.dynamicRouting.animations`. It'd make more sense if it was forced for this specific module.\n",
        "created_at": "2014-12-18T16:52:36Z",
        "updated_at": "2014-12-18T16:52:36Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22054212",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/330",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22054212"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/330#discussion_r22054212"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/330"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22535374",
        "pull_request_review_id": null,
        "id": 22535374,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTM1Mzc0",
        "diff_hunk": "@@ -1,122 +1,87 @@\n (function() {\n   'use strict';\n \n-  angular.module('foundation.dynamicRouting.animations', ['ngAnimate', 'foundation.dynamicRouting'])\n-    .animation('.ui-animation', uiAnimation)\n+  angular.module('foundation.dynamicRouting.animations', ['foundation.dynamicRouting'])\n+    .directive('uiView', uiView)\n   ;\n \n-  uiAnimation.$inject = ['$rootScope', '$state'];\n-\n-  function uiAnimation($rootScope, $state) {\n-    var events = ['webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend',\n-                  'webkitTransitionEnd', 'otransitionend', 'transitionend'];\n-\n-    var parentStyle = 'position-absolute';\n-\n-    var animation = {};\n-\n-    animation.enter = enterAnimation;\n-    animation.leave = leaveAnimation;\n-\n-    return animation;\n-\n-    function enterAnimation(element, done) {\n-      var scope = element.scope();\n-\n-      if(scope.vars && scope.vars.animationIn) {\n-        var animationIn  = scope.vars.animationIn;\n-        var animationOut = scope.vars.animationOut || '';\n-        var initial  = 'ng-enter';\n-        var activate = 'ng-enter-active';\n-        var timedOut = true;\n-\n-        //reset possible failed animations and bugs\n-        element.parent().addClass(parentStyle);\n-        element.removeClass(activate + ' ' + initial + ' ' + animationIn + ' ' + animationOut);\n-        element[0].style.transitionDuration = 0;\n+  function uiView($rootScope, $state) {\n+    return {\n+      restrict : 'ECA',\n+      priority : -400,\n+      link     : function link(scope, element) {\n+        var animation = {};\n+\n+        var cleanup = [\n+          $rootScope.$on('$stateChangeStart', onStateChangeStart),\n+          $rootScope.$on('$stateChangeError', onStateChangeError),\n+          scope.$on('$stateChangeSuccess', onStateChangeSuccess),\n+          scope.$on('$viewContentAnimationEnded', onViewContentAnimationEnded)\n+        ];\n+\n+        var destroyed = scope.$on('$destroy', function onDestroy() {\n+          angular.forEach(cleanup, function (cb) {\n+            if (angular.isFunction(cb)) {\n+              cb();\n+            }\n+          });\n+\n+          destroyed();\n+        });\n \n-        //start animation\n-        element.addClass(animationIn);\n-        element.addClass(initial);\n+        function onStateChangeStart() {\n+          if ($state.includes(getState()) && animation.leave) {\n+            element.addClass(animation.leave);\n \n-        $rootScope.$digest();\n+            var parentHeight = parseInt(element.parent()[0].style.height);\n+            var elHeight = parseInt(window.getComputedStyle(element[0], null).getPropertyValue('height'));\n \n-        element[0].style.transitionDuration = '';\n-        element.addClass(activate);\n+            var tempHeight = parentHeight > 0 ? parentHeight : elHeight > 0 ? elHeight : '';\n \n-        var finishAnimation = function() {\n-          element.parent().removeClass(parentStyle);\n-          element.removeClass(activate + ' ' + initial + ' ' + animationIn + ' ' + animationOut);\n-          timedOut = false;\n-          done();\n+            element.parent()[0].style.height = tempHeight + 'px';\n+            element.parent().addClass('position-absolute');\n+          }\n         }\n \n-        element.one(events.join(' '), function() {\n-          finishAnimation();\n-        });\n-\n-        setTimeout(function() {\n-          if (timedOut) {\n-            finishAnimation();\n+        function onStateChangeError() {\n+          if (animation.leave) {\n+            element.removeClass(animation.leave);\n           }\n-        }, 3000);\n-\n-      } else {\n-        done();\n-      }\n \n-      return function(isCancelled) {\n-\n-      };\n-    }\n-\n-    function leaveAnimation(element, done) {\n-      var scope = element.scope();\n-\n-      if(scope.vars && scope.vars.animationOut) {\n-        var animationIn  = scope.vars.animationIn || '';\n-        var animationOut = scope.vars.animationOut;\n-        var initial  = 'ng-leave';\n-        var activate = 'ng-leave-active';\n-        var timedOut = true;\n-\n-        element.removeClass(activate + ' ' + initial + ' ' + animationIn + ' ' + animationOut);\n-        element[0].style.transitionDuration = 0;\n+          element.parent().removeClass('position-absolute');\n+          element.parent()[0].style.height = null;\n+        }\n \n-        //start animation\n-        element.addClass(animationOut);\n-        element.addClass(initial);\n+        function onStateChangeSuccess() {\n+          if ($state.includes(getState()) && animation.enter) {\n+            element.addClass(animation.enter);\n+          }\n \n-        $rootScope.$digest();\n+        }\n \n-        element[0].style.transitionDuration = '';\n-        element.addClass(activate);\n+        function onViewContentAnimationEnded(ev) {\n+          if (ev.targetScope === scope && animation.enter) {\n+            element.removeClass(animation.enter);\n+            element.parent().removeClass('position-absolute');",
        "path": "js/angular/services/foundation.dynamicRouting.animations.js",
        "position": null,
        "original_position": 142,
        "commit_id": "070c23df00713731778f4086676451ba077e1be6",
        "original_commit_id": "18f2531ab52ffb0a99126fb7faabf73aa41c4602",
        "user": {
            "login": "AntJanus",
            "id": 733810,
            "node_id": "MDQ6VXNlcjczMzgxMA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/733810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AntJanus",
            "html_url": "https://github.com/AntJanus",
            "followers_url": "https://api.github.com/users/AntJanus/followers",
            "following_url": "https://api.github.com/users/AntJanus/following{/other_user}",
            "gists_url": "https://api.github.com/users/AntJanus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AntJanus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AntJanus/subscriptions",
            "organizations_url": "https://api.github.com/users/AntJanus/orgs",
            "repos_url": "https://api.github.com/users/AntJanus/repos",
            "events_url": "https://api.github.com/users/AntJanus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AntJanus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@stryju hey so I did some work on the animations and added some important parts (like the `position-absolute` classes). Basically, the idea behind these is this:\n1. every ui-view that's changing out has to be absolutely positioned. We can easily achieve this via `element.addClass()` or whatever directly on the element instead of the parent however:\n2. ui-view's parent needs to be relatively positioned and have a set height. This is so that the animation can take place without any elements \"jumping up\" to take the place of the ui-view.\n\nThe problem I'm facing here is that `onViewContentAnimationEnded` runs for _both_ views (the leaving and entering one). I need to, somehow, make sure that the class removal and height reset happens only _after_ the animations take place on both sides. Whatever I tried either left the animation information in (the height and class) or it would be removed too quickly so that an animation would be cut short.\n\nAny ideas?\n\n**Note** This is just a rough draft so I'll definitely clean all of this up!\n",
        "created_at": "2015-01-06T17:12:08Z",
        "updated_at": "2015-02-24T18:01:55Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/386#discussion_r22535374",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/386",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/22535374"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/386#discussion_r22535374"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/386"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/27801979",
        "pull_request_review_id": null,
        "id": 27801979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODAxOTc5",
        "diff_hunk": "@@ -56,16 +56,21 @@\n       element[0].style.transitionDuration = '';\n       element.addClass(activeClass);\n \n-      element.one(events.join(' '), function() {\n-        finishAnimation();\n-      });\n+      element.on(events.join(' '), eventHandler);\n \n-      setTimeout(function() {\n+      var animationTimeout = setTimeout(function() {\n         if(timedOut) {\n           finishAnimation();\n         }\n       }, 3000);\n \n+      function eventHandler(e) {\n+        if (element[0].id === e.target.id) {",
        "path": "js/angular/services/foundation.core.animation.js",
        "position": null,
        "original_position": 17,
        "commit_id": "072a592cc954a1484320c97cc6a06eb5221a960e",
        "original_commit_id": "33931010e9537c34867c875af7ed57a83bc53ba5",
        "user": {
            "login": "gjungb",
            "id": 3391068,
            "node_id": "MDQ6VXNlcjMzOTEwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3391068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjungb",
            "html_url": "https://github.com/gjungb",
            "followers_url": "https://api.github.com/users/gjungb/followers",
            "following_url": "https://api.github.com/users/gjungb/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjungb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjungb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjungb/subscriptions",
            "organizations_url": "https://api.github.com/users/gjungb/orgs",
            "repos_url": "https://api.github.com/users/gjungb/repos",
            "events_url": "https://api.github.com/users/gjungb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjungb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wouldn't it be more verbose not to rely on the `id` but to use the comparison `this === e.target` as proposed in the jQuery docs (http://api.jquery.com/event.target/)?\n\n> It is often useful to compare event.target to this in order to determine if the event is being handled due to event bubbling.\n",
        "created_at": "2015-04-06T14:58:59Z",
        "updated_at": "2015-04-28T16:20:16Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/547#discussion_r27801979",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/547",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/27801979"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/547#discussion_r27801979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/547"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/27813083",
        "pull_request_review_id": null,
        "id": 27813083,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODEzMDgz",
        "diff_hunk": "@@ -56,16 +56,21 @@\n       element[0].style.transitionDuration = '';\n       element.addClass(activeClass);\n \n-      element.one(events.join(' '), function() {\n-        finishAnimation();\n-      });\n+      element.on(events.join(' '), eventHandler);\n \n-      setTimeout(function() {\n+      var animationTimeout = setTimeout(function() {\n         if(timedOut) {\n           finishAnimation();\n         }\n       }, 3000);\n \n+      function eventHandler(e) {\n+        if (element[0].id === e.target.id) {",
        "path": "js/angular/services/foundation.core.animation.js",
        "position": null,
        "original_position": 17,
        "commit_id": "072a592cc954a1484320c97cc6a06eb5221a960e",
        "original_commit_id": "33931010e9537c34867c875af7ed57a83bc53ba5",
        "user": {
            "login": "naneer",
            "id": 6856287,
            "node_id": "MDQ6VXNlcjY4NTYyODc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6856287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naneer",
            "html_url": "https://github.com/naneer",
            "followers_url": "https://api.github.com/users/naneer/followers",
            "following_url": "https://api.github.com/users/naneer/following{/other_user}",
            "gists_url": "https://api.github.com/users/naneer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naneer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naneer/subscriptions",
            "organizations_url": "https://api.github.com/users/naneer/orgs",
            "repos_url": "https://api.github.com/users/naneer/repos",
            "events_url": "https://api.github.com/users/naneer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naneer/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Hey thanks for the +1, `this` may equal to the animation service, would reverting back to `element[0] === e.target` be enough to follow the jQuery doc? \n",
        "created_at": "2015-04-06T17:34:05Z",
        "updated_at": "2015-04-28T16:20:16Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/547#discussion_r27813083",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/547",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/27813083"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/547#discussion_r27813083"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/547"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/29230418",
        "pull_request_review_id": null,
        "id": 29230418,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjMwNDE4",
        "diff_hunk": "@@ -56,16 +56,21 @@\n       element[0].style.transitionDuration = '';\n       element.addClass(activeClass);\n \n-      element.one(events.join(' '), function() {\n-        finishAnimation();\n-      });\n+      element.on(events.join(' '), eventHandler);\n \n-      setTimeout(function() {\n+      var animationTimeout = setTimeout(function() {\n         if(timedOut) {\n           finishAnimation();\n         }\n       }, 3000);\n \n+      function eventHandler(e) {\n+        if (element[0].id === e.target.id) {",
        "path": "js/angular/services/foundation.core.animation.js",
        "position": null,
        "original_position": 17,
        "commit_id": "072a592cc954a1484320c97cc6a06eb5221a960e",
        "original_commit_id": "33931010e9537c34867c875af7ed57a83bc53ba5",
        "user": {
            "login": "gjungb",
            "id": 3391068,
            "node_id": "MDQ6VXNlcjMzOTEwNjg=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/3391068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjungb",
            "html_url": "https://github.com/gjungb",
            "followers_url": "https://api.github.com/users/gjungb/followers",
            "following_url": "https://api.github.com/users/gjungb/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjungb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjungb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjungb/subscriptions",
            "organizations_url": "https://api.github.com/users/gjungb/orgs",
            "repos_url": "https://api.github.com/users/gjungb/repos",
            "events_url": "https://api.github.com/users/gjungb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjungb/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@naneer yes, makes sense to me\n",
        "created_at": "2015-04-28T10:25:29Z",
        "updated_at": "2015-04-28T16:20:16Z",
        "html_url": "https://github.com/zurb/foundation-apps/pull/547#discussion_r29230418",
        "pull_request_url": "https://api.github.com/repos/zurb/foundation-apps/pulls/547",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/comments/29230418"
            },
            "html": {
                "href": "https://github.com/zurb/foundation-apps/pull/547#discussion_r29230418"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/zurb/foundation-apps/pulls/547"
            }
        }
    }
]